after memory allocation
64
40a468
old instr: 0x40a468: push rbp
    new instr:0x7faef3eff000: push rbp
old instr: 0x40a469: mov rbp, rsp
    new instr:0x7faef3eff001: mov rbp, rsp
old instr: 0x40a46c: mov dword ptr [rbp-0x14], edi
    new instr:0x7faef3eff004: mov dword ptr [rbp-0x14], edi
old instr: 0x40a46f: mov dword ptr [rbp-0x18], esi
    new instr:0x7faef3eff007: mov dword ptr [rbp-0x18], esi
old instr: 0x40a472: mov qword ptr [rbp-0x20], rdx
    new instr:0x7faef3eff00a: mov qword ptr [rbp-0x20], rdx
old instr: 0x40a476: mov qword ptr [rbp-0x28], rcx
    new instr:0x7faef3eff00e: mov qword ptr [rbp-0x28], rcx
old instr: 0x40a47a: mov dword ptr [rbp-0x2c], r8d
    new instr:0x7faef3eff012: mov dword ptr [rbp-0x2c], r8d
old instr: 0x40a47e: mov qword ptr [rbp-0x38], r9
    new instr:0x7faef3eff016: mov qword ptr [rbp-0x38], r9
old instr: 0x40a482: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff01a: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a485: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff01d: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a489: add rax, rdx
    new instr:0x7faef3eff021: add rax, rdx
old instr: 0x40a48c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff024: movzx eax, byte ptr [rax]
old instr: 0x40a48f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff027: mov byte ptr [rbp-0x5], al
old instr: 0x40a492: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff02a: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a495: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff02d: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a499: add rax, rdx
    new instr:0x7faef3eff031: add rax, rdx
old instr: 0x40a49c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff034: movzx eax, byte ptr [rax]
old instr: 0x40a49f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff037: mov byte ptr [rbp-0x6], al
old instr: 0x40a4a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff03a: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff03e: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff041: jnz 0x7faef3eff052
40a4ba
old instr: 0x40a4ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff043: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a4be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff047: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a4c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff04b: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a4c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff04e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a4c9: add rax, rdx
    new instr:0x7faef3eff052: add rax, rdx
old instr: 0x40a4cc: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff055: movzx eax, byte ptr [rax]
old instr: 0x40a4cf: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff058: mov byte ptr [rbp-0x5], al
old instr: 0x40a4d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff05b: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a4d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff05e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a4d9: add rax, rdx
    new instr:0x7faef3eff062: add rax, rdx
old instr: 0x40a4dc: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff065: movzx eax, byte ptr [rax]
old instr: 0x40a4df: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff068: mov byte ptr [rbp-0x6], al
old instr: 0x40a4e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff06b: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff06f: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff072: jnz 0x7faef3eff083
40a4fa
old instr: 0x40a4fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff074: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a4fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff078: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a502: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff07c: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a505: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff07f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a509: add rax, rdx
    new instr:0x7faef3eff083: add rax, rdx
old instr: 0x40a50c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff086: movzx eax, byte ptr [rax]
old instr: 0x40a50f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff089: mov byte ptr [rbp-0x5], al
old instr: 0x40a512: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff08c: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a515: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff08f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a519: add rax, rdx
    new instr:0x7faef3eff093: add rax, rdx
old instr: 0x40a51c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff096: movzx eax, byte ptr [rax]
old instr: 0x40a51f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff099: mov byte ptr [rbp-0x6], al
old instr: 0x40a522: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff09c: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a526: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff0a0: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff0a3: jnz 0x7faef3eff0b4
40a53a
old instr: 0x40a53a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff0a5: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a53e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff0a9: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a542: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff0ad: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a545: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff0b0: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a549: add rax, rdx
    new instr:0x7faef3eff0b4: add rax, rdx
old instr: 0x40a54c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff0b7: movzx eax, byte ptr [rax]
old instr: 0x40a54f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff0ba: mov byte ptr [rbp-0x5], al
old instr: 0x40a552: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff0bd: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a555: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff0c0: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a559: add rax, rdx
    new instr:0x7faef3eff0c4: add rax, rdx
old instr: 0x40a55c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff0c7: movzx eax, byte ptr [rax]
old instr: 0x40a55f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff0ca: mov byte ptr [rbp-0x6], al
old instr: 0x40a562: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff0cd: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a566: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff0d1: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff0d4: jnz 0x7faef3eff0e5
40a57a
old instr: 0x40a57a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff0d6: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a57e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff0da: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a582: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff0de: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a585: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff0e1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a589: add rax, rdx
    new instr:0x7faef3eff0e5: add rax, rdx
old instr: 0x40a58c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff0e8: movzx eax, byte ptr [rax]
old instr: 0x40a58f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff0eb: mov byte ptr [rbp-0x5], al
old instr: 0x40a592: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff0ee: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a595: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff0f1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a599: add rax, rdx
    new instr:0x7faef3eff0f5: add rax, rdx
old instr: 0x40a59c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff0f8: movzx eax, byte ptr [rax]
old instr: 0x40a59f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff0fb: mov byte ptr [rbp-0x6], al
old instr: 0x40a5a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff0fe: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff102: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff105: jnz 0x7faef3eff116
40a5ba
old instr: 0x40a5ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff107: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a5be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff10b: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a5c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff10f: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a5c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff112: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a5c9: add rax, rdx
    new instr:0x7faef3eff116: add rax, rdx
old instr: 0x40a5cc: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff119: movzx eax, byte ptr [rax]
old instr: 0x40a5cf: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff11c: mov byte ptr [rbp-0x5], al
old instr: 0x40a5d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff11f: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a5d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff122: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a5d9: add rax, rdx
    new instr:0x7faef3eff126: add rax, rdx
old instr: 0x40a5dc: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff129: movzx eax, byte ptr [rax]
old instr: 0x40a5df: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff12c: mov byte ptr [rbp-0x6], al
old instr: 0x40a5e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff12f: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff133: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff136: jnz 0x7faef3eff147
40a5fa
old instr: 0x40a5fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff138: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a5fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff13c: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a602: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff140: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a605: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff143: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a609: add rax, rdx
    new instr:0x7faef3eff147: add rax, rdx
old instr: 0x40a60c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff14a: movzx eax, byte ptr [rax]
old instr: 0x40a60f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff14d: mov byte ptr [rbp-0x5], al
old instr: 0x40a612: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff150: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a615: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff153: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a619: add rax, rdx
    new instr:0x7faef3eff157: add rax, rdx
old instr: 0x40a61c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff15a: movzx eax, byte ptr [rax]
old instr: 0x40a61f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff15d: mov byte ptr [rbp-0x6], al
old instr: 0x40a622: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff160: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a626: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff164: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff167: jnz 0x7faef3eff178
40a63a
old instr: 0x40a63a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff169: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a63e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff16d: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a642: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff171: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a645: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff174: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a649: add rax, rdx
    new instr:0x7faef3eff178: add rax, rdx
old instr: 0x40a64c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff17b: movzx eax, byte ptr [rax]
old instr: 0x40a64f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff17e: mov byte ptr [rbp-0x5], al
old instr: 0x40a652: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff181: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a655: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff184: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a659: add rax, rdx
    new instr:0x7faef3eff188: add rax, rdx
old instr: 0x40a65c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff18b: movzx eax, byte ptr [rax]
old instr: 0x40a65f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff18e: mov byte ptr [rbp-0x6], al
old instr: 0x40a662: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff191: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a666: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff195: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff198: jnz 0x7faef3eff1a9
40a67a
old instr: 0x40a67a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff19a: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a67e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff19e: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a682: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff1a2: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a685: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff1a5: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a689: add rax, rdx
    new instr:0x7faef3eff1a9: add rax, rdx
old instr: 0x40a68c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff1ac: movzx eax, byte ptr [rax]
old instr: 0x40a68f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff1af: mov byte ptr [rbp-0x5], al
old instr: 0x40a692: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff1b2: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a695: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff1b5: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a699: add rax, rdx
    new instr:0x7faef3eff1b9: add rax, rdx
old instr: 0x40a69c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff1bc: movzx eax, byte ptr [rax]
old instr: 0x40a69f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff1bf: mov byte ptr [rbp-0x6], al
old instr: 0x40a6a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff1c2: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff1c6: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff1c9: jnz 0x7faef3eff1da
40a6ba
old instr: 0x40a6ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff1cb: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a6be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff1cf: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a6c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff1d3: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a6c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff1d6: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a6c9: add rax, rdx
    new instr:0x7faef3eff1da: add rax, rdx
old instr: 0x40a6cc: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff1dd: movzx eax, byte ptr [rax]
old instr: 0x40a6cf: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff1e0: mov byte ptr [rbp-0x5], al
old instr: 0x40a6d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff1e3: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a6d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff1e6: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a6d9: add rax, rdx
    new instr:0x7faef3eff1ea: add rax, rdx
old instr: 0x40a6dc: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff1ed: movzx eax, byte ptr [rax]
old instr: 0x40a6df: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff1f0: mov byte ptr [rbp-0x6], al
old instr: 0x40a6e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff1f3: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff1f7: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff1fa: jnz 0x7faef3eff20b
40a6fa
old instr: 0x40a6fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff1fc: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a6fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff200: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a702: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff204: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a705: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff207: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a709: add rax, rdx
    new instr:0x7faef3eff20b: add rax, rdx
old instr: 0x40a70c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff20e: movzx eax, byte ptr [rax]
old instr: 0x40a70f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff211: mov byte ptr [rbp-0x5], al
old instr: 0x40a712: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff214: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a715: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff217: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a719: add rax, rdx
    new instr:0x7faef3eff21b: add rax, rdx
old instr: 0x40a71c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff21e: movzx eax, byte ptr [rax]
old instr: 0x40a71f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff221: mov byte ptr [rbp-0x6], al
old instr: 0x40a722: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff224: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a726: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff228: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff22b: jnz 0x7faef3eff23c
40a73a
old instr: 0x40a73a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff22d: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a73e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff231: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a742: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff235: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a745: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff238: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a749: add rax, rdx
    new instr:0x7faef3eff23c: add rax, rdx
old instr: 0x40a74c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff23f: movzx eax, byte ptr [rax]
old instr: 0x40a74f: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff242: mov byte ptr [rbp-0x5], al
old instr: 0x40a752: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff245: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a755: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff248: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a759: add rax, rdx
    new instr:0x7faef3eff24c: add rax, rdx
old instr: 0x40a75c: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff24f: movzx eax, byte ptr [rax]
old instr: 0x40a75f: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff252: mov byte ptr [rbp-0x6], al
old instr: 0x40a762: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff255: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a766: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff259: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff25c: jnz 0x7faef3eff26d
40a77a
old instr: 0x40a77a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff25e: add dword ptr [rbp-0x14], 0x1
40a78b
old instr: 0x40a78b: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff262: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a78e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff265: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a792: add rax, rdx
    new instr:0x7faef3eff269: add rax, rdx
old instr: 0x40a795: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff26c: movzx eax, byte ptr [rax]
old instr: 0x40a798: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff26f: mov byte ptr [rbp-0x5], al
old instr: 0x40a79b: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff272: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a79e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff275: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a7a2: add rax, rdx
    new instr:0x7faef3eff279: add rax, rdx
old instr: 0x40a7a5: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff27c: movzx eax, byte ptr [rax]
old instr: 0x40a7a8: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff27f: mov byte ptr [rbp-0x6], al
old instr: 0x40a7ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff282: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a7af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff286: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff289: jnz 0x7faef3eff29a
40a7c3
old instr: 0x40a7c3: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff28b: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a7c6: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff28e: lea rdx, ptr [rax+rax*1]
old instr: 0x40a7ca: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff292: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a7ce: add rax, rdx
    new instr:0x7faef3eff296: add rax, rdx
old instr: 0x40a7d1: movzx eax, word ptr [rax]
    new instr:0x7faef3eff299: movzx eax, word ptr [rax]
old instr: 0x40a7d4: mov word ptr [rbp-0x8], ax
    new instr:0x7faef3eff29c: mov word ptr [rbp-0x8], ax
old instr: 0x40a7d8: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff2a0: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a7db: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff2a3: lea rdx, ptr [rax+rax*1]
old instr: 0x40a7df: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff2a7: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a7e3: add rax, rdx
    new instr:0x7faef3eff2ab: add rax, rdx
old instr: 0x40a7e6: movzx eax, word ptr [rax]
    new instr:0x7faef3eff2ae: movzx eax, word ptr [rax]
old instr: 0x40a7e9: mov word ptr [rbp-0xa], ax
    new instr:0x7faef3eff2b1: mov word ptr [rbp-0xa], ax
old instr: 0x40a7ed: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff2b5: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a7f1: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff2b9: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7faef3eff2bd: jnz 0x7faef3eff2cf
40a807
old instr: 0x40a807: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff2bf: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a80b: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff2c3: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a80f: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff2c7: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a812: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff2ca: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a816: add rax, rdx
    new instr:0x7faef3eff2ce: add rax, rdx
old instr: 0x40a819: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff2d1: movzx eax, byte ptr [rax]
old instr: 0x40a81c: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff2d4: mov byte ptr [rbp-0x5], al
old instr: 0x40a81f: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff2d7: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a822: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff2da: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a826: add rax, rdx
    new instr:0x7faef3eff2de: add rax, rdx
old instr: 0x40a829: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff2e1: movzx eax, byte ptr [rax]
old instr: 0x40a82c: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff2e4: mov byte ptr [rbp-0x6], al
old instr: 0x40a82f: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff2e7: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a833: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff2eb: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff2ee: jnz 0x7faef3eff2ff
40a847
old instr: 0x40a847: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff2f0: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a84a: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff2f3: lea rdx, ptr [rax+rax*1]
old instr: 0x40a84e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff2f7: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a852: add rax, rdx
    new instr:0x7faef3eff2fb: add rax, rdx
old instr: 0x40a855: movzx eax, word ptr [rax]
    new instr:0x7faef3eff2fe: movzx eax, word ptr [rax]
old instr: 0x40a858: mov word ptr [rbp-0x8], ax
    new instr:0x7faef3eff301: mov word ptr [rbp-0x8], ax
old instr: 0x40a85c: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff305: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a85f: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff308: lea rdx, ptr [rax+rax*1]
old instr: 0x40a863: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff30c: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a867: add rax, rdx
    new instr:0x7faef3eff310: add rax, rdx
old instr: 0x40a86a: movzx eax, word ptr [rax]
    new instr:0x7faef3eff313: movzx eax, word ptr [rax]
old instr: 0x40a86d: mov word ptr [rbp-0xa], ax
    new instr:0x7faef3eff316: mov word ptr [rbp-0xa], ax
old instr: 0x40a871: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff31a: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a875: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff31e: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7faef3eff322: jnz 0x7faef3eff334
40a88b
old instr: 0x40a88b: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff324: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a88f: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff328: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a893: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff32c: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a896: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff32f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a89a: add rax, rdx
    new instr:0x7faef3eff333: add rax, rdx
old instr: 0x40a89d: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff336: movzx eax, byte ptr [rax]
old instr: 0x40a8a0: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff339: mov byte ptr [rbp-0x5], al
old instr: 0x40a8a3: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff33c: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a8a6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff33f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a8aa: add rax, rdx
    new instr:0x7faef3eff343: add rax, rdx
old instr: 0x40a8ad: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff346: movzx eax, byte ptr [rax]
old instr: 0x40a8b0: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff349: mov byte ptr [rbp-0x6], al
old instr: 0x40a8b3: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff34c: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a8b7: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff350: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff353: jnz 0x7faef3eff364
40a8cb
old instr: 0x40a8cb: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff355: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a8ce: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff358: lea rdx, ptr [rax+rax*1]
old instr: 0x40a8d2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff35c: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a8d6: add rax, rdx
    new instr:0x7faef3eff360: add rax, rdx
old instr: 0x40a8d9: movzx eax, word ptr [rax]
    new instr:0x7faef3eff363: movzx eax, word ptr [rax]
old instr: 0x40a8dc: mov word ptr [rbp-0x8], ax
    new instr:0x7faef3eff366: mov word ptr [rbp-0x8], ax
old instr: 0x40a8e0: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff36a: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a8e3: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff36d: lea rdx, ptr [rax+rax*1]
old instr: 0x40a8e7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff371: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a8eb: add rax, rdx
    new instr:0x7faef3eff375: add rax, rdx
old instr: 0x40a8ee: movzx eax, word ptr [rax]
    new instr:0x7faef3eff378: movzx eax, word ptr [rax]
old instr: 0x40a8f1: mov word ptr [rbp-0xa], ax
    new instr:0x7faef3eff37b: mov word ptr [rbp-0xa], ax
old instr: 0x40a8f5: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff37f: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a8f9: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff383: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7faef3eff387: jnz 0x7faef3eff399
40a90f
old instr: 0x40a90f: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff389: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a913: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff38d: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a917: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff391: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a91a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff394: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a91e: add rax, rdx
    new instr:0x7faef3eff398: add rax, rdx
old instr: 0x40a921: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff39b: movzx eax, byte ptr [rax]
old instr: 0x40a924: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff39e: mov byte ptr [rbp-0x5], al
old instr: 0x40a927: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff3a1: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a92a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff3a4: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a92e: add rax, rdx
    new instr:0x7faef3eff3a8: add rax, rdx
old instr: 0x40a931: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff3ab: movzx eax, byte ptr [rax]
old instr: 0x40a934: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff3ae: mov byte ptr [rbp-0x6], al
old instr: 0x40a937: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff3b1: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a93b: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff3b5: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff3b8: jnz 0x7faef3eff3c9
40a94f
old instr: 0x40a94f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff3ba: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a952: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff3bd: lea rdx, ptr [rax+rax*1]
old instr: 0x40a956: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff3c1: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a95a: add rax, rdx
    new instr:0x7faef3eff3c5: add rax, rdx
old instr: 0x40a95d: movzx eax, word ptr [rax]
    new instr:0x7faef3eff3c8: movzx eax, word ptr [rax]
old instr: 0x40a960: mov word ptr [rbp-0x8], ax
    new instr:0x7faef3eff3cb: mov word ptr [rbp-0x8], ax
old instr: 0x40a964: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff3cf: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a967: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff3d2: lea rdx, ptr [rax+rax*1]
old instr: 0x40a96b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff3d6: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a96f: add rax, rdx
    new instr:0x7faef3eff3da: add rax, rdx
old instr: 0x40a972: movzx eax, word ptr [rax]
    new instr:0x7faef3eff3dd: movzx eax, word ptr [rax]
old instr: 0x40a975: mov word ptr [rbp-0xa], ax
    new instr:0x7faef3eff3e0: mov word ptr [rbp-0xa], ax
old instr: 0x40a979: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff3e4: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a97d: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff3e8: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7faef3eff3ec: jnz 0x7faef3eff3fe
40a993
old instr: 0x40a993: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff3ee: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a997: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff3f2: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a99b: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff3f6: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a99e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff3f9: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a9a2: add rax, rdx
    new instr:0x7faef3eff3fd: add rax, rdx
old instr: 0x40a9a5: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff400: movzx eax, byte ptr [rax]
old instr: 0x40a9a8: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff403: mov byte ptr [rbp-0x5], al
old instr: 0x40a9ab: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff406: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a9ae: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff409: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a9b2: add rax, rdx
    new instr:0x7faef3eff40d: add rax, rdx
old instr: 0x40a9b5: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff410: movzx eax, byte ptr [rax]
old instr: 0x40a9b8: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff413: mov byte ptr [rbp-0x6], al
old instr: 0x40a9bb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff416: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a9bf: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff41a: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff41d: jnz 0x7faef3eff42e
40a9d3
old instr: 0x40a9d3: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff41f: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a9d6: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff422: lea rdx, ptr [rax+rax*1]
old instr: 0x40a9da: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff426: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a9de: add rax, rdx
    new instr:0x7faef3eff42a: add rax, rdx
old instr: 0x40a9e1: movzx eax, word ptr [rax]
    new instr:0x7faef3eff42d: movzx eax, word ptr [rax]
old instr: 0x40a9e4: mov word ptr [rbp-0x8], ax
    new instr:0x7faef3eff430: mov word ptr [rbp-0x8], ax
old instr: 0x40a9e8: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff434: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a9eb: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff437: lea rdx, ptr [rax+rax*1]
old instr: 0x40a9ef: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff43b: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a9f3: add rax, rdx
    new instr:0x7faef3eff43f: add rax, rdx
old instr: 0x40a9f6: movzx eax, word ptr [rax]
    new instr:0x7faef3eff442: movzx eax, word ptr [rax]
old instr: 0x40a9f9: mov word ptr [rbp-0xa], ax
    new instr:0x7faef3eff445: mov word ptr [rbp-0xa], ax
old instr: 0x40a9fd: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff449: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa01: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff44d: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7faef3eff451: jnz 0x7faef3eff463
40aa17
old instr: 0x40aa17: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff453: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aa1b: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff457: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aa1f: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff45b: mov edx, dword ptr [rbp-0x14]
old instr: 0x40aa22: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff45e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aa26: add rax, rdx
    new instr:0x7faef3eff462: add rax, rdx
old instr: 0x40aa29: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff465: movzx eax, byte ptr [rax]
old instr: 0x40aa2c: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff468: mov byte ptr [rbp-0x5], al
old instr: 0x40aa2f: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff46b: mov edx, dword ptr [rbp-0x18]
old instr: 0x40aa32: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff46e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aa36: add rax, rdx
    new instr:0x7faef3eff472: add rax, rdx
old instr: 0x40aa39: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff475: movzx eax, byte ptr [rax]
old instr: 0x40aa3c: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff478: mov byte ptr [rbp-0x6], al
old instr: 0x40aa3f: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff47b: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aa43: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff47f: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff482: jnz 0x7faef3eff493
40aa57
old instr: 0x40aa57: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff484: mov eax, dword ptr [rbp-0x14]
old instr: 0x40aa5a: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff487: lea rdx, ptr [rax+rax*1]
old instr: 0x40aa5e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff48b: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aa62: add rax, rdx
    new instr:0x7faef3eff48f: add rax, rdx
old instr: 0x40aa65: movzx eax, word ptr [rax]
    new instr:0x7faef3eff492: movzx eax, word ptr [rax]
old instr: 0x40aa68: mov word ptr [rbp-0x8], ax
    new instr:0x7faef3eff495: mov word ptr [rbp-0x8], ax
old instr: 0x40aa6c: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff499: mov eax, dword ptr [rbp-0x18]
old instr: 0x40aa6f: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff49c: lea rdx, ptr [rax+rax*1]
old instr: 0x40aa73: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff4a0: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aa77: add rax, rdx
    new instr:0x7faef3eff4a4: add rax, rdx
old instr: 0x40aa7a: movzx eax, word ptr [rax]
    new instr:0x7faef3eff4a7: movzx eax, word ptr [rax]
old instr: 0x40aa7d: mov word ptr [rbp-0xa], ax
    new instr:0x7faef3eff4aa: mov word ptr [rbp-0xa], ax
old instr: 0x40aa81: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff4ae: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa85: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff4b2: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7faef3eff4b6: jnz 0x7faef3eff4c8
40aa9b
old instr: 0x40aa9b: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff4b8: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aa9f: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff4bc: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aaa3: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff4c0: mov edx, dword ptr [rbp-0x14]
old instr: 0x40aaa6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff4c3: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aaaa: add rax, rdx
    new instr:0x7faef3eff4c7: add rax, rdx
old instr: 0x40aaad: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff4ca: movzx eax, byte ptr [rax]
old instr: 0x40aab0: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff4cd: mov byte ptr [rbp-0x5], al
old instr: 0x40aab3: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff4d0: mov edx, dword ptr [rbp-0x18]
old instr: 0x40aab6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff4d3: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aaba: add rax, rdx
    new instr:0x7faef3eff4d7: add rax, rdx
old instr: 0x40aabd: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff4da: movzx eax, byte ptr [rax]
old instr: 0x40aac0: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff4dd: mov byte ptr [rbp-0x6], al
old instr: 0x40aac3: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff4e0: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aac7: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff4e4: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff4e7: jnz 0x7faef3eff4f8
40aadb
old instr: 0x40aadb: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff4e9: mov eax, dword ptr [rbp-0x14]
old instr: 0x40aade: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff4ec: lea rdx, ptr [rax+rax*1]
old instr: 0x40aae2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff4f0: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aae6: add rax, rdx
    new instr:0x7faef3eff4f4: add rax, rdx
old instr: 0x40aae9: movzx eax, word ptr [rax]
    new instr:0x7faef3eff4f7: movzx eax, word ptr [rax]
old instr: 0x40aaec: mov word ptr [rbp-0x8], ax
    new instr:0x7faef3eff4fa: mov word ptr [rbp-0x8], ax
old instr: 0x40aaf0: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff4fe: mov eax, dword ptr [rbp-0x18]
old instr: 0x40aaf3: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff501: lea rdx, ptr [rax+rax*1]
old instr: 0x40aaf7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff505: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aafb: add rax, rdx
    new instr:0x7faef3eff509: add rax, rdx
old instr: 0x40aafe: movzx eax, word ptr [rax]
    new instr:0x7faef3eff50c: movzx eax, word ptr [rax]
old instr: 0x40ab01: mov word ptr [rbp-0xa], ax
    new instr:0x7faef3eff50f: mov word ptr [rbp-0xa], ax
old instr: 0x40ab05: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff513: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab09: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff517: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7faef3eff51b: jnz 0x7faef3eff52d
40ab1f
old instr: 0x40ab1f: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff51d: add dword ptr [rbp-0x14], 0x1
old instr: 0x40ab23: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff521: add dword ptr [rbp-0x18], 0x1
old instr: 0x40ab27: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3eff525: mov edx, dword ptr [rbp-0x14]
old instr: 0x40ab2a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff528: mov rax, qword ptr [rbp-0x20]
old instr: 0x40ab2e: add rax, rdx
    new instr:0x7faef3eff52c: add rax, rdx
old instr: 0x40ab31: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff52f: movzx eax, byte ptr [rax]
old instr: 0x40ab34: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3eff532: mov byte ptr [rbp-0x5], al
old instr: 0x40ab37: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3eff535: mov edx, dword ptr [rbp-0x18]
old instr: 0x40ab3a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3eff538: mov rax, qword ptr [rbp-0x20]
old instr: 0x40ab3e: add rax, rdx
    new instr:0x7faef3eff53c: add rax, rdx
old instr: 0x40ab41: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff53f: movzx eax, byte ptr [rax]
old instr: 0x40ab44: mov byte ptr [rbp-0x6], al
    new instr:0x7faef3eff542: mov byte ptr [rbp-0x6], al
old instr: 0x40ab47: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff545: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40ab4b: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff549: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7faef3eff54c: jnz 0x7faef3eff55d
40ab5f
old instr: 0x40ab5f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff54e: mov eax, dword ptr [rbp-0x14]
old instr: 0x40ab62: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff551: lea rdx, ptr [rax+rax*1]
old instr: 0x40ab66: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff555: mov rax, qword ptr [rbp-0x28]
old instr: 0x40ab6a: add rax, rdx
    new instr:0x7faef3eff559: add rax, rdx
old instr: 0x40ab6d: movzx eax, word ptr [rax]
    new instr:0x7faef3eff55c: movzx eax, word ptr [rax]
old instr: 0x40ab70: mov word ptr [rbp-0x8], ax
    new instr:0x7faef3eff55f: mov word ptr [rbp-0x8], ax
old instr: 0x40ab74: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff563: mov eax, dword ptr [rbp-0x18]
old instr: 0x40ab77: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff566: lea rdx, ptr [rax+rax*1]
old instr: 0x40ab7b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3eff56a: mov rax, qword ptr [rbp-0x28]
old instr: 0x40ab7f: add rax, rdx
    new instr:0x7faef3eff56e: add rax, rdx
old instr: 0x40ab82: movzx eax, word ptr [rax]
    new instr:0x7faef3eff571: movzx eax, word ptr [rax]
old instr: 0x40ab85: mov word ptr [rbp-0xa], ax
    new instr:0x7faef3eff574: mov word ptr [rbp-0xa], ax
old instr: 0x40ab89: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff578: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab8d: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff57c: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7faef3eff580: jnz 0x7faef3eff58f
40aba0
old instr: 0x40aba0: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff582: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aba4: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3eff586: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aba8: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff58a: mov eax, dword ptr [rbp-0x14]
old instr: 0x40abab: cmp eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3eff58d: cmp eax, dword ptr [rbp-0x2c]
in revert 
    new instr:0x7faef3eff590: jnb 0x7faef3eff598
40abb6
old instr: 0x40abb6: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff592: mov eax, dword ptr [rbp-0x18]
old instr: 0x40abb9: cmp eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3eff595: cmp eax, dword ptr [rbp-0x2c]
in revert 
    new instr:0x7faef3eff598: jnb 0x7faef3eff5a0
40abc4
old instr: 0x40abc4: sub dword ptr [rbp-0x4], 0x8
    new instr:0x7faef3eff59a: sub dword ptr [rbp-0x4], 0x8
old instr: 0x40abc8: mov rax, qword ptr [rbp-0x38]
    new instr:0x7faef3eff59e: mov rax, qword ptr [rbp-0x38]
old instr: 0x40abcc: mov eax, dword ptr [rax]
    new instr:0x7faef3eff5a2: mov eax, dword ptr [rax]
old instr: 0x40abce: lea edx, ptr [rax-0x1]
    new instr:0x7faef3eff5a4: lea edx, ptr [rax-0x1]
old instr: 0x40abd1: mov rax, qword ptr [rbp-0x38]
    new instr:0x7faef3eff5a7: mov rax, qword ptr [rbp-0x38]
old instr: 0x40abd5: mov dword ptr [rax], edx
    new instr:0x7faef3eff5ab: mov dword ptr [rax], edx
old instr: 0x40abd7: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7faef3eff5ad: cmp dword ptr [rbp-0x4], 0x0
old instr: 0x40abdb: jns 0x40a78b
    new instr:0x7faef3eff5b1: jns 0x7faef3eff161
inserted instruction
add jump to 
    new instr:0x7faef3eff5b7: jmp 0x7faef430a19d
40a7f7
old instr: 0x40a7f7: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff5bc: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a7fb: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff5c0: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a7ff: setnbe al
    new instr:0x7faef3eff5c4: setnbe al
in revert 
removing jump and inserting a dummy entry 
40abe6
old instr: 0x40abe6: pop rbp
    new instr:0x7faef3eff5c7: pop rbp
old instr: 0x40abe7: ret 
    new instr:0x7faef3eff5c8: ret 
40a87b
old instr: 0x40a87b: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff5c9: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a87f: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff5cd: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a883: setnbe al
    new instr:0x7faef3eff5d1: setnbe al
old instr: 0x40a886: jmp 0x40abe6
    new instr:0x7faef3eff5d4: jmp 0x7faef3eff934
inserted instruction
40a8ff
old instr: 0x40a8ff: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff5d9: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a903: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff5dd: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a907: setnbe al
    new instr:0x7faef3eff5e1: setnbe al
old instr: 0x40a90a: jmp 0x40abe6
    new instr:0x7faef3eff5e4: jmp 0x7faef3eff8c0
inserted instruction
40a4ab
old instr: 0x40a4ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff5e9: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff5ed: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a4b2: setnbe al
    new instr:0x7faef3eff5f0: setnbe al
old instr: 0x40a4b5: jmp 0x40abe6
    new instr:0x7faef3eff5f3: jmp 0x7faef3effd24
inserted instruction
40a983
old instr: 0x40a983: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff5f8: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a987: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff5fc: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a98b: setnbe al
    new instr:0x7faef3eff600: setnbe al
old instr: 0x40a98e: jmp 0x40abe6
    new instr:0x7faef3eff603: jmp 0x7faef3eff85b
inserted instruction
40a4eb
old instr: 0x40a4eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff608: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff60c: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a4f2: setnbe al
    new instr:0x7faef3eff60f: setnbe al
old instr: 0x40a4f5: jmp 0x40abe6
    new instr:0x7faef3eff612: jmp 0x7faef3effd03
inserted instruction
40a5ab
old instr: 0x40a5ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff617: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff61b: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a5b2: setnbe al
    new instr:0x7faef3eff61e: setnbe al
old instr: 0x40a5b5: jmp 0x40abe6
    new instr:0x7faef3eff621: jmp 0x7faef3effc52
inserted instruction
40a5eb
old instr: 0x40a5eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff626: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff62a: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a5f2: setnbe al
    new instr:0x7faef3eff62d: setnbe al
old instr: 0x40a5f5: jmp 0x40abe6
    new instr:0x7faef3eff630: jmp 0x7faef3effc21
inserted instruction
40aa07
old instr: 0x40aa07: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff635: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa0b: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff639: cmp ax, word ptr [rbp-0xa]
old instr: 0x40aa0f: setnbe al
    new instr:0x7faef3eff63d: setnbe al
old instr: 0x40aa12: jmp 0x40abe6
    new instr:0x7faef3eff640: jmp 0x7faef3eff814
inserted instruction
40a62b
old instr: 0x40a62b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff645: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a62f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff649: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a632: setnbe al
    new instr:0x7faef3eff64c: setnbe al
old instr: 0x40a635: jmp 0x40abe6
    new instr:0x7faef3eff64f: jmp 0x7faef3effc00
inserted instruction
40a52b
old instr: 0x40a52b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff654: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a52f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff658: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a532: setnbe al
    new instr:0x7faef3eff65b: setnbe al
old instr: 0x40a535: jmp 0x40abe6
    new instr:0x7faef3eff65e: jmp 0x7faef3effd0f
inserted instruction
40ab93
old instr: 0x40ab93: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff663: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab97: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff667: cmp ax, word ptr [rbp-0xa]
old instr: 0x40ab9b: setnbe al
    new instr:0x7faef3eff66b: setnbe al
old instr: 0x40ab9e: jmp 0x40abe6
    new instr:0x7faef3eff66e: jmp 0x7faef3eff6b6
inserted instruction
40aa8b
old instr: 0x40aa8b: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff670: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa8f: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff674: cmp ax, word ptr [rbp-0xa]
old instr: 0x40aa93: setnbe al
    new instr:0x7faef3eff678: setnbe al
old instr: 0x40aa96: jmp 0x40abe6
    new instr:0x7faef3eff67b: jmp 0x7faef3eff7cb
inserted instruction
40a56b
old instr: 0x40a56b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff680: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a56f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff684: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a572: setnbe al
    new instr:0x7faef3eff687: setnbe al
old instr: 0x40a575: jmp 0x40abe6
    new instr:0x7faef3eff68a: jmp 0x7faef3effcfb
inserted instruction
40ab0f
old instr: 0x40ab0f: movzx eax, word ptr [rbp-0x8]
    new instr:0x7faef3eff68f: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab13: cmp ax, word ptr [rbp-0xa]
    new instr:0x7faef3eff693: cmp ax, word ptr [rbp-0xa]
old instr: 0x40ab17: setnbe al
    new instr:0x7faef3eff697: setnbe al
old instr: 0x40ab1a: jmp 0x40abe6
    new instr:0x7faef3eff69a: jmp 0x7faef3eff766
inserted instruction
40a66b
old instr: 0x40a66b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff69f: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a66f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff6a3: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a672: setnbe al
    new instr:0x7faef3eff6a6: setnbe al
old instr: 0x40a675: jmp 0x40abe6
    new instr:0x7faef3eff6a9: jmp 0x7faef3effc1a
inserted instruction
40a6ab
old instr: 0x40a6ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff6ae: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff6b2: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a6b2: setnbe al
    new instr:0x7faef3eff6b5: setnbe al
old instr: 0x40a6b5: jmp 0x40abe6
    new instr:0x7faef3eff6b8: jmp 0x7faef3effbe9
inserted instruction
40a8bc
old instr: 0x40a8bc: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff6bd: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a8c0: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff6c1: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a8c3: setnbe al
    new instr:0x7faef3eff6c4: setnbe al
old instr: 0x40a8c6: jmp 0x40abe6
    new instr:0x7faef3eff6c7: jmp 0x7faef3eff9e7
inserted instruction
40a838
old instr: 0x40a838: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff6cc: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a83c: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff6d0: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a83f: setnbe al
    new instr:0x7faef3eff6d3: setnbe al
old instr: 0x40a842: jmp 0x40abe6
    new instr:0x7faef3eff6d6: jmp 0x7faef3effa7a
inserted instruction
40a6eb
old instr: 0x40a6eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff6db: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff6df: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a6f2: setnbe al
    new instr:0x7faef3eff6e2: setnbe al
old instr: 0x40a6f5: jmp 0x40abe6
    new instr:0x7faef3eff6e5: jmp 0x7faef3effbd6
inserted instruction
40a940
old instr: 0x40a940: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff6ea: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a944: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff6ee: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a947: setnbe al
    new instr:0x7faef3eff6f1: setnbe al
old instr: 0x40a94a: jmp 0x40abe6
    new instr:0x7faef3eff6f4: jmp 0x7faef3eff990
inserted instruction
40a72b
old instr: 0x40a72b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff6f9: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a72f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff6fd: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a732: setnbe al
    new instr:0x7faef3eff700: setnbe al
old instr: 0x40a735: jmp 0x40abe6
    new instr:0x7faef3eff703: jmp 0x7faef3effbb4
inserted instruction
40a76b
old instr: 0x40a76b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff708: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a76f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff70c: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a772: setnbe al
    new instr:0x7faef3eff70f: setnbe al
old instr: 0x40a775: jmp 0x40abe6
    new instr:0x7faef3eff712: jmp 0x7faef3effb83
inserted instruction
40aacc
old instr: 0x40aacc: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff717: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aad0: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff71b: cmp al, byte ptr [rbp-0x6]
old instr: 0x40aad3: setnbe al
    new instr:0x7faef3eff71e: setnbe al
old instr: 0x40aad6: jmp 0x40abe6
    new instr:0x7faef3eff721: jmp 0x7faef3eff831
inserted instruction
40aa48
old instr: 0x40aa48: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff726: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aa4c: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff72a: cmp al, byte ptr [rbp-0x6]
old instr: 0x40aa4f: setnbe al
    new instr:0x7faef3eff72d: setnbe al
old instr: 0x40aa52: jmp 0x40abe6
    new instr:0x7faef3eff730: jmp 0x7faef3eff8c4
inserted instruction
40a9c4
old instr: 0x40a9c4: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff735: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a9c8: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff739: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a9cb: setnbe al
    new instr:0x7faef3eff73c: setnbe al
old instr: 0x40a9ce: jmp 0x40abe6
    new instr:0x7faef3eff73f: jmp 0x7faef3eff957
inserted instruction
40ab50
old instr: 0x40ab50: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff744: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40ab54: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff748: cmp al, byte ptr [rbp-0x6]
old instr: 0x40ab57: setnbe al
    new instr:0x7faef3eff74b: setnbe al
old instr: 0x40ab5a: jmp 0x40abe6
    new instr:0x7faef3eff74e: jmp 0x7faef3eff7da
inserted instruction
40a7b4
old instr: 0x40a7b4: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3eff753: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a7b8: cmp al, byte ptr [rbp-0x6]
    new instr:0x7faef3eff757: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a7bb: setnbe al
    new instr:0x7faef3eff75a: setnbe al
old instr: 0x40a7be: jmp 0x40abe6
    new instr:0x7faef3eff75d: jmp 0x7faef3effb85
inserted instruction
40abbe
old instr: 0x40abbe: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3eff762: mov eax, dword ptr [rbp-0x2c]
40abb0
old instr: 0x40abb0: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3eff765: mov eax, dword ptr [rbp-0x2c]
40abe1
old instr: 0x40abe1: mov eax, 0x0
    new instr:0x7faef3eff768: mov eax, 0x0
rtn name: mainGtU : 0
5c
40b826
old instr: 0x40b826: push rbp
    new instr:0x7faef3eff76d: push rbp
old instr: 0x40b827: mov rbp, rsp
    new instr:0x7faef3eff76e: mov rbp, rsp
old instr: 0x40b82a: push rbx
    new instr:0x7faef3eff771: push rbx
old instr: 0x40b82b: sub rsp, 0xd98
    new instr:0x7faef3eff772: sub rsp, 0xd98
old instr: 0x40b832: mov qword ptr [rbp-0xd68], rdi
    new instr:0x7faef3eff779: mov qword ptr [rbp-0xd68], rdi
old instr: 0x40b839: mov qword ptr [rbp-0xd70], rsi
    new instr:0x7faef3eff780: mov qword ptr [rbp-0xd70], rsi
old instr: 0x40b840: mov qword ptr [rbp-0xd78], rdx
    new instr:0x7faef3eff787: mov qword ptr [rbp-0xd78], rdx
old instr: 0x40b847: mov qword ptr [rbp-0xd80], rcx
    new instr:0x7faef3eff78e: mov qword ptr [rbp-0xd80], rcx
old instr: 0x40b84e: mov dword ptr [rbp-0xd84], r8d
    new instr:0x7faef3eff795: mov dword ptr [rbp-0xd84], r8d
old instr: 0x40b855: mov dword ptr [rbp-0xd88], r9d
    new instr:0x7faef3eff79c: mov dword ptr [rbp-0xd88], r9d
old instr: 0x40b85c: cmp dword ptr [rbp-0xd88], 0x3
    new instr:0x7faef3eff7a3: cmp dword ptr [rbp-0xd88], 0x3
in revert 
    new instr:0x7faef3eff7aa: jnle 0x7faef3eff7ca
40b883
old instr: 0x40b883: mov dword ptr [rbp-0x14], 0x10000
    new instr:0x7faef3eff7ac: mov dword ptr [rbp-0x14], 0x10000
in revert 
removing jump and inserting a dummy entry 
40b8ad
old instr: 0x40b8ad: cmp dword ptr [rbp-0x14], 0x0
    new instr:0x7faef3eff7b3: cmp dword ptr [rbp-0x14], 0x0
in revert 
    new instr:0x7faef3eff7b7: js 0x7faef3eff792
40b88c
old instr: 0x40b88c: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff7b9: mov eax, dword ptr [rbp-0x14]
40b8b3
old instr: 0x40b8b3: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3eff7bc: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40b8ba: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff7c3: movzx eax, byte ptr [rax]
old instr: 0x40b8bd: movzx eax, al
    new instr:0x7faef3eff7c6: movzx eax, al
old instr: 0x40b8c0: shl eax, 0x8
    new instr:0x7faef3eff7c9: shl eax, 0x8
old instr: 0x40b8c3: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3eff7cc: mov dword ptr [rbp-0x18], eax
old instr: 0x40b8c6: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7faef3eff7cf: mov eax, dword ptr [rbp-0xd84]
old instr: 0x40b8cc: sub eax, 0x1
    new instr:0x7faef3eff7d5: sub eax, 0x1
old instr: 0x40b8cf: mov dword ptr [rbp-0x14], eax
    new instr:0x7faef3eff7d8: mov dword ptr [rbp-0x14], eax
in revert 
removing jump and inserting a dummy entry 
40ba60
old instr: 0x40ba60: cmp dword ptr [rbp-0x14], 0x2
    new instr:0x7faef3eff7db: cmp dword ptr [rbp-0x14], 0x2
in revert 
    new instr:0x7faef3eff7df: jle 0x7faef3eff652
40b8d7
old instr: 0x40b8d7: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff7e5: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b8da: cdqe 
    new instr:0x7faef3eff7e8: cdqe 
old instr: 0x40b8dc: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff7ea: lea rdx, ptr [rax+rax*1]
old instr: 0x40b8e0: mov rax, qword ptr [rbp-0xd78]
    new instr:0x7faef3eff7ee: mov rax, qword ptr [rbp-0xd78]
old instr: 0x40b8e7: add rax, rdx
    new instr:0x7faef3eff7f5: add rax, rdx
old instr: 0x40b8ea: mov word ptr [rax], 0x0
    new instr:0x7faef3eff7f8: mov word ptr [rax], 0x0
old instr: 0x40b8ef: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff7fd: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b8f2: mov ecx, eax
    new instr:0x7faef3eff800: mov ecx, eax
old instr: 0x40b8f4: sar ecx, 0x8
    new instr:0x7faef3eff802: sar ecx, 0x8
old instr: 0x40b8f7: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff805: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b8fa: movsxd rdx, eax
    new instr:0x7faef3eff808: movsxd rdx, eax
old instr: 0x40b8fd: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3eff80b: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40b904: add rax, rdx
    new instr:0x7faef3eff812: add rax, rdx
old instr: 0x40b907: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff815: movzx eax, byte ptr [rax]
old instr: 0x40b90a: movzx eax, al
    new instr:0x7faef3eff818: movzx eax, al
old instr: 0x40b90d: shl eax, 0x8
    new instr:0x7faef3eff81b: shl eax, 0x8
old instr: 0x40b910: or eax, ecx
    new instr:0x7faef3eff81e: or eax, ecx
old instr: 0x40b912: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3eff820: mov dword ptr [rbp-0x18], eax
old instr: 0x40b915: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff823: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b918: cdqe 
    new instr:0x7faef3eff826: cdqe 
old instr: 0x40b91a: lea rdx, ptr [rax*4]
    new instr:0x7faef3eff828: lea rdx, ptr [rax*4]
old instr: 0x40b922: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3eff830: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40b929: add rax, rdx
    new instr:0x7faef3eff837: add rax, rdx
old instr: 0x40b92c: mov edx, dword ptr [rax]
    new instr:0x7faef3eff83a: mov edx, dword ptr [rax]
old instr: 0x40b92e: add edx, 0x1
    new instr:0x7faef3eff83c: add edx, 0x1
old instr: 0x40b931: mov dword ptr [rax], edx
    new instr:0x7faef3eff83f: mov dword ptr [rax], edx
old instr: 0x40b933: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff841: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b936: cdqe 
    new instr:0x7faef3eff844: cdqe 
old instr: 0x40b938: sub rax, 0x1
    new instr:0x7faef3eff846: sub rax, 0x1
old instr: 0x40b93c: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff84a: lea rdx, ptr [rax+rax*1]
old instr: 0x40b940: mov rax, qword ptr [rbp-0xd78]
    new instr:0x7faef3eff84e: mov rax, qword ptr [rbp-0xd78]
old instr: 0x40b947: add rax, rdx
    new instr:0x7faef3eff855: add rax, rdx
old instr: 0x40b94a: mov word ptr [rax], 0x0
    new instr:0x7faef3eff858: mov word ptr [rax], 0x0
old instr: 0x40b94f: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff85d: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b952: mov edx, eax
    new instr:0x7faef3eff860: mov edx, eax
old instr: 0x40b954: sar edx, 0x8
    new instr:0x7faef3eff862: sar edx, 0x8
old instr: 0x40b957: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff865: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b95a: cdqe 
    new instr:0x7faef3eff868: cdqe 
old instr: 0x40b95c: lea rcx, ptr [rax-0x1]
    new instr:0x7faef3eff86a: lea rcx, ptr [rax-0x1]
old instr: 0x40b960: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3eff86e: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40b967: add rax, rcx
    new instr:0x7faef3eff875: add rax, rcx
old instr: 0x40b96a: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff878: movzx eax, byte ptr [rax]
old instr: 0x40b96d: movzx eax, al
    new instr:0x7faef3eff87b: movzx eax, al
old instr: 0x40b970: shl eax, 0x8
    new instr:0x7faef3eff87e: shl eax, 0x8
old instr: 0x40b973: or eax, edx
    new instr:0x7faef3eff881: or eax, edx
old instr: 0x40b975: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3eff883: mov dword ptr [rbp-0x18], eax
old instr: 0x40b978: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff886: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b97b: cdqe 
    new instr:0x7faef3eff889: cdqe 
old instr: 0x40b97d: lea rdx, ptr [rax*4]
    new instr:0x7faef3eff88b: lea rdx, ptr [rax*4]
old instr: 0x40b985: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3eff893: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40b98c: add rax, rdx
    new instr:0x7faef3eff89a: add rax, rdx
old instr: 0x40b98f: mov edx, dword ptr [rax]
    new instr:0x7faef3eff89d: mov edx, dword ptr [rax]
old instr: 0x40b991: add edx, 0x1
    new instr:0x7faef3eff89f: add edx, 0x1
old instr: 0x40b994: mov dword ptr [rax], edx
    new instr:0x7faef3eff8a2: mov dword ptr [rax], edx
old instr: 0x40b996: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff8a4: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b999: cdqe 
    new instr:0x7faef3eff8a7: cdqe 
old instr: 0x40b99b: sub rax, 0x2
    new instr:0x7faef3eff8a9: sub rax, 0x2
old instr: 0x40b99f: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3eff8ad: lea rdx, ptr [rax+rax*1]
old instr: 0x40b9a3: mov rax, qword ptr [rbp-0xd78]
    new instr:0x7faef3eff8b1: mov rax, qword ptr [rbp-0xd78]
old instr: 0x40b9aa: add rax, rdx
    new instr:0x7faef3eff8b8: add rax, rdx
old instr: 0x40b9ad: mov word ptr [rax], 0x0
    new instr:0x7faef3eff8bb: mov word ptr [rax], 0x0
old instr: 0x40b9b2: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff8c0: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b9b5: mov edx, eax
    new instr:0x7faef3eff8c3: mov edx, eax
old instr: 0x40b9b7: sar edx, 0x8
    new instr:0x7faef3eff8c5: sar edx, 0x8
old instr: 0x40b9ba: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff8c8: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b9bd: cdqe 
    new instr:0x7faef3eff8cb: cdqe 
old instr: 0x40b9bf: lea rcx, ptr [rax-0x2]
    new instr:0x7faef3eff8cd: lea rcx, ptr [rax-0x2]
old instr: 0x40b9c3: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3eff8d1: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40b9ca: add rax, rcx
    new instr:0x7faef3eff8d8: add rax, rcx
old instr: 0x40b9cd: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff8db: movzx eax, byte ptr [rax]
40b9d0
old instr: 0x40b9d0: movzx eax, al
    new instr:0x7faef3eff8de: movzx eax, al
40b865
old instr: 0x40b865: mov rax, qword ptr [rip+0x211a44]
    new instr:0x7faef3eff8e1: mov rax, qword ptr [rip+0x211a44]
old instr: 0x40b86c: mov rcx, rax
    new instr:0x7faef3eff8e8: mov rcx, rax
old instr: 0x40b86f: mov edx, 0x21
    new instr:0x7faef3eff8eb: mov edx, 0x21
old instr: 0x40b874: mov esi, 0x1
    new instr:0x7faef3eff8f0: mov esi, 0x1
old instr: 0x40b879: mov edi, 0x41ab48
    new instr:0x7faef3eff8f5: mov edi, 0x41ab48
old instr: 0x40b87e: call 0x4012d0
    new instr:0x7faef3eff8fa: call 0x7faef3ef534c
inserted instruction
40ba6a
in revert 
removing jump and inserting a dummy entry 
40bacc
old instr: 0x40bacc: cmp dword ptr [rbp-0x14], 0x0
    new instr:0x7faef3eff8ff: cmp dword ptr [rbp-0x14], 0x0
in revert 
    new instr:0x7faef3eff903: js 0x7faef3eff89f
40ba6c
old instr: 0x40ba6c: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff905: mov eax, dword ptr [rbp-0x14]
40bad2
old instr: 0x40bad2: mov dword ptr [rbp-0x14], 0x0
    new instr:0x7faef3eff908: mov dword ptr [rbp-0x14], 0x0
in revert 
removing jump and inserting a dummy entry 
40bb2c
old instr: 0x40bb2c: cmp dword ptr [rbp-0x14], 0x21
    new instr:0x7faef3eff90f: cmp dword ptr [rbp-0x14], 0x21
in revert 
    new instr:0x7faef3eff913: jnle 0x7faef3eff8be
40badb
old instr: 0x40badb: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff915: mov eax, dword ptr [rbp-0x14]
40bb32
old instr: 0x40bb32: cmp dword ptr [rbp-0xd88], 0x3
    new instr:0x7faef3eff918: cmp dword ptr [rbp-0xd88], 0x3
in revert 
    new instr:0x7faef3eff91f: jnle 0x7faef3eff93f
40bb59
old instr: 0x40bb59: mov dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3eff921: mov dword ptr [rbp-0x14], 0x1
in revert 
removing jump and inserting a dummy entry 
40bbb9
old instr: 0x40bbb9: cmp dword ptr [rbp-0x14], 0x10000
    new instr:0x7faef3eff928: cmp dword ptr [rbp-0x14], 0x10000
in revert 
    new instr:0x7faef3eff92f: jnle 0x7faef3eff8d1
40bb62
old instr: 0x40bb62: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff931: mov eax, dword ptr [rbp-0x14]
40bbc2
old instr: 0x40bbc2: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3eff934: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40bbc9: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff93b: movzx eax, byte ptr [rax]
old instr: 0x40bbcc: movzx eax, al
    new instr:0x7faef3eff93e: movzx eax, al
old instr: 0x40bbcf: shl eax, 0x8
    new instr:0x7faef3eff941: shl eax, 0x8
old instr: 0x40bbd2: mov word ptr [rbp-0x22], ax
    new instr:0x7faef3eff944: mov word ptr [rbp-0x22], ax
old instr: 0x40bbd6: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7faef3eff948: mov eax, dword ptr [rbp-0xd84]
old instr: 0x40bbdc: sub eax, 0x1
    new instr:0x7faef3eff94e: sub eax, 0x1
old instr: 0x40bbdf: mov dword ptr [rbp-0x14], eax
    new instr:0x7faef3eff951: mov dword ptr [rbp-0x14], eax
in revert 
removing jump and inserting a dummy entry 
40bdf5
old instr: 0x40bdf5: cmp dword ptr [rbp-0x14], 0x2
    new instr:0x7faef3eff954: cmp dword ptr [rbp-0x14], 0x2
in revert 
    new instr:0x7faef3eff958: jle 0x7faef3eff746
40bbe7
old instr: 0x40bbe7: movzx eax, word ptr [rbp-0x22]
    new instr:0x7faef3eff95e: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bbeb: shr ax, 0x8
    new instr:0x7faef3eff962: shr ax, 0x8
old instr: 0x40bbef: mov edx, eax
    new instr:0x7faef3eff966: mov edx, eax
old instr: 0x40bbf1: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff968: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bbf4: movsxd rcx, eax
    new instr:0x7faef3eff96b: movsxd rcx, eax
old instr: 0x40bbf7: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3eff96e: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40bbfe: add rax, rcx
    new instr:0x7faef3eff975: add rax, rcx
old instr: 0x40bc01: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff978: movzx eax, byte ptr [rax]
old instr: 0x40bc04: movzx eax, al
    new instr:0x7faef3eff97b: movzx eax, al
old instr: 0x40bc07: shl eax, 0x8
    new instr:0x7faef3eff97e: shl eax, 0x8
old instr: 0x40bc0a: or eax, edx
    new instr:0x7faef3eff981: or eax, edx
old instr: 0x40bc0c: mov word ptr [rbp-0x22], ax
    new instr:0x7faef3eff983: mov word ptr [rbp-0x22], ax
old instr: 0x40bc10: movzx eax, word ptr [rbp-0x22]
    new instr:0x7faef3eff987: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bc14: lea rdx, ptr [rax*4]
    new instr:0x7faef3eff98b: lea rdx, ptr [rax*4]
old instr: 0x40bc1c: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3eff993: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bc23: add rax, rdx
    new instr:0x7faef3eff99a: add rax, rdx
old instr: 0x40bc26: mov eax, dword ptr [rax]
    new instr:0x7faef3eff99d: mov eax, dword ptr [rax]
old instr: 0x40bc28: sub eax, 0x1
    new instr:0x7faef3eff99f: sub eax, 0x1
old instr: 0x40bc2b: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3eff9a2: mov dword ptr [rbp-0x18], eax
old instr: 0x40bc2e: movzx eax, word ptr [rbp-0x22]
    new instr:0x7faef3eff9a5: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bc32: lea rdx, ptr [rax*4]
    new instr:0x7faef3eff9a9: lea rdx, ptr [rax*4]
old instr: 0x40bc3a: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3eff9b1: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bc41: add rdx, rax
    new instr:0x7faef3eff9b8: add rdx, rax
old instr: 0x40bc44: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff9bb: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bc47: mov dword ptr [rdx], eax
    new instr:0x7faef3eff9be: mov dword ptr [rdx], eax
old instr: 0x40bc49: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3eff9c0: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bc4c: cdqe 
    new instr:0x7faef3eff9c3: cdqe 
old instr: 0x40bc4e: lea rdx, ptr [rax*4]
    new instr:0x7faef3eff9c5: lea rdx, ptr [rax*4]
old instr: 0x40bc56: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7faef3eff9cd: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40bc5d: add rdx, rax
    new instr:0x7faef3eff9d4: add rdx, rax
old instr: 0x40bc60: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff9d7: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bc63: mov dword ptr [rdx], eax
    new instr:0x7faef3eff9da: mov dword ptr [rdx], eax
old instr: 0x40bc65: movzx eax, word ptr [rbp-0x22]
    new instr:0x7faef3eff9dc: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bc69: shr ax, 0x8
    new instr:0x7faef3eff9e0: shr ax, 0x8
old instr: 0x40bc6d: mov edx, eax
    new instr:0x7faef3eff9e4: mov edx, eax
old instr: 0x40bc6f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3eff9e6: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bc72: cdqe 
    new instr:0x7faef3eff9e9: cdqe 
old instr: 0x40bc74: lea rcx, ptr [rax-0x1]
    new instr:0x7faef3eff9eb: lea rcx, ptr [rax-0x1]
old instr: 0x40bc78: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3eff9ef: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40bc7f: add rax, rcx
    new instr:0x7faef3eff9f6: add rax, rcx
old instr: 0x40bc82: movzx eax, byte ptr [rax]
    new instr:0x7faef3eff9f9: movzx eax, byte ptr [rax]
old instr: 0x40bc85: movzx eax, al
    new instr:0x7faef3eff9fc: movzx eax, al
old instr: 0x40bc88: shl eax, 0x8
    new instr:0x7faef3eff9ff: shl eax, 0x8
old instr: 0x40bc8b: or eax, edx
    new instr:0x7faef3effa02: or eax, edx
old instr: 0x40bc8d: mov word ptr [rbp-0x22], ax
    new instr:0x7faef3effa04: mov word ptr [rbp-0x22], ax
old instr: 0x40bc91: movzx eax, word ptr [rbp-0x22]
    new instr:0x7faef3effa08: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bc95: lea rdx, ptr [rax*4]
    new instr:0x7faef3effa0c: lea rdx, ptr [rax*4]
old instr: 0x40bc9d: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effa14: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bca4: add rax, rdx
    new instr:0x7faef3effa1b: add rax, rdx
old instr: 0x40bca7: mov eax, dword ptr [rax]
    new instr:0x7faef3effa1e: mov eax, dword ptr [rax]
old instr: 0x40bca9: sub eax, 0x1
    new instr:0x7faef3effa20: sub eax, 0x1
old instr: 0x40bcac: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3effa23: mov dword ptr [rbp-0x18], eax
old instr: 0x40bcaf: movzx eax, word ptr [rbp-0x22]
    new instr:0x7faef3effa26: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bcb3: lea rdx, ptr [rax*4]
    new instr:0x7faef3effa2a: lea rdx, ptr [rax*4]
old instr: 0x40bcbb: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effa32: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bcc2: add rdx, rax
    new instr:0x7faef3effa39: add rdx, rax
old instr: 0x40bcc5: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3effa3c: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bcc8: mov dword ptr [rdx], eax
    new instr:0x7faef3effa3f: mov dword ptr [rdx], eax
old instr: 0x40bcca: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3effa41: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bccd: cdqe 
    new instr:0x7faef3effa44: cdqe 
old instr: 0x40bccf: lea rdx, ptr [rax*4]
    new instr:0x7faef3effa46: lea rdx, ptr [rax*4]
old instr: 0x40bcd7: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7faef3effa4e: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40bcde: add rdx, rax
    new instr:0x7faef3effa55: add rdx, rax
old instr: 0x40bce1: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3effa58: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bce4: sub eax, 0x1
    new instr:0x7faef3effa5b: sub eax, 0x1
old instr: 0x40bce7: mov dword ptr [rdx], eax
    new instr:0x7faef3effa5e: mov dword ptr [rdx], eax
old instr: 0x40bce9: movzx eax, word ptr [rbp-0x22]
    new instr:0x7faef3effa60: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bced: shr ax, 0x8
    new instr:0x7faef3effa64: shr ax, 0x8
old instr: 0x40bcf1: mov edx, eax
    new instr:0x7faef3effa68: mov edx, eax
old instr: 0x40bcf3: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3effa6a: mov eax, dword ptr [rbp-0x14]
40bcf6
old instr: 0x40bcf6: cdqe 
    new instr:0x7faef3effa6d: cdqe 
40bb3b
old instr: 0x40bb3b: mov rax, qword ptr [rip+0x21176e]
    new instr:0x7faef3effa6f: mov rax, qword ptr [rip+0x21176e]
old instr: 0x40bb42: mov rcx, rax
    new instr:0x7faef3effa76: mov rcx, rax
old instr: 0x40bb45: mov edx, 0x1b
    new instr:0x7faef3effa79: mov edx, 0x1b
old instr: 0x40bb4a: mov esi, 0x1
    new instr:0x7faef3effa7e: mov esi, 0x1
old instr: 0x40bb4f: mov edi, 0x41aad0
    new instr:0x7faef3effa83: mov edi, 0x41aad0
old instr: 0x40bb54: call 0x4012d0
    new instr:0x7faef3effa88: call 0x7faef3ef5204
inserted instruction
40bdff
in revert 
removing jump and inserting a dummy entry 
40be86
old instr: 0x40be86: cmp dword ptr [rbp-0x14], 0x0
    new instr:0x7faef3effa8d: cmp dword ptr [rbp-0x14], 0x0
in revert 
    new instr:0x7faef3effa91: js 0x7faef3effa0b
40be04
old instr: 0x40be04: movzx eax, word ptr [rbp-0x22]
    new instr:0x7faef3effa97: movzx eax, word ptr [rbp-0x22]
40be90
old instr: 0x40be90: mov dword ptr [rbp-0x14], 0x0
    new instr:0x7faef3effa9b: mov dword ptr [rbp-0x14], 0x0
in revert 
removing jump and inserting a dummy entry 
40beb9
old instr: 0x40beb9: cmp dword ptr [rbp-0x14], 0xff
    new instr:0x7faef3effaa2: cmp dword ptr [rbp-0x14], 0xff
in revert 
    new instr:0x7faef3effaa9: jnle 0x7faef3effa82
40be99
old instr: 0x40be99: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3effaab: mov eax, dword ptr [rbp-0x14]
40bec2
old instr: 0x40bec2: mov dword ptr [rbp-0x28], 0x1
    new instr:0x7faef3effaae: mov dword ptr [rbp-0x28], 0x1
40bec9
old instr: 0x40bec9: mov edx, dword ptr [rbp-0x28]
    new instr:0x7faef3effab5: mov edx, dword ptr [rbp-0x28]
old instr: 0x40becc: mov eax, edx
    new instr:0x7faef3effab8: mov eax, edx
old instr: 0x40bece: add eax, eax
    new instr:0x7faef3effaba: add eax, eax
old instr: 0x40bed0: add eax, edx
    new instr:0x7faef3effabc: add eax, edx
old instr: 0x40bed2: add eax, 0x1
    new instr:0x7faef3effabe: add eax, 0x1
old instr: 0x40bed5: mov dword ptr [rbp-0x28], eax
    new instr:0x7faef3effac1: mov dword ptr [rbp-0x28], eax
old instr: 0x40bed8: cmp dword ptr [rbp-0x28], 0x100
    new instr:0x7faef3effac4: cmp dword ptr [rbp-0x28], 0x100
old instr: 0x40bedf: jle 0x40bec9
    new instr:0x7faef3effacb: jle 0x7faef3effab5
inserted instruction
40bee1
old instr: 0x40bee1: mov ecx, dword ptr [rbp-0x28]
    new instr:0x7faef3effacd: mov ecx, dword ptr [rbp-0x28]
old instr: 0x40bee4: mov edx, 0x55555556
    new instr:0x7faef3effad0: mov edx, 0x55555556
old instr: 0x40bee9: mov eax, ecx
    new instr:0x7faef3effad5: mov eax, ecx
old instr: 0x40beeb: imul edx
    new instr:0x7faef3effad7: imul edx
old instr: 0x40beed: mov eax, ecx
    new instr:0x7faef3effad9: mov eax, ecx
old instr: 0x40beef: sar eax, 0x1f
    new instr:0x7faef3effadb: sar eax, 0x1f
old instr: 0x40bef2: mov ecx, edx
    new instr:0x7faef3effade: mov ecx, edx
old instr: 0x40bef4: sub ecx, eax
    new instr:0x7faef3effae0: sub ecx, eax
old instr: 0x40bef6: mov eax, ecx
    new instr:0x7faef3effae2: mov eax, ecx
old instr: 0x40bef8: mov dword ptr [rbp-0x28], eax
    new instr:0x7faef3effae4: mov dword ptr [rbp-0x28], eax
old instr: 0x40befb: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3effae7: mov eax, dword ptr [rbp-0x28]
old instr: 0x40befe: mov dword ptr [rbp-0x14], eax
    new instr:0x7faef3effaea: mov dword ptr [rbp-0x14], eax
in revert 
removing jump and inserting a dummy entry 
40c015
old instr: 0x40c015: cmp dword ptr [rbp-0x14], 0xff
    new instr:0x7faef3effaed: cmp dword ptr [rbp-0x14], 0xff
in revert 
    new instr:0x7faef3effaf4: jnle 0x7faef3eff9de
40bf06
old instr: 0x40bf06: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3effafa: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bf09: cdqe 
    new instr:0x7faef3effafd: cdqe 
old instr: 0x40bf0b: mov eax, dword ptr [rbp+rax*4-0x460]
    new instr:0x7faef3effaff: mov eax, dword ptr [rbp+rax*4-0x460]
old instr: 0x40bf12: mov dword ptr [rbp-0x30], eax
    new instr:0x7faef3effb06: mov dword ptr [rbp-0x30], eax
old instr: 0x40bf15: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3effb09: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bf18: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3effb0c: mov dword ptr [rbp-0x18], eax
in revert 
removing jump and inserting a dummy entry 
40bf53
old instr: 0x40bf53: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3effb0f: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf56: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3effb12: mov edx, dword ptr [rbp-0x18]
old instr: 0x40bf59: mov ecx, edx
    new instr:0x7faef3effb15: mov ecx, edx
old instr: 0x40bf5b: sub ecx, eax
    new instr:0x7faef3effb17: sub ecx, eax
old instr: 0x40bf5d: mov eax, ecx
    new instr:0x7faef3effb19: mov eax, ecx
old instr: 0x40bf5f: cdqe 
    new instr:0x7faef3effb1b: cdqe 
old instr: 0x40bf61: mov eax, dword ptr [rbp+rax*4-0x460]
    new instr:0x7faef3effb1d: mov eax, dword ptr [rbp+rax*4-0x460]
old instr: 0x40bf68: add eax, 0x1
    new instr:0x7faef3effb24: add eax, 0x1
old instr: 0x40bf6b: shl eax, 0x8
    new instr:0x7faef3effb27: shl eax, 0x8
old instr: 0x40bf6e: cdqe 
    new instr:0x7faef3effb2a: cdqe 
old instr: 0x40bf70: lea rdx, ptr [rax*4]
    new instr:0x7faef3effb2c: lea rdx, ptr [rax*4]
old instr: 0x40bf78: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effb34: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bf7f: add rax, rdx
    new instr:0x7faef3effb3b: add rax, rdx
old instr: 0x40bf82: mov edx, dword ptr [rax]
    new instr:0x7faef3effb3e: mov edx, dword ptr [rax]
old instr: 0x40bf84: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3effb40: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf87: mov ecx, dword ptr [rbp-0x18]
    new instr:0x7faef3effb43: mov ecx, dword ptr [rbp-0x18]
old instr: 0x40bf8a: mov ebx, ecx
    new instr:0x7faef3effb46: mov ebx, ecx
old instr: 0x40bf8c: sub ebx, eax
    new instr:0x7faef3effb48: sub ebx, eax
old instr: 0x40bf8e: mov eax, ebx
    new instr:0x7faef3effb4a: mov eax, ebx
old instr: 0x40bf90: cdqe 
    new instr:0x7faef3effb4c: cdqe 
old instr: 0x40bf92: mov eax, dword ptr [rbp+rax*4-0x460]
    new instr:0x7faef3effb4e: mov eax, dword ptr [rbp+rax*4-0x460]
old instr: 0x40bf99: shl eax, 0x8
    new instr:0x7faef3effb55: shl eax, 0x8
old instr: 0x40bf9c: cdqe 
    new instr:0x7faef3effb58: cdqe 
old instr: 0x40bf9e: lea rcx, ptr [rax*4]
    new instr:0x7faef3effb5a: lea rcx, ptr [rax*4]
old instr: 0x40bfa6: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effb62: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bfad: add rax, rcx
    new instr:0x7faef3effb69: add rax, rcx
old instr: 0x40bfb0: mov eax, dword ptr [rax]
    new instr:0x7faef3effb6c: mov eax, dword ptr [rax]
old instr: 0x40bfb2: mov ecx, edx
    new instr:0x7faef3effb6e: mov ecx, edx
old instr: 0x40bfb4: sub ecx, eax
    new instr:0x7faef3effb70: sub ecx, eax
old instr: 0x40bfb6: mov eax, dword ptr [rbp-0x30]
    new instr:0x7faef3effb72: mov eax, dword ptr [rbp-0x30]
old instr: 0x40bfb9: add eax, 0x1
    new instr:0x7faef3effb75: add eax, 0x1
old instr: 0x40bfbc: shl eax, 0x8
    new instr:0x7faef3effb78: shl eax, 0x8
old instr: 0x40bfbf: cdqe 
    new instr:0x7faef3effb7b: cdqe 
old instr: 0x40bfc1: lea rdx, ptr [rax*4]
    new instr:0x7faef3effb7d: lea rdx, ptr [rax*4]
old instr: 0x40bfc9: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effb85: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bfd0: add rax, rdx
    new instr:0x7faef3effb8c: add rax, rdx
old instr: 0x40bfd3: mov edx, dword ptr [rax]
    new instr:0x7faef3effb8f: mov edx, dword ptr [rax]
old instr: 0x40bfd5: mov eax, dword ptr [rbp-0x30]
    new instr:0x7faef3effb91: mov eax, dword ptr [rbp-0x30]
old instr: 0x40bfd8: shl eax, 0x8
    new instr:0x7faef3effb94: shl eax, 0x8
old instr: 0x40bfdb: cdqe 
    new instr:0x7faef3effb97: cdqe 
old instr: 0x40bfdd: lea rsi, ptr [rax*4]
    new instr:0x7faef3effb99: lea rsi, ptr [rax*4]
old instr: 0x40bfe5: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effba1: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bfec: add rax, rsi
    new instr:0x7faef3effba8: add rax, rsi
old instr: 0x40bfef: mov eax, dword ptr [rax]
    new instr:0x7faef3effbab: mov eax, dword ptr [rax]
old instr: 0x40bff1: mov ebx, edx
    new instr:0x7faef3effbad: mov ebx, edx
old instr: 0x40bff3: sub ebx, eax
    new instr:0x7faef3effbaf: sub ebx, eax
old instr: 0x40bff5: mov eax, ebx
    new instr:0x7faef3effbb1: mov eax, ebx
old instr: 0x40bff7: cmp ecx, eax
    new instr:0x7faef3effbb3: cmp ecx, eax
old instr: 0x40bff9: jnbe 0x40bf1d
    new instr:0x7faef3effbb5: jnbe 0x7faef3effad9
inserted instruction
40bfff
in revert 
removing jump and inserting a dummy entry 
40c002
old instr: 0x40c002: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3effbbb: mov eax, dword ptr [rbp-0x18]
40bf1d
old instr: 0x40bf1d: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3effbbe: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf20: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3effbc1: mov edx, dword ptr [rbp-0x18]
old instr: 0x40bf23: mov ebx, edx
    new instr:0x7faef3effbc4: mov ebx, edx
old instr: 0x40bf25: sub ebx, eax
    new instr:0x7faef3effbc6: sub ebx, eax
old instr: 0x40bf27: mov eax, ebx
    new instr:0x7faef3effbc8: mov eax, ebx
old instr: 0x40bf29: cdqe 
    new instr:0x7faef3effbca: cdqe 
old instr: 0x40bf2b: mov edx, dword ptr [rbp+rax*4-0x460]
    new instr:0x7faef3effbcc: mov edx, dword ptr [rbp+rax*4-0x460]
old instr: 0x40bf32: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3effbd3: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bf35: cdqe 
    new instr:0x7faef3effbd6: cdqe 
old instr: 0x40bf37: mov dword ptr [rbp+rax*4-0x460], edx
    new instr:0x7faef3effbd8: mov dword ptr [rbp+rax*4-0x460], edx
old instr: 0x40bf3e: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3effbdf: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf41: sub dword ptr [rbp-0x18], eax
    new instr:0x7faef3effbe2: sub dword ptr [rbp-0x18], eax
old instr: 0x40bf44: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3effbe5: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf47: sub eax, 0x1
    new instr:0x7faef3effbe8: sub eax, 0x1
old instr: 0x40bf4a: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7faef3effbeb: cmp eax, dword ptr [rbp-0x18]
in revert 
    new instr:0x7faef3effbee: jl 0x7faef3effca2
40c001
old instr: 0x40c001: nop
    new instr:0x7faef3effbf4: nop
40c022
old instr: 0x40c022: cmp dword ptr [rbp-0x28], 0x1
    new instr:0x7faef3effbf5: cmp dword ptr [rbp-0x28], 0x1
old instr: 0x40c026: jnz 0x40bee1
    new instr:0x7faef3effbf9: jnz 0x7faef3effab4
inserted instruction
40c02c
old instr: 0x40c02c: mov dword ptr [rbp-0x20], 0x0
    new instr:0x7faef3effbff: mov dword ptr [rbp-0x20], 0x0
old instr: 0x40c033: mov dword ptr [rbp-0x14], 0x0
    new instr:0x7faef3effc06: mov dword ptr [rbp-0x14], 0x0
in revert 
removing jump and inserting a dummy entry 
40c627
old instr: 0x40c627: cmp dword ptr [rbp-0x14], 0xff
    new instr:0x7faef3effc0d: cmp dword ptr [rbp-0x14], 0xff
in revert 
    new instr:0x7faef3effc14: jnle 0x7faef3eff625
40c03f
old instr: 0x40c03f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3effc1a: mov eax, dword ptr [rbp-0x14]
old instr: 0x40c042: cdqe 
    new instr:0x7faef3effc1d: cdqe 
old instr: 0x40c044: mov eax, dword ptr [rbp+rax*4-0x460]
    new instr:0x7faef3effc1f: mov eax, dword ptr [rbp+rax*4-0x460]
old instr: 0x40c04b: mov dword ptr [rbp-0x34], eax
    new instr:0x7faef3effc26: mov dword ptr [rbp-0x34], eax
old instr: 0x40c04e: mov dword ptr [rbp-0x18], 0x0
    new instr:0x7faef3effc29: mov dword ptr [rbp-0x18], 0x0
in revert 
removing jump and inserting a dummy entry 
40c1c9
old instr: 0x40c1c9: cmp dword ptr [rbp-0x18], 0xff
    new instr:0x7faef3effc30: cmp dword ptr [rbp-0x18], 0xff
in revert 
    new instr:0x7faef3effc37: jnle 0x7faef3effac1
40c05a
old instr: 0x40c05a: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3effc3d: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c05d: cmp eax, dword ptr [rbp-0x34]
    new instr:0x7faef3effc40: cmp eax, dword ptr [rbp-0x34]
old instr: 0x40c060: jz 0x40c1c5
    new instr:0x7faef3effc43: jz 0x7faef3effda8
inserted instruction
40c066
old instr: 0x40c066: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3effc49: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c069: mov edx, eax
    new instr:0x7faef3effc4c: mov edx, eax
old instr: 0x40c06b: shl edx, 0x8
    new instr:0x7faef3effc4e: shl edx, 0x8
old instr: 0x40c06e: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3effc51: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c071: add eax, edx
    new instr:0x7faef3effc54: add eax, edx
old instr: 0x40c073: mov dword ptr [rbp-0x38], eax
    new instr:0x7faef3effc56: mov dword ptr [rbp-0x38], eax
old instr: 0x40c076: mov eax, dword ptr [rbp-0x38]
    new instr:0x7faef3effc59: mov eax, dword ptr [rbp-0x38]
old instr: 0x40c079: cdqe 
    new instr:0x7faef3effc5c: cdqe 
old instr: 0x40c07b: lea rdx, ptr [rax*4]
    new instr:0x7faef3effc5e: lea rdx, ptr [rax*4]
old instr: 0x40c083: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effc66: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c08a: add rax, rdx
    new instr:0x7faef3effc6d: add rax, rdx
old instr: 0x40c08d: mov eax, dword ptr [rax]
    new instr:0x7faef3effc70: mov eax, dword ptr [rax]
old instr: 0x40c08f: and eax, 0x200000
    new instr:0x7faef3effc72: and eax, 0x200000
old instr: 0x40c094: test eax, eax
    new instr:0x7faef3effc77: test eax, eax
in revert 
    new instr:0x7faef3effc79: jz 0x7faef3effd6f
40c18c
old instr: 0x40c18c: mov eax, dword ptr [rbp-0x38]
    new instr:0x7faef3effc7f: mov eax, dword ptr [rbp-0x38]
40c09c
old instr: 0x40c09c: mov eax, dword ptr [rbp-0x38]
    new instr:0x7faef3effc82: mov eax, dword ptr [rbp-0x38]
old instr: 0x40c09f: cdqe 
    new instr:0x7faef3effc85: cdqe 
old instr: 0x40c0a1: lea rdx, ptr [rax*4]
    new instr:0x7faef3effc87: lea rdx, ptr [rax*4]
old instr: 0x40c0a9: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effc8f: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c0b0: add rax, rdx
    new instr:0x7faef3effc96: add rax, rdx
old instr: 0x40c0b3: mov eax, dword ptr [rax]
    new instr:0x7faef3effc99: mov eax, dword ptr [rax]
old instr: 0x40c0b5: and eax, 0xffdfffff
    new instr:0x7faef3effc9b: and eax, 0xffdfffff
old instr: 0x40c0ba: mov dword ptr [rbp-0x3c], eax
    new instr:0x7faef3effca0: mov dword ptr [rbp-0x3c], eax
old instr: 0x40c0bd: mov eax, dword ptr [rbp-0x38]
    new instr:0x7faef3effca3: mov eax, dword ptr [rbp-0x38]
old instr: 0x40c0c0: cdqe 
    new instr:0x7faef3effca6: cdqe 
old instr: 0x40c0c2: add rax, 0x1
    new instr:0x7faef3effca8: add rax, 0x1
old instr: 0x40c0c6: lea rdx, ptr [rax*4]
    new instr:0x7faef3effcac: lea rdx, ptr [rax*4]
old instr: 0x40c0ce: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3effcb4: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c0d5: add rax, rdx
    new instr:0x7faef3effcbb: add rax, rdx
old instr: 0x40c0d8: mov eax, dword ptr [rax]
    new instr:0x7faef3effcbe: mov eax, dword ptr [rax]
old instr: 0x40c0da: and eax, 0xffdfffff
    new instr:0x7faef3effcc0: and eax, 0xffdfffff
old instr: 0x40c0df: sub eax, 0x1
    new instr:0x7faef3effcc5: sub eax, 0x1
old instr: 0x40c0e2: mov dword ptr [rbp-0x40], eax
    new instr:0x7faef3effcc8: mov dword ptr [rbp-0x40], eax
old instr: 0x40c0e5: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3effccb: mov eax, dword ptr [rbp-0x40]
old instr: 0x40c0e8: cmp eax, dword ptr [rbp-0x3c]
    new instr:0x7faef3effcce: cmp eax, dword ptr [rbp-0x3c]
old instr: 0x40c0eb: jle 0x40c18c
    new instr:0x7faef3effcd1: jle 0x7faef3effd72
inserted instruction
add jump to 
    new instr:0x7faef3effcd7: jmp 0x7faef430bdcd
40c1c5
old instr: 0x40c1c5: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3effcdc: add dword ptr [rbp-0x18], 0x1
40c0f1
old instr: 0x40c0f1: cmp dword ptr [rbp-0xd88], 0x3
    new instr:0x7faef3effce0: cmp dword ptr [rbp-0xd88], 0x3
in revert 
    new instr:0x7faef3effce7: jnle 0x7faef3effd20
40c131
old instr: 0x40c131: mov r9d, dword ptr [rbp-0x40]
    new instr:0x7faef3effce9: mov r9d, dword ptr [rbp-0x40]
old instr: 0x40c135: mov r8d, dword ptr [rbp-0x3c]
    new instr:0x7faef3effced: mov r8d, dword ptr [rbp-0x3c]
old instr: 0x40c139: mov ecx, dword ptr [rbp-0xd84]
    new instr:0x7faef3effcf1: mov ecx, dword ptr [rbp-0xd84]
old instr: 0x40c13f: mov rdx, qword ptr [rbp-0xd78]
    new instr:0x7faef3effcf7: mov rdx, qword ptr [rbp-0xd78]
old instr: 0x40c146: mov rsi, qword ptr [rbp-0xd70]
    new instr:0x7faef3effcfe: mov rsi, qword ptr [rbp-0xd70]
old instr: 0x40c14d: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7faef3effd05: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40c154: mov rdi, qword ptr [rbp+0x10]
    new instr:0x7faef3effd0c: mov rdi, qword ptr [rbp+0x10]
old instr: 0x40c158: mov qword ptr [rsp+0x8], rdi
    new instr:0x7faef3effd10: mov qword ptr [rsp+0x8], rdi
old instr: 0x40c15d: mov dword ptr [rsp], 0x2
    new instr:0x7faef3effd15: mov dword ptr [rsp], 0x2
old instr: 0x40c164: mov rdi, rax
    new instr:0x7faef3effd1c: mov rdi, rax
    new instr:0x7faef3effd1f: sub rsp, 0x8
old instr: 0x40afb7: push rbp
    new instr:0x7faef3effd23: push rbp
old instr: 0x40afb8: mov rbp, rsp
    new instr:0x7faef3effd24: mov rbp, rsp
old instr: 0x40afbb: push rbx
    new instr:0x7faef3effd27: push rbx
old instr: 0x40afbc: sub rsp, 0x598
    new instr:0x7faef3effd28: sub rsp, 0x598
old instr: 0x40afc3: mov qword ptr [rbp-0x568], rdi
    new instr:0x7faef3effd2f: mov qword ptr [rbp-0x568], rdi
old instr: 0x40afca: mov qword ptr [rbp-0x570], rsi
    new instr:0x7faef3effd36: mov qword ptr [rbp-0x570], rsi
old instr: 0x40afd1: mov qword ptr [rbp-0x578], rdx
    new instr:0x7faef3effd3d: mov qword ptr [rbp-0x578], rdx
old instr: 0x40afd8: mov dword ptr [rbp-0x57c], ecx
    new instr:0x7faef3effd44: mov dword ptr [rbp-0x57c], ecx
old instr: 0x40afde: mov dword ptr [rbp-0x580], r8d
    new instr:0x7faef3effd4a: mov dword ptr [rbp-0x580], r8d
old instr: 0x40afe5: mov dword ptr [rbp-0x584], r9d
    new instr:0x7faef3effd51: mov dword ptr [rbp-0x584], r9d
old instr: 0x40afec: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7faef3effd58: mov dword ptr [rbp-0x24], 0x0
old instr: 0x40aff3: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3effd5f: mov eax, dword ptr [rbp-0x24]
old instr: 0x40aff6: cdqe 
    new instr:0x7faef3effd62: cdqe 
old instr: 0x40aff8: mov edx, dword ptr [rbp-0x580]
    new instr:0x7faef3effd64: mov edx, dword ptr [rbp-0x580]
old instr: 0x40affe: mov dword ptr [rbp+rax*4-0x210], edx
    new instr:0x7faef3effd6a: mov dword ptr [rbp+rax*4-0x210], edx
old instr: 0x40b005: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3effd71: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b008: cdqe 
    new instr:0x7faef3effd74: cdqe 
old instr: 0x40b00a: mov edx, dword ptr [rbp-0x584]
    new instr:0x7faef3effd76: mov edx, dword ptr [rbp-0x584]
old instr: 0x40b010: mov dword ptr [rbp+rax*4-0x3a0], edx
    new instr:0x7faef3effd7c: mov dword ptr [rbp+rax*4-0x3a0], edx
old instr: 0x40b017: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3effd83: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b01a: cdqe 
    new instr:0x7faef3effd86: cdqe 
old instr: 0x40b01c: mov edx, dword ptr [rbp+0x10]
    new instr:0x7faef3effd88: mov edx, dword ptr [rbp+0x10]
old instr: 0x40b01f: mov dword ptr [rbp+rax*4-0x530], edx
    new instr:0x7faef3effd8b: mov dword ptr [rbp+rax*4-0x530], edx
old instr: 0x40b026: add dword ptr [rbp-0x24], 0x1
    new instr:0x7faef3effd92: add dword ptr [rbp-0x24], 0x1
old instr: 0x40b02a: jmp 0x40b812
    new instr:0x7faef3effd96: jmp 0x7faef3f0057e
old instr: 0x40b02f: cmp dword ptr [rbp-0x24], 0x63
    new instr:0x7faef3effd9b: cmp dword ptr [rbp-0x24], 0x63
old instr: 0x40b033: jle 0x40b03f
    new instr:0x7faef3effd9f: jle 0x7faef3effdab
old instr: 0x40b035: mov edi, 0x3e9
    new instr:0x7faef3effda1: mov edi, 0x3e9
old instr: 0x40b03a: call 0x404ea8
    new instr:0x7faef3effda6: call 0x7faef3ef9c14
old instr: 0x40b03f: sub dword ptr [rbp-0x24], 0x1
    new instr:0x7faef3effdab: sub dword ptr [rbp-0x24], 0x1
old instr: 0x40b043: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3effdaf: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b046: cdqe 
    new instr:0x7faef3effdb2: cdqe 
old instr: 0x40b048: mov eax, dword ptr [rbp+rax*4-0x210]
    new instr:0x7faef3effdb4: mov eax, dword ptr [rbp+rax*4-0x210]
old instr: 0x40b04f: mov dword ptr [rbp-0x40], eax
    new instr:0x7faef3effdbb: mov dword ptr [rbp-0x40], eax
old instr: 0x40b052: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3effdbe: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b055: cdqe 
    new instr:0x7faef3effdc1: cdqe 
old instr: 0x40b057: mov eax, dword ptr [rbp+rax*4-0x3a0]
    new instr:0x7faef3effdc3: mov eax, dword ptr [rbp+rax*4-0x3a0]
old instr: 0x40b05e: mov dword ptr [rbp-0x44], eax
    new instr:0x7faef3effdca: mov dword ptr [rbp-0x44], eax
old instr: 0x40b061: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3effdcd: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b064: cdqe 
    new instr:0x7faef3effdd0: cdqe 
old instr: 0x40b066: mov eax, dword ptr [rbp+rax*4-0x530]
    new instr:0x7faef3effdd2: mov eax, dword ptr [rbp+rax*4-0x530]
old instr: 0x40b06d: mov dword ptr [rbp-0x48], eax
    new instr:0x7faef3effdd9: mov dword ptr [rbp-0x48], eax
old instr: 0x40b070: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3effddc: mov eax, dword ptr [rbp-0x40]
old instr: 0x40b073: mov edx, dword ptr [rbp-0x44]
    new instr:0x7faef3effddf: mov edx, dword ptr [rbp-0x44]
old instr: 0x40b076: mov ecx, edx
    new instr:0x7faef3effde2: mov ecx, edx
old instr: 0x40b078: sub ecx, eax
    new instr:0x7faef3effde4: sub ecx, eax
old instr: 0x40b07a: mov eax, ecx
    new instr:0x7faef3effde6: mov eax, ecx
old instr: 0x40b07c: cmp eax, 0x13
    new instr:0x7faef3effde8: cmp eax, 0x13
old instr: 0x40b07f: jle 0x40b087
    new instr:0x7faef3effdeb: jle 0x7faef3effdf3
old instr: 0x40b081: cmp dword ptr [rbp-0x48], 0xe
    new instr:0x7faef3effded: cmp dword ptr [rbp-0x48], 0xe
old instr: 0x40b085: jle 0x40b0d4
    new instr:0x7faef3effdf1: jle 0x7faef3effe40
old instr: 0x40b087: mov r9d, dword ptr [rbp-0x44]
    new instr:0x7faef3effdf3: mov r9d, dword ptr [rbp-0x44]
old instr: 0x40b08b: mov r8d, dword ptr [rbp-0x40]
    new instr:0x7faef3effdf7: mov r8d, dword ptr [rbp-0x40]
old instr: 0x40b08f: mov ecx, dword ptr [rbp-0x57c]
    new instr:0x7faef3effdfb: mov ecx, dword ptr [rbp-0x57c]
old instr: 0x40b095: mov rdx, qword ptr [rbp-0x578]
    new instr:0x7faef3effe01: mov rdx, qword ptr [rbp-0x578]
old instr: 0x40b09c: mov rsi, qword ptr [rbp-0x570]
    new instr:0x7faef3effe08: mov rsi, qword ptr [rbp-0x570]
old instr: 0x40b0a3: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3effe0f: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b0aa: mov rdi, qword ptr [rbp+0x18]
    new instr:0x7faef3effe16: mov rdi, qword ptr [rbp+0x18]
old instr: 0x40b0ae: mov qword ptr [rsp+0x8], rdi
    new instr:0x7faef3effe1a: mov qword ptr [rsp+0x8], rdi
old instr: 0x40b0b3: mov edi, dword ptr [rbp-0x48]
    new instr:0x7faef3effe1f: mov edi, dword ptr [rbp-0x48]
old instr: 0x40b0b6: mov dword ptr [rsp], edi
    new instr:0x7faef3effe22: mov dword ptr [rsp], edi
old instr: 0x40b0b9: mov rdi, rax
    new instr:0x7faef3effe25: mov rdi, rax
old instr: 0x40b0bc: call 0x40abe8
    new instr:0x7faef3effe28: call 0x7faef3eff954
old instr: 0x40b0c1: mov rax, qword ptr [rbp+0x18]
    new instr:0x7faef3effe2d: mov rax, qword ptr [rbp+0x18]
old instr: 0x40b0c5: mov eax, dword ptr [rax]
    new instr:0x7faef3effe31: mov eax, dword ptr [rax]
old instr: 0x40b0c7: test eax, eax
    new instr:0x7faef3effe33: test eax, eax
old instr: 0x40b0c9: js 0x40b81c
    new instr:0x7faef3effe35: js 0x7faef3f00588
old instr: 0x40b0cf: jmp 0x40b812
    new instr:0x7faef3effe3b: jmp 0x7faef3f0057e
old instr: 0x40b0d4: mov eax, dword ptr [rbp-0x44]
    new instr:0x7faef3effe40: mov eax, dword ptr [rbp-0x44]
old instr: 0x40b0d7: mov edx, dword ptr [rbp-0x40]
    new instr:0x7faef3effe43: mov edx, dword ptr [rbp-0x40]
old instr: 0x40b0da: add eax, edx
    new instr:0x7faef3effe46: add eax, edx
old instr: 0x40b0dc: sar eax, 0x1
    new instr:0x7faef3effe48: sar eax, 0x1
old instr: 0x40b0de: cdqe 
    new instr:0x7faef3effe4a: cdqe 
old instr: 0x40b0e0: lea rdx, ptr [rax*4]
    new instr:0x7faef3effe4c: lea rdx, ptr [rax*4]
old instr: 0x40b0e8: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3effe54: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b0ef: add rax, rdx
    new instr:0x7faef3effe5b: add rax, rdx
old instr: 0x40b0f2: mov edx, dword ptr [rax]
    new instr:0x7faef3effe5e: mov edx, dword ptr [rax]
old instr: 0x40b0f4: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3effe60: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b0f7: add eax, edx
    new instr:0x7faef3effe63: add eax, edx
old instr: 0x40b0f9: mov edx, eax
    new instr:0x7faef3effe65: mov edx, eax
old instr: 0x40b0fb: mov rax, qword ptr [rbp-0x570]
    new instr:0x7faef3effe67: mov rax, qword ptr [rbp-0x570]
old instr: 0x40b102: add rax, rdx
    new instr:0x7faef3effe6e: add rax, rdx
old instr: 0x40b105: movzx eax, byte ptr [rax]
    new instr:0x7faef3effe71: movzx eax, byte ptr [rax]
old instr: 0x40b108: movzx edx, al
    new instr:0x7faef3effe74: movzx edx, al
old instr: 0x40b10b: mov eax, dword ptr [rbp-0x44]
    new instr:0x7faef3effe77: mov eax, dword ptr [rbp-0x44]
old instr: 0x40b10e: cdqe 
    new instr:0x7faef3effe7a: cdqe 
old instr: 0x40b110: lea rcx, ptr [rax*4]
    new instr:0x7faef3effe7c: lea rcx, ptr [rax*4]
old instr: 0x40b118: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3effe84: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b11f: add rax, rcx
    new instr:0x7faef3effe8b: add rax, rcx
old instr: 0x40b122: mov ecx, dword ptr [rax]
    new instr:0x7faef3effe8e: mov ecx, dword ptr [rax]
old instr: 0x40b124: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3effe90: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b127: add eax, ecx
    new instr:0x7faef3effe93: add eax, ecx
old instr: 0x40b129: mov ecx, eax
    new instr:0x7faef3effe95: mov ecx, eax
old instr: 0x40b12b: mov rax, qword ptr [rbp-0x570]
    new instr:0x7faef3effe97: mov rax, qword ptr [rbp-0x570]
old instr: 0x40b132: add rax, rcx
    new instr:0x7faef3effe9e: add rax, rcx
old instr: 0x40b135: movzx eax, byte ptr [rax]
    new instr:0x7faef3effea1: movzx eax, byte ptr [rax]
old instr: 0x40b138: movzx ecx, al
    new instr:0x7faef3effea4: movzx ecx, al
old instr: 0x40b13b: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3effea7: mov eax, dword ptr [rbp-0x40]
old instr: 0x40b13e: cdqe 
    new instr:0x7faef3effeaa: cdqe 
old instr: 0x40b140: lea rsi, ptr [rax*4]
    new instr:0x7faef3effeac: lea rsi, ptr [rax*4]
old instr: 0x40b148: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3effeb4: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b14f: add rax, rsi
    new instr:0x7faef3effebb: add rax, rsi
old instr: 0x40b152: mov esi, dword ptr [rax]
    new instr:0x7faef3effebe: mov esi, dword ptr [rax]
old instr: 0x40b154: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3effec0: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b157: add eax, esi
    new instr:0x7faef3effec3: add eax, esi
old instr: 0x40b159: mov esi, eax
    new instr:0x7faef3effec5: mov esi, eax
old instr: 0x40b15b: mov rax, qword ptr [rbp-0x570]
    new instr:0x7faef3effec7: mov rax, qword ptr [rbp-0x570]
old instr: 0x40b162: add rax, rsi
    new instr:0x7faef3effece: add rax, rsi
old instr: 0x40b165: movzx eax, byte ptr [rax]
    new instr:0x7faef3effed1: movzx eax, byte ptr [rax]
old instr: 0x40b168: movzx eax, al
    new instr:0x7faef3effed4: movzx eax, al
old instr: 0x40b16b: mov esi, ecx
    new instr:0x7faef3effed7: mov esi, ecx
old instr: 0x40b16d: mov edi, eax
    new instr:0x7faef3effed9: mov edi, eax
old instr: 0x40b16f: call 0x40af61
    new instr:0x7faef3effedb: call 0x7faef3effccd
old instr: 0x40b174: movzx eax, al
    new instr:0x7faef3effee0: movzx eax, al
old instr: 0x40b177: mov dword ptr [rbp-0x4c], eax
    new instr:0x7faef3effee3: mov dword ptr [rbp-0x4c], eax
old instr: 0x40b17a: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3effee6: mov eax, dword ptr [rbp-0x40]
old instr: 0x40b17d: mov dword ptr [rbp-0x1c], eax
    new instr:0x7faef3effee9: mov dword ptr [rbp-0x1c], eax
old instr: 0x40b180: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3effeec: mov eax, dword ptr [rbp-0x1c]
old instr: 0x40b183: mov dword ptr [rbp-0x14], eax
    new instr:0x7faef3effeef: mov dword ptr [rbp-0x14], eax
old instr: 0x40b186: mov eax, dword ptr [rbp-0x44]
    new instr:0x7faef3effef2: mov eax, dword ptr [rbp-0x44]
old instr: 0x40b189: mov dword ptr [rbp-0x20], eax
    new instr:0x7faef3effef5: mov dword ptr [rbp-0x20], eax
old instr: 0x40b18c: mov eax, dword ptr [rbp-0x20]
    new instr:0x7faef3effef8: mov eax, dword ptr [rbp-0x20]
old instr: 0x40b18f: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3effefb: mov dword ptr [rbp-0x18], eax
old instr: 0x40b192: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3effefe: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b195: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7faef3efff01: cmp eax, dword ptr [rbp-0x18]
old instr: 0x40b198: jnle 0x40b261
    new instr:0x7faef3efff04: jnle 0x7faef3efffcd
old instr: 0x40b19e: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3efff0a: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b1a1: cdqe 
    new instr:0x7faef3efff0d: cdqe 
old instr: 0x40b1a3: lea rdx, ptr [rax*4]
    new instr:0x7faef3efff0f: lea rdx, ptr [rax*4]
old instr: 0x40b1ab: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3efff17: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b1b2: add rax, rdx
    new instr:0x7faef3efff1e: add rax, rdx
old instr: 0x40b1b5: mov edx, dword ptr [rax]
    new instr:0x7faef3efff21: mov edx, dword ptr [rax]
old instr: 0x40b1b7: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3efff23: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b1ba: add eax, edx
    new instr:0x7faef3efff26: add eax, edx
old instr: 0x40b1bc: mov edx, eax
    new instr:0x7faef3efff28: mov edx, eax
old instr: 0x40b1be: mov rax, qword ptr [rbp-0x570]
    new instr:0x7faef3efff2a: mov rax, qword ptr [rbp-0x570]
old instr: 0x40b1c5: add rax, rdx
    new instr:0x7faef3efff31: add rax, rdx
old instr: 0x40b1c8: movzx eax, byte ptr [rax]
    new instr:0x7faef3efff34: movzx eax, byte ptr [rax]
old instr: 0x40b1cb: movzx eax, al
    new instr:0x7faef3efff37: movzx eax, al
old instr: 0x40b1ce: sub eax, dword ptr [rbp-0x4c]
    new instr:0x7faef3efff3a: sub eax, dword ptr [rbp-0x4c]
old instr: 0x40b1d1: mov dword ptr [rbp-0x50], eax
    new instr:0x7faef3efff3d: mov dword ptr [rbp-0x50], eax
old instr: 0x40b1d4: cmp dword ptr [rbp-0x50], 0x0
    new instr:0x7faef3efff40: cmp dword ptr [rbp-0x50], 0x0
old instr: 0x40b1d8: jnz 0x40b252
    new instr:0x7faef3efff44: jnz 0x7faef3efffbe
old instr: 0x40b1da: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3efff46: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b1dd: cdqe 
    new instr:0x7faef3efff49: cdqe 
old instr: 0x40b1df: lea rdx, ptr [rax*4]
    new instr:0x7faef3efff4b: lea rdx, ptr [rax*4]
old instr: 0x40b1e7: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3efff53: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b1ee: add rax, rdx
    new instr:0x7faef3efff5a: add rax, rdx
old instr: 0x40b1f1: mov eax, dword ptr [rax]
    new instr:0x7faef3efff5d: mov eax, dword ptr [rax]
old instr: 0x40b1f3: mov dword ptr [rbp-0x54], eax
    new instr:0x7faef3efff5f: mov dword ptr [rbp-0x54], eax
old instr: 0x40b1f6: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3efff62: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b1f9: cdqe 
    new instr:0x7faef3efff65: cdqe 
old instr: 0x40b1fb: lea rdx, ptr [rax*4]
    new instr:0x7faef3efff67: lea rdx, ptr [rax*4]
old instr: 0x40b203: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3efff6f: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b20a: add rdx, rax
    new instr:0x7faef3efff76: add rdx, rax
old instr: 0x40b20d: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3efff79: mov eax, dword ptr [rbp-0x1c]
old instr: 0x40b210: cdqe 
    new instr:0x7faef3efff7c: cdqe 
old instr: 0x40b212: lea rcx, ptr [rax*4]
    new instr:0x7faef3efff7e: lea rcx, ptr [rax*4]
old instr: 0x40b21a: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3efff86: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b221: add rax, rcx
    new instr:0x7faef3efff8d: add rax, rcx
old instr: 0x40b224: mov eax, dword ptr [rax]
    new instr:0x7faef3efff90: mov eax, dword ptr [rax]
old instr: 0x40b226: mov dword ptr [rdx], eax
    new instr:0x7faef3efff92: mov dword ptr [rdx], eax
old instr: 0x40b228: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3efff94: mov eax, dword ptr [rbp-0x1c]
old instr: 0x40b22b: cdqe 
    new instr:0x7faef3efff97: cdqe 
old instr: 0x40b22d: lea rdx, ptr [rax*4]
    new instr:0x7faef3efff99: lea rdx, ptr [rax*4]
old instr: 0x40b235: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3efffa1: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b23c: add rdx, rax
    new instr:0x7faef3efffa8: add rdx, rax
old instr: 0x40b23f: mov eax, dword ptr [rbp-0x54]
    new instr:0x7faef3efffab: mov eax, dword ptr [rbp-0x54]
old instr: 0x40b242: mov dword ptr [rdx], eax
    new instr:0x7faef3efffae: mov dword ptr [rdx], eax
old instr: 0x40b244: add dword ptr [rbp-0x1c], 0x1
    new instr:0x7faef3efffb0: add dword ptr [rbp-0x1c], 0x1
old instr: 0x40b248: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3efffb4: add dword ptr [rbp-0x14], 0x1
old instr: 0x40b24c: nop
    new instr:0x7faef3efffb8: nop
old instr: 0x40b24d: jmp 0x40b192
    new instr:0x7faef3efffb9: jmp 0x7faef3effefe
old instr: 0x40b252: cmp dword ptr [rbp-0x50], 0x0
    new instr:0x7faef3efffbe: cmp dword ptr [rbp-0x50], 0x0
old instr: 0x40b256: jnle 0x40b264
    new instr:0x7faef3efffc2: jnle 0x7faef3efffd0
old instr: 0x40b258: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3efffc4: add dword ptr [rbp-0x14], 0x1
old instr: 0x40b25c: jmp 0x40b192
    new instr:0x7faef3efffc8: jmp 0x7faef3effefe
old instr: 0x40b261: nop
    new instr:0x7faef3efffcd: nop
old instr: 0x40b262: jmp 0x40b265
    new instr:0x7faef3efffce: jmp 0x7faef3efffd1
old instr: 0x40b264: nop
    new instr:0x7faef3efffd0: nop
old instr: 0x40b265: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3efffd1: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b268: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7faef3efffd4: cmp eax, dword ptr [rbp-0x18]
old instr: 0x40b26b: jnle 0x40b334
    new instr:0x7faef3efffd7: jnle 0x7faef3f000a0
old instr: 0x40b271: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3efffdd: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b274: cdqe 
    new instr:0x7faef3efffe0: cdqe 
old instr: 0x40b276: lea rdx, ptr [rax*4]
    new instr:0x7faef3efffe2: lea rdx, ptr [rax*4]
old instr: 0x40b27e: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3efffea: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b285: add rax, rdx
    new instr:0x7faef3effff1: add rax, rdx
old instr: 0x40b288: mov edx, dword ptr [rax]
    new instr:0x7faef3effff4: mov edx, dword ptr [rax]
old instr: 0x40b28a: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3effff6: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b28d: add eax, edx
    new instr:0x7faef3effff9: add eax, edx
old instr: 0x40b28f: mov edx, eax
    new instr:0x7faef3effffb: mov edx, eax
old instr: 0x40b291: mov rax, qword ptr [rbp-0x570]
    new instr:0x7faef3effffd: mov rax, qword ptr [rbp-0x570]
old instr: 0x40b298: add rax, rdx
    new instr:0x7faef3f00004: add rax, rdx
old instr: 0x40b29b: movzx eax, byte ptr [rax]
    new instr:0x7faef3f00007: movzx eax, byte ptr [rax]
old instr: 0x40b29e: movzx eax, al
    new instr:0x7faef3f0000a: movzx eax, al
old instr: 0x40b2a1: sub eax, dword ptr [rbp-0x4c]
    new instr:0x7faef3f0000d: sub eax, dword ptr [rbp-0x4c]
old instr: 0x40b2a4: mov dword ptr [rbp-0x50], eax
    new instr:0x7faef3f00010: mov dword ptr [rbp-0x50], eax
old instr: 0x40b2a7: cmp dword ptr [rbp-0x50], 0x0
    new instr:0x7faef3f00013: cmp dword ptr [rbp-0x50], 0x0
old instr: 0x40b2ab: jnz 0x40b325
    new instr:0x7faef3f00017: jnz 0x7faef3f00091
old instr: 0x40b2ad: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f00019: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b2b0: cdqe 
    new instr:0x7faef3f0001c: cdqe 
old instr: 0x40b2b2: lea rdx, ptr [rax*4]
    new instr:0x7faef3f0001e: lea rdx, ptr [rax*4]
old instr: 0x40b2ba: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f00026: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b2c1: add rax, rdx
    new instr:0x7faef3f0002d: add rax, rdx
old instr: 0x40b2c4: mov eax, dword ptr [rax]
    new instr:0x7faef3f00030: mov eax, dword ptr [rax]
old instr: 0x40b2c6: mov dword ptr [rbp-0x58], eax
    new instr:0x7faef3f00032: mov dword ptr [rbp-0x58], eax
old instr: 0x40b2c9: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f00035: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b2cc: cdqe 
    new instr:0x7faef3f00038: cdqe 
old instr: 0x40b2ce: lea rdx, ptr [rax*4]
    new instr:0x7faef3f0003a: lea rdx, ptr [rax*4]
old instr: 0x40b2d6: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f00042: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b2dd: add rdx, rax
    new instr:0x7faef3f00049: add rdx, rax
old instr: 0x40b2e0: mov eax, dword ptr [rbp-0x20]
    new instr:0x7faef3f0004c: mov eax, dword ptr [rbp-0x20]
old instr: 0x40b2e3: cdqe 
    new instr:0x7faef3f0004f: cdqe 
old instr: 0x40b2e5: lea rcx, ptr [rax*4]
    new instr:0x7faef3f00051: lea rcx, ptr [rax*4]
old instr: 0x40b2ed: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f00059: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b2f4: add rax, rcx
    new instr:0x7faef3f00060: add rax, rcx
old instr: 0x40b2f7: mov eax, dword ptr [rax]
    new instr:0x7faef3f00063: mov eax, dword ptr [rax]
old instr: 0x40b2f9: mov dword ptr [rdx], eax
    new instr:0x7faef3f00065: mov dword ptr [rdx], eax
old instr: 0x40b2fb: mov eax, dword ptr [rbp-0x20]
    new instr:0x7faef3f00067: mov eax, dword ptr [rbp-0x20]
old instr: 0x40b2fe: cdqe 
    new instr:0x7faef3f0006a: cdqe 
old instr: 0x40b300: lea rdx, ptr [rax*4]
    new instr:0x7faef3f0006c: lea rdx, ptr [rax*4]
old instr: 0x40b308: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f00074: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b30f: add rdx, rax
    new instr:0x7faef3f0007b: add rdx, rax
old instr: 0x40b312: mov eax, dword ptr [rbp-0x58]
    new instr:0x7faef3f0007e: mov eax, dword ptr [rbp-0x58]
old instr: 0x40b315: mov dword ptr [rdx], eax
    new instr:0x7faef3f00081: mov dword ptr [rdx], eax
old instr: 0x40b317: sub dword ptr [rbp-0x20], 0x1
    new instr:0x7faef3f00083: sub dword ptr [rbp-0x20], 0x1
old instr: 0x40b31b: sub dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3f00087: sub dword ptr [rbp-0x18], 0x1
old instr: 0x40b31f: nop
    new instr:0x7faef3f0008b: nop
old instr: 0x40b320: jmp 0x40b265
    new instr:0x7faef3f0008c: jmp 0x7faef3efffd1
old instr: 0x40b325: cmp dword ptr [rbp-0x50], 0x0
    new instr:0x7faef3f00091: cmp dword ptr [rbp-0x50], 0x0
old instr: 0x40b329: js 0x40b337
    new instr:0x7faef3f00095: js 0x7faef3f000a3
old instr: 0x40b32b: sub dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3f00097: sub dword ptr [rbp-0x18], 0x1
old instr: 0x40b32f: jmp 0x40b265
    new instr:0x7faef3f0009b: jmp 0x7faef3efffd1
old instr: 0x40b334: nop
    new instr:0x7faef3f000a0: nop
old instr: 0x40b335: jmp 0x40b338
    new instr:0x7faef3f000a1: jmp 0x7faef3f000a4
old instr: 0x40b337: nop
    new instr:0x7faef3f000a3: nop
old instr: 0x40b338: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f000a4: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b33b: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f000a7: cmp eax, dword ptr [rbp-0x18]
old instr: 0x40b33e: jnle 0x40b3b7
    new instr:0x7faef3f000aa: jnle 0x7faef3f00123
old instr: 0x40b340: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f000ac: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b343: cdqe 
    new instr:0x7faef3f000af: cdqe 
old instr: 0x40b345: lea rdx, ptr [rax*4]
    new instr:0x7faef3f000b1: lea rdx, ptr [rax*4]
old instr: 0x40b34d: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f000b9: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b354: add rax, rdx
    new instr:0x7faef3f000c0: add rax, rdx
old instr: 0x40b357: mov eax, dword ptr [rax]
    new instr:0x7faef3f000c3: mov eax, dword ptr [rax]
old instr: 0x40b359: mov dword ptr [rbp-0x74], eax
    new instr:0x7faef3f000c5: mov dword ptr [rbp-0x74], eax
old instr: 0x40b35c: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f000c8: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b35f: cdqe 
    new instr:0x7faef3f000cb: cdqe 
old instr: 0x40b361: lea rdx, ptr [rax*4]
    new instr:0x7faef3f000cd: lea rdx, ptr [rax*4]
old instr: 0x40b369: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f000d5: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b370: add rdx, rax
    new instr:0x7faef3f000dc: add rdx, rax
old instr: 0x40b373: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f000df: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b376: cdqe 
    new instr:0x7faef3f000e2: cdqe 
old instr: 0x40b378: lea rcx, ptr [rax*4]
    new instr:0x7faef3f000e4: lea rcx, ptr [rax*4]
old instr: 0x40b380: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f000ec: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b387: add rax, rcx
    new instr:0x7faef3f000f3: add rax, rcx
old instr: 0x40b38a: mov eax, dword ptr [rax]
    new instr:0x7faef3f000f6: mov eax, dword ptr [rax]
old instr: 0x40b38c: mov dword ptr [rdx], eax
    new instr:0x7faef3f000f8: mov dword ptr [rdx], eax
old instr: 0x40b38e: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f000fa: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b391: cdqe 
    new instr:0x7faef3f000fd: cdqe 
old instr: 0x40b393: lea rdx, ptr [rax*4]
    new instr:0x7faef3f000ff: lea rdx, ptr [rax*4]
old instr: 0x40b39b: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f00107: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b3a2: add rdx, rax
    new instr:0x7faef3f0010e: add rdx, rax
old instr: 0x40b3a5: mov eax, dword ptr [rbp-0x74]
    new instr:0x7faef3f00111: mov eax, dword ptr [rbp-0x74]
old instr: 0x40b3a8: mov dword ptr [rdx], eax
    new instr:0x7faef3f00114: mov dword ptr [rdx], eax
old instr: 0x40b3aa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3f00116: add dword ptr [rbp-0x14], 0x1
old instr: 0x40b3ae: sub dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3f0011a: sub dword ptr [rbp-0x18], 0x1
old instr: 0x40b3b2: jmp 0x40b192
    new instr:0x7faef3f0011e: jmp 0x7faef3effefe
old instr: 0x40b3b7: nop
    new instr:0x7faef3f00123: nop
old instr: 0x40b3b8: mov eax, dword ptr [rbp-0x20]
    new instr:0x7faef3f00124: mov eax, dword ptr [rbp-0x20]
old instr: 0x40b3bb: cmp eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3f00127: cmp eax, dword ptr [rbp-0x1c]
old instr: 0x40b3be: jnl 0x40b3f9
    new instr:0x7faef3f0012a: jnl 0x7faef3f00165
old instr: 0x40b3c0: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f0012c: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b3c3: cdqe 
    new instr:0x7faef3f0012f: cdqe 
old instr: 0x40b3c5: mov edx, dword ptr [rbp-0x40]
    new instr:0x7faef3f00131: mov edx, dword ptr [rbp-0x40]
old instr: 0x40b3c8: mov dword ptr [rbp+rax*4-0x210], edx
    new instr:0x7faef3f00134: mov dword ptr [rbp+rax*4-0x210], edx
old instr: 0x40b3cf: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f0013b: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b3d2: cdqe 
    new instr:0x7faef3f0013e: cdqe 
old instr: 0x40b3d4: mov edx, dword ptr [rbp-0x44]
    new instr:0x7faef3f00140: mov edx, dword ptr [rbp-0x44]
old instr: 0x40b3d7: mov dword ptr [rbp+rax*4-0x3a0], edx
    new instr:0x7faef3f00143: mov dword ptr [rbp+rax*4-0x3a0], edx
old instr: 0x40b3de: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3f0014a: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b3e1: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f0014d: lea edx, ptr [rax+0x1]
old instr: 0x40b3e4: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00150: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b3e7: cdqe 
    new instr:0x7faef3f00153: cdqe 
old instr: 0x40b3e9: mov dword ptr [rbp+rax*4-0x530], edx
    new instr:0x7faef3f00155: mov dword ptr [rbp+rax*4-0x530], edx
old instr: 0x40b3f0: add dword ptr [rbp-0x24], 0x1
    new instr:0x7faef3f0015c: add dword ptr [rbp-0x24], 0x1
old instr: 0x40b3f4: jmp 0x40b812
    new instr:0x7faef3f00160: jmp 0x7faef3f0057e
old instr: 0x40b3f9: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3f00165: mov eax, dword ptr [rbp-0x1c]
old instr: 0x40b3fc: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3f00168: mov edx, dword ptr [rbp-0x14]
old instr: 0x40b3ff: sub edx, eax
    new instr:0x7faef3f0016b: sub edx, eax
old instr: 0x40b401: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0016d: mov eax, dword ptr [rbp-0x40]
old instr: 0x40b404: mov ecx, dword ptr [rbp-0x1c]
    new instr:0x7faef3f00170: mov ecx, dword ptr [rbp-0x1c]
old instr: 0x40b407: mov ebx, ecx
    new instr:0x7faef3f00173: mov ebx, ecx
old instr: 0x40b409: sub ebx, eax
    new instr:0x7faef3f00175: sub ebx, eax
old instr: 0x40b40b: mov eax, ebx
    new instr:0x7faef3f00177: mov eax, ebx
old instr: 0x40b40d: cmp edx, eax
    new instr:0x7faef3f00179: cmp edx, eax
old instr: 0x40b40f: cmovle eax, edx
    new instr:0x7faef3f0017b: cmovle eax, edx
old instr: 0x40b412: mov dword ptr [rbp-0x50], eax
    new instr:0x7faef3f0017e: mov dword ptr [rbp-0x50], eax
old instr: 0x40b415: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f00181: mov eax, dword ptr [rbp-0x40]
old instr: 0x40b418: mov dword ptr [rbp-0x28], eax
    new instr:0x7faef3f00184: mov dword ptr [rbp-0x28], eax
old instr: 0x40b41b: mov eax, dword ptr [rbp-0x50]
    new instr:0x7faef3f00187: mov eax, dword ptr [rbp-0x50]
old instr: 0x40b41e: mov edx, dword ptr [rbp-0x14]
    new instr:0x7faef3f0018a: mov edx, dword ptr [rbp-0x14]
old instr: 0x40b421: mov ecx, edx
    new instr:0x7faef3f0018d: mov ecx, edx
old instr: 0x40b423: sub ecx, eax
    new instr:0x7faef3f0018f: sub ecx, eax
old instr: 0x40b425: mov eax, ecx
    new instr:0x7faef3f00191: mov eax, ecx
old instr: 0x40b427: mov dword ptr [rbp-0x2c], eax
    new instr:0x7faef3f00193: mov dword ptr [rbp-0x2c], eax
old instr: 0x40b42a: mov eax, dword ptr [rbp-0x50]
    new instr:0x7faef3f00196: mov eax, dword ptr [rbp-0x50]
old instr: 0x40b42d: mov dword ptr [rbp-0x30], eax
    new instr:0x7faef3f00199: mov dword ptr [rbp-0x30], eax
old instr: 0x40b430: jmp 0x40b4a8
    new instr:0x7faef3f0019c: jmp 0x7faef3f00214
old instr: 0x40b432: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f0019e: mov eax, dword ptr [rbp-0x28]
old instr: 0x40b435: cdqe 
    new instr:0x7faef3f001a1: cdqe 
old instr: 0x40b437: lea rdx, ptr [rax*4]
    new instr:0x7faef3f001a3: lea rdx, ptr [rax*4]
old instr: 0x40b43f: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f001ab: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b446: add rax, rdx
    new instr:0x7faef3f001b2: add rax, rdx
old instr: 0x40b449: mov eax, dword ptr [rax]
    new instr:0x7faef3f001b5: mov eax, dword ptr [rax]
old instr: 0x40b44b: mov dword ptr [rbp-0x5c], eax
    new instr:0x7faef3f001b7: mov dword ptr [rbp-0x5c], eax
old instr: 0x40b44e: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f001ba: mov eax, dword ptr [rbp-0x28]
old instr: 0x40b451: cdqe 
    new instr:0x7faef3f001bd: cdqe 
old instr: 0x40b453: lea rdx, ptr [rax*4]
    new instr:0x7faef3f001bf: lea rdx, ptr [rax*4]
old instr: 0x40b45b: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f001c7: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b462: add rdx, rax
    new instr:0x7faef3f001ce: add rdx, rax
old instr: 0x40b465: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f001d1: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40b468: cdqe 
    new instr:0x7faef3f001d4: cdqe 
old instr: 0x40b46a: lea rcx, ptr [rax*4]
    new instr:0x7faef3f001d6: lea rcx, ptr [rax*4]
old instr: 0x40b472: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f001de: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b479: add rax, rcx
    new instr:0x7faef3f001e5: add rax, rcx
old instr: 0x40b47c: mov eax, dword ptr [rax]
    new instr:0x7faef3f001e8: mov eax, dword ptr [rax]
old instr: 0x40b47e: mov dword ptr [rdx], eax
    new instr:0x7faef3f001ea: mov dword ptr [rdx], eax
old instr: 0x40b480: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f001ec: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40b483: cdqe 
    new instr:0x7faef3f001ef: cdqe 
old instr: 0x40b485: lea rdx, ptr [rax*4]
    new instr:0x7faef3f001f1: lea rdx, ptr [rax*4]
old instr: 0x40b48d: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f001f9: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b494: add rdx, rax
    new instr:0x7faef3f00200: add rdx, rax
old instr: 0x40b497: mov eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00203: mov eax, dword ptr [rbp-0x5c]
old instr: 0x40b49a: mov dword ptr [rdx], eax
    new instr:0x7faef3f00206: mov dword ptr [rdx], eax
old instr: 0x40b49c: add dword ptr [rbp-0x28], 0x1
    new instr:0x7faef3f00208: add dword ptr [rbp-0x28], 0x1
old instr: 0x40b4a0: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7faef3f0020c: add dword ptr [rbp-0x2c], 0x1
old instr: 0x40b4a4: sub dword ptr [rbp-0x30], 0x1
    new instr:0x7faef3f00210: sub dword ptr [rbp-0x30], 0x1
old instr: 0x40b4a8: cmp dword ptr [rbp-0x30], 0x0
    new instr:0x7faef3f00214: cmp dword ptr [rbp-0x30], 0x0
old instr: 0x40b4ac: jnle 0x40b432
    new instr:0x7faef3f00218: jnle 0x7faef3f0019e
old instr: 0x40b4ae: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f0021a: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b4b1: mov edx, dword ptr [rbp-0x20]
    new instr:0x7faef3f0021d: mov edx, dword ptr [rbp-0x20]
old instr: 0x40b4b4: sub edx, eax
    new instr:0x7faef3f00220: sub edx, eax
old instr: 0x40b4b6: mov eax, dword ptr [rbp-0x20]
    new instr:0x7faef3f00222: mov eax, dword ptr [rbp-0x20]
old instr: 0x40b4b9: mov ecx, dword ptr [rbp-0x44]
    new instr:0x7faef3f00225: mov ecx, dword ptr [rbp-0x44]
old instr: 0x40b4bc: mov ebx, ecx
    new instr:0x7faef3f00228: mov ebx, ecx
old instr: 0x40b4be: sub ebx, eax
    new instr:0x7faef3f0022a: sub ebx, eax
old instr: 0x40b4c0: mov eax, ebx
    new instr:0x7faef3f0022c: mov eax, ebx
old instr: 0x40b4c2: cmp edx, eax
    new instr:0x7faef3f0022e: cmp edx, eax
old instr: 0x40b4c4: cmovle eax, edx
    new instr:0x7faef3f00230: cmovle eax, edx
old instr: 0x40b4c7: mov dword ptr [rbp-0x60], eax
    new instr:0x7faef3f00233: mov dword ptr [rbp-0x60], eax
old instr: 0x40b4ca: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f00236: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b4cd: mov dword ptr [rbp-0x34], eax
    new instr:0x7faef3f00239: mov dword ptr [rbp-0x34], eax
old instr: 0x40b4d0: mov eax, dword ptr [rbp-0x60]
    new instr:0x7faef3f0023c: mov eax, dword ptr [rbp-0x60]
old instr: 0x40b4d3: mov edx, dword ptr [rbp-0x44]
    new instr:0x7faef3f0023f: mov edx, dword ptr [rbp-0x44]
old instr: 0x40b4d6: mov ecx, edx
    new instr:0x7faef3f00242: mov ecx, edx
old instr: 0x40b4d8: sub ecx, eax
    new instr:0x7faef3f00244: sub ecx, eax
old instr: 0x40b4da: mov eax, ecx
    new instr:0x7faef3f00246: mov eax, ecx
old instr: 0x40b4dc: add eax, 0x1
    new instr:0x7faef3f00248: add eax, 0x1
old instr: 0x40b4df: mov dword ptr [rbp-0x38], eax
    new instr:0x7faef3f0024b: mov dword ptr [rbp-0x38], eax
old instr: 0x40b4e2: mov eax, dword ptr [rbp-0x60]
    new instr:0x7faef3f0024e: mov eax, dword ptr [rbp-0x60]
old instr: 0x40b4e5: mov dword ptr [rbp-0x3c], eax
    new instr:0x7faef3f00251: mov dword ptr [rbp-0x3c], eax
old instr: 0x40b4e8: jmp 0x40b560
    new instr:0x7faef3f00254: jmp 0x7faef3f002cc
old instr: 0x40b4ea: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00256: mov eax, dword ptr [rbp-0x34]
old instr: 0x40b4ed: cdqe 
    new instr:0x7faef3f00259: cdqe 
old instr: 0x40b4ef: lea rdx, ptr [rax*4]
    new instr:0x7faef3f0025b: lea rdx, ptr [rax*4]
old instr: 0x40b4f7: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f00263: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b4fe: add rax, rdx
    new instr:0x7faef3f0026a: add rax, rdx
old instr: 0x40b501: mov eax, dword ptr [rax]
    new instr:0x7faef3f0026d: mov eax, dword ptr [rax]
old instr: 0x40b503: mov dword ptr [rbp-0x64], eax
    new instr:0x7faef3f0026f: mov dword ptr [rbp-0x64], eax
old instr: 0x40b506: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00272: mov eax, dword ptr [rbp-0x34]
old instr: 0x40b509: cdqe 
    new instr:0x7faef3f00275: cdqe 
old instr: 0x40b50b: lea rdx, ptr [rax*4]
    new instr:0x7faef3f00277: lea rdx, ptr [rax*4]
old instr: 0x40b513: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f0027f: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b51a: add rdx, rax
    new instr:0x7faef3f00286: add rdx, rax
old instr: 0x40b51d: mov eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f00289: mov eax, dword ptr [rbp-0x38]
old instr: 0x40b520: cdqe 
    new instr:0x7faef3f0028c: cdqe 
old instr: 0x40b522: lea rcx, ptr [rax*4]
    new instr:0x7faef3f0028e: lea rcx, ptr [rax*4]
old instr: 0x40b52a: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f00296: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b531: add rax, rcx
    new instr:0x7faef3f0029d: add rax, rcx
old instr: 0x40b534: mov eax, dword ptr [rax]
    new instr:0x7faef3f002a0: mov eax, dword ptr [rax]
old instr: 0x40b536: mov dword ptr [rdx], eax
    new instr:0x7faef3f002a2: mov dword ptr [rdx], eax
old instr: 0x40b538: mov eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f002a4: mov eax, dword ptr [rbp-0x38]
old instr: 0x40b53b: cdqe 
    new instr:0x7faef3f002a7: cdqe 
old instr: 0x40b53d: lea rdx, ptr [rax*4]
    new instr:0x7faef3f002a9: lea rdx, ptr [rax*4]
old instr: 0x40b545: mov rax, qword ptr [rbp-0x568]
    new instr:0x7faef3f002b1: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b54c: add rdx, rax
    new instr:0x7faef3f002b8: add rdx, rax
old instr: 0x40b54f: mov eax, dword ptr [rbp-0x64]
    new instr:0x7faef3f002bb: mov eax, dword ptr [rbp-0x64]
old instr: 0x40b552: mov dword ptr [rdx], eax
    new instr:0x7faef3f002be: mov dword ptr [rdx], eax
old instr: 0x40b554: add dword ptr [rbp-0x34], 0x1
    new instr:0x7faef3f002c0: add dword ptr [rbp-0x34], 0x1
old instr: 0x40b558: add dword ptr [rbp-0x38], 0x1
    new instr:0x7faef3f002c4: add dword ptr [rbp-0x38], 0x1
old instr: 0x40b55c: sub dword ptr [rbp-0x3c], 0x1
    new instr:0x7faef3f002c8: sub dword ptr [rbp-0x3c], 0x1
old instr: 0x40b560: cmp dword ptr [rbp-0x3c], 0x0
    new instr:0x7faef3f002cc: cmp dword ptr [rbp-0x3c], 0x0
old instr: 0x40b564: jnle 0x40b4ea
    new instr:0x7faef3f002d0: jnle 0x7faef3f00256
old instr: 0x40b566: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f002d2: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b569: mov edx, dword ptr [rbp-0x40]
    new instr:0x7faef3f002d5: mov edx, dword ptr [rbp-0x40]
old instr: 0x40b56c: add eax, edx
    new instr:0x7faef3f002d8: add eax, edx
old instr: 0x40b56e: sub eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3f002da: sub eax, dword ptr [rbp-0x1c]
old instr: 0x40b571: sub eax, 0x1
    new instr:0x7faef3f002dd: sub eax, 0x1
old instr: 0x40b574: mov dword ptr [rbp-0x50], eax
    new instr:0x7faef3f002e0: mov dword ptr [rbp-0x50], eax
old instr: 0x40b577: mov eax, dword ptr [rbp-0x20]
    new instr:0x7faef3f002e3: mov eax, dword ptr [rbp-0x20]
old instr: 0x40b57a: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3f002e6: mov edx, dword ptr [rbp-0x18]
old instr: 0x40b57d: sub edx, eax
    new instr:0x7faef3f002e9: sub edx, eax
old instr: 0x40b57f: mov eax, dword ptr [rbp-0x44]
    new instr:0x7faef3f002eb: mov eax, dword ptr [rbp-0x44]
old instr: 0x40b582: add eax, edx
    new instr:0x7faef3f002ee: add eax, edx
old instr: 0x40b584: add eax, 0x1
    new instr:0x7faef3f002f0: add eax, 0x1
old instr: 0x40b587: mov dword ptr [rbp-0x60], eax
    new instr:0x7faef3f002f3: mov dword ptr [rbp-0x60], eax
old instr: 0x40b58a: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f002f6: mov eax, dword ptr [rbp-0x40]
old instr: 0x40b58d: mov dword ptr [rbp-0x540], eax
    new instr:0x7faef3f002f9: mov dword ptr [rbp-0x540], eax
old instr: 0x40b593: mov eax, dword ptr [rbp-0x50]
    new instr:0x7faef3f002ff: mov eax, dword ptr [rbp-0x50]
old instr: 0x40b596: mov dword ptr [rbp-0x550], eax
    new instr:0x7faef3f00302: mov dword ptr [rbp-0x550], eax
old instr: 0x40b59c: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3f00308: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b59f: mov dword ptr [rbp-0x560], eax
    new instr:0x7faef3f0030b: mov dword ptr [rbp-0x560], eax
old instr: 0x40b5a5: mov eax, dword ptr [rbp-0x60]
    new instr:0x7faef3f00311: mov eax, dword ptr [rbp-0x60]
old instr: 0x40b5a8: mov dword ptr [rbp-0x53c], eax
    new instr:0x7faef3f00314: mov dword ptr [rbp-0x53c], eax
old instr: 0x40b5ae: mov eax, dword ptr [rbp-0x44]
    new instr:0x7faef3f0031a: mov eax, dword ptr [rbp-0x44]
old instr: 0x40b5b1: mov dword ptr [rbp-0x54c], eax
    new instr:0x7faef3f0031d: mov dword ptr [rbp-0x54c], eax
old instr: 0x40b5b7: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3f00323: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b5ba: mov dword ptr [rbp-0x55c], eax
    new instr:0x7faef3f00326: mov dword ptr [rbp-0x55c], eax
old instr: 0x40b5c0: mov eax, dword ptr [rbp-0x50]
    new instr:0x7faef3f0032c: mov eax, dword ptr [rbp-0x50]
old instr: 0x40b5c3: add eax, 0x1
    new instr:0x7faef3f0032f: add eax, 0x1
old instr: 0x40b5c6: mov dword ptr [rbp-0x538], eax
    new instr:0x7faef3f00332: mov dword ptr [rbp-0x538], eax
old instr: 0x40b5cc: mov eax, dword ptr [rbp-0x60]
    new instr:0x7faef3f00338: mov eax, dword ptr [rbp-0x60]
old instr: 0x40b5cf: sub eax, 0x1
    new instr:0x7faef3f0033b: sub eax, 0x1
old instr: 0x40b5d2: mov dword ptr [rbp-0x548], eax
    new instr:0x7faef3f0033e: mov dword ptr [rbp-0x548], eax
old instr: 0x40b5d8: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3f00344: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b5db: add eax, 0x1
    new instr:0x7faef3f00347: add eax, 0x1
old instr: 0x40b5de: mov dword ptr [rbp-0x558], eax
    new instr:0x7faef3f0034a: mov dword ptr [rbp-0x558], eax
old instr: 0x40b5e4: mov edx, dword ptr [rbp-0x550]
    new instr:0x7faef3f00350: mov edx, dword ptr [rbp-0x550]
old instr: 0x40b5ea: mov eax, dword ptr [rbp-0x540]
    new instr:0x7faef3f00356: mov eax, dword ptr [rbp-0x540]
old instr: 0x40b5f0: mov ecx, edx
    new instr:0x7faef3f0035c: mov ecx, edx
old instr: 0x40b5f2: sub ecx, eax
    new instr:0x7faef3f0035e: sub ecx, eax
old instr: 0x40b5f4: mov edx, dword ptr [rbp-0x54c]
    new instr:0x7faef3f00360: mov edx, dword ptr [rbp-0x54c]
old instr: 0x40b5fa: mov eax, dword ptr [rbp-0x53c]
    new instr:0x7faef3f00366: mov eax, dword ptr [rbp-0x53c]
old instr: 0x40b600: mov ebx, edx
    new instr:0x7faef3f0036c: mov ebx, edx
old instr: 0x40b602: sub ebx, eax
    new instr:0x7faef3f0036e: sub ebx, eax
old instr: 0x40b604: mov eax, ebx
    new instr:0x7faef3f00370: mov eax, ebx
old instr: 0x40b606: cmp ecx, eax
    new instr:0x7faef3f00372: cmp ecx, eax
old instr: 0x40b608: jnl 0x40b664
    new instr:0x7faef3f00374: jnl 0x7faef3f003d0
old instr: 0x40b60a: mov eax, dword ptr [rbp-0x540]
    new instr:0x7faef3f00376: mov eax, dword ptr [rbp-0x540]
old instr: 0x40b610: mov dword ptr [rbp-0x68], eax
    new instr:0x7faef3f0037c: mov dword ptr [rbp-0x68], eax
old instr: 0x40b613: mov eax, dword ptr [rbp-0x53c]
    new instr:0x7faef3f0037f: mov eax, dword ptr [rbp-0x53c]
old instr: 0x40b619: mov dword ptr [rbp-0x540], eax
    new instr:0x7faef3f00385: mov dword ptr [rbp-0x540], eax
old instr: 0x40b61f: mov eax, dword ptr [rbp-0x68]
    new instr:0x7faef3f0038b: mov eax, dword ptr [rbp-0x68]
old instr: 0x40b622: mov dword ptr [rbp-0x53c], eax
    new instr:0x7faef3f0038e: mov dword ptr [rbp-0x53c], eax
old instr: 0x40b628: mov eax, dword ptr [rbp-0x550]
    new instr:0x7faef3f00394: mov eax, dword ptr [rbp-0x550]
old instr: 0x40b62e: mov dword ptr [rbp-0x68], eax
    new instr:0x7faef3f0039a: mov dword ptr [rbp-0x68], eax
old instr: 0x40b631: mov eax, dword ptr [rbp-0x54c]
    new instr:0x7faef3f0039d: mov eax, dword ptr [rbp-0x54c]
old instr: 0x40b637: mov dword ptr [rbp-0x550], eax
    new instr:0x7faef3f003a3: mov dword ptr [rbp-0x550], eax
old instr: 0x40b63d: mov eax, dword ptr [rbp-0x68]
    new instr:0x7faef3f003a9: mov eax, dword ptr [rbp-0x68]
old instr: 0x40b640: mov dword ptr [rbp-0x54c], eax
    new instr:0x7faef3f003ac: mov dword ptr [rbp-0x54c], eax
old instr: 0x40b646: mov eax, dword ptr [rbp-0x560]
    new instr:0x7faef3f003b2: mov eax, dword ptr [rbp-0x560]
old instr: 0x40b64c: mov dword ptr [rbp-0x68], eax
    new instr:0x7faef3f003b8: mov dword ptr [rbp-0x68], eax
old instr: 0x40b64f: mov eax, dword ptr [rbp-0x55c]
    new instr:0x7faef3f003bb: mov eax, dword ptr [rbp-0x55c]
old instr: 0x40b655: mov dword ptr [rbp-0x560], eax
    new instr:0x7faef3f003c1: mov dword ptr [rbp-0x560], eax
old instr: 0x40b65b: mov eax, dword ptr [rbp-0x68]
    new instr:0x7faef3f003c7: mov eax, dword ptr [rbp-0x68]
old instr: 0x40b65e: mov dword ptr [rbp-0x55c], eax
    new instr:0x7faef3f003ca: mov dword ptr [rbp-0x55c], eax
old instr: 0x40b664: mov edx, dword ptr [rbp-0x54c]
    new instr:0x7faef3f003d0: mov edx, dword ptr [rbp-0x54c]
old instr: 0x40b66a: mov eax, dword ptr [rbp-0x53c]
    new instr:0x7faef3f003d6: mov eax, dword ptr [rbp-0x53c]
old instr: 0x40b670: mov ecx, edx
    new instr:0x7faef3f003dc: mov ecx, edx
old instr: 0x40b672: sub ecx, eax
    new instr:0x7faef3f003de: sub ecx, eax
old instr: 0x40b674: mov edx, dword ptr [rbp-0x548]
    new instr:0x7faef3f003e0: mov edx, dword ptr [rbp-0x548]
old instr: 0x40b67a: mov eax, dword ptr [rbp-0x538]
    new instr:0x7faef3f003e6: mov eax, dword ptr [rbp-0x538]
old instr: 0x40b680: mov ebx, edx
    new instr:0x7faef3f003ec: mov ebx, edx
old instr: 0x40b682: sub ebx, eax
    new instr:0x7faef3f003ee: sub ebx, eax
old instr: 0x40b684: mov eax, ebx
    new instr:0x7faef3f003f0: mov eax, ebx
old instr: 0x40b686: cmp ecx, eax
    new instr:0x7faef3f003f2: cmp ecx, eax
old instr: 0x40b688: jnl 0x40b6e4
    new instr:0x7faef3f003f4: jnl 0x7faef3f00450
old instr: 0x40b68a: mov eax, dword ptr [rbp-0x53c]
    new instr:0x7faef3f003f6: mov eax, dword ptr [rbp-0x53c]
old instr: 0x40b690: mov dword ptr [rbp-0x6c], eax
    new instr:0x7faef3f003fc: mov dword ptr [rbp-0x6c], eax
old instr: 0x40b693: mov eax, dword ptr [rbp-0x538]
    new instr:0x7faef3f003ff: mov eax, dword ptr [rbp-0x538]
old instr: 0x40b699: mov dword ptr [rbp-0x53c], eax
    new instr:0x7faef3f00405: mov dword ptr [rbp-0x53c], eax
old instr: 0x40b69f: mov eax, dword ptr [rbp-0x6c]
    new instr:0x7faef3f0040b: mov eax, dword ptr [rbp-0x6c]
old instr: 0x40b6a2: mov dword ptr [rbp-0x538], eax
    new instr:0x7faef3f0040e: mov dword ptr [rbp-0x538], eax
old instr: 0x40b6a8: mov eax, dword ptr [rbp-0x54c]
    new instr:0x7faef3f00414: mov eax, dword ptr [rbp-0x54c]
old instr: 0x40b6ae: mov dword ptr [rbp-0x6c], eax
    new instr:0x7faef3f0041a: mov dword ptr [rbp-0x6c], eax
old instr: 0x40b6b1: mov eax, dword ptr [rbp-0x548]
    new instr:0x7faef3f0041d: mov eax, dword ptr [rbp-0x548]
old instr: 0x40b6b7: mov dword ptr [rbp-0x54c], eax
    new instr:0x7faef3f00423: mov dword ptr [rbp-0x54c], eax
old instr: 0x40b6bd: mov eax, dword ptr [rbp-0x6c]
    new instr:0x7faef3f00429: mov eax, dword ptr [rbp-0x6c]
old instr: 0x40b6c0: mov dword ptr [rbp-0x548], eax
    new instr:0x7faef3f0042c: mov dword ptr [rbp-0x548], eax
old instr: 0x40b6c6: mov eax, dword ptr [rbp-0x55c]
    new instr:0x7faef3f00432: mov eax, dword ptr [rbp-0x55c]
old instr: 0x40b6cc: mov dword ptr [rbp-0x6c], eax
    new instr:0x7faef3f00438: mov dword ptr [rbp-0x6c], eax
old instr: 0x40b6cf: mov eax, dword ptr [rbp-0x558]
    new instr:0x7faef3f0043b: mov eax, dword ptr [rbp-0x558]
old instr: 0x40b6d5: mov dword ptr [rbp-0x55c], eax
    new instr:0x7faef3f00441: mov dword ptr [rbp-0x55c], eax
old instr: 0x40b6db: mov eax, dword ptr [rbp-0x6c]
    new instr:0x7faef3f00447: mov eax, dword ptr [rbp-0x6c]
old instr: 0x40b6de: mov dword ptr [rbp-0x558], eax
    new instr:0x7faef3f0044a: mov dword ptr [rbp-0x558], eax
old instr: 0x40b6e4: mov edx, dword ptr [rbp-0x550]
    new instr:0x7faef3f00450: mov edx, dword ptr [rbp-0x550]
old instr: 0x40b6ea: mov eax, dword ptr [rbp-0x540]
    new instr:0x7faef3f00456: mov eax, dword ptr [rbp-0x540]
old instr: 0x40b6f0: mov ecx, edx
    new instr:0x7faef3f0045c: mov ecx, edx
old instr: 0x40b6f2: sub ecx, eax
    new instr:0x7faef3f0045e: sub ecx, eax
old instr: 0x40b6f4: mov edx, dword ptr [rbp-0x54c]
    new instr:0x7faef3f00460: mov edx, dword ptr [rbp-0x54c]
old instr: 0x40b6fa: mov eax, dword ptr [rbp-0x53c]
    new instr:0x7faef3f00466: mov eax, dword ptr [rbp-0x53c]
old instr: 0x40b700: mov ebx, edx
    new instr:0x7faef3f0046c: mov ebx, edx
old instr: 0x40b702: sub ebx, eax
    new instr:0x7faef3f0046e: sub ebx, eax
old instr: 0x40b704: mov eax, ebx
    new instr:0x7faef3f00470: mov eax, ebx
old instr: 0x40b706: cmp ecx, eax
    new instr:0x7faef3f00472: cmp ecx, eax
old instr: 0x40b708: jnl 0x40b764
    new instr:0x7faef3f00474: jnl 0x7faef3f004d0
old instr: 0x40b70a: mov eax, dword ptr [rbp-0x540]
    new instr:0x7faef3f00476: mov eax, dword ptr [rbp-0x540]
old instr: 0x40b710: mov dword ptr [rbp-0x70], eax
    new instr:0x7faef3f0047c: mov dword ptr [rbp-0x70], eax
old instr: 0x40b713: mov eax, dword ptr [rbp-0x53c]
    new instr:0x7faef3f0047f: mov eax, dword ptr [rbp-0x53c]
old instr: 0x40b719: mov dword ptr [rbp-0x540], eax
    new instr:0x7faef3f00485: mov dword ptr [rbp-0x540], eax
old instr: 0x40b71f: mov eax, dword ptr [rbp-0x70]
    new instr:0x7faef3f0048b: mov eax, dword ptr [rbp-0x70]
old instr: 0x40b722: mov dword ptr [rbp-0x53c], eax
    new instr:0x7faef3f0048e: mov dword ptr [rbp-0x53c], eax
old instr: 0x40b728: mov eax, dword ptr [rbp-0x550]
    new instr:0x7faef3f00494: mov eax, dword ptr [rbp-0x550]
old instr: 0x40b72e: mov dword ptr [rbp-0x70], eax
    new instr:0x7faef3f0049a: mov dword ptr [rbp-0x70], eax
old instr: 0x40b731: mov eax, dword ptr [rbp-0x54c]
    new instr:0x7faef3f0049d: mov eax, dword ptr [rbp-0x54c]
old instr: 0x40b737: mov dword ptr [rbp-0x550], eax
    new instr:0x7faef3f004a3: mov dword ptr [rbp-0x550], eax
old instr: 0x40b73d: mov eax, dword ptr [rbp-0x70]
    new instr:0x7faef3f004a9: mov eax, dword ptr [rbp-0x70]
old instr: 0x40b740: mov dword ptr [rbp-0x54c], eax
    new instr:0x7faef3f004ac: mov dword ptr [rbp-0x54c], eax
old instr: 0x40b746: mov eax, dword ptr [rbp-0x560]
    new instr:0x7faef3f004b2: mov eax, dword ptr [rbp-0x560]
old instr: 0x40b74c: mov dword ptr [rbp-0x70], eax
    new instr:0x7faef3f004b8: mov dword ptr [rbp-0x70], eax
old instr: 0x40b74f: mov eax, dword ptr [rbp-0x55c]
    new instr:0x7faef3f004bb: mov eax, dword ptr [rbp-0x55c]
old instr: 0x40b755: mov dword ptr [rbp-0x560], eax
    new instr:0x7faef3f004c1: mov dword ptr [rbp-0x560], eax
old instr: 0x40b75b: mov eax, dword ptr [rbp-0x70]
    new instr:0x7faef3f004c7: mov eax, dword ptr [rbp-0x70]
old instr: 0x40b75e: mov dword ptr [rbp-0x55c], eax
    new instr:0x7faef3f004ca: mov dword ptr [rbp-0x55c], eax
old instr: 0x40b764: mov edx, dword ptr [rbp-0x540]
    new instr:0x7faef3f004d0: mov edx, dword ptr [rbp-0x540]
old instr: 0x40b76a: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f004d6: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b76d: cdqe 
    new instr:0x7faef3f004d9: cdqe 
old instr: 0x40b76f: mov dword ptr [rbp+rax*4-0x210], edx
    new instr:0x7faef3f004db: mov dword ptr [rbp+rax*4-0x210], edx
old instr: 0x40b776: mov edx, dword ptr [rbp-0x550]
    new instr:0x7faef3f004e2: mov edx, dword ptr [rbp-0x550]
old instr: 0x40b77c: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f004e8: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b77f: cdqe 
    new instr:0x7faef3f004eb: cdqe 
old instr: 0x40b781: mov dword ptr [rbp+rax*4-0x3a0], edx
    new instr:0x7faef3f004ed: mov dword ptr [rbp+rax*4-0x3a0], edx
old instr: 0x40b788: mov edx, dword ptr [rbp-0x560]
    new instr:0x7faef3f004f4: mov edx, dword ptr [rbp-0x560]
old instr: 0x40b78e: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f004fa: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b791: cdqe 
    new instr:0x7faef3f004fd: cdqe 
old instr: 0x40b793: mov dword ptr [rbp+rax*4-0x530], edx
    new instr:0x7faef3f004ff: mov dword ptr [rbp+rax*4-0x530], edx
old instr: 0x40b79a: add dword ptr [rbp-0x24], 0x1
    new instr:0x7faef3f00506: add dword ptr [rbp-0x24], 0x1
old instr: 0x40b79e: mov edx, dword ptr [rbp-0x53c]
    new instr:0x7faef3f0050a: mov edx, dword ptr [rbp-0x53c]
old instr: 0x40b7a4: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00510: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b7a7: cdqe 
    new instr:0x7faef3f00513: cdqe 
old instr: 0x40b7a9: mov dword ptr [rbp+rax*4-0x210], edx
    new instr:0x7faef3f00515: mov dword ptr [rbp+rax*4-0x210], edx
old instr: 0x40b7b0: mov edx, dword ptr [rbp-0x54c]
    new instr:0x7faef3f0051c: mov edx, dword ptr [rbp-0x54c]
old instr: 0x40b7b6: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00522: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b7b9: cdqe 
    new instr:0x7faef3f00525: cdqe 
old instr: 0x40b7bb: mov dword ptr [rbp+rax*4-0x3a0], edx
    new instr:0x7faef3f00527: mov dword ptr [rbp+rax*4-0x3a0], edx
old instr: 0x40b7c2: mov edx, dword ptr [rbp-0x55c]
    new instr:0x7faef3f0052e: mov edx, dword ptr [rbp-0x55c]
old instr: 0x40b7c8: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00534: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b7cb: cdqe 
    new instr:0x7faef3f00537: cdqe 
old instr: 0x40b7cd: mov dword ptr [rbp+rax*4-0x530], edx
    new instr:0x7faef3f00539: mov dword ptr [rbp+rax*4-0x530], edx
old instr: 0x40b7d4: add dword ptr [rbp-0x24], 0x1
    new instr:0x7faef3f00540: add dword ptr [rbp-0x24], 0x1
old instr: 0x40b7d8: mov edx, dword ptr [rbp-0x538]
    new instr:0x7faef3f00544: mov edx, dword ptr [rbp-0x538]
old instr: 0x40b7de: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f0054a: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b7e1: cdqe 
    new instr:0x7faef3f0054d: cdqe 
old instr: 0x40b7e3: mov dword ptr [rbp+rax*4-0x210], edx
    new instr:0x7faef3f0054f: mov dword ptr [rbp+rax*4-0x210], edx
old instr: 0x40b7ea: mov edx, dword ptr [rbp-0x548]
    new instr:0x7faef3f00556: mov edx, dword ptr [rbp-0x548]
old instr: 0x40b7f0: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f0055c: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b7f3: cdqe 
    new instr:0x7faef3f0055f: cdqe 
old instr: 0x40b7f5: mov dword ptr [rbp+rax*4-0x3a0], edx
    new instr:0x7faef3f00561: mov dword ptr [rbp+rax*4-0x3a0], edx
old instr: 0x40b7fc: mov edx, dword ptr [rbp-0x558]
    new instr:0x7faef3f00568: mov edx, dword ptr [rbp-0x558]
old instr: 0x40b802: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f0056e: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b805: cdqe 
    new instr:0x7faef3f00571: cdqe 
old instr: 0x40b807: mov dword ptr [rbp+rax*4-0x530], edx
    new instr:0x7faef3f00573: mov dword ptr [rbp+rax*4-0x530], edx
old instr: 0x40b80e: add dword ptr [rbp-0x24], 0x1
    new instr:0x7faef3f0057a: add dword ptr [rbp-0x24], 0x1
old instr: 0x40b812: cmp dword ptr [rbp-0x24], 0x0
    new instr:0x7faef3f0057e: cmp dword ptr [rbp-0x24], 0x0
old instr: 0x40b816: jnle 0x40b02f
    new instr:0x7faef3f00582: jnle 0x7faef3effd9b
old instr: 0x40b81c: add rsp, 0x598
    new instr:0x7faef3f00588: add rsp, 0x598
old instr: 0x40b823: pop rbx
    new instr:0x7faef3f0058f: pop rbx
old instr: 0x40b824: pop rbp
    new instr:0x7faef3f00590: pop rbp
old instr: 0x40b825: ret 
    new instr:0x7faef3f00591: add rsp, 0x8
old instr: 0x40c167: call 0xffffffffffffee50
    new instr:0x7faef3f00595: call 0x7faef3eff3e5
inserted instruction
40c1d6
old instr: 0x40c1d6: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0059a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c1d9: cdqe 
    new instr:0x7faef3f0059d: cdqe 
old instr: 0x40c1db: movzx eax, byte ptr [rbp+rax*1-0x560]
    new instr:0x7faef3f0059f: movzx eax, byte ptr [rbp+rax*1-0x560]
old instr: 0x40c1e3: test al, al
    new instr:0x7faef3f005a7: test al, al
in revert 
    new instr:0x7faef3f005a9: jnz 0x7faef3f005b5
40c1f1
old instr: 0x40c1f1: mov dword ptr [rbp-0x18], 0x0
    new instr:0x7faef3f005ab: mov dword ptr [rbp-0x18], 0x0
in revert 
removing jump and inserting a dummy entry 
40c272
old instr: 0x40c272: cmp dword ptr [rbp-0x18], 0xff
    new instr:0x7faef3f005b2: cmp dword ptr [rbp-0x18], 0xff
in revert 
    new instr:0x7faef3f005b9: jnle 0x7faef3f0053a
40c1fa
old instr: 0x40c1fa: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f005bf: mov eax, dword ptr [rbp-0x18]
40c634
old instr: 0x40c634: cmp dword ptr [rbp-0xd88], 0x3
    new instr:0x7faef3f005c2: cmp dword ptr [rbp-0xd88], 0x3
in revert 
    new instr:0x7faef3f005c9: jnle 0x7faef3f005fd
40c66f
old instr: 0x40c66f: add rsp, 0xd98
    new instr:0x7faef3f005cb: add rsp, 0xd98
old instr: 0x40c676: pop rbx
    new instr:0x7faef3f005d2: pop rbx
old instr: 0x40c677: pop rbp
    new instr:0x7faef3f005d3: pop rbp
old instr: 0x40c678: ret 
    new instr:0x7faef3f005d4: ret 
40c27f
old instr: 0x40c27f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f005d5: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c282: shl eax, 0x8
    new instr:0x7faef3f005d8: shl eax, 0x8
old instr: 0x40c285: cdqe 
    new instr:0x7faef3f005db: cdqe 
old instr: 0x40c287: lea rdx, ptr [rax*4]
    new instr:0x7faef3f005dd: lea rdx, ptr [rax*4]
old instr: 0x40c28f: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3f005e5: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c296: add rax, rdx
    new instr:0x7faef3f005ec: add rax, rdx
old instr: 0x40c299: mov eax, dword ptr [rax]
    new instr:0x7faef3f005ef: mov eax, dword ptr [rax]
old instr: 0x40c29b: and eax, 0xffdfffff
    new instr:0x7faef3f005f1: and eax, 0xffdfffff
old instr: 0x40c2a0: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3f005f6: mov dword ptr [rbp-0x18], eax
in revert 
removing jump and inserting a dummy entry 
40c33f
old instr: 0x40c33f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f005f9: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c342: cdqe 
    new instr:0x7faef3f005fc: cdqe 
old instr: 0x40c344: mov eax, dword ptr [rbp+rax*4-0x960]
    new instr:0x7faef3f005fe: mov eax, dword ptr [rbp+rax*4-0x960]
old instr: 0x40c34b: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f00605: cmp eax, dword ptr [rbp-0x18]
old instr: 0x40c34e: jnle 0x40c2a8
    new instr:0x7faef3f00608: jnle 0x7faef3f00562
inserted instruction
40c354
old instr: 0x40c354: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0060e: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c357: add eax, 0x1
    new instr:0x7faef3f00611: add eax, 0x1
old instr: 0x40c35a: shl eax, 0x8
    new instr:0x7faef3f00614: shl eax, 0x8
old instr: 0x40c35d: cdqe 
    new instr:0x7faef3f00617: cdqe 
old instr: 0x40c35f: lea rdx, ptr [rax*4]
    new instr:0x7faef3f00619: lea rdx, ptr [rax*4]
old instr: 0x40c367: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3f00621: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c36e: add rax, rdx
    new instr:0x7faef3f00628: add rax, rdx
old instr: 0x40c371: mov eax, dword ptr [rax]
    new instr:0x7faef3f0062b: mov eax, dword ptr [rax]
old instr: 0x40c373: and eax, 0xffdfffff
    new instr:0x7faef3f0062d: and eax, 0xffdfffff
old instr: 0x40c378: sub eax, 0x1
    new instr:0x7faef3f00632: sub eax, 0x1
old instr: 0x40c37b: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3f00635: mov dword ptr [rbp-0x18], eax
in revert 
removing jump and inserting a dummy entry 
40c41a
old instr: 0x40c41a: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00638: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c41d: cdqe 
    new instr:0x7faef3f0063b: cdqe 
old instr: 0x40c41f: mov eax, dword ptr [rbp+rax*4-0xd60]
    new instr:0x7faef3f0063d: mov eax, dword ptr [rbp+rax*4-0xd60]
old instr: 0x40c426: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f00644: cmp eax, dword ptr [rbp-0x18]
old instr: 0x40c429: jl 0x40c383
    new instr:0x7faef3f00647: jl 0x7faef3f005a1
inserted instruction
40c42f
old instr: 0x40c42f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0064d: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c432: cdqe 
    new instr:0x7faef3f00650: cdqe 
old instr: 0x40c434: mov eax, dword ptr [rbp+rax*4-0x960]
    new instr:0x7faef3f00652: mov eax, dword ptr [rbp+rax*4-0x960]
old instr: 0x40c43b: lea edx, ptr [rax-0x1]
    new instr:0x7faef3f00659: lea edx, ptr [rax-0x1]
old instr: 0x40c43e: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0065c: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c441: cdqe 
    new instr:0x7faef3f0065f: cdqe 
old instr: 0x40c443: mov eax, dword ptr [rbp+rax*4-0xd60]
    new instr:0x7faef3f00661: mov eax, dword ptr [rbp+rax*4-0xd60]
old instr: 0x40c44a: cmp edx, eax
    new instr:0x7faef3f00668: cmp edx, eax
in revert 
    new instr:0x7faef3f0066a: jnz 0x7faef3f0069f
40c481
old instr: 0x40c481: mov dword ptr [rbp-0x18], 0x0
    new instr:0x7faef3f0066c: mov dword ptr [rbp-0x18], 0x0
in revert 
removing jump and inserting a dummy entry 
40c4db
old instr: 0x40c4db: cmp dword ptr [rbp-0x18], 0xff
    new instr:0x7faef3f00673: cmp dword ptr [rbp-0x18], 0xff
in revert 
    new instr:0x7faef3f0067a: jnle 0x7faef3f00622
40c48a
old instr: 0x40c48a: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f0067c: mov eax, dword ptr [rbp-0x18]
40c383
old instr: 0x40c383: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f0067f: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c386: cdqe 
    new instr:0x7faef3f00682: cdqe 
old instr: 0x40c388: lea rdx, ptr [rax*4]
    new instr:0x7faef3f00684: lea rdx, ptr [rax*4]
old instr: 0x40c390: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7faef3f0068c: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40c397: add rax, rdx
    new instr:0x7faef3f00693: add rax, rdx
old instr: 0x40c39a: mov eax, dword ptr [rax]
    new instr:0x7faef3f00696: mov eax, dword ptr [rax]
old instr: 0x40c39c: sub eax, 0x1
    new instr:0x7faef3f00698: sub eax, 0x1
old instr: 0x40c39f: mov dword ptr [rbp-0x1c], eax
    new instr:0x7faef3f0069b: mov dword ptr [rbp-0x1c], eax
old instr: 0x40c3a2: cmp dword ptr [rbp-0x1c], 0x0
    new instr:0x7faef3f0069e: cmp dword ptr [rbp-0x1c], 0x0
in revert 
    new instr:0x7faef3f006a2: js 0x7faef3f006ad
40c3b1
old instr: 0x40c3b1: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3f006a4: mov eax, dword ptr [rbp-0x1c]
old instr: 0x40c3b4: movsxd rdx, eax
    new instr:0x7faef3f006a7: movsxd rdx, eax
old instr: 0x40c3b7: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3f006aa: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40c3be: add rax, rdx
    new instr:0x7faef3f006b1: add rax, rdx
old instr: 0x40c3c1: movzx eax, byte ptr [rax]
    new instr:0x7faef3f006b4: movzx eax, byte ptr [rax]
old instr: 0x40c3c4: mov byte ptr [rbp-0x41], al
    new instr:0x7faef3f006b7: mov byte ptr [rbp-0x41], al
old instr: 0x40c3c7: movzx eax, byte ptr [rbp-0x41]
    new instr:0x7faef3f006ba: movzx eax, byte ptr [rbp-0x41]
old instr: 0x40c3cb: cdqe 
    new instr:0x7faef3f006be: cdqe 
old instr: 0x40c3cd: movzx eax, byte ptr [rbp+rax*1-0x560]
    new instr:0x7faef3f006c0: movzx eax, byte ptr [rbp+rax*1-0x560]
old instr: 0x40c3d5: test al, al
    new instr:0x7faef3f006c8: test al, al
in revert 
    new instr:0x7faef3f006ca: jz 0x7faef3f00709
40c416
old instr: 0x40c416: sub dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3f006cc: sub dword ptr [rbp-0x18], 0x1
40c3d9
old instr: 0x40c3d9: movzx eax, byte ptr [rbp-0x41]
    new instr:0x7faef3f006d0: movzx eax, byte ptr [rbp-0x41]
40c2a8
old instr: 0x40c2a8: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f006d4: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c2ab: cdqe 
    new instr:0x7faef3f006d7: cdqe 
old instr: 0x40c2ad: lea rdx, ptr [rax*4]
    new instr:0x7faef3f006d9: lea rdx, ptr [rax*4]
old instr: 0x40c2b5: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7faef3f006e1: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40c2bc: add rax, rdx
    new instr:0x7faef3f006e8: add rax, rdx
old instr: 0x40c2bf: mov eax, dword ptr [rax]
    new instr:0x7faef3f006eb: mov eax, dword ptr [rax]
old instr: 0x40c2c1: sub eax, 0x1
    new instr:0x7faef3f006ed: sub eax, 0x1
old instr: 0x40c2c4: mov dword ptr [rbp-0x1c], eax
    new instr:0x7faef3f006f0: mov dword ptr [rbp-0x1c], eax
old instr: 0x40c2c7: cmp dword ptr [rbp-0x1c], 0x0
    new instr:0x7faef3f006f3: cmp dword ptr [rbp-0x1c], 0x0
in revert 
    new instr:0x7faef3f006f7: js 0x7faef3f00702
40c2d6
old instr: 0x40c2d6: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3f006f9: mov eax, dword ptr [rbp-0x1c]
old instr: 0x40c2d9: movsxd rdx, eax
    new instr:0x7faef3f006fc: movsxd rdx, eax
old instr: 0x40c2dc: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7faef3f006ff: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40c2e3: add rax, rdx
    new instr:0x7faef3f00706: add rax, rdx
old instr: 0x40c2e6: movzx eax, byte ptr [rax]
    new instr:0x7faef3f00709: movzx eax, byte ptr [rax]
old instr: 0x40c2e9: mov byte ptr [rbp-0x41], al
    new instr:0x7faef3f0070c: mov byte ptr [rbp-0x41], al
old instr: 0x40c2ec: movzx eax, byte ptr [rbp-0x41]
    new instr:0x7faef3f0070f: movzx eax, byte ptr [rbp-0x41]
old instr: 0x40c2f0: cdqe 
    new instr:0x7faef3f00713: cdqe 
old instr: 0x40c2f2: movzx eax, byte ptr [rbp+rax*1-0x560]
    new instr:0x7faef3f00715: movzx eax, byte ptr [rbp+rax*1-0x560]
old instr: 0x40c2fa: test al, al
    new instr:0x7faef3f0071d: test al, al
old instr: 0x40c2fc: jnz 0x40c33b
    new instr:0x7faef3f0071f: jnz 0x7faef3f0075e
inserted instruction
40c2fe
old instr: 0x40c2fe: movzx eax, byte ptr [rbp-0x41]
    new instr:0x7faef3f00721: movzx eax, byte ptr [rbp-0x41]
40c33b
old instr: 0x40c33b: add dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3f00725: add dword ptr [rbp-0x18], 0x1
40c2cd
old instr: 0x40c2cd: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7faef3f00729: mov eax, dword ptr [rbp-0xd84]
40c3a8
old instr: 0x40c3a8: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7faef3f0072f: mov eax, dword ptr [rbp-0xd84]
40c63d
old instr: 0x40c63d: mov eax, dword ptr [rbp-0x20]
    new instr:0x7faef3f00735: mov eax, dword ptr [rbp-0x20]
old instr: 0x40c640: mov edx, dword ptr [rbp-0xd84]
    new instr:0x7faef3f00738: mov edx, dword ptr [rbp-0xd84]
old instr: 0x40c646: mov esi, edx
    new instr:0x7faef3f0073e: mov esi, edx
old instr: 0x40c648: sub esi, eax
    new instr:0x7faef3f00740: sub esi, eax
old instr: 0x40c64a: mov rax, qword ptr [rip+0x210c5f]
    new instr:0x7faef3f00742: mov rax, qword ptr [rip+0x210c5f]
old instr: 0x40c651: mov ecx, dword ptr [rbp-0x20]
    new instr:0x7faef3f00749: mov ecx, dword ptr [rbp-0x20]
old instr: 0x40c654: mov edx, dword ptr [rbp-0xd84]
    new instr:0x7faef3f0074c: mov edx, dword ptr [rbp-0xd84]
old instr: 0x40c65a: mov r8d, esi
    new instr:0x7faef3f00752: mov r8d, esi
old instr: 0x40c65d: mov esi, 0x41aba0
    new instr:0x7faef3f00755: mov esi, 0x41aba0
old instr: 0x40c662: mov rdi, rax
    new instr:0x7faef3f0075a: mov rdi, rax
old instr: 0x40c665: mov eax, 0x0
    new instr:0x7faef3f0075d: mov eax, 0x0
old instr: 0x40c66a: call 0x4011f0
    new instr:0x7faef3f00762: call 0x7faef3ef52e8
inserted instruction
40c44e
old instr: 0x40c44e: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00767: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c451: cdqe 
    new instr:0x7faef3f0076a: cdqe 
old instr: 0x40c453: mov eax, dword ptr [rbp+rax*4-0x960]
    new instr:0x7faef3f0076c: mov eax, dword ptr [rbp+rax*4-0x960]
old instr: 0x40c45a: test eax, eax
    new instr:0x7faef3f00773: test eax, eax
old instr: 0x40c45c: jnz 0x40c477
    new instr:0x7faef3f00775: jnz 0x7faef3f00790
inserted instruction
add jump to 
    new instr:0x7faef3f00777: jmp 0x7faef430cbda
40c4e4
old instr: 0x40c4e4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0077c: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c4e7: cdqe 
    new instr:0x7faef3f0077f: cdqe 
old instr: 0x40c4e9: mov byte ptr [rbp+rax*1-0x560], 0x1
    new instr:0x7faef3f00781: mov byte ptr [rbp+rax*1-0x560], 0x1
old instr: 0x40c4f1: cmp dword ptr [rbp-0x14], 0xfe
    new instr:0x7faef3f00789: cmp dword ptr [rbp-0x14], 0xfe
old instr: 0x40c4f8: jnle 0x40c623
    new instr:0x7faef3f00790: jnle 0x7faef3f008bb
inserted instruction
40c4fe
old instr: 0x40c4fe: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00796: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c501: shl eax, 0x8
    new instr:0x7faef3f00799: shl eax, 0x8
old instr: 0x40c504: cdqe 
    new instr:0x7faef3f0079c: cdqe 
old instr: 0x40c506: lea rdx, ptr [rax*4]
    new instr:0x7faef3f0079e: lea rdx, ptr [rax*4]
old instr: 0x40c50e: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3f007a6: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c515: add rax, rdx
    new instr:0x7faef3f007ad: add rax, rdx
old instr: 0x40c518: mov eax, dword ptr [rax]
    new instr:0x7faef3f007b0: mov eax, dword ptr [rax]
old instr: 0x40c51a: and eax, 0xffdfffff
    new instr:0x7faef3f007b2: and eax, 0xffdfffff
old instr: 0x40c51f: mov dword ptr [rbp-0x48], eax
    new instr:0x7faef3f007b7: mov dword ptr [rbp-0x48], eax
old instr: 0x40c522: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f007ba: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c525: add eax, 0x1
    new instr:0x7faef3f007bd: add eax, 0x1
old instr: 0x40c528: shl eax, 0x8
    new instr:0x7faef3f007c0: shl eax, 0x8
old instr: 0x40c52b: cdqe 
    new instr:0x7faef3f007c3: cdqe 
old instr: 0x40c52d: lea rdx, ptr [rax*4]
    new instr:0x7faef3f007c5: lea rdx, ptr [rax*4]
old instr: 0x40c535: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7faef3f007cd: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c53c: add rax, rdx
    new instr:0x7faef3f007d4: add rax, rdx
old instr: 0x40c53f: mov eax, dword ptr [rax]
    new instr:0x7faef3f007d7: mov eax, dword ptr [rax]
old instr: 0x40c541: mov edx, eax
    new instr:0x7faef3f007d9: mov edx, eax
old instr: 0x40c543: and edx, 0xffdfffff
    new instr:0x7faef3f007db: and edx, 0xffdfffff
old instr: 0x40c549: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3f007e1: mov eax, dword ptr [rbp-0x48]
old instr: 0x40c54c: mov ecx, edx
    new instr:0x7faef3f007e4: mov ecx, edx
old instr: 0x40c54e: sub ecx, eax
    new instr:0x7faef3f007e6: sub ecx, eax
old instr: 0x40c550: mov eax, ecx
    new instr:0x7faef3f007e8: mov eax, ecx
old instr: 0x40c552: mov dword ptr [rbp-0x4c], eax
    new instr:0x7faef3f007ea: mov dword ptr [rbp-0x4c], eax
old instr: 0x40c555: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7faef3f007ed: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
40c562
old instr: 0x40c562: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f007f4: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40c565: mov edx, dword ptr [rbp-0x4c]
    new instr:0x7faef3f007f7: mov edx, dword ptr [rbp-0x4c]
old instr: 0x40c568: mov ebx, edx
    new instr:0x7faef3f007fa: mov ebx, edx
old instr: 0x40c56a: mov ecx, eax
    new instr:0x7faef3f007fc: mov ecx, eax
old instr: 0x40c56c: sar ebx, cl
    new instr:0x7faef3f007fe: sar ebx, cl
old instr: 0x40c56e: mov eax, ebx
    new instr:0x7faef3f00800: mov eax, ebx
old instr: 0x40c570: cmp eax, 0xfffe
    new instr:0x7faef3f00802: cmp eax, 0xfffe
old instr: 0x40c575: jnle 0x40c55e
    new instr:0x7faef3f00807: jnle 0x7faef3f007f0
inserted instruction
40c577
old instr: 0x40c577: mov eax, dword ptr [rbp-0x4c]
    new instr:0x7faef3f00809: mov eax, dword ptr [rbp-0x4c]
old instr: 0x40c57a: sub eax, 0x1
    new instr:0x7faef3f0080c: sub eax, 0x1
old instr: 0x40c57d: mov dword ptr [rbp-0x18], eax
    new instr:0x7faef3f0080f: mov dword ptr [rbp-0x18], eax
in revert 
removing jump and inserting a dummy entry 
40c5fb
old instr: 0x40c5fb: cmp dword ptr [rbp-0x18], 0x0
    new instr:0x7faef3f00812: cmp dword ptr [rbp-0x18], 0x0
old instr: 0x40c5ff: jns 0x40c582
    new instr:0x7faef3f00816: jns 0x7faef3f00799
inserted instruction
40c601
old instr: 0x40c601: mov eax, dword ptr [rbp-0x4c]
    new instr:0x7faef3f00818: mov eax, dword ptr [rbp-0x4c]
old instr: 0x40c604: lea edx, ptr [rax-0x1]
    new instr:0x7faef3f0081b: lea edx, ptr [rax-0x1]
old instr: 0x40c607: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f0081e: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40c60a: mov ebx, edx
    new instr:0x7faef3f00821: mov ebx, edx
old instr: 0x40c60c: mov ecx, eax
    new instr:0x7faef3f00823: mov ecx, eax
old instr: 0x40c60e: sar ebx, cl
    new instr:0x7faef3f00825: sar ebx, cl
old instr: 0x40c610: mov eax, ebx
    new instr:0x7faef3f00827: mov eax, ebx
old instr: 0x40c612: cmp eax, 0xffff
    new instr:0x7faef3f00829: cmp eax, 0xffff
in revert 
    new instr:0x7faef3f0082e: jnle 0x7faef3f0083a
40c623
old instr: 0x40c623: add dword ptr [rbp-0x14], 0x1
    new instr:0x7faef3f00830: add dword ptr [rbp-0x14], 0x1
40c582
old instr: 0x40c582: mov eax, dword ptr [rbp-0x18]
    new instr:0x7faef3f00834: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c585: mov edx, dword ptr [rbp-0x48]
    new instr:0x7faef3f00837: mov edx, dword ptr [rbp-0x48]
old instr: 0x40c588: add eax, edx
    new instr:0x7faef3f0083a: add eax, edx
old instr: 0x40c58a: cdqe 
    new instr:0x7faef3f0083c: cdqe 
old instr: 0x40c58c: lea rdx, ptr [rax*4]
    new instr:0x7faef3f0083e: lea rdx, ptr [rax*4]
old instr: 0x40c594: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7faef3f00846: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40c59b: add rax, rdx
    new instr:0x7faef3f0084d: add rax, rdx
old instr: 0x40c59e: mov eax, dword ptr [rax]
    new instr:0x7faef3f00850: mov eax, dword ptr [rax]
old instr: 0x40c5a0: mov dword ptr [rbp-0x50], eax
    new instr:0x7faef3f00852: mov dword ptr [rbp-0x50], eax
old instr: 0x40c5a3: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00855: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40c5a6: mov edx, dword ptr [rbp-0x18]
    new instr:0x7faef3f00858: mov edx, dword ptr [rbp-0x18]
old instr: 0x40c5a9: mov ebx, edx
    new instr:0x7faef3f0085b: mov ebx, edx
old instr: 0x40c5ab: mov ecx, eax
    new instr:0x7faef3f0085d: mov ecx, eax
old instr: 0x40c5ad: sar ebx, cl
    new instr:0x7faef3f0085f: sar ebx, cl
old instr: 0x40c5af: mov eax, ebx
    new instr:0x7faef3f00861: mov eax, ebx
old instr: 0x40c5b1: mov word ptr [rbp-0x52], ax
    new instr:0x7faef3f00863: mov word ptr [rbp-0x52], ax
old instr: 0x40c5b5: mov eax, dword ptr [rbp-0x50]
    new instr:0x7faef3f00867: mov eax, dword ptr [rbp-0x50]
old instr: 0x40c5b8: cdqe 
    new instr:0x7faef3f0086a: cdqe 
old instr: 0x40c5ba: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f0086c: lea rdx, ptr [rax+rax*1]
old instr: 0x40c5be: mov rax, qword ptr [rbp-0xd78]
    new instr:0x7faef3f00870: mov rax, qword ptr [rbp-0xd78]
old instr: 0x40c5c5: add rdx, rax
    new instr:0x7faef3f00877: add rdx, rax
old instr: 0x40c5c8: movzx eax, word ptr [rbp-0x52]
    new instr:0x7faef3f0087a: movzx eax, word ptr [rbp-0x52]
old instr: 0x40c5cc: mov word ptr [rdx], ax
    new instr:0x7faef3f0087e: mov word ptr [rdx], ax
old instr: 0x40c5cf: cmp dword ptr [rbp-0x50], 0x21
    new instr:0x7faef3f00881: cmp dword ptr [rbp-0x50], 0x21
in revert 
    new instr:0x7faef3f00885: jle 0x7faef3f008a9
40c5f7
old instr: 0x40c5f7: sub dword ptr [rbp-0x18], 0x1
    new instr:0x7faef3f00887: sub dword ptr [rbp-0x18], 0x1
40c5d5
old instr: 0x40c5d5: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7faef3f0088b: mov eax, dword ptr [rbp-0xd84]
40c55e
old instr: 0x40c55e: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7faef3f00891: add dword ptr [rbp-0x2c], 0x1
40c0fa
old instr: 0x40c0fa: mov eax, dword ptr [rbp-0x3c]
    new instr:0x7faef3f00895: mov eax, dword ptr [rbp-0x3c]
old instr: 0x40c0fd: mov edx, dword ptr [rbp-0x40]
    new instr:0x7faef3f00898: mov edx, dword ptr [rbp-0x40]
old instr: 0x40c100: mov ecx, edx
    new instr:0x7faef3f0089b: mov ecx, edx
old instr: 0x40c102: sub ecx, eax
    new instr:0x7faef3f0089d: sub ecx, eax
old instr: 0x40c104: mov eax, ecx
    new instr:0x7faef3f0089f: mov eax, ecx
old instr: 0x40c106: lea edi, ptr [rax+0x1]
    new instr:0x7faef3f008a1: lea edi, ptr [rax+0x1]
old instr: 0x40c109: mov ecx, dword ptr [rbp-0x18]
    new instr:0x7faef3f008a4: mov ecx, dword ptr [rbp-0x18]
old instr: 0x40c10c: mov edx, dword ptr [rbp-0x34]
    new instr:0x7faef3f008a7: mov edx, dword ptr [rbp-0x34]
old instr: 0x40c10f: mov rax, qword ptr [rip+0x21119a]
    new instr:0x7faef3f008aa: mov rax, qword ptr [rip+0x21119a]
old instr: 0x40c116: mov esi, dword ptr [rbp-0x20]
    new instr:0x7faef3f008b1: mov esi, dword ptr [rbp-0x20]
old instr: 0x40c119: mov r9d, edi
    new instr:0x7faef3f008b4: mov r9d, edi
old instr: 0x40c11c: mov r8d, esi
    new instr:0x7faef3f008b7: mov r8d, esi
old instr: 0x40c11f: mov esi, 0x41ab70
    new instr:0x7faef3f008ba: mov esi, 0x41ab70
old instr: 0x40c124: mov rdi, rax
    new instr:0x7faef3f008bf: mov rdi, rax
old instr: 0x40c127: mov eax, 0x0
    new instr:0x7faef3f008c2: mov eax, 0x0
old instr: 0x40c12c: call 0x4011f0
    new instr:0x7faef3f008c7: call 0x7faef3ef598b
inserted instruction
40c1e7
old instr: 0x40c1e7: mov edi, 0x3ee
    new instr:0x7faef3f008cc: mov edi, 0x3ee
old instr: 0x40c1ec: call 0x404ea8
    new instr:0x7faef3f008d1: call 0x7faef3ef958d
inserted instruction
40c619
old instr: 0x40c619: mov edi, 0x3ea
    new instr:0x7faef3f008d6: mov edi, 0x3ea
old instr: 0x40c61e: call 0x404ea8
    new instr:0x7faef3f008db: call 0x7faef3ef9165
inserted instruction
rtn name: mainSort : 1
1
40cb2c
old instr: 0x40cb2c: push rbp
    new instr:0x7faef3f008e0: push rbp
old instr: 0x40cb2d: mov rbp, rsp
    new instr:0x7faef3f008e1: mov rbp, rsp
old instr: 0x40cb30: push r14
    new instr:0x7faef3f008e4: push r14
old instr: 0x40cb32: push r13
    new instr:0x7faef3f008e6: push r13
old instr: 0x40cb34: push r12
    new instr:0x7faef3f008e8: push r12
old instr: 0x40cb36: push rbx
    new instr:0x7faef3f008ea: push rbx
old instr: 0x40cb37: sub rsp, 0x138
    new instr:0x7faef3f008eb: sub rsp, 0x138
old instr: 0x40cb3e: mov qword ptr [rbp-0x158], rdi
    new instr:0x7faef3f008f2: mov qword ptr [rbp-0x158], rdi
old instr: 0x40cb45: mov rax, qword ptr [rbp-0x158]
    new instr:0x7faef3f008f9: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb4c: mov rax, qword ptr [rax+0x38]
    new instr:0x7faef3f00900: mov rax, qword ptr [rax+0x38]
old instr: 0x40cb50: mov qword ptr [rbp-0x38], rax
    new instr:0x7faef3f00904: mov qword ptr [rbp-0x38], rax
old instr: 0x40cb54: mov rax, qword ptr [rbp-0x158]
    new instr:0x7faef3f00908: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb5b: mov rax, qword ptr [rax+0x40]
    new instr:0x7faef3f0090f: mov rax, qword ptr [rax+0x40]
old instr: 0x40cb5f: mov qword ptr [rbp-0x40], rax
    new instr:0x7faef3f00913: mov qword ptr [rbp-0x40], rax
old instr: 0x40cb63: mov rax, qword ptr [rbp-0x158]
    new instr:0x7faef3f00917: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb6a: mov rax, qword ptr [rax+0x48]
    new instr:0x7faef3f0091e: mov rax, qword ptr [rax+0x48]
old instr: 0x40cb6e: mov qword ptr [rbp-0x48], rax
    new instr:0x7faef3f00922: mov qword ptr [rbp-0x48], rax
old instr: 0x40cb72: mov rax, qword ptr [rbp-0x158]
    new instr:0x7faef3f00926: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb79: mov rdi, rax
    new instr:0x7faef3f0092d: mov rdi, rax
old instr: 0x40cb7c: call 0x40cac2
    new instr:0x7faef3f00930: call 0x7faef3f00876
inserted instruction
rtn name: generateMTFValues : 2
bb
40ceee
old instr: 0x40ceee: push rbp
    new instr:0x7faef3f00935: push rbp
old instr: 0x40ceef: mov rbp, rsp
    new instr:0x7faef3f00936: mov rbp, rsp
old instr: 0x40cef2: push r14
    new instr:0x7faef3f00939: push r14
old instr: 0x40cef4: push r13
    new instr:0x7faef3f0093b: push r13
old instr: 0x40cef6: push r12
    new instr:0x7faef3f0093d: push r12
old instr: 0x40cef8: push rbx
    new instr:0x7faef3f0093f: push rbx
old instr: 0x40cef9: sub rsp, 0xe0
    new instr:0x7faef3f00940: sub rsp, 0xe0
old instr: 0x40cf00: mov qword ptr [rbp-0xf8], rdi
    new instr:0x7faef3f00947: mov qword ptr [rbp-0xf8], rdi
old instr: 0x40cf07: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0094e: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf0e: mov rax, qword ptr [rax+0x48]
    new instr:0x7faef3f00955: mov rax, qword ptr [rax+0x48]
old instr: 0x40cf12: mov qword ptr [rbp-0x78], rax
    new instr:0x7faef3f00959: mov qword ptr [rbp-0x78], rax
old instr: 0x40cf16: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0095d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf1d: mov eax, dword ptr [rax+0x290]
    new instr:0x7faef3f00964: mov eax, dword ptr [rax+0x290]
old instr: 0x40cf23: cmp eax, 0x2
    new instr:0x7faef3f0096a: cmp eax, 0x2
in revert 
    new instr:0x7faef3f0096d: jnle 0x7faef3f009ac
40cf65
old instr: 0x40cf65: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0096f: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf6c: mov eax, dword ptr [rax+0x7c]
    new instr:0x7faef3f00976: mov eax, dword ptr [rax+0x7c]
old instr: 0x40cf6f: add eax, 0x2
    new instr:0x7faef3f00979: add eax, 0x2
old instr: 0x40cf72: mov dword ptr [rbp-0x7c], eax
    new instr:0x7faef3f0097c: mov dword ptr [rbp-0x7c], eax
old instr: 0x40cf75: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f0097f: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40cfc6
old instr: 0x40cfc6: cmp dword ptr [rbp-0x28], 0x5
    new instr:0x7faef3f00986: cmp dword ptr [rbp-0x28], 0x5
in revert 
    new instr:0x7faef3f0098a: jnle 0x7faef3f0093e
40cf7e
old instr: 0x40cf7e: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7faef3f0098c: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40cfba
old instr: 0x40cfba: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00993: mov eax, dword ptr [rbp-0x24]
old instr: 0x40cfbd: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7faef3f00996: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7faef3f00999: jnl 0x7faef3f00960
40cf87
old instr: 0x40cf87: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0099b: mov rcx, qword ptr [rbp-0xf8]
40cf28
old instr: 0x40cf28: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f009a2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf2f: mov esi, dword ptr [rax+0x7c]
    new instr:0x7faef3f009a9: mov esi, dword ptr [rax+0x7c]
old instr: 0x40cf32: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f009ac: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf39: mov ecx, dword ptr [rax+0x29c]
    new instr:0x7faef3f009b3: mov ecx, dword ptr [rax+0x29c]
old instr: 0x40cf3f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f009b9: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf46: mov edx, dword ptr [rax+0x6c]
    new instr:0x7faef3f009c0: mov edx, dword ptr [rax+0x6c]
old instr: 0x40cf49: mov rax, qword ptr [rip+0x210360]
    new instr:0x7faef3f009c3: mov rax, qword ptr [rip+0x210360]
old instr: 0x40cf50: mov r8d, esi
    new instr:0x7faef3f009ca: mov r8d, esi
old instr: 0x40cf53: mov esi, 0x41ac38
    new instr:0x7faef3f009cd: mov esi, 0x41ac38
old instr: 0x40cf58: mov rdi, rax
    new instr:0x7faef3f009d2: mov rdi, rax
old instr: 0x40cf5b: mov eax, 0x0
    new instr:0x7faef3f009d5: mov eax, 0x0
old instr: 0x40cf60: call 0x4011f0
    new instr:0x7faef3f009da: call 0x7faef3ef4c6a
inserted instruction
40cfc2
old instr: 0x40cfc2: add dword ptr [rbp-0x28], 0x1
    new instr:0x7faef3f009df: add dword ptr [rbp-0x28], 0x1
40cfcc
old instr: 0x40cfcc: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f009e3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cfd3: mov eax, dword ptr [rax+0x29c]
    new instr:0x7faef3f009ea: mov eax, dword ptr [rax+0x29c]
old instr: 0x40cfd9: test eax, eax
    new instr:0x7faef3f009f0: test eax, eax
in revert 
    new instr:0x7faef3f009f2: jle 0x7faef3f009fe
40cfe7
old instr: 0x40cfe7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f009f4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cfee: mov eax, dword ptr [rax+0x29c]
    new instr:0x7faef3f009fb: mov eax, dword ptr [rax+0x29c]
old instr: 0x40cff4: cmp eax, 0xc7
    new instr:0x7faef3f00a01: cmp eax, 0xc7
in revert 
    new instr:0x7faef3f00a06: jle 0x7faef3f00a11
40d004
old instr: 0x40d004: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00a08: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d00b: mov eax, dword ptr [rax+0x29c]
    new instr:0x7faef3f00a0f: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d011: cmp eax, 0x257
    new instr:0x7faef3f00a15: cmp eax, 0x257
in revert 
    new instr:0x7faef3f00a1a: jle 0x7faef3f00a25
40d021
old instr: 0x40d021: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00a1c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d028: mov eax, dword ptr [rax+0x29c]
    new instr:0x7faef3f00a23: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d02e: cmp eax, 0x4af
    new instr:0x7faef3f00a29: cmp eax, 0x4af
in revert 
    new instr:0x7faef3f00a2e: jle 0x7faef3f00a39
40d03e
old instr: 0x40d03e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00a30: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d045: mov eax, dword ptr [rax+0x29c]
    new instr:0x7faef3f00a37: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d04b: cmp eax, 0x95f
    new instr:0x7faef3f00a3d: cmp eax, 0x95f
in revert 
    new instr:0x7faef3f00a42: jle 0x7faef3f00a4d
40d05b
old instr: 0x40d05b: mov dword ptr [rbp-0x5c], 0x6
    new instr:0x7faef3f00a44: mov dword ptr [rbp-0x5c], 0x6
old instr: 0x40d062: mov eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00a4b: mov eax, dword ptr [rbp-0x5c]
old instr: 0x40d065: mov dword ptr [rbp-0x60], eax
    new instr:0x7faef3f00a4e: mov dword ptr [rbp-0x60], eax
old instr: 0x40d068: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00a51: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d06f: mov eax, dword ptr [rax+0x29c]
    new instr:0x7faef3f00a58: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d075: mov dword ptr [rbp-0x64], eax
    new instr:0x7faef3f00a5e: mov dword ptr [rbp-0x64], eax
old instr: 0x40d078: mov dword ptr [rbp-0x34], 0x0
    new instr:0x7faef3f00a61: mov dword ptr [rbp-0x34], 0x0
in revert 
removing jump and inserting a dummy entry 
40d23c
old instr: 0x40d23c: cmp dword ptr [rbp-0x60], 0x0
    new instr:0x7faef3f00a68: cmp dword ptr [rbp-0x60], 0x0
in revert 
    new instr:0x7faef3f00a6c: jle 0x7faef3f008b0
40d084
old instr: 0x40d084: mov eax, dword ptr [rbp-0x64]
    new instr:0x7faef3f00a72: mov eax, dword ptr [rbp-0x64]
old instr: 0x40d087: mov edx, eax
    new instr:0x7faef3f00a75: mov edx, eax
old instr: 0x40d089: sar edx, 0x1f
    new instr:0x7faef3f00a77: sar edx, 0x1f
old instr: 0x40d08c: idiv dword ptr [rbp-0x60]
    new instr:0x7faef3f00a7a: idiv dword ptr [rbp-0x60]
old instr: 0x40d08f: mov dword ptr [rbp-0x80], eax
    new instr:0x7faef3f00a7d: mov dword ptr [rbp-0x80], eax
old instr: 0x40d092: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00a80: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d095: sub eax, 0x1
    new instr:0x7faef3f00a83: sub eax, 0x1
old instr: 0x40d098: mov dword ptr [rbp-0x38], eax
    new instr:0x7faef3f00a86: mov dword ptr [rbp-0x38], eax
old instr: 0x40d09b: mov dword ptr [rbp-0x68], 0x0
    new instr:0x7faef3f00a89: mov dword ptr [rbp-0x68], 0x0
in revert 
removing jump and inserting a dummy entry 
40d0c2
old instr: 0x40d0c2: mov eax, dword ptr [rbp-0x68]
    new instr:0x7faef3f00a90: mov eax, dword ptr [rbp-0x68]
old instr: 0x40d0c5: cmp eax, dword ptr [rbp-0x80]
    new instr:0x7faef3f00a93: cmp eax, dword ptr [rbp-0x80]
old instr: 0x40d0c8: jnl 0x40d0d5
    new instr:0x7faef3f00a96: jnl 0x7faef3f00aa3
inserted instruction
40d0ca
old instr: 0x40d0ca: mov eax, dword ptr [rbp-0x7c]
    new instr:0x7faef3f00a98: mov eax, dword ptr [rbp-0x7c]
old instr: 0x40d0cd: sub eax, 0x1
    new instr:0x7faef3f00a9b: sub eax, 0x1
old instr: 0x40d0d0: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f00a9e: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7faef3f00aa1: jle 0x7faef3f00a72
40d0a4
old instr: 0x40d0a4: add dword ptr [rbp-0x38], 0x1
    new instr:0x7faef3f00aa3: add dword ptr [rbp-0x38], 0x1
40d052
old instr: 0x40d052: mov dword ptr [rbp-0x5c], 0x5
    new instr:0x7faef3f00aa7: mov dword ptr [rbp-0x5c], 0x5
old instr: 0x40d059: jmp 0x40d062
    new instr:0x7faef3f00aae: jmp 0x7faef3f00ab7
inserted instruction
40d246
old instr: 0x40d246: mov dword ptr [rbp-0x48], 0x0
    new instr:0x7faef3f00ab0: mov dword ptr [rbp-0x48], 0x0
in revert 
removing jump and inserting a dummy entry 
4104df
old instr: 0x4104df: cmp dword ptr [rbp-0x48], 0x3
    new instr:0x7faef3f00ab7: cmp dword ptr [rbp-0x48], 0x3
in revert 
    new instr:0x7faef3f00abb: jnle 0x7faef3efd82a
40d252
old instr: 0x40d252: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f00ac1: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40d26f
old instr: 0x40d26f: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00ac8: mov eax, dword ptr [rbp-0x28]
old instr: 0x40d272: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00acb: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7faef3f00ace: jnl 0x7faef3f00ab4
40d25b
old instr: 0x40d25b: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00ad0: mov eax, dword ptr [rbp-0x28]
40d0d5
old instr: 0x40d0d5: mov eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f00ad3: mov eax, dword ptr [rbp-0x38]
old instr: 0x40d0d8: cmp eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00ad6: cmp eax, dword ptr [rbp-0x34]
in revert 
    new instr:0x7faef3f00ad9: jnle 0x7faef3f00b27
40d129
old instr: 0x40d129: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00adb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d130: mov eax, dword ptr [rax+0x290]
    new instr:0x7faef3f00ae2: mov eax, dword ptr [rax+0x290]
old instr: 0x40d136: cmp eax, 0x2
    new instr:0x7faef3f00ae8: cmp eax, 0x2
in revert 
    new instr:0x7faef3f00aeb: jnle 0x7faef3f00b4a
40d198
old instr: 0x40d198: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7faef3f00aed: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40d21d
old instr: 0x40d21d: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00af4: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d220: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7faef3f00af7: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7faef3f00afa: jnl 0x7faef3f00a78
40d1a1
old instr: 0x40d1a1: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00b00: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d1a4: cmp eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00b03: cmp eax, dword ptr [rbp-0x34]
old instr: 0x40d1a7: jl 0x40d1e6
    new instr:0x7faef3f00b06: jl 0x7faef3f00b45
inserted instruction
40d1a9
old instr: 0x40d1a9: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00b08: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d1ac: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f00b0b: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7faef3f00b0e: jle 0x7faef3f00b45
40d1e6
old instr: 0x40d1e6: mov eax, dword ptr [rbp-0x60]
    new instr:0x7faef3f00b10: mov eax, dword ptr [rbp-0x60]
40d219
old instr: 0x40d219: add dword ptr [rbp-0x24], 0x1
    new instr:0x7faef3f00b13: add dword ptr [rbp-0x24], 0x1
40d1b1
old instr: 0x40d1b1: mov eax, dword ptr [rbp-0x60]
    new instr:0x7faef3f00b17: mov eax, dword ptr [rbp-0x60]
old instr: 0x40d1b4: lea esi, ptr [rax-0x1]
    new instr:0x7faef3f00b1a: lea esi, ptr [rax-0x1]
old instr: 0x40d1b7: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00b1d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40d1be: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00b24: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d1c1: movsxd rdx, eax
    new instr:0x7faef3f00b27: movsxd rdx, eax
old instr: 0x40d1c4: movsxd rax, esi
    new instr:0x7faef3f00b2a: movsxd rax, esi
old instr: 0x40d1c7: add rax, rax
    new instr:0x7faef3f00b2d: add rax, rax
old instr: 0x40d1ca: mov rsi, rax
    new instr:0x7faef3f00b30: mov rsi, rax
old instr: 0x40d1cd: shl rsi, 0x7
    new instr:0x7faef3f00b33: shl rsi, 0x7
old instr: 0x40d1d1: add rax, rsi
    new instr:0x7faef3f00b37: add rax, rsi
old instr: 0x40d1d4: add rax, rcx
    new instr:0x7faef3f00b3a: add rax, rcx
old instr: 0x40d1d7: add rax, rdx
    new instr:0x7faef3f00b3d: add rax, rdx
old instr: 0x40d1da: add rax, 0x9340
    new instr:0x7faef3f00b40: add rax, 0x9340
old instr: 0x40d1e0: mov byte ptr [rax+0xc], 0x0
    new instr:0x7faef3f00b46: mov byte ptr [rax+0xc], 0x0
old instr: 0x40d1e4: jmp 0x40d219
    new instr:0x7faef3f00b4a: jmp 0x7faef3f00b7f
inserted instruction
40d0dd
old instr: 0x40d0dd: mov eax, dword ptr [rbp-0x60]
    new instr:0x7faef3f00b4c: mov eax, dword ptr [rbp-0x60]
old instr: 0x40d0e0: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00b4f: cmp eax, dword ptr [rbp-0x5c]
old instr: 0x40d0e3: jz 0x40d129
    new instr:0x7faef3f00b52: jz 0x7faef3f00b98
inserted instruction
40d0e5
old instr: 0x40d0e5: cmp dword ptr [rbp-0x60], 0x1
    new instr:0x7faef3f00b54: cmp dword ptr [rbp-0x60], 0x1
old instr: 0x40d0e9: jz 0x40d129
    new instr:0x7faef3f00b58: jz 0x7faef3f00b98
inserted instruction
40d0eb
old instr: 0x40d0eb: mov eax, dword ptr [rbp-0x60]
    new instr:0x7faef3f00b5a: mov eax, dword ptr [rbp-0x60]
old instr: 0x40d0ee: mov edx, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00b5d: mov edx, dword ptr [rbp-0x5c]
old instr: 0x40d0f1: sub edx, eax
    new instr:0x7faef3f00b60: sub edx, eax
old instr: 0x40d0f3: mov eax, edx
    new instr:0x7faef3f00b62: mov eax, edx
old instr: 0x40d0f5: sar eax, 0x1f
    new instr:0x7faef3f00b64: sar eax, 0x1f
old instr: 0x40d0f8: shr eax, 0x1f
    new instr:0x7faef3f00b67: shr eax, 0x1f
old instr: 0x40d0fb: add edx, eax
    new instr:0x7faef3f00b6a: add edx, eax
old instr: 0x40d0fd: and edx, 0x1
    new instr:0x7faef3f00b6c: and edx, 0x1
old instr: 0x40d100: mov ecx, edx
    new instr:0x7faef3f00b6f: mov ecx, edx
old instr: 0x40d102: sub ecx, eax
    new instr:0x7faef3f00b71: sub ecx, eax
old instr: 0x40d104: mov eax, ecx
    new instr:0x7faef3f00b73: mov eax, ecx
old instr: 0x40d106: cmp eax, 0x1
    new instr:0x7faef3f00b75: cmp eax, 0x1
old instr: 0x40d109: jnz 0x40d129
    new instr:0x7faef3f00b78: jnz 0x7faef3f00b98
inserted instruction
40d10b
old instr: 0x40d10b: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00b7a: mov rax, qword ptr [rbp-0xf8]
4104e9
old instr: 0x4104e9: cmp dword ptr [rbp-0x5c], 0x7
    new instr:0x7faef3f00b81: cmp dword ptr [rbp-0x5c], 0x7
in revert 
    new instr:0x7faef3f00b85: jnle 0x7faef3f00b91
4104f9
old instr: 0x4104f9: cmp dword ptr [rbp-0x4c], 0x7fff
    new instr:0x7faef3f00b87: cmp dword ptr [rbp-0x4c], 0x7fff
old instr: 0x410500: jnle 0x41050b
    new instr:0x7faef3f00b8e: jnle 0x7faef3f00b99
inserted instruction
410502
old instr: 0x410502: cmp dword ptr [rbp-0x4c], 0x4652
    new instr:0x7faef3f00b90: cmp dword ptr [rbp-0x4c], 0x4652
in revert 
    new instr:0x7faef3f00b97: jnle 0x7faef3f00ba3
410515
old instr: 0x410515: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7faef3f00b99: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
410533
old instr: 0x410533: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00ba0: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410536: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00ba3: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7faef3f00ba6: jnl 0x7faef3f00b8b
41051e
old instr: 0x41051e: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00ba8: mov eax, dword ptr [rbp-0x2c]
41050b
old instr: 0x41050b: mov edi, 0xbbb
    new instr:0x7faef3f00bab: mov edi, 0xbbb
old instr: 0x410510: call 0x404ea8
    new instr:0x7faef3f00bb0: call 0x7faef3ef5548
inserted instruction
40d018
old instr: 0x40d018: mov dword ptr [rbp-0x5c], 0x3
    new instr:0x7faef3f00bb5: mov dword ptr [rbp-0x5c], 0x3
old instr: 0x40d01f: jmp 0x40d062
    new instr:0x7faef3f00bbc: jmp 0x7faef3f00bff
inserted instruction
41053b
old instr: 0x41053b: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7faef3f00bbe: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
4105dd
old instr: 0x4105dd: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00bc5: mov eax, dword ptr [rbp-0x2c]
old instr: 0x4105e0: cmp eax, dword ptr [rbp-0x4c]
    new instr:0x7faef3f00bc8: cmp eax, dword ptr [rbp-0x4c]
in revert 
    new instr:0x7faef3f00bcb: jnl 0x7faef3f00b2f
410547
old instr: 0x410547: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00bd1: mov rdx, qword ptr [rbp-0xf8]
old instr: 0x41054e: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00bd8: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410551: cdqe 
    new instr:0x7faef3f00bdb: cdqe 
old instr: 0x410553: movzx eax, byte ptr [rdx+rax*1+0x6a8]
    new instr:0x7faef3f00bdd: movzx eax, byte ptr [rdx+rax*1+0x6a8]
old instr: 0x41055b: mov byte ptr [rbp-0x83], al
    new instr:0x7faef3f00be5: mov byte ptr [rbp-0x83], al
old instr: 0x410561: mov dword ptr [rbp-0x30], 0x0
    new instr:0x7faef3f00beb: mov dword ptr [rbp-0x30], 0x0
old instr: 0x410568: mov eax, dword ptr [rbp-0x30]
    new instr:0x7faef3f00bf2: mov eax, dword ptr [rbp-0x30]
old instr: 0x41056b: cdqe 
    new instr:0x7faef3f00bf5: cdqe 
old instr: 0x41056d: movzx eax, byte ptr [rbp+rax*1-0xe0]
    new instr:0x7faef3f00bf7: movzx eax, byte ptr [rbp+rax*1-0xe0]
old instr: 0x410575: mov byte ptr [rbp-0x69], al
    new instr:0x7faef3f00bff: mov byte ptr [rbp-0x69], al
in revert 
removing jump and inserting a dummy entry 
4105ab
old instr: 0x4105ab: movzx eax, byte ptr [rbp-0x83]
    new instr:0x7faef3f00c02: movzx eax, byte ptr [rbp-0x83]
old instr: 0x4105b2: cmp al, byte ptr [rbp-0x69]
    new instr:0x7faef3f00c09: cmp al, byte ptr [rbp-0x69]
old instr: 0x4105b5: jnz 0x41057a
    new instr:0x7faef3f00c0c: jnz 0x7faef3f00bd1
inserted instruction
4105b7
old instr: 0x4105b7: movzx eax, byte ptr [rbp-0x69]
    new instr:0x7faef3f00c0e: movzx eax, byte ptr [rbp-0x69]
41057a
old instr: 0x41057a: add dword ptr [rbp-0x30], 0x1
    new instr:0x7faef3f00c12: add dword ptr [rbp-0x30], 0x1
4105e9
old instr: 0x4105e9: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f00c16: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
41077f
old instr: 0x41077f: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00c1d: mov eax, dword ptr [rbp-0x28]
old instr: 0x410782: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00c20: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7faef3f00c23: jnl 0x7faef3f00a93
4105f5
old instr: 0x4105f5: mov dword ptr [rbp-0x50], 0x20
    new instr:0x7faef3f00c29: mov dword ptr [rbp-0x50], 0x20
old instr: 0x4105fc: mov dword ptr [rbp-0x54], 0x0
    new instr:0x7faef3f00c30: mov dword ptr [rbp-0x54], 0x0
old instr: 0x410603: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7faef3f00c37: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
4106eb
old instr: 0x4106eb: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00c3e: mov eax, dword ptr [rbp-0x2c]
old instr: 0x4106ee: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7faef3f00c41: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7faef3f00c44: jnl 0x7faef3f00b62
41060f
old instr: 0x41060f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00c4a: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410616: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00c51: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410619: movsxd rdx, eax
    new instr:0x7faef3f00c54: movsxd rdx, eax
old instr: 0x41061c: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00c57: mov eax, dword ptr [rbp-0x28]
old instr: 0x41061f: cdqe 
    new instr:0x7faef3f00c5a: cdqe 
old instr: 0x410621: add rax, rax
    new instr:0x7faef3f00c5c: add rax, rax
old instr: 0x410624: mov rsi, rax
    new instr:0x7faef3f00c5f: mov rsi, rax
old instr: 0x410627: shl rsi, 0x7
    new instr:0x7faef3f00c62: shl rsi, 0x7
old instr: 0x41062b: add rax, rsi
    new instr:0x7faef3f00c66: add rax, rsi
old instr: 0x41062e: add rax, rcx
    new instr:0x7faef3f00c69: add rax, rcx
old instr: 0x410631: add rax, rdx
    new instr:0x7faef3f00c6c: add rax, rdx
old instr: 0x410634: add rax, 0x9340
    new instr:0x7faef3f00c6f: add rax, 0x9340
old instr: 0x41063a: movzx eax, byte ptr [rax+0xc]
    new instr:0x7faef3f00c75: movzx eax, byte ptr [rax+0xc]
old instr: 0x41063e: movzx eax, al
    new instr:0x7faef3f00c79: movzx eax, al
old instr: 0x410641: cmp eax, dword ptr [rbp-0x54]
    new instr:0x7faef3f00c7c: cmp eax, dword ptr [rbp-0x54]
in revert 
    new instr:0x7faef3f00c7f: jnle 0x7faef3f00cb6
41067b
old instr: 0x41067b: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00c81: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410682: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00c88: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410685: movsxd rdx, eax
    new instr:0x7faef3f00c8b: movsxd rdx, eax
old instr: 0x410688: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00c8e: mov eax, dword ptr [rbp-0x28]
old instr: 0x41068b: cdqe 
    new instr:0x7faef3f00c91: cdqe 
old instr: 0x41068d: add rax, rax
    new instr:0x7faef3f00c93: add rax, rax
old instr: 0x410690: mov rsi, rax
    new instr:0x7faef3f00c96: mov rsi, rax
old instr: 0x410693: shl rsi, 0x7
    new instr:0x7faef3f00c99: shl rsi, 0x7
old instr: 0x410697: add rax, rsi
    new instr:0x7faef3f00c9d: add rax, rsi
old instr: 0x41069a: add rax, rcx
    new instr:0x7faef3f00ca0: add rax, rcx
old instr: 0x41069d: add rax, rdx
    new instr:0x7faef3f00ca3: add rax, rdx
old instr: 0x4106a0: add rax, 0x9340
    new instr:0x7faef3f00ca6: add rax, 0x9340
old instr: 0x4106a6: movzx eax, byte ptr [rax+0xc]
    new instr:0x7faef3f00cac: movzx eax, byte ptr [rax+0xc]
old instr: 0x4106aa: movzx eax, al
    new instr:0x7faef3f00cb0: movzx eax, al
old instr: 0x4106ad: cmp eax, dword ptr [rbp-0x50]
    new instr:0x7faef3f00cb3: cmp eax, dword ptr [rbp-0x50]
in revert 
    new instr:0x7faef3f00cb6: jl 0x7faef3f00ced
4106e7
old instr: 0x4106e7: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7faef3f00cb8: add dword ptr [rbp-0x2c], 0x1
410646
old instr: 0x410646: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00cbc: mov rcx, qword ptr [rbp-0xf8]
4106b2
old instr: 0x4106b2: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00cc3: mov rcx, qword ptr [rbp-0xf8]
40d277
old instr: 0x40d277: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f00cca: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40d2c9
old instr: 0x40d2c9: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00cd1: mov eax, dword ptr [rbp-0x28]
old instr: 0x40d2cc: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00cd4: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7faef3f00cd7: jnl 0x7faef3f00c88
40d280
old instr: 0x40d280: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7faef3f00cd9: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40d2bd
old instr: 0x40d2bd: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00ce0: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d2c0: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7faef3f00ce3: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7faef3f00ce6: jnl 0x7faef3f00cac
40d289
old instr: 0x40d289: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00ce8: mov rdx, qword ptr [rbp-0xf8]
40d2d1
old instr: 0x40d2d1: cmp dword ptr [rbp-0x5c], 0x6
    new instr:0x7faef3f00cef: cmp dword ptr [rbp-0x5c], 0x6
old instr: 0x40d2d5: jnz 0x40d3f0
    new instr:0x7faef3f00cf3: jnz 0x7faef3f00e0e
inserted instruction
40d2db
old instr: 0x40d2db: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7faef3f00cf9: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40d3e4
old instr: 0x40d3e4: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f00d00: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d3e7: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7faef3f00d03: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7faef3f00d06: jnl 0x7faef3f00c03
40d2e7
old instr: 0x40d2e7: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00d0c: mov rdx, qword ptr [rbp-0xf8]
4104ef
old instr: 0x4104ef: mov edi, 0xbba
    new instr:0x7faef3f00d13: mov edi, 0xbba
old instr: 0x4104f4: call 0x404ea8
    new instr:0x7faef3f00d18: call 0x7faef3ef56cc
inserted instruction
4106f7
old instr: 0x4106f7: cmp dword ptr [rbp-0x54], 0x11
    new instr:0x7faef3f00d1d: cmp dword ptr [rbp-0x54], 0x11
in revert 
    new instr:0x7faef3f00d21: jnle 0x7faef3f00d2d
410707
old instr: 0x410707: cmp dword ptr [rbp-0x50], 0x0
    new instr:0x7faef3f00d23: cmp dword ptr [rbp-0x50], 0x0
in revert 
    new instr:0x7faef3f00d27: jle 0x7faef3f00d33
410717
old instr: 0x410717: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00d29: mov eax, dword ptr [rbp-0x28]
old instr: 0x41071a: cdqe 
    new instr:0x7faef3f00d2c: cdqe 
old instr: 0x41071c: add rax, rax
    new instr:0x7faef3f00d2e: add rax, rax
old instr: 0x41071f: mov rdx, rax
    new instr:0x7faef3f00d31: mov rdx, rax
old instr: 0x410722: shl rdx, 0x7
    new instr:0x7faef3f00d34: shl rdx, 0x7
old instr: 0x410726: add rax, rdx
    new instr:0x7faef3f00d38: add rax, rdx
old instr: 0x410729: lea rdx, ptr [rax+0x9340]
    new instr:0x7faef3f00d3b: lea rdx, ptr [rax+0x9340]
old instr: 0x410730: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00d42: mov rax, qword ptr [rbp-0xf8]
old instr: 0x410737: add rax, rdx
    new instr:0x7faef3f00d49: add rax, rdx
old instr: 0x41073a: lea rsi, ptr [rax+0xc]
    new instr:0x7faef3f00d4c: lea rsi, ptr [rax+0xc]
old instr: 0x41073e: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00d50: mov eax, dword ptr [rbp-0x28]
old instr: 0x410741: cdqe 
    new instr:0x7faef3f00d53: cdqe 
old instr: 0x410743: shl rax, 0x3
    new instr:0x7faef3f00d55: shl rax, 0x3
old instr: 0x410747: mov rdx, rax
    new instr:0x7faef3f00d59: mov rdx, rax
old instr: 0x41074a: shl rdx, 0x7
    new instr:0x7faef3f00d5c: shl rdx, 0x7
old instr: 0x41074e: add rax, rdx
    new instr:0x7faef3f00d60: add rax, rdx
old instr: 0x410751: lea rdx, ptr [rax+0x9950]
    new instr:0x7faef3f00d63: lea rdx, ptr [rax+0x9950]
old instr: 0x410758: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00d6a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x41075f: add rax, rdx
    new instr:0x7faef3f00d71: add rax, rdx
old instr: 0x410762: lea rdi, ptr [rax+0x8]
    new instr:0x7faef3f00d74: lea rdi, ptr [rax+0x8]
old instr: 0x410766: mov ecx, dword ptr [rbp-0x7c]
    new instr:0x7faef3f00d78: mov ecx, dword ptr [rbp-0x7c]
old instr: 0x410769: mov edx, dword ptr [rbp-0x54]
    new instr:0x7faef3f00d7b: mov edx, dword ptr [rbp-0x54]
old instr: 0x41076c: mov eax, dword ptr [rbp-0x50]
    new instr:0x7faef3f00d7e: mov eax, dword ptr [rbp-0x50]
old instr: 0x41076f: mov r8d, ecx
    new instr:0x7faef3f00d81: mov r8d, ecx
old instr: 0x410772: mov ecx, edx
    new instr:0x7faef3f00d84: mov ecx, edx
old instr: 0x410774: mov edx, eax
    new instr:0x7faef3f00d86: mov edx, eax
old instr: 0x410776: call 0x418294
    new instr:0x7faef3f00d88: call 0x7faef3f088a6
inserted instruction
40d229
old instr: 0x40d229: sub dword ptr [rbp-0x60], 0x1
    new instr:0x7faef3f00d8d: sub dword ptr [rbp-0x60], 0x1
40d3f0
old instr: 0x40d3f0: mov dword ptr [rbp-0x4c], 0x0
    new instr:0x7faef3f00d91: mov dword ptr [rbp-0x4c], 0x0
4106fd
old instr: 0x4106fd: mov edi, 0xbbc
    new instr:0x7faef3f00d98: mov edi, 0xbbc
old instr: 0x410702: call 0x404ea8
    new instr:0x7faef3f00d9d: call 0x7faef3ef5543
inserted instruction
41070d
old instr: 0x41070d: mov edi, 0xbbd
    new instr:0x7faef3f00da2: mov edi, 0xbbd
old instr: 0x410712: call 0x404ea8
    new instr:0x7faef3f00da7: call 0x7faef3ef553d
inserted instruction
40d405
old instr: 0x40d405: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00dac: mov rax, qword ptr [rbp-0xf8]
40d13b
old instr: 0x40d13b: cvtsi2ss xmm0, dword ptr [rbp-0x68]
    new instr:0x7faef3f00db3: cvtsi2ss xmm0, dword ptr [rbp-0x68]
old instr: 0x40d140: unpcklps xmm0, xmm0
    new instr:0x7faef3f00db8: unpcklps xmm0, xmm0
old instr: 0x40d143: cvtps2pd xmm0, xmm0
    new instr:0x7faef3f00dbb: cvtps2pd xmm0, xmm0
old instr: 0x40d146: movsd xmm1, qword ptr [rip+0xdc4a]
    new instr:0x7faef3f00dbe: movsd xmm1, qword ptr [rip+0xdc4a]
old instr: 0x40d14e: mulsd xmm0, xmm1
    new instr:0x7faef3f00dc6: mulsd xmm0, xmm1
old instr: 0x40d152: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00dca: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d159: mov eax, dword ptr [rax+0x29c]
    new instr:0x7faef3f00dd1: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d15f: cvtsi2ss xmm1, eax
    new instr:0x7faef3f00dd7: cvtsi2ss xmm1, eax
old instr: 0x40d163: unpcklps xmm1, xmm1
    new instr:0x7faef3f00ddb: unpcklps xmm1, xmm1
old instr: 0x40d166: cvtps2pd xmm1, xmm1
    new instr:0x7faef3f00dde: cvtps2pd xmm1, xmm1
old instr: 0x40d169: divsd xmm0, xmm1
    new instr:0x7faef3f00de1: divsd xmm0, xmm1
old instr: 0x40d16d: mov rax, qword ptr [rip+0x21013c]
    new instr:0x7faef3f00de5: mov rax, qword ptr [rip+0x21013c]
old instr: 0x40d174: mov edi, dword ptr [rbp-0x68]
    new instr:0x7faef3f00dec: mov edi, dword ptr [rbp-0x68]
old instr: 0x40d177: mov esi, dword ptr [rbp-0x38]
    new instr:0x7faef3f00def: mov esi, dword ptr [rbp-0x38]
old instr: 0x40d17a: mov ecx, dword ptr [rbp-0x34]
    new instr:0x7faef3f00df2: mov ecx, dword ptr [rbp-0x34]
old instr: 0x40d17d: mov edx, dword ptr [rbp-0x60]
    new instr:0x7faef3f00df5: mov edx, dword ptr [rbp-0x60]
old instr: 0x40d180: mov r9d, edi
    new instr:0x7faef3f00df8: mov r9d, edi
old instr: 0x40d183: mov r8d, esi
    new instr:0x7faef3f00dfb: mov r8d, esi
old instr: 0x40d186: mov esi, 0x41ac78
    new instr:0x7faef3f00dfe: mov esi, 0x41ac78
old instr: 0x40d18b: mov rdi, rax
    new instr:0x7faef3f00e03: mov rdi, rax
old instr: 0x40d18e: mov eax, 0x1
    new instr:0x7faef3f00e06: mov eax, 0x1
old instr: 0x40d193: call 0x4011f0
    new instr:0x7faef3f00e0b: call 0x7faef3ef4e68
inserted instruction
41078b
old instr: 0x41078b: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7faef3f00e10: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
4107e7
old instr: 0x4107e7: cmp dword ptr [rbp-0x2c], 0xf
    new instr:0x7faef3f00e17: cmp dword ptr [rbp-0x2c], 0xf
in revert 
    new instr:0x7faef3f00e1b: jnle 0x7faef3f00dc4
410794
old instr: 0x410794: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00e1d: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410797: cdqe 
    new instr:0x7faef3f00e20: cdqe 
old instr: 0x410799: mov byte ptr [rbp+rax*1-0xf0], 0x0
    new instr:0x7faef3f00e22: mov byte ptr [rbp+rax*1-0xf0], 0x0
old instr: 0x4107a1: mov dword ptr [rbp-0x30], 0x0
    new instr:0x7faef3f00e2a: mov dword ptr [rbp-0x30], 0x0
in revert 
removing jump and inserting a dummy entry 
4107dd
old instr: 0x4107dd: cmp dword ptr [rbp-0x30], 0xf
    new instr:0x7faef3f00e31: cmp dword ptr [rbp-0x30], 0xf
in revert 
    new instr:0x7faef3f00e35: jnle 0x7faef3f00dfe
4107aa
old instr: 0x4107aa: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00e37: mov eax, dword ptr [rbp-0x2c]
old instr: 0x4107ad: mov edx, eax
    new instr:0x7faef3f00e3a: mov edx, eax
old instr: 0x4107af: shl edx, 0x4
    new instr:0x7faef3f00e3c: shl edx, 0x4
old instr: 0x4107b2: mov eax, dword ptr [rbp-0x30]
    new instr:0x7faef3f00e3f: mov eax, dword ptr [rbp-0x30]
old instr: 0x4107b5: add eax, edx
    new instr:0x7faef3f00e42: add eax, edx
old instr: 0x4107b7: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00e44: mov rdx, qword ptr [rbp-0xf8]
old instr: 0x4107be: cdqe 
    new instr:0x7faef3f00e4b: cdqe 
old instr: 0x4107c0: movzx eax, byte ptr [rdx+rax*1+0x80]
    new instr:0x7faef3f00e4d: movzx eax, byte ptr [rdx+rax*1+0x80]
old instr: 0x4107c8: test al, al
    new instr:0x7faef3f00e55: test al, al
in revert 
    new instr:0x7faef3f00e57: jnz 0x7faef3f00e66
4107d9
old instr: 0x4107d9: add dword ptr [rbp-0x30], 0x1
    new instr:0x7faef3f00e59: add dword ptr [rbp-0x30], 0x1
4107cc
old instr: 0x4107cc: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f00e5d: mov eax, dword ptr [rbp-0x2c]
40cffb
old instr: 0x40cffb: mov dword ptr [rbp-0x5c], 0x2
    new instr:0x7faef3f00e60: mov dword ptr [rbp-0x5c], 0x2
old instr: 0x40d002: jmp 0x40d062
    new instr:0x7faef3f00e67: jmp 0x7faef3f00ec7
inserted instruction
4107e3
old instr: 0x4107e3: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7faef3f00e69: add dword ptr [rbp-0x2c], 0x1
40d415
old instr: 0x40d415: jle 0x4103d0
    new instr:0x7faef3f00e6d: jle 0x7faef3f03e28
inserted instruction
40d41b
old instr: 0x40d41b: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00e73: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d41e: add eax, 0x31
    new instr:0x7faef3f00e76: add eax, 0x31
old instr: 0x40d421: mov dword ptr [rbp-0x38], eax
    new instr:0x7faef3f00e79: mov dword ptr [rbp-0x38], eax
old instr: 0x40d424: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00e7c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d42b: mov eax, dword ptr [rax+0x29c]
    new instr:0x7faef3f00e83: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d431: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f00e89: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7faef3f00e8c: jle 0x7faef3f00ea1
40d449
old instr: 0x40d449: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f00e8e: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40d465
old instr: 0x40d465: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00e95: mov eax, dword ptr [rbp-0x28]
old instr: 0x40d468: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f00e98: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7faef3f00e9b: jnl 0x7faef3f00e82
40d452
old instr: 0x40d452: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f00e9d: mov eax, dword ptr [rbp-0x28]
40d436
old instr: 0x40d436: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00ea0: mov rax, qword ptr [rbp-0xf8]
40cfdd
old instr: 0x40cfdd: mov edi, 0xbb9
    new instr:0x7faef3f00ea7: mov edi, 0xbb9
old instr: 0x40cfe2: call 0x404ea8
    new instr:0x7faef3f00eac: call 0x7faef3ef8d72
inserted instruction
40d46d
old instr: 0x40d46d: cmp dword ptr [rbp-0x5c], 0x6
    new instr:0x7faef3f00eb1: cmp dword ptr [rbp-0x5c], 0x6
old instr: 0x40d471: jnz 0x40ec4e
    new instr:0x7faef3f00eb5: jnz 0x7faef3f02692
inserted instruction
40d477
old instr: 0x40d477: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00ebb: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d47a: mov edx, dword ptr [rbp-0x38]
    new instr:0x7faef3f00ebe: mov edx, dword ptr [rbp-0x38]
old instr: 0x40d47d: mov ecx, edx
    new instr:0x7faef3f00ec1: mov ecx, edx
old instr: 0x40d47f: sub ecx, eax
    new instr:0x7faef3f00ec3: sub ecx, eax
old instr: 0x40d481: mov eax, ecx
    new instr:0x7faef3f00ec5: mov eax, ecx
old instr: 0x40d483: cmp eax, 0x31
    new instr:0x7faef3f00ec7: cmp eax, 0x31
old instr: 0x40d486: jnz 0x40ec4e
    new instr:0x7faef3f00eca: jnz 0x7faef3f02692
inserted instruction
40d48c
old instr: 0x40d48c: mov r12d, 0x0
    new instr:0x7faef3f00ed0: mov r12d, 0x0
old instr: 0x40d492: mov r13d, r12d
    new instr:0x7faef3f00ed6: mov r13d, r12d
old instr: 0x40d495: mov r14d, r13d
    new instr:0x7faef3f00ed9: mov r14d, r13d
old instr: 0x40d498: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00edc: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d49b: cdqe 
    new instr:0x7faef3f00edf: cdqe 
old instr: 0x40d49d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f00ee1: lea rdx, ptr [rax+rax*1]
old instr: 0x40d4a1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f00ee5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d4a5: add rax, rdx
    new instr:0x7faef3f00ee9: add rax, rdx
old instr: 0x40d4a8: movzx ebx, word ptr [rax]
    new instr:0x7faef3f00eec: movzx ebx, word ptr [rax]
old instr: 0x40d4ab: movzx edx, bx
    new instr:0x7faef3f00eef: movzx edx, bx
old instr: 0x40d4ae: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00ef2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d4b5: movsxd rdx, edx
    new instr:0x7faef3f00ef9: movsxd rdx, edx
old instr: 0x40d4b8: add rdx, 0xc9b
    new instr:0x7faef3f00efc: add rdx, 0xc9b
old instr: 0x40d4bf: shl rdx, 0x4
    new instr:0x7faef3f00f03: shl rdx, 0x4
old instr: 0x40d4c3: add rax, rdx
    new instr:0x7faef3f00f07: add rax, rdx
old instr: 0x40d4c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f00f0a: mov eax, dword ptr [rax+0x8]
old instr: 0x40d4c9: add r14d, eax
    new instr:0x7faef3f00f0d: add r14d, eax
old instr: 0x40d4cc: movzx edx, bx
    new instr:0x7faef3f00f10: movzx edx, bx
old instr: 0x40d4cf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00f13: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d4d6: movsxd rdx, edx
    new instr:0x7faef3f00f1a: movsxd rdx, edx
old instr: 0x40d4d9: shl rdx, 0x4
    new instr:0x7faef3f00f1d: shl rdx, 0x4
old instr: 0x40d4dd: add rax, rdx
    new instr:0x7faef3f00f21: add rax, rdx
old instr: 0x40d4e0: add rax, 0xc9b4
    new instr:0x7faef3f00f24: add rax, 0xc9b4
old instr: 0x40d4e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f00f2a: mov eax, dword ptr [rax+0x8]
old instr: 0x40d4e9: add r13d, eax
    new instr:0x7faef3f00f2d: add r13d, eax
old instr: 0x40d4ec: movzx edx, bx
    new instr:0x7faef3f00f30: movzx edx, bx
old instr: 0x40d4ef: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00f33: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d4f6: movsxd rdx, edx
    new instr:0x7faef3f00f3a: movsxd rdx, edx
old instr: 0x40d4f9: shl rdx, 0x4
    new instr:0x7faef3f00f3d: shl rdx, 0x4
old instr: 0x40d4fd: add rax, rdx
    new instr:0x7faef3f00f41: add rax, rdx
old instr: 0x40d500: add rax, 0xc9b8
    new instr:0x7faef3f00f44: add rax, 0xc9b8
old instr: 0x40d506: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f00f4a: mov eax, dword ptr [rax+0x8]
old instr: 0x40d509: add r12d, eax
    new instr:0x7faef3f00f4d: add r12d, eax
old instr: 0x40d50c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00f50: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d50f: cdqe 
    new instr:0x7faef3f00f53: cdqe 
old instr: 0x40d511: add rax, 0x1
    new instr:0x7faef3f00f55: add rax, 0x1
old instr: 0x40d515: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f00f59: lea rdx, ptr [rax+rax*1]
old instr: 0x40d519: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f00f5d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d51d: add rax, rdx
    new instr:0x7faef3f00f61: add rax, rdx
old instr: 0x40d520: movzx ebx, word ptr [rax]
    new instr:0x7faef3f00f64: movzx ebx, word ptr [rax]
old instr: 0x40d523: movzx edx, bx
    new instr:0x7faef3f00f67: movzx edx, bx
old instr: 0x40d526: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00f6a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d52d: movsxd rdx, edx
    new instr:0x7faef3f00f71: movsxd rdx, edx
old instr: 0x40d530: add rdx, 0xc9b
    new instr:0x7faef3f00f74: add rdx, 0xc9b
old instr: 0x40d537: shl rdx, 0x4
    new instr:0x7faef3f00f7b: shl rdx, 0x4
old instr: 0x40d53b: add rax, rdx
    new instr:0x7faef3f00f7f: add rax, rdx
old instr: 0x40d53e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f00f82: mov eax, dword ptr [rax+0x8]
old instr: 0x40d541: add r14d, eax
    new instr:0x7faef3f00f85: add r14d, eax
old instr: 0x40d544: movzx edx, bx
    new instr:0x7faef3f00f88: movzx edx, bx
old instr: 0x40d547: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00f8b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d54e: movsxd rdx, edx
    new instr:0x7faef3f00f92: movsxd rdx, edx
old instr: 0x40d551: shl rdx, 0x4
    new instr:0x7faef3f00f95: shl rdx, 0x4
old instr: 0x40d555: add rax, rdx
    new instr:0x7faef3f00f99: add rax, rdx
old instr: 0x40d558: add rax, 0xc9b4
    new instr:0x7faef3f00f9c: add rax, 0xc9b4
old instr: 0x40d55e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f00fa2: mov eax, dword ptr [rax+0x8]
old instr: 0x40d561: add r13d, eax
    new instr:0x7faef3f00fa5: add r13d, eax
old instr: 0x40d564: movzx edx, bx
    new instr:0x7faef3f00fa8: movzx edx, bx
old instr: 0x40d567: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00fab: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d56e: movsxd rdx, edx
    new instr:0x7faef3f00fb2: movsxd rdx, edx
old instr: 0x40d571: shl rdx, 0x4
    new instr:0x7faef3f00fb5: shl rdx, 0x4
old instr: 0x40d575: add rax, rdx
    new instr:0x7faef3f00fb9: add rax, rdx
old instr: 0x40d578: add rax, 0xc9b8
    new instr:0x7faef3f00fbc: add rax, 0xc9b8
old instr: 0x40d57e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f00fc2: mov eax, dword ptr [rax+0x8]
old instr: 0x40d581: add r12d, eax
    new instr:0x7faef3f00fc5: add r12d, eax
old instr: 0x40d584: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f00fc8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d587: cdqe 
    new instr:0x7faef3f00fcb: cdqe 
old instr: 0x40d589: add rax, 0x2
    new instr:0x7faef3f00fcd: add rax, 0x2
old instr: 0x40d58d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f00fd1: lea rdx, ptr [rax+rax*1]
old instr: 0x40d591: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f00fd5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d595: add rax, rdx
    new instr:0x7faef3f00fd9: add rax, rdx
40d598
old instr: 0x40d598: movzx ebx, word ptr [rax]
    new instr:0x7faef3f00fdc: movzx ebx, word ptr [rax]
old instr: 0x40d59b: movzx edx, bx
    new instr:0x7faef3f00fdf: movzx edx, bx
old instr: 0x40d59e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f00fe2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d5a5: movsxd rdx, edx
    new instr:0x7faef3f00fe9: movsxd rdx, edx
old instr: 0x40d5a8: add rdx, 0xc9b
    new instr:0x7faef3f00fec: add rdx, 0xc9b
old instr: 0x40d5af: shl rdx, 0x4
    new instr:0x7faef3f00ff3: shl rdx, 0x4
old instr: 0x40d5b3: add rax, rdx
    new instr:0x7faef3f00ff7: add rax, rdx
old instr: 0x40d5b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f00ffa: mov eax, dword ptr [rax+0x8]
old instr: 0x40d5b9: add r14d, eax
    new instr:0x7faef3f00ffd: add r14d, eax
old instr: 0x40d5bc: movzx edx, bx
    new instr:0x7faef3f01000: movzx edx, bx
old instr: 0x40d5bf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01003: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d5c6: movsxd rdx, edx
    new instr:0x7faef3f0100a: movsxd rdx, edx
old instr: 0x40d5c9: shl rdx, 0x4
    new instr:0x7faef3f0100d: shl rdx, 0x4
old instr: 0x40d5cd: add rax, rdx
    new instr:0x7faef3f01011: add rax, rdx
old instr: 0x40d5d0: add rax, 0xc9b4
    new instr:0x7faef3f01014: add rax, 0xc9b4
old instr: 0x40d5d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0101a: mov eax, dword ptr [rax+0x8]
old instr: 0x40d5d9: add r13d, eax
    new instr:0x7faef3f0101d: add r13d, eax
old instr: 0x40d5dc: movzx edx, bx
    new instr:0x7faef3f01020: movzx edx, bx
old instr: 0x40d5df: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01023: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d5e6: movsxd rdx, edx
    new instr:0x7faef3f0102a: movsxd rdx, edx
old instr: 0x40d5e9: shl rdx, 0x4
    new instr:0x7faef3f0102d: shl rdx, 0x4
old instr: 0x40d5ed: add rax, rdx
    new instr:0x7faef3f01031: add rax, rdx
old instr: 0x40d5f0: add rax, 0xc9b8
    new instr:0x7faef3f01034: add rax, 0xc9b8
old instr: 0x40d5f6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0103a: mov eax, dword ptr [rax+0x8]
old instr: 0x40d5f9: add r12d, eax
    new instr:0x7faef3f0103d: add r12d, eax
old instr: 0x40d5fc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01040: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d5ff: cdqe 
    new instr:0x7faef3f01043: cdqe 
old instr: 0x40d601: add rax, 0x3
    new instr:0x7faef3f01045: add rax, 0x3
old instr: 0x40d605: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01049: lea rdx, ptr [rax+rax*1]
old instr: 0x40d609: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0104d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d60d: add rax, rdx
    new instr:0x7faef3f01051: add rax, rdx
old instr: 0x40d610: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01054: movzx ebx, word ptr [rax]
old instr: 0x40d613: movzx edx, bx
    new instr:0x7faef3f01057: movzx edx, bx
old instr: 0x40d616: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0105a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d61d: movsxd rdx, edx
    new instr:0x7faef3f01061: movsxd rdx, edx
old instr: 0x40d620: add rdx, 0xc9b
    new instr:0x7faef3f01064: add rdx, 0xc9b
old instr: 0x40d627: shl rdx, 0x4
    new instr:0x7faef3f0106b: shl rdx, 0x4
old instr: 0x40d62b: add rax, rdx
    new instr:0x7faef3f0106f: add rax, rdx
old instr: 0x40d62e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01072: mov eax, dword ptr [rax+0x8]
old instr: 0x40d631: add r14d, eax
    new instr:0x7faef3f01075: add r14d, eax
old instr: 0x40d634: movzx edx, bx
    new instr:0x7faef3f01078: movzx edx, bx
old instr: 0x40d637: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0107b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d63e: movsxd rdx, edx
    new instr:0x7faef3f01082: movsxd rdx, edx
old instr: 0x40d641: shl rdx, 0x4
    new instr:0x7faef3f01085: shl rdx, 0x4
old instr: 0x40d645: add rax, rdx
    new instr:0x7faef3f01089: add rax, rdx
old instr: 0x40d648: add rax, 0xc9b4
    new instr:0x7faef3f0108c: add rax, 0xc9b4
old instr: 0x40d64e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01092: mov eax, dword ptr [rax+0x8]
old instr: 0x40d651: add r13d, eax
    new instr:0x7faef3f01095: add r13d, eax
old instr: 0x40d654: movzx edx, bx
    new instr:0x7faef3f01098: movzx edx, bx
old instr: 0x40d657: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0109b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d65e: movsxd rdx, edx
    new instr:0x7faef3f010a2: movsxd rdx, edx
old instr: 0x40d661: shl rdx, 0x4
    new instr:0x7faef3f010a5: shl rdx, 0x4
old instr: 0x40d665: add rax, rdx
    new instr:0x7faef3f010a9: add rax, rdx
old instr: 0x40d668: add rax, 0xc9b8
    new instr:0x7faef3f010ac: add rax, 0xc9b8
old instr: 0x40d66e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f010b2: mov eax, dword ptr [rax+0x8]
old instr: 0x40d671: add r12d, eax
    new instr:0x7faef3f010b5: add r12d, eax
old instr: 0x40d674: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f010b8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d677: cdqe 
    new instr:0x7faef3f010bb: cdqe 
old instr: 0x40d679: add rax, 0x4
    new instr:0x7faef3f010bd: add rax, 0x4
old instr: 0x40d67d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f010c1: lea rdx, ptr [rax+rax*1]
old instr: 0x40d681: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f010c5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d685: add rax, rdx
    new instr:0x7faef3f010c9: add rax, rdx
old instr: 0x40d688: movzx ebx, word ptr [rax]
    new instr:0x7faef3f010cc: movzx ebx, word ptr [rax]
old instr: 0x40d68b: movzx edx, bx
    new instr:0x7faef3f010cf: movzx edx, bx
old instr: 0x40d68e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f010d2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d695: movsxd rdx, edx
    new instr:0x7faef3f010d9: movsxd rdx, edx
old instr: 0x40d698: add rdx, 0xc9b
    new instr:0x7faef3f010dc: add rdx, 0xc9b
old instr: 0x40d69f: shl rdx, 0x4
    new instr:0x7faef3f010e3: shl rdx, 0x4
old instr: 0x40d6a3: add rax, rdx
    new instr:0x7faef3f010e7: add rax, rdx
old instr: 0x40d6a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f010ea: mov eax, dword ptr [rax+0x8]
40d6a9
old instr: 0x40d6a9: add r14d, eax
    new instr:0x7faef3f010ed: add r14d, eax
old instr: 0x40d6ac: movzx edx, bx
    new instr:0x7faef3f010f0: movzx edx, bx
old instr: 0x40d6af: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f010f3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d6b6: movsxd rdx, edx
    new instr:0x7faef3f010fa: movsxd rdx, edx
old instr: 0x40d6b9: shl rdx, 0x4
    new instr:0x7faef3f010fd: shl rdx, 0x4
old instr: 0x40d6bd: add rax, rdx
    new instr:0x7faef3f01101: add rax, rdx
old instr: 0x40d6c0: add rax, 0xc9b4
    new instr:0x7faef3f01104: add rax, 0xc9b4
old instr: 0x40d6c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0110a: mov eax, dword ptr [rax+0x8]
old instr: 0x40d6c9: add r13d, eax
    new instr:0x7faef3f0110d: add r13d, eax
old instr: 0x40d6cc: movzx edx, bx
    new instr:0x7faef3f01110: movzx edx, bx
old instr: 0x40d6cf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01113: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d6d6: movsxd rdx, edx
    new instr:0x7faef3f0111a: movsxd rdx, edx
old instr: 0x40d6d9: shl rdx, 0x4
    new instr:0x7faef3f0111d: shl rdx, 0x4
old instr: 0x40d6dd: add rax, rdx
    new instr:0x7faef3f01121: add rax, rdx
old instr: 0x40d6e0: add rax, 0xc9b8
    new instr:0x7faef3f01124: add rax, 0xc9b8
old instr: 0x40d6e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0112a: mov eax, dword ptr [rax+0x8]
old instr: 0x40d6e9: add r12d, eax
    new instr:0x7faef3f0112d: add r12d, eax
old instr: 0x40d6ec: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01130: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d6ef: cdqe 
    new instr:0x7faef3f01133: cdqe 
old instr: 0x40d6f1: add rax, 0x5
    new instr:0x7faef3f01135: add rax, 0x5
old instr: 0x40d6f5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01139: lea rdx, ptr [rax+rax*1]
old instr: 0x40d6f9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0113d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d6fd: add rax, rdx
    new instr:0x7faef3f01141: add rax, rdx
old instr: 0x40d700: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01144: movzx ebx, word ptr [rax]
old instr: 0x40d703: movzx edx, bx
    new instr:0x7faef3f01147: movzx edx, bx
old instr: 0x40d706: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0114a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d70d: movsxd rdx, edx
    new instr:0x7faef3f01151: movsxd rdx, edx
old instr: 0x40d710: add rdx, 0xc9b
    new instr:0x7faef3f01154: add rdx, 0xc9b
old instr: 0x40d717: shl rdx, 0x4
    new instr:0x7faef3f0115b: shl rdx, 0x4
old instr: 0x40d71b: add rax, rdx
    new instr:0x7faef3f0115f: add rax, rdx
old instr: 0x40d71e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01162: mov eax, dword ptr [rax+0x8]
old instr: 0x40d721: add r14d, eax
    new instr:0x7faef3f01165: add r14d, eax
old instr: 0x40d724: movzx edx, bx
    new instr:0x7faef3f01168: movzx edx, bx
old instr: 0x40d727: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0116b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d72e: movsxd rdx, edx
    new instr:0x7faef3f01172: movsxd rdx, edx
old instr: 0x40d731: shl rdx, 0x4
    new instr:0x7faef3f01175: shl rdx, 0x4
old instr: 0x40d735: add rax, rdx
    new instr:0x7faef3f01179: add rax, rdx
old instr: 0x40d738: add rax, 0xc9b4
    new instr:0x7faef3f0117c: add rax, 0xc9b4
old instr: 0x40d73e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01182: mov eax, dword ptr [rax+0x8]
old instr: 0x40d741: add r13d, eax
    new instr:0x7faef3f01185: add r13d, eax
old instr: 0x40d744: movzx edx, bx
    new instr:0x7faef3f01188: movzx edx, bx
old instr: 0x40d747: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0118b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d74e: movsxd rdx, edx
    new instr:0x7faef3f01192: movsxd rdx, edx
old instr: 0x40d751: shl rdx, 0x4
    new instr:0x7faef3f01195: shl rdx, 0x4
old instr: 0x40d755: add rax, rdx
    new instr:0x7faef3f01199: add rax, rdx
old instr: 0x40d758: add rax, 0xc9b8
    new instr:0x7faef3f0119c: add rax, 0xc9b8
old instr: 0x40d75e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f011a2: mov eax, dword ptr [rax+0x8]
old instr: 0x40d761: add r12d, eax
    new instr:0x7faef3f011a5: add r12d, eax
old instr: 0x40d764: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f011a8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d767: cdqe 
    new instr:0x7faef3f011ab: cdqe 
old instr: 0x40d769: add rax, 0x6
    new instr:0x7faef3f011ad: add rax, 0x6
old instr: 0x40d76d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f011b1: lea rdx, ptr [rax+rax*1]
old instr: 0x40d771: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f011b5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d775: add rax, rdx
    new instr:0x7faef3f011b9: add rax, rdx
old instr: 0x40d778: movzx ebx, word ptr [rax]
    new instr:0x7faef3f011bc: movzx ebx, word ptr [rax]
old instr: 0x40d77b: movzx edx, bx
    new instr:0x7faef3f011bf: movzx edx, bx
old instr: 0x40d77e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f011c2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d785: movsxd rdx, edx
    new instr:0x7faef3f011c9: movsxd rdx, edx
old instr: 0x40d788: add rdx, 0xc9b
    new instr:0x7faef3f011cc: add rdx, 0xc9b
old instr: 0x40d78f: shl rdx, 0x4
    new instr:0x7faef3f011d3: shl rdx, 0x4
old instr: 0x40d793: add rax, rdx
    new instr:0x7faef3f011d7: add rax, rdx
old instr: 0x40d796: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f011da: mov eax, dword ptr [rax+0x8]
old instr: 0x40d799: add r14d, eax
    new instr:0x7faef3f011dd: add r14d, eax
old instr: 0x40d79c: movzx edx, bx
    new instr:0x7faef3f011e0: movzx edx, bx
old instr: 0x40d79f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f011e3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d7a6: movsxd rdx, edx
    new instr:0x7faef3f011ea: movsxd rdx, edx
old instr: 0x40d7a9: shl rdx, 0x4
    new instr:0x7faef3f011ed: shl rdx, 0x4
old instr: 0x40d7ad: add rax, rdx
    new instr:0x7faef3f011f1: add rax, rdx
old instr: 0x40d7b0: add rax, 0xc9b4
    new instr:0x7faef3f011f4: add rax, 0xc9b4
old instr: 0x40d7b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f011fa: mov eax, dword ptr [rax+0x8]
40d7b9
old instr: 0x40d7b9: add r13d, eax
    new instr:0x7faef3f011fd: add r13d, eax
old instr: 0x40d7bc: movzx edx, bx
    new instr:0x7faef3f01200: movzx edx, bx
old instr: 0x40d7bf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01203: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d7c6: movsxd rdx, edx
    new instr:0x7faef3f0120a: movsxd rdx, edx
old instr: 0x40d7c9: shl rdx, 0x4
    new instr:0x7faef3f0120d: shl rdx, 0x4
old instr: 0x40d7cd: add rax, rdx
    new instr:0x7faef3f01211: add rax, rdx
old instr: 0x40d7d0: add rax, 0xc9b8
    new instr:0x7faef3f01214: add rax, 0xc9b8
old instr: 0x40d7d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0121a: mov eax, dword ptr [rax+0x8]
old instr: 0x40d7d9: add r12d, eax
    new instr:0x7faef3f0121d: add r12d, eax
old instr: 0x40d7dc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01220: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d7df: cdqe 
    new instr:0x7faef3f01223: cdqe 
old instr: 0x40d7e1: add rax, 0x7
    new instr:0x7faef3f01225: add rax, 0x7
old instr: 0x40d7e5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01229: lea rdx, ptr [rax+rax*1]
old instr: 0x40d7e9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0122d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d7ed: add rax, rdx
    new instr:0x7faef3f01231: add rax, rdx
old instr: 0x40d7f0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01234: movzx ebx, word ptr [rax]
old instr: 0x40d7f3: movzx edx, bx
    new instr:0x7faef3f01237: movzx edx, bx
old instr: 0x40d7f6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0123a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d7fd: movsxd rdx, edx
    new instr:0x7faef3f01241: movsxd rdx, edx
old instr: 0x40d800: add rdx, 0xc9b
    new instr:0x7faef3f01244: add rdx, 0xc9b
old instr: 0x40d807: shl rdx, 0x4
    new instr:0x7faef3f0124b: shl rdx, 0x4
old instr: 0x40d80b: add rax, rdx
    new instr:0x7faef3f0124f: add rax, rdx
old instr: 0x40d80e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01252: mov eax, dword ptr [rax+0x8]
old instr: 0x40d811: add r14d, eax
    new instr:0x7faef3f01255: add r14d, eax
old instr: 0x40d814: movzx edx, bx
    new instr:0x7faef3f01258: movzx edx, bx
old instr: 0x40d817: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0125b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d81e: movsxd rdx, edx
    new instr:0x7faef3f01262: movsxd rdx, edx
old instr: 0x40d821: shl rdx, 0x4
    new instr:0x7faef3f01265: shl rdx, 0x4
old instr: 0x40d825: add rax, rdx
    new instr:0x7faef3f01269: add rax, rdx
old instr: 0x40d828: add rax, 0xc9b4
    new instr:0x7faef3f0126c: add rax, 0xc9b4
old instr: 0x40d82e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01272: mov eax, dword ptr [rax+0x8]
old instr: 0x40d831: add r13d, eax
    new instr:0x7faef3f01275: add r13d, eax
old instr: 0x40d834: movzx edx, bx
    new instr:0x7faef3f01278: movzx edx, bx
old instr: 0x40d837: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0127b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d83e: movsxd rdx, edx
    new instr:0x7faef3f01282: movsxd rdx, edx
old instr: 0x40d841: shl rdx, 0x4
    new instr:0x7faef3f01285: shl rdx, 0x4
old instr: 0x40d845: add rax, rdx
    new instr:0x7faef3f01289: add rax, rdx
old instr: 0x40d848: add rax, 0xc9b8
    new instr:0x7faef3f0128c: add rax, 0xc9b8
old instr: 0x40d84e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01292: mov eax, dword ptr [rax+0x8]
old instr: 0x40d851: add r12d, eax
    new instr:0x7faef3f01295: add r12d, eax
old instr: 0x40d854: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01298: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d857: cdqe 
    new instr:0x7faef3f0129b: cdqe 
old instr: 0x40d859: add rax, 0x8
    new instr:0x7faef3f0129d: add rax, 0x8
old instr: 0x40d85d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f012a1: lea rdx, ptr [rax+rax*1]
old instr: 0x40d861: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f012a5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d865: add rax, rdx
    new instr:0x7faef3f012a9: add rax, rdx
old instr: 0x40d868: movzx ebx, word ptr [rax]
    new instr:0x7faef3f012ac: movzx ebx, word ptr [rax]
old instr: 0x40d86b: movzx edx, bx
    new instr:0x7faef3f012af: movzx edx, bx
old instr: 0x40d86e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f012b2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d875: movsxd rdx, edx
    new instr:0x7faef3f012b9: movsxd rdx, edx
old instr: 0x40d878: add rdx, 0xc9b
    new instr:0x7faef3f012bc: add rdx, 0xc9b
old instr: 0x40d87f: shl rdx, 0x4
    new instr:0x7faef3f012c3: shl rdx, 0x4
old instr: 0x40d883: add rax, rdx
    new instr:0x7faef3f012c7: add rax, rdx
old instr: 0x40d886: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f012ca: mov eax, dword ptr [rax+0x8]
old instr: 0x40d889: add r14d, eax
    new instr:0x7faef3f012cd: add r14d, eax
old instr: 0x40d88c: movzx edx, bx
    new instr:0x7faef3f012d0: movzx edx, bx
old instr: 0x40d88f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f012d3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d896: movsxd rdx, edx
    new instr:0x7faef3f012da: movsxd rdx, edx
old instr: 0x40d899: shl rdx, 0x4
    new instr:0x7faef3f012dd: shl rdx, 0x4
old instr: 0x40d89d: add rax, rdx
    new instr:0x7faef3f012e1: add rax, rdx
old instr: 0x40d8a0: add rax, 0xc9b4
    new instr:0x7faef3f012e4: add rax, 0xc9b4
old instr: 0x40d8a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f012ea: mov eax, dword ptr [rax+0x8]
old instr: 0x40d8a9: add r13d, eax
    new instr:0x7faef3f012ed: add r13d, eax
old instr: 0x40d8ac: movzx edx, bx
    new instr:0x7faef3f012f0: movzx edx, bx
old instr: 0x40d8af: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f012f3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d8b6: movsxd rdx, edx
    new instr:0x7faef3f012fa: movsxd rdx, edx
old instr: 0x40d8b9: shl rdx, 0x4
    new instr:0x7faef3f012fd: shl rdx, 0x4
old instr: 0x40d8bd: add rax, rdx
    new instr:0x7faef3f01301: add rax, rdx
old instr: 0x40d8c0: add rax, 0xc9b8
    new instr:0x7faef3f01304: add rax, 0xc9b8
old instr: 0x40d8c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0130a: mov eax, dword ptr [rax+0x8]
40d8c9
old instr: 0x40d8c9: add r12d, eax
    new instr:0x7faef3f0130d: add r12d, eax
old instr: 0x40d8cc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01310: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d8cf: cdqe 
    new instr:0x7faef3f01313: cdqe 
old instr: 0x40d8d1: add rax, 0x9
    new instr:0x7faef3f01315: add rax, 0x9
old instr: 0x40d8d5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01319: lea rdx, ptr [rax+rax*1]
old instr: 0x40d8d9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0131d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d8dd: add rax, rdx
    new instr:0x7faef3f01321: add rax, rdx
old instr: 0x40d8e0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01324: movzx ebx, word ptr [rax]
old instr: 0x40d8e3: movzx edx, bx
    new instr:0x7faef3f01327: movzx edx, bx
old instr: 0x40d8e6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0132a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d8ed: movsxd rdx, edx
    new instr:0x7faef3f01331: movsxd rdx, edx
old instr: 0x40d8f0: add rdx, 0xc9b
    new instr:0x7faef3f01334: add rdx, 0xc9b
old instr: 0x40d8f7: shl rdx, 0x4
    new instr:0x7faef3f0133b: shl rdx, 0x4
old instr: 0x40d8fb: add rax, rdx
    new instr:0x7faef3f0133f: add rax, rdx
old instr: 0x40d8fe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01342: mov eax, dword ptr [rax+0x8]
old instr: 0x40d901: add r14d, eax
    new instr:0x7faef3f01345: add r14d, eax
old instr: 0x40d904: movzx edx, bx
    new instr:0x7faef3f01348: movzx edx, bx
old instr: 0x40d907: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0134b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d90e: movsxd rdx, edx
    new instr:0x7faef3f01352: movsxd rdx, edx
old instr: 0x40d911: shl rdx, 0x4
    new instr:0x7faef3f01355: shl rdx, 0x4
old instr: 0x40d915: add rax, rdx
    new instr:0x7faef3f01359: add rax, rdx
old instr: 0x40d918: add rax, 0xc9b4
    new instr:0x7faef3f0135c: add rax, 0xc9b4
old instr: 0x40d91e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01362: mov eax, dword ptr [rax+0x8]
old instr: 0x40d921: add r13d, eax
    new instr:0x7faef3f01365: add r13d, eax
old instr: 0x40d924: movzx edx, bx
    new instr:0x7faef3f01368: movzx edx, bx
old instr: 0x40d927: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0136b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d92e: movsxd rdx, edx
    new instr:0x7faef3f01372: movsxd rdx, edx
old instr: 0x40d931: shl rdx, 0x4
    new instr:0x7faef3f01375: shl rdx, 0x4
old instr: 0x40d935: add rax, rdx
    new instr:0x7faef3f01379: add rax, rdx
old instr: 0x40d938: add rax, 0xc9b8
    new instr:0x7faef3f0137c: add rax, 0xc9b8
old instr: 0x40d93e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01382: mov eax, dword ptr [rax+0x8]
old instr: 0x40d941: add r12d, eax
    new instr:0x7faef3f01385: add r12d, eax
old instr: 0x40d944: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01388: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d947: cdqe 
    new instr:0x7faef3f0138b: cdqe 
old instr: 0x40d949: add rax, 0xa
    new instr:0x7faef3f0138d: add rax, 0xa
old instr: 0x40d94d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01391: lea rdx, ptr [rax+rax*1]
old instr: 0x40d951: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01395: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d955: add rax, rdx
    new instr:0x7faef3f01399: add rax, rdx
old instr: 0x40d958: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0139c: movzx ebx, word ptr [rax]
old instr: 0x40d95b: movzx edx, bx
    new instr:0x7faef3f0139f: movzx edx, bx
old instr: 0x40d95e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f013a2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d965: movsxd rdx, edx
    new instr:0x7faef3f013a9: movsxd rdx, edx
old instr: 0x40d968: add rdx, 0xc9b
    new instr:0x7faef3f013ac: add rdx, 0xc9b
old instr: 0x40d96f: shl rdx, 0x4
    new instr:0x7faef3f013b3: shl rdx, 0x4
old instr: 0x40d973: add rax, rdx
    new instr:0x7faef3f013b7: add rax, rdx
old instr: 0x40d976: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f013ba: mov eax, dword ptr [rax+0x8]
old instr: 0x40d979: add r14d, eax
    new instr:0x7faef3f013bd: add r14d, eax
old instr: 0x40d97c: movzx edx, bx
    new instr:0x7faef3f013c0: movzx edx, bx
old instr: 0x40d97f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f013c3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d986: movsxd rdx, edx
    new instr:0x7faef3f013ca: movsxd rdx, edx
old instr: 0x40d989: shl rdx, 0x4
    new instr:0x7faef3f013cd: shl rdx, 0x4
old instr: 0x40d98d: add rax, rdx
    new instr:0x7faef3f013d1: add rax, rdx
old instr: 0x40d990: add rax, 0xc9b4
    new instr:0x7faef3f013d4: add rax, 0xc9b4
old instr: 0x40d996: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f013da: mov eax, dword ptr [rax+0x8]
old instr: 0x40d999: add r13d, eax
    new instr:0x7faef3f013dd: add r13d, eax
old instr: 0x40d99c: movzx edx, bx
    new instr:0x7faef3f013e0: movzx edx, bx
old instr: 0x40d99f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f013e3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d9a6: movsxd rdx, edx
    new instr:0x7faef3f013ea: movsxd rdx, edx
old instr: 0x40d9a9: shl rdx, 0x4
    new instr:0x7faef3f013ed: shl rdx, 0x4
old instr: 0x40d9ad: add rax, rdx
    new instr:0x7faef3f013f1: add rax, rdx
old instr: 0x40d9b0: add rax, 0xc9b8
    new instr:0x7faef3f013f4: add rax, 0xc9b8
old instr: 0x40d9b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f013fa: mov eax, dword ptr [rax+0x8]
old instr: 0x40d9b9: add r12d, eax
    new instr:0x7faef3f013fd: add r12d, eax
old instr: 0x40d9bc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01400: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d9bf: cdqe 
    new instr:0x7faef3f01403: cdqe 
old instr: 0x40d9c1: add rax, 0xb
    new instr:0x7faef3f01405: add rax, 0xb
old instr: 0x40d9c5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01409: lea rdx, ptr [rax+rax*1]
old instr: 0x40d9c9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0140d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d9cd: add rax, rdx
    new instr:0x7faef3f01411: add rax, rdx
old instr: 0x40d9d0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01414: movzx ebx, word ptr [rax]
40d9d3
old instr: 0x40d9d3: movzx edx, bx
    new instr:0x7faef3f01417: movzx edx, bx
old instr: 0x40d9d6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0141a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d9dd: movsxd rdx, edx
    new instr:0x7faef3f01421: movsxd rdx, edx
old instr: 0x40d9e0: add rdx, 0xc9b
    new instr:0x7faef3f01424: add rdx, 0xc9b
old instr: 0x40d9e7: shl rdx, 0x4
    new instr:0x7faef3f0142b: shl rdx, 0x4
old instr: 0x40d9eb: add rax, rdx
    new instr:0x7faef3f0142f: add rax, rdx
old instr: 0x40d9ee: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01432: mov eax, dword ptr [rax+0x8]
old instr: 0x40d9f1: add r14d, eax
    new instr:0x7faef3f01435: add r14d, eax
old instr: 0x40d9f4: movzx edx, bx
    new instr:0x7faef3f01438: movzx edx, bx
old instr: 0x40d9f7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0143b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d9fe: movsxd rdx, edx
    new instr:0x7faef3f01442: movsxd rdx, edx
old instr: 0x40da01: shl rdx, 0x4
    new instr:0x7faef3f01445: shl rdx, 0x4
old instr: 0x40da05: add rax, rdx
    new instr:0x7faef3f01449: add rax, rdx
old instr: 0x40da08: add rax, 0xc9b4
    new instr:0x7faef3f0144c: add rax, 0xc9b4
old instr: 0x40da0e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01452: mov eax, dword ptr [rax+0x8]
old instr: 0x40da11: add r13d, eax
    new instr:0x7faef3f01455: add r13d, eax
old instr: 0x40da14: movzx edx, bx
    new instr:0x7faef3f01458: movzx edx, bx
old instr: 0x40da17: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0145b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40da1e: movsxd rdx, edx
    new instr:0x7faef3f01462: movsxd rdx, edx
old instr: 0x40da21: shl rdx, 0x4
    new instr:0x7faef3f01465: shl rdx, 0x4
old instr: 0x40da25: add rax, rdx
    new instr:0x7faef3f01469: add rax, rdx
old instr: 0x40da28: add rax, 0xc9b8
    new instr:0x7faef3f0146c: add rax, 0xc9b8
old instr: 0x40da2e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01472: mov eax, dword ptr [rax+0x8]
old instr: 0x40da31: add r12d, eax
    new instr:0x7faef3f01475: add r12d, eax
old instr: 0x40da34: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01478: mov eax, dword ptr [rbp-0x34]
old instr: 0x40da37: cdqe 
    new instr:0x7faef3f0147b: cdqe 
old instr: 0x40da39: add rax, 0xc
    new instr:0x7faef3f0147d: add rax, 0xc
old instr: 0x40da3d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01481: lea rdx, ptr [rax+rax*1]
old instr: 0x40da41: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01485: mov rax, qword ptr [rbp-0x78]
old instr: 0x40da45: add rax, rdx
    new instr:0x7faef3f01489: add rax, rdx
old instr: 0x40da48: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0148c: movzx ebx, word ptr [rax]
old instr: 0x40da4b: movzx edx, bx
    new instr:0x7faef3f0148f: movzx edx, bx
old instr: 0x40da4e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01492: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40da55: movsxd rdx, edx
    new instr:0x7faef3f01499: movsxd rdx, edx
old instr: 0x40da58: add rdx, 0xc9b
    new instr:0x7faef3f0149c: add rdx, 0xc9b
old instr: 0x40da5f: shl rdx, 0x4
    new instr:0x7faef3f014a3: shl rdx, 0x4
old instr: 0x40da63: add rax, rdx
    new instr:0x7faef3f014a7: add rax, rdx
old instr: 0x40da66: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f014aa: mov eax, dword ptr [rax+0x8]
old instr: 0x40da69: add r14d, eax
    new instr:0x7faef3f014ad: add r14d, eax
old instr: 0x40da6c: movzx edx, bx
    new instr:0x7faef3f014b0: movzx edx, bx
old instr: 0x40da6f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f014b3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40da76: movsxd rdx, edx
    new instr:0x7faef3f014ba: movsxd rdx, edx
old instr: 0x40da79: shl rdx, 0x4
    new instr:0x7faef3f014bd: shl rdx, 0x4
old instr: 0x40da7d: add rax, rdx
    new instr:0x7faef3f014c1: add rax, rdx
old instr: 0x40da80: add rax, 0xc9b4
    new instr:0x7faef3f014c4: add rax, 0xc9b4
old instr: 0x40da86: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f014ca: mov eax, dword ptr [rax+0x8]
old instr: 0x40da89: add r13d, eax
    new instr:0x7faef3f014cd: add r13d, eax
old instr: 0x40da8c: movzx edx, bx
    new instr:0x7faef3f014d0: movzx edx, bx
old instr: 0x40da8f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f014d3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40da96: movsxd rdx, edx
    new instr:0x7faef3f014da: movsxd rdx, edx
old instr: 0x40da99: shl rdx, 0x4
    new instr:0x7faef3f014dd: shl rdx, 0x4
old instr: 0x40da9d: add rax, rdx
    new instr:0x7faef3f014e1: add rax, rdx
old instr: 0x40daa0: add rax, 0xc9b8
    new instr:0x7faef3f014e4: add rax, 0xc9b8
old instr: 0x40daa6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f014ea: mov eax, dword ptr [rax+0x8]
old instr: 0x40daa9: add r12d, eax
    new instr:0x7faef3f014ed: add r12d, eax
old instr: 0x40daac: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f014f0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40daaf: cdqe 
    new instr:0x7faef3f014f3: cdqe 
old instr: 0x40dab1: add rax, 0xd
    new instr:0x7faef3f014f5: add rax, 0xd
old instr: 0x40dab5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f014f9: lea rdx, ptr [rax+rax*1]
old instr: 0x40dab9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f014fd: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dabd: add rax, rdx
    new instr:0x7faef3f01501: add rax, rdx
old instr: 0x40dac0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01504: movzx ebx, word ptr [rax]
old instr: 0x40dac3: movzx edx, bx
    new instr:0x7faef3f01507: movzx edx, bx
old instr: 0x40dac6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0150a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dacd: movsxd rdx, edx
    new instr:0x7faef3f01511: movsxd rdx, edx
old instr: 0x40dad0: add rdx, 0xc9b
    new instr:0x7faef3f01514: add rdx, 0xc9b
old instr: 0x40dad7: shl rdx, 0x4
    new instr:0x7faef3f0151b: shl rdx, 0x4
old instr: 0x40dadb: add rax, rdx
    new instr:0x7faef3f0151f: add rax, rdx
old instr: 0x40dade: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01522: mov eax, dword ptr [rax+0x8]
old instr: 0x40dae1: add r14d, eax
    new instr:0x7faef3f01525: add r14d, eax
40dae4
old instr: 0x40dae4: movzx edx, bx
    new instr:0x7faef3f01528: movzx edx, bx
old instr: 0x40dae7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0152b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40daee: movsxd rdx, edx
    new instr:0x7faef3f01532: movsxd rdx, edx
old instr: 0x40daf1: shl rdx, 0x4
    new instr:0x7faef3f01535: shl rdx, 0x4
old instr: 0x40daf5: add rax, rdx
    new instr:0x7faef3f01539: add rax, rdx
old instr: 0x40daf8: add rax, 0xc9b4
    new instr:0x7faef3f0153c: add rax, 0xc9b4
old instr: 0x40dafe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01542: mov eax, dword ptr [rax+0x8]
old instr: 0x40db01: add r13d, eax
    new instr:0x7faef3f01545: add r13d, eax
old instr: 0x40db04: movzx edx, bx
    new instr:0x7faef3f01548: movzx edx, bx
old instr: 0x40db07: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0154b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40db0e: movsxd rdx, edx
    new instr:0x7faef3f01552: movsxd rdx, edx
old instr: 0x40db11: shl rdx, 0x4
    new instr:0x7faef3f01555: shl rdx, 0x4
old instr: 0x40db15: add rax, rdx
    new instr:0x7faef3f01559: add rax, rdx
old instr: 0x40db18: add rax, 0xc9b8
    new instr:0x7faef3f0155c: add rax, 0xc9b8
old instr: 0x40db1e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01562: mov eax, dword ptr [rax+0x8]
old instr: 0x40db21: add r12d, eax
    new instr:0x7faef3f01565: add r12d, eax
old instr: 0x40db24: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01568: mov eax, dword ptr [rbp-0x34]
old instr: 0x40db27: cdqe 
    new instr:0x7faef3f0156b: cdqe 
old instr: 0x40db29: add rax, 0xe
    new instr:0x7faef3f0156d: add rax, 0xe
old instr: 0x40db2d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01571: lea rdx, ptr [rax+rax*1]
old instr: 0x40db31: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01575: mov rax, qword ptr [rbp-0x78]
old instr: 0x40db35: add rax, rdx
    new instr:0x7faef3f01579: add rax, rdx
old instr: 0x40db38: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0157c: movzx ebx, word ptr [rax]
old instr: 0x40db3b: movzx edx, bx
    new instr:0x7faef3f0157f: movzx edx, bx
old instr: 0x40db3e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01582: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40db45: movsxd rdx, edx
    new instr:0x7faef3f01589: movsxd rdx, edx
old instr: 0x40db48: add rdx, 0xc9b
    new instr:0x7faef3f0158c: add rdx, 0xc9b
old instr: 0x40db4f: shl rdx, 0x4
    new instr:0x7faef3f01593: shl rdx, 0x4
old instr: 0x40db53: add rax, rdx
    new instr:0x7faef3f01597: add rax, rdx
old instr: 0x40db56: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0159a: mov eax, dword ptr [rax+0x8]
old instr: 0x40db59: add r14d, eax
    new instr:0x7faef3f0159d: add r14d, eax
old instr: 0x40db5c: movzx edx, bx
    new instr:0x7faef3f015a0: movzx edx, bx
old instr: 0x40db5f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f015a3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40db66: movsxd rdx, edx
    new instr:0x7faef3f015aa: movsxd rdx, edx
old instr: 0x40db69: shl rdx, 0x4
    new instr:0x7faef3f015ad: shl rdx, 0x4
old instr: 0x40db6d: add rax, rdx
    new instr:0x7faef3f015b1: add rax, rdx
old instr: 0x40db70: add rax, 0xc9b4
    new instr:0x7faef3f015b4: add rax, 0xc9b4
old instr: 0x40db76: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f015ba: mov eax, dword ptr [rax+0x8]
old instr: 0x40db79: add r13d, eax
    new instr:0x7faef3f015bd: add r13d, eax
old instr: 0x40db7c: movzx edx, bx
    new instr:0x7faef3f015c0: movzx edx, bx
old instr: 0x40db7f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f015c3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40db86: movsxd rdx, edx
    new instr:0x7faef3f015ca: movsxd rdx, edx
old instr: 0x40db89: shl rdx, 0x4
    new instr:0x7faef3f015cd: shl rdx, 0x4
old instr: 0x40db8d: add rax, rdx
    new instr:0x7faef3f015d1: add rax, rdx
old instr: 0x40db90: add rax, 0xc9b8
    new instr:0x7faef3f015d4: add rax, 0xc9b8
old instr: 0x40db96: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f015da: mov eax, dword ptr [rax+0x8]
old instr: 0x40db99: add r12d, eax
    new instr:0x7faef3f015dd: add r12d, eax
old instr: 0x40db9c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f015e0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40db9f: cdqe 
    new instr:0x7faef3f015e3: cdqe 
old instr: 0x40dba1: add rax, 0xf
    new instr:0x7faef3f015e5: add rax, 0xf
old instr: 0x40dba5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f015e9: lea rdx, ptr [rax+rax*1]
old instr: 0x40dba9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f015ed: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dbad: add rax, rdx
    new instr:0x7faef3f015f1: add rax, rdx
old instr: 0x40dbb0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f015f4: movzx ebx, word ptr [rax]
old instr: 0x40dbb3: movzx edx, bx
    new instr:0x7faef3f015f7: movzx edx, bx
old instr: 0x40dbb6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f015fa: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dbbd: movsxd rdx, edx
    new instr:0x7faef3f01601: movsxd rdx, edx
old instr: 0x40dbc0: add rdx, 0xc9b
    new instr:0x7faef3f01604: add rdx, 0xc9b
old instr: 0x40dbc7: shl rdx, 0x4
    new instr:0x7faef3f0160b: shl rdx, 0x4
old instr: 0x40dbcb: add rax, rdx
    new instr:0x7faef3f0160f: add rax, rdx
old instr: 0x40dbce: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01612: mov eax, dword ptr [rax+0x8]
old instr: 0x40dbd1: add r14d, eax
    new instr:0x7faef3f01615: add r14d, eax
old instr: 0x40dbd4: movzx edx, bx
    new instr:0x7faef3f01618: movzx edx, bx
old instr: 0x40dbd7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0161b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dbde: movsxd rdx, edx
    new instr:0x7faef3f01622: movsxd rdx, edx
old instr: 0x40dbe1: shl rdx, 0x4
    new instr:0x7faef3f01625: shl rdx, 0x4
old instr: 0x40dbe5: add rax, rdx
    new instr:0x7faef3f01629: add rax, rdx
old instr: 0x40dbe8: add rax, 0xc9b4
    new instr:0x7faef3f0162c: add rax, 0xc9b4
old instr: 0x40dbee: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01632: mov eax, dword ptr [rax+0x8]
old instr: 0x40dbf1: add r13d, eax
    new instr:0x7faef3f01635: add r13d, eax
40dbf4
old instr: 0x40dbf4: movzx edx, bx
    new instr:0x7faef3f01638: movzx edx, bx
old instr: 0x40dbf7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0163b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dbfe: movsxd rdx, edx
    new instr:0x7faef3f01642: movsxd rdx, edx
old instr: 0x40dc01: shl rdx, 0x4
    new instr:0x7faef3f01645: shl rdx, 0x4
old instr: 0x40dc05: add rax, rdx
    new instr:0x7faef3f01649: add rax, rdx
old instr: 0x40dc08: add rax, 0xc9b8
    new instr:0x7faef3f0164c: add rax, 0xc9b8
old instr: 0x40dc0e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01652: mov eax, dword ptr [rax+0x8]
old instr: 0x40dc11: add r12d, eax
    new instr:0x7faef3f01655: add r12d, eax
old instr: 0x40dc14: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01658: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dc17: cdqe 
    new instr:0x7faef3f0165b: cdqe 
old instr: 0x40dc19: add rax, 0x10
    new instr:0x7faef3f0165d: add rax, 0x10
old instr: 0x40dc1d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01661: lea rdx, ptr [rax+rax*1]
old instr: 0x40dc21: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01665: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dc25: add rax, rdx
    new instr:0x7faef3f01669: add rax, rdx
old instr: 0x40dc28: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0166c: movzx ebx, word ptr [rax]
old instr: 0x40dc2b: movzx edx, bx
    new instr:0x7faef3f0166f: movzx edx, bx
old instr: 0x40dc2e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01672: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dc35: movsxd rdx, edx
    new instr:0x7faef3f01679: movsxd rdx, edx
old instr: 0x40dc38: add rdx, 0xc9b
    new instr:0x7faef3f0167c: add rdx, 0xc9b
old instr: 0x40dc3f: shl rdx, 0x4
    new instr:0x7faef3f01683: shl rdx, 0x4
old instr: 0x40dc43: add rax, rdx
    new instr:0x7faef3f01687: add rax, rdx
old instr: 0x40dc46: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0168a: mov eax, dword ptr [rax+0x8]
old instr: 0x40dc49: add r14d, eax
    new instr:0x7faef3f0168d: add r14d, eax
old instr: 0x40dc4c: movzx edx, bx
    new instr:0x7faef3f01690: movzx edx, bx
old instr: 0x40dc4f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01693: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dc56: movsxd rdx, edx
    new instr:0x7faef3f0169a: movsxd rdx, edx
old instr: 0x40dc59: shl rdx, 0x4
    new instr:0x7faef3f0169d: shl rdx, 0x4
old instr: 0x40dc5d: add rax, rdx
    new instr:0x7faef3f016a1: add rax, rdx
old instr: 0x40dc60: add rax, 0xc9b4
    new instr:0x7faef3f016a4: add rax, 0xc9b4
old instr: 0x40dc66: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f016aa: mov eax, dword ptr [rax+0x8]
old instr: 0x40dc69: add r13d, eax
    new instr:0x7faef3f016ad: add r13d, eax
old instr: 0x40dc6c: movzx edx, bx
    new instr:0x7faef3f016b0: movzx edx, bx
old instr: 0x40dc6f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f016b3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dc76: movsxd rdx, edx
    new instr:0x7faef3f016ba: movsxd rdx, edx
old instr: 0x40dc79: shl rdx, 0x4
    new instr:0x7faef3f016bd: shl rdx, 0x4
old instr: 0x40dc7d: add rax, rdx
    new instr:0x7faef3f016c1: add rax, rdx
old instr: 0x40dc80: add rax, 0xc9b8
    new instr:0x7faef3f016c4: add rax, 0xc9b8
old instr: 0x40dc86: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f016ca: mov eax, dword ptr [rax+0x8]
old instr: 0x40dc89: add r12d, eax
    new instr:0x7faef3f016cd: add r12d, eax
old instr: 0x40dc8c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f016d0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dc8f: cdqe 
    new instr:0x7faef3f016d3: cdqe 
old instr: 0x40dc91: add rax, 0x11
    new instr:0x7faef3f016d5: add rax, 0x11
old instr: 0x40dc95: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f016d9: lea rdx, ptr [rax+rax*1]
old instr: 0x40dc99: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f016dd: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dc9d: add rax, rdx
    new instr:0x7faef3f016e1: add rax, rdx
old instr: 0x40dca0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f016e4: movzx ebx, word ptr [rax]
old instr: 0x40dca3: movzx edx, bx
    new instr:0x7faef3f016e7: movzx edx, bx
old instr: 0x40dca6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f016ea: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dcad: movsxd rdx, edx
    new instr:0x7faef3f016f1: movsxd rdx, edx
old instr: 0x40dcb0: add rdx, 0xc9b
    new instr:0x7faef3f016f4: add rdx, 0xc9b
old instr: 0x40dcb7: shl rdx, 0x4
    new instr:0x7faef3f016fb: shl rdx, 0x4
old instr: 0x40dcbb: add rax, rdx
    new instr:0x7faef3f016ff: add rax, rdx
old instr: 0x40dcbe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01702: mov eax, dword ptr [rax+0x8]
old instr: 0x40dcc1: add r14d, eax
    new instr:0x7faef3f01705: add r14d, eax
old instr: 0x40dcc4: movzx edx, bx
    new instr:0x7faef3f01708: movzx edx, bx
old instr: 0x40dcc7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0170b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dcce: movsxd rdx, edx
    new instr:0x7faef3f01712: movsxd rdx, edx
old instr: 0x40dcd1: shl rdx, 0x4
    new instr:0x7faef3f01715: shl rdx, 0x4
old instr: 0x40dcd5: add rax, rdx
    new instr:0x7faef3f01719: add rax, rdx
old instr: 0x40dcd8: add rax, 0xc9b4
    new instr:0x7faef3f0171c: add rax, 0xc9b4
old instr: 0x40dcde: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01722: mov eax, dword ptr [rax+0x8]
old instr: 0x40dce1: add r13d, eax
    new instr:0x7faef3f01725: add r13d, eax
old instr: 0x40dce4: movzx edx, bx
    new instr:0x7faef3f01728: movzx edx, bx
old instr: 0x40dce7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0172b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dcee: movsxd rdx, edx
    new instr:0x7faef3f01732: movsxd rdx, edx
old instr: 0x40dcf1: shl rdx, 0x4
    new instr:0x7faef3f01735: shl rdx, 0x4
old instr: 0x40dcf5: add rax, rdx
    new instr:0x7faef3f01739: add rax, rdx
old instr: 0x40dcf8: add rax, 0xc9b8
    new instr:0x7faef3f0173c: add rax, 0xc9b8
old instr: 0x40dcfe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01742: mov eax, dword ptr [rax+0x8]
old instr: 0x40dd01: add r12d, eax
    new instr:0x7faef3f01745: add r12d, eax
40dd04
old instr: 0x40dd04: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01748: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dd07: cdqe 
    new instr:0x7faef3f0174b: cdqe 
old instr: 0x40dd09: add rax, 0x12
    new instr:0x7faef3f0174d: add rax, 0x12
old instr: 0x40dd0d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01751: lea rdx, ptr [rax+rax*1]
old instr: 0x40dd11: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01755: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dd15: add rax, rdx
    new instr:0x7faef3f01759: add rax, rdx
old instr: 0x40dd18: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0175c: movzx ebx, word ptr [rax]
old instr: 0x40dd1b: movzx edx, bx
    new instr:0x7faef3f0175f: movzx edx, bx
old instr: 0x40dd1e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01762: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dd25: movsxd rdx, edx
    new instr:0x7faef3f01769: movsxd rdx, edx
old instr: 0x40dd28: add rdx, 0xc9b
    new instr:0x7faef3f0176c: add rdx, 0xc9b
old instr: 0x40dd2f: shl rdx, 0x4
    new instr:0x7faef3f01773: shl rdx, 0x4
old instr: 0x40dd33: add rax, rdx
    new instr:0x7faef3f01777: add rax, rdx
old instr: 0x40dd36: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0177a: mov eax, dword ptr [rax+0x8]
old instr: 0x40dd39: add r14d, eax
    new instr:0x7faef3f0177d: add r14d, eax
old instr: 0x40dd3c: movzx edx, bx
    new instr:0x7faef3f01780: movzx edx, bx
old instr: 0x40dd3f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01783: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dd46: movsxd rdx, edx
    new instr:0x7faef3f0178a: movsxd rdx, edx
old instr: 0x40dd49: shl rdx, 0x4
    new instr:0x7faef3f0178d: shl rdx, 0x4
old instr: 0x40dd4d: add rax, rdx
    new instr:0x7faef3f01791: add rax, rdx
old instr: 0x40dd50: add rax, 0xc9b4
    new instr:0x7faef3f01794: add rax, 0xc9b4
old instr: 0x40dd56: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0179a: mov eax, dword ptr [rax+0x8]
old instr: 0x40dd59: add r13d, eax
    new instr:0x7faef3f0179d: add r13d, eax
old instr: 0x40dd5c: movzx edx, bx
    new instr:0x7faef3f017a0: movzx edx, bx
old instr: 0x40dd5f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f017a3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dd66: movsxd rdx, edx
    new instr:0x7faef3f017aa: movsxd rdx, edx
old instr: 0x40dd69: shl rdx, 0x4
    new instr:0x7faef3f017ad: shl rdx, 0x4
old instr: 0x40dd6d: add rax, rdx
    new instr:0x7faef3f017b1: add rax, rdx
old instr: 0x40dd70: add rax, 0xc9b8
    new instr:0x7faef3f017b4: add rax, 0xc9b8
old instr: 0x40dd76: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f017ba: mov eax, dword ptr [rax+0x8]
old instr: 0x40dd79: add r12d, eax
    new instr:0x7faef3f017bd: add r12d, eax
old instr: 0x40dd7c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f017c0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dd7f: cdqe 
    new instr:0x7faef3f017c3: cdqe 
old instr: 0x40dd81: add rax, 0x13
    new instr:0x7faef3f017c5: add rax, 0x13
old instr: 0x40dd85: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f017c9: lea rdx, ptr [rax+rax*1]
old instr: 0x40dd89: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f017cd: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dd8d: add rax, rdx
    new instr:0x7faef3f017d1: add rax, rdx
old instr: 0x40dd90: movzx ebx, word ptr [rax]
    new instr:0x7faef3f017d4: movzx ebx, word ptr [rax]
old instr: 0x40dd93: movzx edx, bx
    new instr:0x7faef3f017d7: movzx edx, bx
old instr: 0x40dd96: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f017da: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dd9d: movsxd rdx, edx
    new instr:0x7faef3f017e1: movsxd rdx, edx
old instr: 0x40dda0: add rdx, 0xc9b
    new instr:0x7faef3f017e4: add rdx, 0xc9b
old instr: 0x40dda7: shl rdx, 0x4
    new instr:0x7faef3f017eb: shl rdx, 0x4
old instr: 0x40ddab: add rax, rdx
    new instr:0x7faef3f017ef: add rax, rdx
old instr: 0x40ddae: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f017f2: mov eax, dword ptr [rax+0x8]
old instr: 0x40ddb1: add r14d, eax
    new instr:0x7faef3f017f5: add r14d, eax
old instr: 0x40ddb4: movzx edx, bx
    new instr:0x7faef3f017f8: movzx edx, bx
old instr: 0x40ddb7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f017fb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ddbe: movsxd rdx, edx
    new instr:0x7faef3f01802: movsxd rdx, edx
old instr: 0x40ddc1: shl rdx, 0x4
    new instr:0x7faef3f01805: shl rdx, 0x4
old instr: 0x40ddc5: add rax, rdx
    new instr:0x7faef3f01809: add rax, rdx
old instr: 0x40ddc8: add rax, 0xc9b4
    new instr:0x7faef3f0180c: add rax, 0xc9b4
old instr: 0x40ddce: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01812: mov eax, dword ptr [rax+0x8]
old instr: 0x40ddd1: add r13d, eax
    new instr:0x7faef3f01815: add r13d, eax
old instr: 0x40ddd4: movzx edx, bx
    new instr:0x7faef3f01818: movzx edx, bx
old instr: 0x40ddd7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0181b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ddde: movsxd rdx, edx
    new instr:0x7faef3f01822: movsxd rdx, edx
old instr: 0x40dde1: shl rdx, 0x4
    new instr:0x7faef3f01825: shl rdx, 0x4
old instr: 0x40dde5: add rax, rdx
    new instr:0x7faef3f01829: add rax, rdx
old instr: 0x40dde8: add rax, 0xc9b8
    new instr:0x7faef3f0182c: add rax, 0xc9b8
old instr: 0x40ddee: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01832: mov eax, dword ptr [rax+0x8]
old instr: 0x40ddf1: add r12d, eax
    new instr:0x7faef3f01835: add r12d, eax
old instr: 0x40ddf4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01838: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ddf7: cdqe 
    new instr:0x7faef3f0183b: cdqe 
old instr: 0x40ddf9: add rax, 0x14
    new instr:0x7faef3f0183d: add rax, 0x14
old instr: 0x40ddfd: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01841: lea rdx, ptr [rax+rax*1]
old instr: 0x40de01: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01845: mov rax, qword ptr [rbp-0x78]
old instr: 0x40de05: add rax, rdx
    new instr:0x7faef3f01849: add rax, rdx
old instr: 0x40de08: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0184c: movzx ebx, word ptr [rax]
old instr: 0x40de0b: movzx edx, bx
    new instr:0x7faef3f0184f: movzx edx, bx
40de0e
old instr: 0x40de0e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01852: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40de15: movsxd rdx, edx
    new instr:0x7faef3f01859: movsxd rdx, edx
old instr: 0x40de18: add rdx, 0xc9b
    new instr:0x7faef3f0185c: add rdx, 0xc9b
old instr: 0x40de1f: shl rdx, 0x4
    new instr:0x7faef3f01863: shl rdx, 0x4
old instr: 0x40de23: add rax, rdx
    new instr:0x7faef3f01867: add rax, rdx
old instr: 0x40de26: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0186a: mov eax, dword ptr [rax+0x8]
old instr: 0x40de29: add r14d, eax
    new instr:0x7faef3f0186d: add r14d, eax
old instr: 0x40de2c: movzx edx, bx
    new instr:0x7faef3f01870: movzx edx, bx
old instr: 0x40de2f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01873: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40de36: movsxd rdx, edx
    new instr:0x7faef3f0187a: movsxd rdx, edx
old instr: 0x40de39: shl rdx, 0x4
    new instr:0x7faef3f0187d: shl rdx, 0x4
old instr: 0x40de3d: add rax, rdx
    new instr:0x7faef3f01881: add rax, rdx
old instr: 0x40de40: add rax, 0xc9b4
    new instr:0x7faef3f01884: add rax, 0xc9b4
old instr: 0x40de46: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0188a: mov eax, dword ptr [rax+0x8]
old instr: 0x40de49: add r13d, eax
    new instr:0x7faef3f0188d: add r13d, eax
old instr: 0x40de4c: movzx edx, bx
    new instr:0x7faef3f01890: movzx edx, bx
old instr: 0x40de4f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01893: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40de56: movsxd rdx, edx
    new instr:0x7faef3f0189a: movsxd rdx, edx
old instr: 0x40de59: shl rdx, 0x4
    new instr:0x7faef3f0189d: shl rdx, 0x4
old instr: 0x40de5d: add rax, rdx
    new instr:0x7faef3f018a1: add rax, rdx
old instr: 0x40de60: add rax, 0xc9b8
    new instr:0x7faef3f018a4: add rax, 0xc9b8
old instr: 0x40de66: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f018aa: mov eax, dword ptr [rax+0x8]
old instr: 0x40de69: add r12d, eax
    new instr:0x7faef3f018ad: add r12d, eax
old instr: 0x40de6c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f018b0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40de6f: cdqe 
    new instr:0x7faef3f018b3: cdqe 
old instr: 0x40de71: add rax, 0x15
    new instr:0x7faef3f018b5: add rax, 0x15
old instr: 0x40de75: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f018b9: lea rdx, ptr [rax+rax*1]
old instr: 0x40de79: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f018bd: mov rax, qword ptr [rbp-0x78]
old instr: 0x40de7d: add rax, rdx
    new instr:0x7faef3f018c1: add rax, rdx
old instr: 0x40de80: movzx ebx, word ptr [rax]
    new instr:0x7faef3f018c4: movzx ebx, word ptr [rax]
old instr: 0x40de83: movzx edx, bx
    new instr:0x7faef3f018c7: movzx edx, bx
old instr: 0x40de86: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f018ca: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40de8d: movsxd rdx, edx
    new instr:0x7faef3f018d1: movsxd rdx, edx
old instr: 0x40de90: add rdx, 0xc9b
    new instr:0x7faef3f018d4: add rdx, 0xc9b
old instr: 0x40de97: shl rdx, 0x4
    new instr:0x7faef3f018db: shl rdx, 0x4
old instr: 0x40de9b: add rax, rdx
    new instr:0x7faef3f018df: add rax, rdx
old instr: 0x40de9e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f018e2: mov eax, dword ptr [rax+0x8]
old instr: 0x40dea1: add r14d, eax
    new instr:0x7faef3f018e5: add r14d, eax
old instr: 0x40dea4: movzx edx, bx
    new instr:0x7faef3f018e8: movzx edx, bx
old instr: 0x40dea7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f018eb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40deae: movsxd rdx, edx
    new instr:0x7faef3f018f2: movsxd rdx, edx
old instr: 0x40deb1: shl rdx, 0x4
    new instr:0x7faef3f018f5: shl rdx, 0x4
old instr: 0x40deb5: add rax, rdx
    new instr:0x7faef3f018f9: add rax, rdx
old instr: 0x40deb8: add rax, 0xc9b4
    new instr:0x7faef3f018fc: add rax, 0xc9b4
old instr: 0x40debe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01902: mov eax, dword ptr [rax+0x8]
old instr: 0x40dec1: add r13d, eax
    new instr:0x7faef3f01905: add r13d, eax
old instr: 0x40dec4: movzx edx, bx
    new instr:0x7faef3f01908: movzx edx, bx
old instr: 0x40dec7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0190b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dece: movsxd rdx, edx
    new instr:0x7faef3f01912: movsxd rdx, edx
old instr: 0x40ded1: shl rdx, 0x4
    new instr:0x7faef3f01915: shl rdx, 0x4
old instr: 0x40ded5: add rax, rdx
    new instr:0x7faef3f01919: add rax, rdx
old instr: 0x40ded8: add rax, 0xc9b8
    new instr:0x7faef3f0191c: add rax, 0xc9b8
old instr: 0x40dede: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01922: mov eax, dword ptr [rax+0x8]
old instr: 0x40dee1: add r12d, eax
    new instr:0x7faef3f01925: add r12d, eax
old instr: 0x40dee4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01928: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dee7: cdqe 
    new instr:0x7faef3f0192b: cdqe 
old instr: 0x40dee9: add rax, 0x16
    new instr:0x7faef3f0192d: add rax, 0x16
old instr: 0x40deed: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01931: lea rdx, ptr [rax+rax*1]
old instr: 0x40def1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01935: mov rax, qword ptr [rbp-0x78]
old instr: 0x40def5: add rax, rdx
    new instr:0x7faef3f01939: add rax, rdx
old instr: 0x40def8: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0193c: movzx ebx, word ptr [rax]
old instr: 0x40defb: movzx edx, bx
    new instr:0x7faef3f0193f: movzx edx, bx
old instr: 0x40defe: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01942: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df05: movsxd rdx, edx
    new instr:0x7faef3f01949: movsxd rdx, edx
old instr: 0x40df08: add rdx, 0xc9b
    new instr:0x7faef3f0194c: add rdx, 0xc9b
old instr: 0x40df0f: shl rdx, 0x4
    new instr:0x7faef3f01953: shl rdx, 0x4
old instr: 0x40df13: add rax, rdx
    new instr:0x7faef3f01957: add rax, rdx
old instr: 0x40df16: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0195a: mov eax, dword ptr [rax+0x8]
old instr: 0x40df19: add r14d, eax
    new instr:0x7faef3f0195d: add r14d, eax
old instr: 0x40df1c: movzx edx, bx
    new instr:0x7faef3f01960: movzx edx, bx
40df1f
old instr: 0x40df1f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01963: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df26: movsxd rdx, edx
    new instr:0x7faef3f0196a: movsxd rdx, edx
old instr: 0x40df29: shl rdx, 0x4
    new instr:0x7faef3f0196d: shl rdx, 0x4
old instr: 0x40df2d: add rax, rdx
    new instr:0x7faef3f01971: add rax, rdx
old instr: 0x40df30: add rax, 0xc9b4
    new instr:0x7faef3f01974: add rax, 0xc9b4
old instr: 0x40df36: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0197a: mov eax, dword ptr [rax+0x8]
old instr: 0x40df39: add r13d, eax
    new instr:0x7faef3f0197d: add r13d, eax
old instr: 0x40df3c: movzx edx, bx
    new instr:0x7faef3f01980: movzx edx, bx
old instr: 0x40df3f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01983: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df46: movsxd rdx, edx
    new instr:0x7faef3f0198a: movsxd rdx, edx
old instr: 0x40df49: shl rdx, 0x4
    new instr:0x7faef3f0198d: shl rdx, 0x4
old instr: 0x40df4d: add rax, rdx
    new instr:0x7faef3f01991: add rax, rdx
old instr: 0x40df50: add rax, 0xc9b8
    new instr:0x7faef3f01994: add rax, 0xc9b8
old instr: 0x40df56: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0199a: mov eax, dword ptr [rax+0x8]
old instr: 0x40df59: add r12d, eax
    new instr:0x7faef3f0199d: add r12d, eax
old instr: 0x40df5c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f019a0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40df5f: cdqe 
    new instr:0x7faef3f019a3: cdqe 
old instr: 0x40df61: add rax, 0x17
    new instr:0x7faef3f019a5: add rax, 0x17
old instr: 0x40df65: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f019a9: lea rdx, ptr [rax+rax*1]
old instr: 0x40df69: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f019ad: mov rax, qword ptr [rbp-0x78]
old instr: 0x40df6d: add rax, rdx
    new instr:0x7faef3f019b1: add rax, rdx
old instr: 0x40df70: movzx ebx, word ptr [rax]
    new instr:0x7faef3f019b4: movzx ebx, word ptr [rax]
old instr: 0x40df73: movzx edx, bx
    new instr:0x7faef3f019b7: movzx edx, bx
old instr: 0x40df76: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f019ba: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df7d: movsxd rdx, edx
    new instr:0x7faef3f019c1: movsxd rdx, edx
old instr: 0x40df80: add rdx, 0xc9b
    new instr:0x7faef3f019c4: add rdx, 0xc9b
old instr: 0x40df87: shl rdx, 0x4
    new instr:0x7faef3f019cb: shl rdx, 0x4
old instr: 0x40df8b: add rax, rdx
    new instr:0x7faef3f019cf: add rax, rdx
old instr: 0x40df8e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f019d2: mov eax, dword ptr [rax+0x8]
old instr: 0x40df91: add r14d, eax
    new instr:0x7faef3f019d5: add r14d, eax
old instr: 0x40df94: movzx edx, bx
    new instr:0x7faef3f019d8: movzx edx, bx
old instr: 0x40df97: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f019db: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df9e: movsxd rdx, edx
    new instr:0x7faef3f019e2: movsxd rdx, edx
old instr: 0x40dfa1: shl rdx, 0x4
    new instr:0x7faef3f019e5: shl rdx, 0x4
old instr: 0x40dfa5: add rax, rdx
    new instr:0x7faef3f019e9: add rax, rdx
old instr: 0x40dfa8: add rax, 0xc9b4
    new instr:0x7faef3f019ec: add rax, 0xc9b4
old instr: 0x40dfae: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f019f2: mov eax, dword ptr [rax+0x8]
old instr: 0x40dfb1: add r13d, eax
    new instr:0x7faef3f019f5: add r13d, eax
old instr: 0x40dfb4: movzx edx, bx
    new instr:0x7faef3f019f8: movzx edx, bx
old instr: 0x40dfb7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f019fb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dfbe: movsxd rdx, edx
    new instr:0x7faef3f01a02: movsxd rdx, edx
old instr: 0x40dfc1: shl rdx, 0x4
    new instr:0x7faef3f01a05: shl rdx, 0x4
old instr: 0x40dfc5: add rax, rdx
    new instr:0x7faef3f01a09: add rax, rdx
old instr: 0x40dfc8: add rax, 0xc9b8
    new instr:0x7faef3f01a0c: add rax, 0xc9b8
old instr: 0x40dfce: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01a12: mov eax, dword ptr [rax+0x8]
old instr: 0x40dfd1: add r12d, eax
    new instr:0x7faef3f01a15: add r12d, eax
old instr: 0x40dfd4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01a18: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dfd7: cdqe 
    new instr:0x7faef3f01a1b: cdqe 
old instr: 0x40dfd9: add rax, 0x18
    new instr:0x7faef3f01a1d: add rax, 0x18
old instr: 0x40dfdd: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01a21: lea rdx, ptr [rax+rax*1]
old instr: 0x40dfe1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01a25: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dfe5: add rax, rdx
    new instr:0x7faef3f01a29: add rax, rdx
old instr: 0x40dfe8: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01a2c: movzx ebx, word ptr [rax]
old instr: 0x40dfeb: movzx edx, bx
    new instr:0x7faef3f01a2f: movzx edx, bx
old instr: 0x40dfee: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01a32: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dff5: movsxd rdx, edx
    new instr:0x7faef3f01a39: movsxd rdx, edx
old instr: 0x40dff8: add rdx, 0xc9b
    new instr:0x7faef3f01a3c: add rdx, 0xc9b
old instr: 0x40dfff: shl rdx, 0x4
    new instr:0x7faef3f01a43: shl rdx, 0x4
old instr: 0x40e003: add rax, rdx
    new instr:0x7faef3f01a47: add rax, rdx
old instr: 0x40e006: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01a4a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e009: add r14d, eax
    new instr:0x7faef3f01a4d: add r14d, eax
old instr: 0x40e00c: movzx edx, bx
    new instr:0x7faef3f01a50: movzx edx, bx
old instr: 0x40e00f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01a53: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e016: movsxd rdx, edx
    new instr:0x7faef3f01a5a: movsxd rdx, edx
old instr: 0x40e019: shl rdx, 0x4
    new instr:0x7faef3f01a5d: shl rdx, 0x4
old instr: 0x40e01d: add rax, rdx
    new instr:0x7faef3f01a61: add rax, rdx
old instr: 0x40e020: add rax, 0xc9b4
    new instr:0x7faef3f01a64: add rax, 0xc9b4
old instr: 0x40e026: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01a6a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e029: add r13d, eax
    new instr:0x7faef3f01a6d: add r13d, eax
old instr: 0x40e02c: movzx edx, bx
    new instr:0x7faef3f01a70: movzx edx, bx
40e02f
old instr: 0x40e02f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01a73: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e036: movsxd rdx, edx
    new instr:0x7faef3f01a7a: movsxd rdx, edx
old instr: 0x40e039: shl rdx, 0x4
    new instr:0x7faef3f01a7d: shl rdx, 0x4
old instr: 0x40e03d: add rax, rdx
    new instr:0x7faef3f01a81: add rax, rdx
old instr: 0x40e040: add rax, 0xc9b8
    new instr:0x7faef3f01a84: add rax, 0xc9b8
old instr: 0x40e046: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01a8a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e049: add r12d, eax
    new instr:0x7faef3f01a8d: add r12d, eax
old instr: 0x40e04c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01a90: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e04f: cdqe 
    new instr:0x7faef3f01a93: cdqe 
old instr: 0x40e051: add rax, 0x19
    new instr:0x7faef3f01a95: add rax, 0x19
old instr: 0x40e055: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01a99: lea rdx, ptr [rax+rax*1]
old instr: 0x40e059: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01a9d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e05d: add rax, rdx
    new instr:0x7faef3f01aa1: add rax, rdx
old instr: 0x40e060: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01aa4: movzx ebx, word ptr [rax]
old instr: 0x40e063: movzx edx, bx
    new instr:0x7faef3f01aa7: movzx edx, bx
old instr: 0x40e066: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01aaa: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e06d: movsxd rdx, edx
    new instr:0x7faef3f01ab1: movsxd rdx, edx
old instr: 0x40e070: add rdx, 0xc9b
    new instr:0x7faef3f01ab4: add rdx, 0xc9b
old instr: 0x40e077: shl rdx, 0x4
    new instr:0x7faef3f01abb: shl rdx, 0x4
old instr: 0x40e07b: add rax, rdx
    new instr:0x7faef3f01abf: add rax, rdx
old instr: 0x40e07e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01ac2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e081: add r14d, eax
    new instr:0x7faef3f01ac5: add r14d, eax
old instr: 0x40e084: movzx edx, bx
    new instr:0x7faef3f01ac8: movzx edx, bx
old instr: 0x40e087: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01acb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e08e: movsxd rdx, edx
    new instr:0x7faef3f01ad2: movsxd rdx, edx
old instr: 0x40e091: shl rdx, 0x4
    new instr:0x7faef3f01ad5: shl rdx, 0x4
old instr: 0x40e095: add rax, rdx
    new instr:0x7faef3f01ad9: add rax, rdx
old instr: 0x40e098: add rax, 0xc9b4
    new instr:0x7faef3f01adc: add rax, 0xc9b4
old instr: 0x40e09e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01ae2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e0a1: add r13d, eax
    new instr:0x7faef3f01ae5: add r13d, eax
old instr: 0x40e0a4: movzx edx, bx
    new instr:0x7faef3f01ae8: movzx edx, bx
old instr: 0x40e0a7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01aeb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e0ae: movsxd rdx, edx
    new instr:0x7faef3f01af2: movsxd rdx, edx
old instr: 0x40e0b1: shl rdx, 0x4
    new instr:0x7faef3f01af5: shl rdx, 0x4
old instr: 0x40e0b5: add rax, rdx
    new instr:0x7faef3f01af9: add rax, rdx
old instr: 0x40e0b8: add rax, 0xc9b8
    new instr:0x7faef3f01afc: add rax, 0xc9b8
old instr: 0x40e0be: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01b02: mov eax, dword ptr [rax+0x8]
old instr: 0x40e0c1: add r12d, eax
    new instr:0x7faef3f01b05: add r12d, eax
old instr: 0x40e0c4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01b08: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e0c7: cdqe 
    new instr:0x7faef3f01b0b: cdqe 
old instr: 0x40e0c9: add rax, 0x1a
    new instr:0x7faef3f01b0d: add rax, 0x1a
old instr: 0x40e0cd: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01b11: lea rdx, ptr [rax+rax*1]
old instr: 0x40e0d1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01b15: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e0d5: add rax, rdx
    new instr:0x7faef3f01b19: add rax, rdx
old instr: 0x40e0d8: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01b1c: movzx ebx, word ptr [rax]
old instr: 0x40e0db: movzx edx, bx
    new instr:0x7faef3f01b1f: movzx edx, bx
old instr: 0x40e0de: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01b22: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e0e5: movsxd rdx, edx
    new instr:0x7faef3f01b29: movsxd rdx, edx
old instr: 0x40e0e8: add rdx, 0xc9b
    new instr:0x7faef3f01b2c: add rdx, 0xc9b
old instr: 0x40e0ef: shl rdx, 0x4
    new instr:0x7faef3f01b33: shl rdx, 0x4
old instr: 0x40e0f3: add rax, rdx
    new instr:0x7faef3f01b37: add rax, rdx
old instr: 0x40e0f6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01b3a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e0f9: add r14d, eax
    new instr:0x7faef3f01b3d: add r14d, eax
old instr: 0x40e0fc: movzx edx, bx
    new instr:0x7faef3f01b40: movzx edx, bx
old instr: 0x40e0ff: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01b43: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e106: movsxd rdx, edx
    new instr:0x7faef3f01b4a: movsxd rdx, edx
old instr: 0x40e109: shl rdx, 0x4
    new instr:0x7faef3f01b4d: shl rdx, 0x4
old instr: 0x40e10d: add rax, rdx
    new instr:0x7faef3f01b51: add rax, rdx
old instr: 0x40e110: add rax, 0xc9b4
    new instr:0x7faef3f01b54: add rax, 0xc9b4
old instr: 0x40e116: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01b5a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e119: add r13d, eax
    new instr:0x7faef3f01b5d: add r13d, eax
old instr: 0x40e11c: movzx edx, bx
    new instr:0x7faef3f01b60: movzx edx, bx
old instr: 0x40e11f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01b63: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e126: movsxd rdx, edx
    new instr:0x7faef3f01b6a: movsxd rdx, edx
old instr: 0x40e129: shl rdx, 0x4
    new instr:0x7faef3f01b6d: shl rdx, 0x4
old instr: 0x40e12d: add rax, rdx
    new instr:0x7faef3f01b71: add rax, rdx
old instr: 0x40e130: add rax, 0xc9b8
    new instr:0x7faef3f01b74: add rax, 0xc9b8
old instr: 0x40e136: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01b7a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e139: add r12d, eax
    new instr:0x7faef3f01b7d: add r12d, eax
old instr: 0x40e13c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01b80: mov eax, dword ptr [rbp-0x34]
40e13f
old instr: 0x40e13f: cdqe 
    new instr:0x7faef3f01b83: cdqe 
old instr: 0x40e141: add rax, 0x1b
    new instr:0x7faef3f01b85: add rax, 0x1b
old instr: 0x40e145: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01b89: lea rdx, ptr [rax+rax*1]
old instr: 0x40e149: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01b8d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e14d: add rax, rdx
    new instr:0x7faef3f01b91: add rax, rdx
old instr: 0x40e150: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01b94: movzx ebx, word ptr [rax]
old instr: 0x40e153: movzx edx, bx
    new instr:0x7faef3f01b97: movzx edx, bx
old instr: 0x40e156: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01b9a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e15d: movsxd rdx, edx
    new instr:0x7faef3f01ba1: movsxd rdx, edx
old instr: 0x40e160: add rdx, 0xc9b
    new instr:0x7faef3f01ba4: add rdx, 0xc9b
old instr: 0x40e167: shl rdx, 0x4
    new instr:0x7faef3f01bab: shl rdx, 0x4
old instr: 0x40e16b: add rax, rdx
    new instr:0x7faef3f01baf: add rax, rdx
old instr: 0x40e16e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01bb2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e171: add r14d, eax
    new instr:0x7faef3f01bb5: add r14d, eax
old instr: 0x40e174: movzx edx, bx
    new instr:0x7faef3f01bb8: movzx edx, bx
old instr: 0x40e177: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01bbb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e17e: movsxd rdx, edx
    new instr:0x7faef3f01bc2: movsxd rdx, edx
old instr: 0x40e181: shl rdx, 0x4
    new instr:0x7faef3f01bc5: shl rdx, 0x4
old instr: 0x40e185: add rax, rdx
    new instr:0x7faef3f01bc9: add rax, rdx
old instr: 0x40e188: add rax, 0xc9b4
    new instr:0x7faef3f01bcc: add rax, 0xc9b4
old instr: 0x40e18e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01bd2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e191: add r13d, eax
    new instr:0x7faef3f01bd5: add r13d, eax
old instr: 0x40e194: movzx edx, bx
    new instr:0x7faef3f01bd8: movzx edx, bx
old instr: 0x40e197: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01bdb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e19e: movsxd rdx, edx
    new instr:0x7faef3f01be2: movsxd rdx, edx
old instr: 0x40e1a1: shl rdx, 0x4
    new instr:0x7faef3f01be5: shl rdx, 0x4
old instr: 0x40e1a5: add rax, rdx
    new instr:0x7faef3f01be9: add rax, rdx
old instr: 0x40e1a8: add rax, 0xc9b8
    new instr:0x7faef3f01bec: add rax, 0xc9b8
old instr: 0x40e1ae: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01bf2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e1b1: add r12d, eax
    new instr:0x7faef3f01bf5: add r12d, eax
old instr: 0x40e1b4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01bf8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e1b7: cdqe 
    new instr:0x7faef3f01bfb: cdqe 
old instr: 0x40e1b9: add rax, 0x1c
    new instr:0x7faef3f01bfd: add rax, 0x1c
old instr: 0x40e1bd: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01c01: lea rdx, ptr [rax+rax*1]
old instr: 0x40e1c1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01c05: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e1c5: add rax, rdx
    new instr:0x7faef3f01c09: add rax, rdx
old instr: 0x40e1c8: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01c0c: movzx ebx, word ptr [rax]
old instr: 0x40e1cb: movzx edx, bx
    new instr:0x7faef3f01c0f: movzx edx, bx
old instr: 0x40e1ce: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01c12: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e1d5: movsxd rdx, edx
    new instr:0x7faef3f01c19: movsxd rdx, edx
old instr: 0x40e1d8: add rdx, 0xc9b
    new instr:0x7faef3f01c1c: add rdx, 0xc9b
old instr: 0x40e1df: shl rdx, 0x4
    new instr:0x7faef3f01c23: shl rdx, 0x4
old instr: 0x40e1e3: add rax, rdx
    new instr:0x7faef3f01c27: add rax, rdx
old instr: 0x40e1e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01c2a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e1e9: add r14d, eax
    new instr:0x7faef3f01c2d: add r14d, eax
old instr: 0x40e1ec: movzx edx, bx
    new instr:0x7faef3f01c30: movzx edx, bx
old instr: 0x40e1ef: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01c33: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e1f6: movsxd rdx, edx
    new instr:0x7faef3f01c3a: movsxd rdx, edx
old instr: 0x40e1f9: shl rdx, 0x4
    new instr:0x7faef3f01c3d: shl rdx, 0x4
old instr: 0x40e1fd: add rax, rdx
    new instr:0x7faef3f01c41: add rax, rdx
old instr: 0x40e200: add rax, 0xc9b4
    new instr:0x7faef3f01c44: add rax, 0xc9b4
old instr: 0x40e206: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01c4a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e209: add r13d, eax
    new instr:0x7faef3f01c4d: add r13d, eax
old instr: 0x40e20c: movzx edx, bx
    new instr:0x7faef3f01c50: movzx edx, bx
old instr: 0x40e20f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01c53: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e216: movsxd rdx, edx
    new instr:0x7faef3f01c5a: movsxd rdx, edx
old instr: 0x40e219: shl rdx, 0x4
    new instr:0x7faef3f01c5d: shl rdx, 0x4
old instr: 0x40e21d: add rax, rdx
    new instr:0x7faef3f01c61: add rax, rdx
old instr: 0x40e220: add rax, 0xc9b8
    new instr:0x7faef3f01c64: add rax, 0xc9b8
old instr: 0x40e226: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01c6a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e229: add r12d, eax
    new instr:0x7faef3f01c6d: add r12d, eax
old instr: 0x40e22c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01c70: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e22f: cdqe 
    new instr:0x7faef3f01c73: cdqe 
old instr: 0x40e231: add rax, 0x1d
    new instr:0x7faef3f01c75: add rax, 0x1d
old instr: 0x40e235: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01c79: lea rdx, ptr [rax+rax*1]
old instr: 0x40e239: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01c7d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e23d: add rax, rdx
    new instr:0x7faef3f01c81: add rax, rdx
old instr: 0x40e240: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01c84: movzx ebx, word ptr [rax]
old instr: 0x40e243: movzx edx, bx
    new instr:0x7faef3f01c87: movzx edx, bx
old instr: 0x40e246: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01c8a: mov rax, qword ptr [rbp-0xf8]
40e24d
old instr: 0x40e24d: movsxd rdx, edx
    new instr:0x7faef3f01c91: movsxd rdx, edx
old instr: 0x40e250: add rdx, 0xc9b
    new instr:0x7faef3f01c94: add rdx, 0xc9b
old instr: 0x40e257: shl rdx, 0x4
    new instr:0x7faef3f01c9b: shl rdx, 0x4
old instr: 0x40e25b: add rax, rdx
    new instr:0x7faef3f01c9f: add rax, rdx
old instr: 0x40e25e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01ca2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e261: add r14d, eax
    new instr:0x7faef3f01ca5: add r14d, eax
old instr: 0x40e264: movzx edx, bx
    new instr:0x7faef3f01ca8: movzx edx, bx
old instr: 0x40e267: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01cab: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e26e: movsxd rdx, edx
    new instr:0x7faef3f01cb2: movsxd rdx, edx
old instr: 0x40e271: shl rdx, 0x4
    new instr:0x7faef3f01cb5: shl rdx, 0x4
old instr: 0x40e275: add rax, rdx
    new instr:0x7faef3f01cb9: add rax, rdx
old instr: 0x40e278: add rax, 0xc9b4
    new instr:0x7faef3f01cbc: add rax, 0xc9b4
old instr: 0x40e27e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01cc2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e281: add r13d, eax
    new instr:0x7faef3f01cc5: add r13d, eax
old instr: 0x40e284: movzx edx, bx
    new instr:0x7faef3f01cc8: movzx edx, bx
old instr: 0x40e287: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01ccb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e28e: movsxd rdx, edx
    new instr:0x7faef3f01cd2: movsxd rdx, edx
old instr: 0x40e291: shl rdx, 0x4
    new instr:0x7faef3f01cd5: shl rdx, 0x4
old instr: 0x40e295: add rax, rdx
    new instr:0x7faef3f01cd9: add rax, rdx
old instr: 0x40e298: add rax, 0xc9b8
    new instr:0x7faef3f01cdc: add rax, 0xc9b8
old instr: 0x40e29e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01ce2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e2a1: add r12d, eax
    new instr:0x7faef3f01ce5: add r12d, eax
old instr: 0x40e2a4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01ce8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e2a7: cdqe 
    new instr:0x7faef3f01ceb: cdqe 
old instr: 0x40e2a9: add rax, 0x1e
    new instr:0x7faef3f01ced: add rax, 0x1e
old instr: 0x40e2ad: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01cf1: lea rdx, ptr [rax+rax*1]
old instr: 0x40e2b1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01cf5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e2b5: add rax, rdx
    new instr:0x7faef3f01cf9: add rax, rdx
old instr: 0x40e2b8: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01cfc: movzx ebx, word ptr [rax]
old instr: 0x40e2bb: movzx edx, bx
    new instr:0x7faef3f01cff: movzx edx, bx
old instr: 0x40e2be: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01d02: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e2c5: movsxd rdx, edx
    new instr:0x7faef3f01d09: movsxd rdx, edx
old instr: 0x40e2c8: add rdx, 0xc9b
    new instr:0x7faef3f01d0c: add rdx, 0xc9b
old instr: 0x40e2cf: shl rdx, 0x4
    new instr:0x7faef3f01d13: shl rdx, 0x4
old instr: 0x40e2d3: add rax, rdx
    new instr:0x7faef3f01d17: add rax, rdx
old instr: 0x40e2d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01d1a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e2d9: add r14d, eax
    new instr:0x7faef3f01d1d: add r14d, eax
old instr: 0x40e2dc: movzx edx, bx
    new instr:0x7faef3f01d20: movzx edx, bx
old instr: 0x40e2df: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01d23: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e2e6: movsxd rdx, edx
    new instr:0x7faef3f01d2a: movsxd rdx, edx
old instr: 0x40e2e9: shl rdx, 0x4
    new instr:0x7faef3f01d2d: shl rdx, 0x4
old instr: 0x40e2ed: add rax, rdx
    new instr:0x7faef3f01d31: add rax, rdx
old instr: 0x40e2f0: add rax, 0xc9b4
    new instr:0x7faef3f01d34: add rax, 0xc9b4
old instr: 0x40e2f6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01d3a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e2f9: add r13d, eax
    new instr:0x7faef3f01d3d: add r13d, eax
old instr: 0x40e2fc: movzx edx, bx
    new instr:0x7faef3f01d40: movzx edx, bx
old instr: 0x40e2ff: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01d43: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e306: movsxd rdx, edx
    new instr:0x7faef3f01d4a: movsxd rdx, edx
old instr: 0x40e309: shl rdx, 0x4
    new instr:0x7faef3f01d4d: shl rdx, 0x4
old instr: 0x40e30d: add rax, rdx
    new instr:0x7faef3f01d51: add rax, rdx
old instr: 0x40e310: add rax, 0xc9b8
    new instr:0x7faef3f01d54: add rax, 0xc9b8
old instr: 0x40e316: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01d5a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e319: add r12d, eax
    new instr:0x7faef3f01d5d: add r12d, eax
old instr: 0x40e31c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01d60: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e31f: cdqe 
    new instr:0x7faef3f01d63: cdqe 
old instr: 0x40e321: add rax, 0x1f
    new instr:0x7faef3f01d65: add rax, 0x1f
old instr: 0x40e325: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01d69: lea rdx, ptr [rax+rax*1]
old instr: 0x40e329: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01d6d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e32d: add rax, rdx
    new instr:0x7faef3f01d71: add rax, rdx
old instr: 0x40e330: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01d74: movzx ebx, word ptr [rax]
old instr: 0x40e333: movzx edx, bx
    new instr:0x7faef3f01d77: movzx edx, bx
old instr: 0x40e336: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01d7a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e33d: movsxd rdx, edx
    new instr:0x7faef3f01d81: movsxd rdx, edx
old instr: 0x40e340: add rdx, 0xc9b
    new instr:0x7faef3f01d84: add rdx, 0xc9b
old instr: 0x40e347: shl rdx, 0x4
    new instr:0x7faef3f01d8b: shl rdx, 0x4
old instr: 0x40e34b: add rax, rdx
    new instr:0x7faef3f01d8f: add rax, rdx
old instr: 0x40e34e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01d92: mov eax, dword ptr [rax+0x8]
old instr: 0x40e351: add r14d, eax
    new instr:0x7faef3f01d95: add r14d, eax
old instr: 0x40e354: movzx edx, bx
    new instr:0x7faef3f01d98: movzx edx, bx
old instr: 0x40e357: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01d9b: mov rax, qword ptr [rbp-0xf8]
40e35e
old instr: 0x40e35e: movsxd rdx, edx
    new instr:0x7faef3f01da2: movsxd rdx, edx
old instr: 0x40e361: shl rdx, 0x4
    new instr:0x7faef3f01da5: shl rdx, 0x4
old instr: 0x40e365: add rax, rdx
    new instr:0x7faef3f01da9: add rax, rdx
old instr: 0x40e368: add rax, 0xc9b4
    new instr:0x7faef3f01dac: add rax, 0xc9b4
old instr: 0x40e36e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01db2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e371: add r13d, eax
    new instr:0x7faef3f01db5: add r13d, eax
old instr: 0x40e374: movzx edx, bx
    new instr:0x7faef3f01db8: movzx edx, bx
old instr: 0x40e377: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01dbb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e37e: movsxd rdx, edx
    new instr:0x7faef3f01dc2: movsxd rdx, edx
old instr: 0x40e381: shl rdx, 0x4
    new instr:0x7faef3f01dc5: shl rdx, 0x4
old instr: 0x40e385: add rax, rdx
    new instr:0x7faef3f01dc9: add rax, rdx
old instr: 0x40e388: add rax, 0xc9b8
    new instr:0x7faef3f01dcc: add rax, 0xc9b8
old instr: 0x40e38e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01dd2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e391: add r12d, eax
    new instr:0x7faef3f01dd5: add r12d, eax
old instr: 0x40e394: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01dd8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e397: cdqe 
    new instr:0x7faef3f01ddb: cdqe 
old instr: 0x40e399: add rax, 0x20
    new instr:0x7faef3f01ddd: add rax, 0x20
old instr: 0x40e39d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01de1: lea rdx, ptr [rax+rax*1]
old instr: 0x40e3a1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01de5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e3a5: add rax, rdx
    new instr:0x7faef3f01de9: add rax, rdx
old instr: 0x40e3a8: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01dec: movzx ebx, word ptr [rax]
old instr: 0x40e3ab: movzx edx, bx
    new instr:0x7faef3f01def: movzx edx, bx
old instr: 0x40e3ae: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01df2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e3b5: movsxd rdx, edx
    new instr:0x7faef3f01df9: movsxd rdx, edx
old instr: 0x40e3b8: add rdx, 0xc9b
    new instr:0x7faef3f01dfc: add rdx, 0xc9b
old instr: 0x40e3bf: shl rdx, 0x4
    new instr:0x7faef3f01e03: shl rdx, 0x4
old instr: 0x40e3c3: add rax, rdx
    new instr:0x7faef3f01e07: add rax, rdx
old instr: 0x40e3c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01e0a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e3c9: add r14d, eax
    new instr:0x7faef3f01e0d: add r14d, eax
old instr: 0x40e3cc: movzx edx, bx
    new instr:0x7faef3f01e10: movzx edx, bx
old instr: 0x40e3cf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01e13: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e3d6: movsxd rdx, edx
    new instr:0x7faef3f01e1a: movsxd rdx, edx
old instr: 0x40e3d9: shl rdx, 0x4
    new instr:0x7faef3f01e1d: shl rdx, 0x4
old instr: 0x40e3dd: add rax, rdx
    new instr:0x7faef3f01e21: add rax, rdx
old instr: 0x40e3e0: add rax, 0xc9b4
    new instr:0x7faef3f01e24: add rax, 0xc9b4
old instr: 0x40e3e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01e2a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e3e9: add r13d, eax
    new instr:0x7faef3f01e2d: add r13d, eax
old instr: 0x40e3ec: movzx edx, bx
    new instr:0x7faef3f01e30: movzx edx, bx
old instr: 0x40e3ef: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01e33: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e3f6: movsxd rdx, edx
    new instr:0x7faef3f01e3a: movsxd rdx, edx
old instr: 0x40e3f9: shl rdx, 0x4
    new instr:0x7faef3f01e3d: shl rdx, 0x4
old instr: 0x40e3fd: add rax, rdx
    new instr:0x7faef3f01e41: add rax, rdx
old instr: 0x40e400: add rax, 0xc9b8
    new instr:0x7faef3f01e44: add rax, 0xc9b8
old instr: 0x40e406: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01e4a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e409: add r12d, eax
    new instr:0x7faef3f01e4d: add r12d, eax
old instr: 0x40e40c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01e50: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e40f: cdqe 
    new instr:0x7faef3f01e53: cdqe 
old instr: 0x40e411: add rax, 0x21
    new instr:0x7faef3f01e55: add rax, 0x21
old instr: 0x40e415: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01e59: lea rdx, ptr [rax+rax*1]
old instr: 0x40e419: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01e5d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e41d: add rax, rdx
    new instr:0x7faef3f01e61: add rax, rdx
old instr: 0x40e420: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01e64: movzx ebx, word ptr [rax]
old instr: 0x40e423: movzx edx, bx
    new instr:0x7faef3f01e67: movzx edx, bx
old instr: 0x40e426: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01e6a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e42d: movsxd rdx, edx
    new instr:0x7faef3f01e71: movsxd rdx, edx
old instr: 0x40e430: add rdx, 0xc9b
    new instr:0x7faef3f01e74: add rdx, 0xc9b
old instr: 0x40e437: shl rdx, 0x4
    new instr:0x7faef3f01e7b: shl rdx, 0x4
old instr: 0x40e43b: add rax, rdx
    new instr:0x7faef3f01e7f: add rax, rdx
old instr: 0x40e43e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01e82: mov eax, dword ptr [rax+0x8]
old instr: 0x40e441: add r14d, eax
    new instr:0x7faef3f01e85: add r14d, eax
old instr: 0x40e444: movzx edx, bx
    new instr:0x7faef3f01e88: movzx edx, bx
old instr: 0x40e447: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01e8b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e44e: movsxd rdx, edx
    new instr:0x7faef3f01e92: movsxd rdx, edx
old instr: 0x40e451: shl rdx, 0x4
    new instr:0x7faef3f01e95: shl rdx, 0x4
old instr: 0x40e455: add rax, rdx
    new instr:0x7faef3f01e99: add rax, rdx
old instr: 0x40e458: add rax, 0xc9b4
    new instr:0x7faef3f01e9c: add rax, 0xc9b4
old instr: 0x40e45e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01ea2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e461: add r13d, eax
    new instr:0x7faef3f01ea5: add r13d, eax
old instr: 0x40e464: movzx edx, bx
    new instr:0x7faef3f01ea8: movzx edx, bx
old instr: 0x40e467: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01eab: mov rax, qword ptr [rbp-0xf8]
40e46e
old instr: 0x40e46e: movsxd rdx, edx
    new instr:0x7faef3f01eb2: movsxd rdx, edx
old instr: 0x40e471: shl rdx, 0x4
    new instr:0x7faef3f01eb5: shl rdx, 0x4
old instr: 0x40e475: add rax, rdx
    new instr:0x7faef3f01eb9: add rax, rdx
old instr: 0x40e478: add rax, 0xc9b8
    new instr:0x7faef3f01ebc: add rax, 0xc9b8
old instr: 0x40e47e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01ec2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e481: add r12d, eax
    new instr:0x7faef3f01ec5: add r12d, eax
old instr: 0x40e484: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01ec8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e487: cdqe 
    new instr:0x7faef3f01ecb: cdqe 
old instr: 0x40e489: add rax, 0x22
    new instr:0x7faef3f01ecd: add rax, 0x22
old instr: 0x40e48d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01ed1: lea rdx, ptr [rax+rax*1]
old instr: 0x40e491: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01ed5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e495: add rax, rdx
    new instr:0x7faef3f01ed9: add rax, rdx
old instr: 0x40e498: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01edc: movzx ebx, word ptr [rax]
old instr: 0x40e49b: movzx edx, bx
    new instr:0x7faef3f01edf: movzx edx, bx
old instr: 0x40e49e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01ee2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e4a5: movsxd rdx, edx
    new instr:0x7faef3f01ee9: movsxd rdx, edx
old instr: 0x40e4a8: add rdx, 0xc9b
    new instr:0x7faef3f01eec: add rdx, 0xc9b
old instr: 0x40e4af: shl rdx, 0x4
    new instr:0x7faef3f01ef3: shl rdx, 0x4
old instr: 0x40e4b3: add rax, rdx
    new instr:0x7faef3f01ef7: add rax, rdx
old instr: 0x40e4b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01efa: mov eax, dword ptr [rax+0x8]
old instr: 0x40e4b9: add r14d, eax
    new instr:0x7faef3f01efd: add r14d, eax
old instr: 0x40e4bc: movzx edx, bx
    new instr:0x7faef3f01f00: movzx edx, bx
old instr: 0x40e4bf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01f03: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e4c6: movsxd rdx, edx
    new instr:0x7faef3f01f0a: movsxd rdx, edx
old instr: 0x40e4c9: shl rdx, 0x4
    new instr:0x7faef3f01f0d: shl rdx, 0x4
old instr: 0x40e4cd: add rax, rdx
    new instr:0x7faef3f01f11: add rax, rdx
old instr: 0x40e4d0: add rax, 0xc9b4
    new instr:0x7faef3f01f14: add rax, 0xc9b4
old instr: 0x40e4d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01f1a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e4d9: add r13d, eax
    new instr:0x7faef3f01f1d: add r13d, eax
old instr: 0x40e4dc: movzx edx, bx
    new instr:0x7faef3f01f20: movzx edx, bx
old instr: 0x40e4df: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01f23: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e4e6: movsxd rdx, edx
    new instr:0x7faef3f01f2a: movsxd rdx, edx
old instr: 0x40e4e9: shl rdx, 0x4
    new instr:0x7faef3f01f2d: shl rdx, 0x4
old instr: 0x40e4ed: add rax, rdx
    new instr:0x7faef3f01f31: add rax, rdx
old instr: 0x40e4f0: add rax, 0xc9b8
    new instr:0x7faef3f01f34: add rax, 0xc9b8
old instr: 0x40e4f6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01f3a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e4f9: add r12d, eax
    new instr:0x7faef3f01f3d: add r12d, eax
old instr: 0x40e4fc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01f40: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e4ff: cdqe 
    new instr:0x7faef3f01f43: cdqe 
old instr: 0x40e501: add rax, 0x23
    new instr:0x7faef3f01f45: add rax, 0x23
old instr: 0x40e505: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01f49: lea rdx, ptr [rax+rax*1]
old instr: 0x40e509: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01f4d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e50d: add rax, rdx
    new instr:0x7faef3f01f51: add rax, rdx
old instr: 0x40e510: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01f54: movzx ebx, word ptr [rax]
old instr: 0x40e513: movzx edx, bx
    new instr:0x7faef3f01f57: movzx edx, bx
old instr: 0x40e516: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01f5a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e51d: movsxd rdx, edx
    new instr:0x7faef3f01f61: movsxd rdx, edx
old instr: 0x40e520: add rdx, 0xc9b
    new instr:0x7faef3f01f64: add rdx, 0xc9b
old instr: 0x40e527: shl rdx, 0x4
    new instr:0x7faef3f01f6b: shl rdx, 0x4
old instr: 0x40e52b: add rax, rdx
    new instr:0x7faef3f01f6f: add rax, rdx
old instr: 0x40e52e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01f72: mov eax, dword ptr [rax+0x8]
old instr: 0x40e531: add r14d, eax
    new instr:0x7faef3f01f75: add r14d, eax
old instr: 0x40e534: movzx edx, bx
    new instr:0x7faef3f01f78: movzx edx, bx
old instr: 0x40e537: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01f7b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e53e: movsxd rdx, edx
    new instr:0x7faef3f01f82: movsxd rdx, edx
old instr: 0x40e541: shl rdx, 0x4
    new instr:0x7faef3f01f85: shl rdx, 0x4
old instr: 0x40e545: add rax, rdx
    new instr:0x7faef3f01f89: add rax, rdx
old instr: 0x40e548: add rax, 0xc9b4
    new instr:0x7faef3f01f8c: add rax, 0xc9b4
old instr: 0x40e54e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01f92: mov eax, dword ptr [rax+0x8]
old instr: 0x40e551: add r13d, eax
    new instr:0x7faef3f01f95: add r13d, eax
old instr: 0x40e554: movzx edx, bx
    new instr:0x7faef3f01f98: movzx edx, bx
old instr: 0x40e557: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01f9b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e55e: movsxd rdx, edx
    new instr:0x7faef3f01fa2: movsxd rdx, edx
old instr: 0x40e561: shl rdx, 0x4
    new instr:0x7faef3f01fa5: shl rdx, 0x4
old instr: 0x40e565: add rax, rdx
    new instr:0x7faef3f01fa9: add rax, rdx
old instr: 0x40e568: add rax, 0xc9b8
    new instr:0x7faef3f01fac: add rax, 0xc9b8
old instr: 0x40e56e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01fb2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e571: add r12d, eax
    new instr:0x7faef3f01fb5: add r12d, eax
old instr: 0x40e574: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f01fb8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e577: cdqe 
    new instr:0x7faef3f01fbb: cdqe 
40e579
old instr: 0x40e579: add rax, 0x24
    new instr:0x7faef3f01fbd: add rax, 0x24
old instr: 0x40e57d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f01fc1: lea rdx, ptr [rax+rax*1]
old instr: 0x40e581: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f01fc5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e585: add rax, rdx
    new instr:0x7faef3f01fc9: add rax, rdx
old instr: 0x40e588: movzx ebx, word ptr [rax]
    new instr:0x7faef3f01fcc: movzx ebx, word ptr [rax]
old instr: 0x40e58b: movzx edx, bx
    new instr:0x7faef3f01fcf: movzx edx, bx
old instr: 0x40e58e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01fd2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e595: movsxd rdx, edx
    new instr:0x7faef3f01fd9: movsxd rdx, edx
old instr: 0x40e598: add rdx, 0xc9b
    new instr:0x7faef3f01fdc: add rdx, 0xc9b
old instr: 0x40e59f: shl rdx, 0x4
    new instr:0x7faef3f01fe3: shl rdx, 0x4
old instr: 0x40e5a3: add rax, rdx
    new instr:0x7faef3f01fe7: add rax, rdx
old instr: 0x40e5a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f01fea: mov eax, dword ptr [rax+0x8]
old instr: 0x40e5a9: add r14d, eax
    new instr:0x7faef3f01fed: add r14d, eax
old instr: 0x40e5ac: movzx edx, bx
    new instr:0x7faef3f01ff0: movzx edx, bx
old instr: 0x40e5af: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f01ff3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e5b6: movsxd rdx, edx
    new instr:0x7faef3f01ffa: movsxd rdx, edx
old instr: 0x40e5b9: shl rdx, 0x4
    new instr:0x7faef3f01ffd: shl rdx, 0x4
old instr: 0x40e5bd: add rax, rdx
    new instr:0x7faef3f02001: add rax, rdx
old instr: 0x40e5c0: add rax, 0xc9b4
    new instr:0x7faef3f02004: add rax, 0xc9b4
old instr: 0x40e5c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0200a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e5c9: add r13d, eax
    new instr:0x7faef3f0200d: add r13d, eax
old instr: 0x40e5cc: movzx edx, bx
    new instr:0x7faef3f02010: movzx edx, bx
old instr: 0x40e5cf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02013: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e5d6: movsxd rdx, edx
    new instr:0x7faef3f0201a: movsxd rdx, edx
old instr: 0x40e5d9: shl rdx, 0x4
    new instr:0x7faef3f0201d: shl rdx, 0x4
old instr: 0x40e5dd: add rax, rdx
    new instr:0x7faef3f02021: add rax, rdx
old instr: 0x40e5e0: add rax, 0xc9b8
    new instr:0x7faef3f02024: add rax, 0xc9b8
old instr: 0x40e5e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0202a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e5e9: add r12d, eax
    new instr:0x7faef3f0202d: add r12d, eax
old instr: 0x40e5ec: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02030: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e5ef: cdqe 
    new instr:0x7faef3f02033: cdqe 
old instr: 0x40e5f1: add rax, 0x25
    new instr:0x7faef3f02035: add rax, 0x25
old instr: 0x40e5f5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02039: lea rdx, ptr [rax+rax*1]
old instr: 0x40e5f9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0203d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e5fd: add rax, rdx
    new instr:0x7faef3f02041: add rax, rdx
old instr: 0x40e600: movzx ebx, word ptr [rax]
    new instr:0x7faef3f02044: movzx ebx, word ptr [rax]
old instr: 0x40e603: movzx edx, bx
    new instr:0x7faef3f02047: movzx edx, bx
old instr: 0x40e606: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0204a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e60d: movsxd rdx, edx
    new instr:0x7faef3f02051: movsxd rdx, edx
old instr: 0x40e610: add rdx, 0xc9b
    new instr:0x7faef3f02054: add rdx, 0xc9b
old instr: 0x40e617: shl rdx, 0x4
    new instr:0x7faef3f0205b: shl rdx, 0x4
old instr: 0x40e61b: add rax, rdx
    new instr:0x7faef3f0205f: add rax, rdx
old instr: 0x40e61e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02062: mov eax, dword ptr [rax+0x8]
old instr: 0x40e621: add r14d, eax
    new instr:0x7faef3f02065: add r14d, eax
old instr: 0x40e624: movzx edx, bx
    new instr:0x7faef3f02068: movzx edx, bx
old instr: 0x40e627: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0206b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e62e: movsxd rdx, edx
    new instr:0x7faef3f02072: movsxd rdx, edx
old instr: 0x40e631: shl rdx, 0x4
    new instr:0x7faef3f02075: shl rdx, 0x4
old instr: 0x40e635: add rax, rdx
    new instr:0x7faef3f02079: add rax, rdx
old instr: 0x40e638: add rax, 0xc9b4
    new instr:0x7faef3f0207c: add rax, 0xc9b4
old instr: 0x40e63e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02082: mov eax, dword ptr [rax+0x8]
old instr: 0x40e641: add r13d, eax
    new instr:0x7faef3f02085: add r13d, eax
old instr: 0x40e644: movzx edx, bx
    new instr:0x7faef3f02088: movzx edx, bx
old instr: 0x40e647: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0208b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e64e: movsxd rdx, edx
    new instr:0x7faef3f02092: movsxd rdx, edx
old instr: 0x40e651: shl rdx, 0x4
    new instr:0x7faef3f02095: shl rdx, 0x4
old instr: 0x40e655: add rax, rdx
    new instr:0x7faef3f02099: add rax, rdx
old instr: 0x40e658: add rax, 0xc9b8
    new instr:0x7faef3f0209c: add rax, 0xc9b8
old instr: 0x40e65e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f020a2: mov eax, dword ptr [rax+0x8]
old instr: 0x40e661: add r12d, eax
    new instr:0x7faef3f020a5: add r12d, eax
old instr: 0x40e664: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f020a8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e667: cdqe 
    new instr:0x7faef3f020ab: cdqe 
old instr: 0x40e669: add rax, 0x26
    new instr:0x7faef3f020ad: add rax, 0x26
old instr: 0x40e66d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f020b1: lea rdx, ptr [rax+rax*1]
old instr: 0x40e671: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f020b5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e675: add rax, rdx
    new instr:0x7faef3f020b9: add rax, rdx
old instr: 0x40e678: movzx ebx, word ptr [rax]
    new instr:0x7faef3f020bc: movzx ebx, word ptr [rax]
old instr: 0x40e67b: movzx edx, bx
    new instr:0x7faef3f020bf: movzx edx, bx
old instr: 0x40e67e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f020c2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e685: movsxd rdx, edx
    new instr:0x7faef3f020c9: movsxd rdx, edx
40e688
old instr: 0x40e688: add rdx, 0xc9b
    new instr:0x7faef3f020cc: add rdx, 0xc9b
old instr: 0x40e68f: shl rdx, 0x4
    new instr:0x7faef3f020d3: shl rdx, 0x4
old instr: 0x40e693: add rax, rdx
    new instr:0x7faef3f020d7: add rax, rdx
old instr: 0x40e696: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f020da: mov eax, dword ptr [rax+0x8]
old instr: 0x40e699: add r14d, eax
    new instr:0x7faef3f020dd: add r14d, eax
old instr: 0x40e69c: movzx edx, bx
    new instr:0x7faef3f020e0: movzx edx, bx
old instr: 0x40e69f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f020e3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e6a6: movsxd rdx, edx
    new instr:0x7faef3f020ea: movsxd rdx, edx
old instr: 0x40e6a9: shl rdx, 0x4
    new instr:0x7faef3f020ed: shl rdx, 0x4
old instr: 0x40e6ad: add rax, rdx
    new instr:0x7faef3f020f1: add rax, rdx
old instr: 0x40e6b0: add rax, 0xc9b4
    new instr:0x7faef3f020f4: add rax, 0xc9b4
old instr: 0x40e6b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f020fa: mov eax, dword ptr [rax+0x8]
old instr: 0x40e6b9: add r13d, eax
    new instr:0x7faef3f020fd: add r13d, eax
old instr: 0x40e6bc: movzx edx, bx
    new instr:0x7faef3f02100: movzx edx, bx
old instr: 0x40e6bf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02103: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e6c6: movsxd rdx, edx
    new instr:0x7faef3f0210a: movsxd rdx, edx
old instr: 0x40e6c9: shl rdx, 0x4
    new instr:0x7faef3f0210d: shl rdx, 0x4
old instr: 0x40e6cd: add rax, rdx
    new instr:0x7faef3f02111: add rax, rdx
old instr: 0x40e6d0: add rax, 0xc9b8
    new instr:0x7faef3f02114: add rax, 0xc9b8
old instr: 0x40e6d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0211a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e6d9: add r12d, eax
    new instr:0x7faef3f0211d: add r12d, eax
old instr: 0x40e6dc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02120: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e6df: cdqe 
    new instr:0x7faef3f02123: cdqe 
old instr: 0x40e6e1: add rax, 0x27
    new instr:0x7faef3f02125: add rax, 0x27
old instr: 0x40e6e5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02129: lea rdx, ptr [rax+rax*1]
old instr: 0x40e6e9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0212d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e6ed: add rax, rdx
    new instr:0x7faef3f02131: add rax, rdx
old instr: 0x40e6f0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f02134: movzx ebx, word ptr [rax]
old instr: 0x40e6f3: movzx edx, bx
    new instr:0x7faef3f02137: movzx edx, bx
old instr: 0x40e6f6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0213a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e6fd: movsxd rdx, edx
    new instr:0x7faef3f02141: movsxd rdx, edx
old instr: 0x40e700: add rdx, 0xc9b
    new instr:0x7faef3f02144: add rdx, 0xc9b
old instr: 0x40e707: shl rdx, 0x4
    new instr:0x7faef3f0214b: shl rdx, 0x4
old instr: 0x40e70b: add rax, rdx
    new instr:0x7faef3f0214f: add rax, rdx
old instr: 0x40e70e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02152: mov eax, dword ptr [rax+0x8]
old instr: 0x40e711: add r14d, eax
    new instr:0x7faef3f02155: add r14d, eax
old instr: 0x40e714: movzx edx, bx
    new instr:0x7faef3f02158: movzx edx, bx
old instr: 0x40e717: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0215b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e71e: movsxd rdx, edx
    new instr:0x7faef3f02162: movsxd rdx, edx
old instr: 0x40e721: shl rdx, 0x4
    new instr:0x7faef3f02165: shl rdx, 0x4
old instr: 0x40e725: add rax, rdx
    new instr:0x7faef3f02169: add rax, rdx
old instr: 0x40e728: add rax, 0xc9b4
    new instr:0x7faef3f0216c: add rax, 0xc9b4
old instr: 0x40e72e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02172: mov eax, dword ptr [rax+0x8]
old instr: 0x40e731: add r13d, eax
    new instr:0x7faef3f02175: add r13d, eax
old instr: 0x40e734: movzx edx, bx
    new instr:0x7faef3f02178: movzx edx, bx
old instr: 0x40e737: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0217b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e73e: movsxd rdx, edx
    new instr:0x7faef3f02182: movsxd rdx, edx
old instr: 0x40e741: shl rdx, 0x4
    new instr:0x7faef3f02185: shl rdx, 0x4
old instr: 0x40e745: add rax, rdx
    new instr:0x7faef3f02189: add rax, rdx
old instr: 0x40e748: add rax, 0xc9b8
    new instr:0x7faef3f0218c: add rax, 0xc9b8
old instr: 0x40e74e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02192: mov eax, dword ptr [rax+0x8]
old instr: 0x40e751: add r12d, eax
    new instr:0x7faef3f02195: add r12d, eax
old instr: 0x40e754: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02198: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e757: cdqe 
    new instr:0x7faef3f0219b: cdqe 
old instr: 0x40e759: add rax, 0x28
    new instr:0x7faef3f0219d: add rax, 0x28
old instr: 0x40e75d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f021a1: lea rdx, ptr [rax+rax*1]
old instr: 0x40e761: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f021a5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e765: add rax, rdx
    new instr:0x7faef3f021a9: add rax, rdx
old instr: 0x40e768: movzx ebx, word ptr [rax]
    new instr:0x7faef3f021ac: movzx ebx, word ptr [rax]
old instr: 0x40e76b: movzx edx, bx
    new instr:0x7faef3f021af: movzx edx, bx
old instr: 0x40e76e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f021b2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e775: movsxd rdx, edx
    new instr:0x7faef3f021b9: movsxd rdx, edx
old instr: 0x40e778: add rdx, 0xc9b
    new instr:0x7faef3f021bc: add rdx, 0xc9b
old instr: 0x40e77f: shl rdx, 0x4
    new instr:0x7faef3f021c3: shl rdx, 0x4
old instr: 0x40e783: add rax, rdx
    new instr:0x7faef3f021c7: add rax, rdx
old instr: 0x40e786: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f021ca: mov eax, dword ptr [rax+0x8]
old instr: 0x40e789: add r14d, eax
    new instr:0x7faef3f021cd: add r14d, eax
old instr: 0x40e78c: movzx edx, bx
    new instr:0x7faef3f021d0: movzx edx, bx
old instr: 0x40e78f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f021d3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e796: movsxd rdx, edx
    new instr:0x7faef3f021da: movsxd rdx, edx
40e799
old instr: 0x40e799: shl rdx, 0x4
    new instr:0x7faef3f021dd: shl rdx, 0x4
old instr: 0x40e79d: add rax, rdx
    new instr:0x7faef3f021e1: add rax, rdx
old instr: 0x40e7a0: add rax, 0xc9b4
    new instr:0x7faef3f021e4: add rax, 0xc9b4
old instr: 0x40e7a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f021ea: mov eax, dword ptr [rax+0x8]
old instr: 0x40e7a9: add r13d, eax
    new instr:0x7faef3f021ed: add r13d, eax
old instr: 0x40e7ac: movzx edx, bx
    new instr:0x7faef3f021f0: movzx edx, bx
old instr: 0x40e7af: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f021f3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e7b6: movsxd rdx, edx
    new instr:0x7faef3f021fa: movsxd rdx, edx
old instr: 0x40e7b9: shl rdx, 0x4
    new instr:0x7faef3f021fd: shl rdx, 0x4
old instr: 0x40e7bd: add rax, rdx
    new instr:0x7faef3f02201: add rax, rdx
old instr: 0x40e7c0: add rax, 0xc9b8
    new instr:0x7faef3f02204: add rax, 0xc9b8
old instr: 0x40e7c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0220a: mov eax, dword ptr [rax+0x8]
old instr: 0x40e7c9: add r12d, eax
    new instr:0x7faef3f0220d: add r12d, eax
old instr: 0x40e7cc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02210: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e7cf: cdqe 
    new instr:0x7faef3f02213: cdqe 
old instr: 0x40e7d1: add rax, 0x29
    new instr:0x7faef3f02215: add rax, 0x29
old instr: 0x40e7d5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02219: lea rdx, ptr [rax+rax*1]
old instr: 0x40e7d9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0221d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e7dd: add rax, rdx
    new instr:0x7faef3f02221: add rax, rdx
old instr: 0x40e7e0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f02224: movzx ebx, word ptr [rax]
old instr: 0x40e7e3: movzx edx, bx
    new instr:0x7faef3f02227: movzx edx, bx
old instr: 0x40e7e6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0222a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e7ed: movsxd rdx, edx
    new instr:0x7faef3f02231: movsxd rdx, edx
old instr: 0x40e7f0: add rdx, 0xc9b
    new instr:0x7faef3f02234: add rdx, 0xc9b
old instr: 0x40e7f7: shl rdx, 0x4
    new instr:0x7faef3f0223b: shl rdx, 0x4
old instr: 0x40e7fb: add rax, rdx
    new instr:0x7faef3f0223f: add rax, rdx
old instr: 0x40e7fe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02242: mov eax, dword ptr [rax+0x8]
old instr: 0x40e801: add r14d, eax
    new instr:0x7faef3f02245: add r14d, eax
old instr: 0x40e804: movzx edx, bx
    new instr:0x7faef3f02248: movzx edx, bx
old instr: 0x40e807: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0224b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e80e: movsxd rdx, edx
    new instr:0x7faef3f02252: movsxd rdx, edx
old instr: 0x40e811: shl rdx, 0x4
    new instr:0x7faef3f02255: shl rdx, 0x4
old instr: 0x40e815: add rax, rdx
    new instr:0x7faef3f02259: add rax, rdx
old instr: 0x40e818: add rax, 0xc9b4
    new instr:0x7faef3f0225c: add rax, 0xc9b4
old instr: 0x40e81e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02262: mov eax, dword ptr [rax+0x8]
old instr: 0x40e821: add r13d, eax
    new instr:0x7faef3f02265: add r13d, eax
old instr: 0x40e824: movzx edx, bx
    new instr:0x7faef3f02268: movzx edx, bx
old instr: 0x40e827: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0226b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e82e: movsxd rdx, edx
    new instr:0x7faef3f02272: movsxd rdx, edx
old instr: 0x40e831: shl rdx, 0x4
    new instr:0x7faef3f02275: shl rdx, 0x4
old instr: 0x40e835: add rax, rdx
    new instr:0x7faef3f02279: add rax, rdx
old instr: 0x40e838: add rax, 0xc9b8
    new instr:0x7faef3f0227c: add rax, 0xc9b8
old instr: 0x40e83e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02282: mov eax, dword ptr [rax+0x8]
old instr: 0x40e841: add r12d, eax
    new instr:0x7faef3f02285: add r12d, eax
old instr: 0x40e844: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02288: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e847: cdqe 
    new instr:0x7faef3f0228b: cdqe 
old instr: 0x40e849: add rax, 0x2a
    new instr:0x7faef3f0228d: add rax, 0x2a
old instr: 0x40e84d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02291: lea rdx, ptr [rax+rax*1]
old instr: 0x40e851: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02295: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e855: add rax, rdx
    new instr:0x7faef3f02299: add rax, rdx
old instr: 0x40e858: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0229c: movzx ebx, word ptr [rax]
old instr: 0x40e85b: movzx edx, bx
    new instr:0x7faef3f0229f: movzx edx, bx
old instr: 0x40e85e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f022a2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e865: movsxd rdx, edx
    new instr:0x7faef3f022a9: movsxd rdx, edx
old instr: 0x40e868: add rdx, 0xc9b
    new instr:0x7faef3f022ac: add rdx, 0xc9b
old instr: 0x40e86f: shl rdx, 0x4
    new instr:0x7faef3f022b3: shl rdx, 0x4
old instr: 0x40e873: add rax, rdx
    new instr:0x7faef3f022b7: add rax, rdx
old instr: 0x40e876: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f022ba: mov eax, dword ptr [rax+0x8]
old instr: 0x40e879: add r14d, eax
    new instr:0x7faef3f022bd: add r14d, eax
old instr: 0x40e87c: movzx edx, bx
    new instr:0x7faef3f022c0: movzx edx, bx
old instr: 0x40e87f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f022c3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e886: movsxd rdx, edx
    new instr:0x7faef3f022ca: movsxd rdx, edx
old instr: 0x40e889: shl rdx, 0x4
    new instr:0x7faef3f022cd: shl rdx, 0x4
old instr: 0x40e88d: add rax, rdx
    new instr:0x7faef3f022d1: add rax, rdx
old instr: 0x40e890: add rax, 0xc9b4
    new instr:0x7faef3f022d4: add rax, 0xc9b4
old instr: 0x40e896: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f022da: mov eax, dword ptr [rax+0x8]
old instr: 0x40e899: add r13d, eax
    new instr:0x7faef3f022dd: add r13d, eax
old instr: 0x40e89c: movzx edx, bx
    new instr:0x7faef3f022e0: movzx edx, bx
old instr: 0x40e89f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f022e3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e8a6: movsxd rdx, edx
    new instr:0x7faef3f022ea: movsxd rdx, edx
40e8a9
old instr: 0x40e8a9: shl rdx, 0x4
    new instr:0x7faef3f022ed: shl rdx, 0x4
old instr: 0x40e8ad: add rax, rdx
    new instr:0x7faef3f022f1: add rax, rdx
old instr: 0x40e8b0: add rax, 0xc9b8
    new instr:0x7faef3f022f4: add rax, 0xc9b8
old instr: 0x40e8b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f022fa: mov eax, dword ptr [rax+0x8]
old instr: 0x40e8b9: add r12d, eax
    new instr:0x7faef3f022fd: add r12d, eax
old instr: 0x40e8bc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02300: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e8bf: cdqe 
    new instr:0x7faef3f02303: cdqe 
old instr: 0x40e8c1: add rax, 0x2b
    new instr:0x7faef3f02305: add rax, 0x2b
old instr: 0x40e8c5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02309: lea rdx, ptr [rax+rax*1]
old instr: 0x40e8c9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0230d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e8cd: add rax, rdx
    new instr:0x7faef3f02311: add rax, rdx
old instr: 0x40e8d0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f02314: movzx ebx, word ptr [rax]
old instr: 0x40e8d3: movzx edx, bx
    new instr:0x7faef3f02317: movzx edx, bx
old instr: 0x40e8d6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0231a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e8dd: movsxd rdx, edx
    new instr:0x7faef3f02321: movsxd rdx, edx
old instr: 0x40e8e0: add rdx, 0xc9b
    new instr:0x7faef3f02324: add rdx, 0xc9b
old instr: 0x40e8e7: shl rdx, 0x4
    new instr:0x7faef3f0232b: shl rdx, 0x4
old instr: 0x40e8eb: add rax, rdx
    new instr:0x7faef3f0232f: add rax, rdx
old instr: 0x40e8ee: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02332: mov eax, dword ptr [rax+0x8]
old instr: 0x40e8f1: add r14d, eax
    new instr:0x7faef3f02335: add r14d, eax
old instr: 0x40e8f4: movzx edx, bx
    new instr:0x7faef3f02338: movzx edx, bx
old instr: 0x40e8f7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0233b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e8fe: movsxd rdx, edx
    new instr:0x7faef3f02342: movsxd rdx, edx
old instr: 0x40e901: shl rdx, 0x4
    new instr:0x7faef3f02345: shl rdx, 0x4
old instr: 0x40e905: add rax, rdx
    new instr:0x7faef3f02349: add rax, rdx
old instr: 0x40e908: add rax, 0xc9b4
    new instr:0x7faef3f0234c: add rax, 0xc9b4
old instr: 0x40e90e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02352: mov eax, dword ptr [rax+0x8]
old instr: 0x40e911: add r13d, eax
    new instr:0x7faef3f02355: add r13d, eax
old instr: 0x40e914: movzx edx, bx
    new instr:0x7faef3f02358: movzx edx, bx
old instr: 0x40e917: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0235b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e91e: movsxd rdx, edx
    new instr:0x7faef3f02362: movsxd rdx, edx
old instr: 0x40e921: shl rdx, 0x4
    new instr:0x7faef3f02365: shl rdx, 0x4
old instr: 0x40e925: add rax, rdx
    new instr:0x7faef3f02369: add rax, rdx
old instr: 0x40e928: add rax, 0xc9b8
    new instr:0x7faef3f0236c: add rax, 0xc9b8
old instr: 0x40e92e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02372: mov eax, dword ptr [rax+0x8]
old instr: 0x40e931: add r12d, eax
    new instr:0x7faef3f02375: add r12d, eax
old instr: 0x40e934: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02378: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e937: cdqe 
    new instr:0x7faef3f0237b: cdqe 
old instr: 0x40e939: add rax, 0x2c
    new instr:0x7faef3f0237d: add rax, 0x2c
old instr: 0x40e93d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02381: lea rdx, ptr [rax+rax*1]
old instr: 0x40e941: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02385: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e945: add rax, rdx
    new instr:0x7faef3f02389: add rax, rdx
old instr: 0x40e948: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0238c: movzx ebx, word ptr [rax]
old instr: 0x40e94b: movzx edx, bx
    new instr:0x7faef3f0238f: movzx edx, bx
old instr: 0x40e94e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02392: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e955: movsxd rdx, edx
    new instr:0x7faef3f02399: movsxd rdx, edx
old instr: 0x40e958: add rdx, 0xc9b
    new instr:0x7faef3f0239c: add rdx, 0xc9b
old instr: 0x40e95f: shl rdx, 0x4
    new instr:0x7faef3f023a3: shl rdx, 0x4
old instr: 0x40e963: add rax, rdx
    new instr:0x7faef3f023a7: add rax, rdx
old instr: 0x40e966: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f023aa: mov eax, dword ptr [rax+0x8]
old instr: 0x40e969: add r14d, eax
    new instr:0x7faef3f023ad: add r14d, eax
old instr: 0x40e96c: movzx edx, bx
    new instr:0x7faef3f023b0: movzx edx, bx
old instr: 0x40e96f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f023b3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e976: movsxd rdx, edx
    new instr:0x7faef3f023ba: movsxd rdx, edx
old instr: 0x40e979: shl rdx, 0x4
    new instr:0x7faef3f023bd: shl rdx, 0x4
old instr: 0x40e97d: add rax, rdx
    new instr:0x7faef3f023c1: add rax, rdx
old instr: 0x40e980: add rax, 0xc9b4
    new instr:0x7faef3f023c4: add rax, 0xc9b4
old instr: 0x40e986: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f023ca: mov eax, dword ptr [rax+0x8]
old instr: 0x40e989: add r13d, eax
    new instr:0x7faef3f023cd: add r13d, eax
old instr: 0x40e98c: movzx edx, bx
    new instr:0x7faef3f023d0: movzx edx, bx
old instr: 0x40e98f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f023d3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e996: movsxd rdx, edx
    new instr:0x7faef3f023da: movsxd rdx, edx
old instr: 0x40e999: shl rdx, 0x4
    new instr:0x7faef3f023dd: shl rdx, 0x4
old instr: 0x40e99d: add rax, rdx
    new instr:0x7faef3f023e1: add rax, rdx
old instr: 0x40e9a0: add rax, 0xc9b8
    new instr:0x7faef3f023e4: add rax, 0xc9b8
old instr: 0x40e9a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f023ea: mov eax, dword ptr [rax+0x8]
old instr: 0x40e9a9: add r12d, eax
    new instr:0x7faef3f023ed: add r12d, eax
old instr: 0x40e9ac: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f023f0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e9af: cdqe 
    new instr:0x7faef3f023f3: cdqe 
old instr: 0x40e9b1: add rax, 0x2d
    new instr:0x7faef3f023f5: add rax, 0x2d
40e9b5
old instr: 0x40e9b5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f023f9: lea rdx, ptr [rax+rax*1]
old instr: 0x40e9b9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f023fd: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e9bd: add rax, rdx
    new instr:0x7faef3f02401: add rax, rdx
old instr: 0x40e9c0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f02404: movzx ebx, word ptr [rax]
old instr: 0x40e9c3: movzx edx, bx
    new instr:0x7faef3f02407: movzx edx, bx
old instr: 0x40e9c6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0240a: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e9cd: movsxd rdx, edx
    new instr:0x7faef3f02411: movsxd rdx, edx
old instr: 0x40e9d0: add rdx, 0xc9b
    new instr:0x7faef3f02414: add rdx, 0xc9b
old instr: 0x40e9d7: shl rdx, 0x4
    new instr:0x7faef3f0241b: shl rdx, 0x4
old instr: 0x40e9db: add rax, rdx
    new instr:0x7faef3f0241f: add rax, rdx
old instr: 0x40e9de: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02422: mov eax, dword ptr [rax+0x8]
old instr: 0x40e9e1: add r14d, eax
    new instr:0x7faef3f02425: add r14d, eax
old instr: 0x40e9e4: movzx edx, bx
    new instr:0x7faef3f02428: movzx edx, bx
old instr: 0x40e9e7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0242b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e9ee: movsxd rdx, edx
    new instr:0x7faef3f02432: movsxd rdx, edx
old instr: 0x40e9f1: shl rdx, 0x4
    new instr:0x7faef3f02435: shl rdx, 0x4
old instr: 0x40e9f5: add rax, rdx
    new instr:0x7faef3f02439: add rax, rdx
old instr: 0x40e9f8: add rax, 0xc9b4
    new instr:0x7faef3f0243c: add rax, 0xc9b4
old instr: 0x40e9fe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02442: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea01: add r13d, eax
    new instr:0x7faef3f02445: add r13d, eax
old instr: 0x40ea04: movzx edx, bx
    new instr:0x7faef3f02448: movzx edx, bx
old instr: 0x40ea07: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0244b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ea0e: movsxd rdx, edx
    new instr:0x7faef3f02452: movsxd rdx, edx
old instr: 0x40ea11: shl rdx, 0x4
    new instr:0x7faef3f02455: shl rdx, 0x4
old instr: 0x40ea15: add rax, rdx
    new instr:0x7faef3f02459: add rax, rdx
old instr: 0x40ea18: add rax, 0xc9b8
    new instr:0x7faef3f0245c: add rax, 0xc9b8
old instr: 0x40ea1e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02462: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea21: add r12d, eax
    new instr:0x7faef3f02465: add r12d, eax
old instr: 0x40ea24: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02468: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ea27: cdqe 
    new instr:0x7faef3f0246b: cdqe 
old instr: 0x40ea29: add rax, 0x2e
    new instr:0x7faef3f0246d: add rax, 0x2e
old instr: 0x40ea2d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02471: lea rdx, ptr [rax+rax*1]
old instr: 0x40ea31: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02475: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ea35: add rax, rdx
    new instr:0x7faef3f02479: add rax, rdx
old instr: 0x40ea38: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0247c: movzx ebx, word ptr [rax]
old instr: 0x40ea3b: movzx edx, bx
    new instr:0x7faef3f0247f: movzx edx, bx
old instr: 0x40ea3e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02482: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ea45: movsxd rdx, edx
    new instr:0x7faef3f02489: movsxd rdx, edx
old instr: 0x40ea48: add rdx, 0xc9b
    new instr:0x7faef3f0248c: add rdx, 0xc9b
old instr: 0x40ea4f: shl rdx, 0x4
    new instr:0x7faef3f02493: shl rdx, 0x4
old instr: 0x40ea53: add rax, rdx
    new instr:0x7faef3f02497: add rax, rdx
old instr: 0x40ea56: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0249a: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea59: add r14d, eax
    new instr:0x7faef3f0249d: add r14d, eax
old instr: 0x40ea5c: movzx edx, bx
    new instr:0x7faef3f024a0: movzx edx, bx
old instr: 0x40ea5f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f024a3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ea66: movsxd rdx, edx
    new instr:0x7faef3f024aa: movsxd rdx, edx
old instr: 0x40ea69: shl rdx, 0x4
    new instr:0x7faef3f024ad: shl rdx, 0x4
old instr: 0x40ea6d: add rax, rdx
    new instr:0x7faef3f024b1: add rax, rdx
old instr: 0x40ea70: add rax, 0xc9b4
    new instr:0x7faef3f024b4: add rax, 0xc9b4
old instr: 0x40ea76: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f024ba: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea79: add r13d, eax
    new instr:0x7faef3f024bd: add r13d, eax
old instr: 0x40ea7c: movzx edx, bx
    new instr:0x7faef3f024c0: movzx edx, bx
old instr: 0x40ea7f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f024c3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ea86: movsxd rdx, edx
    new instr:0x7faef3f024ca: movsxd rdx, edx
old instr: 0x40ea89: shl rdx, 0x4
    new instr:0x7faef3f024cd: shl rdx, 0x4
old instr: 0x40ea8d: add rax, rdx
    new instr:0x7faef3f024d1: add rax, rdx
old instr: 0x40ea90: add rax, 0xc9b8
    new instr:0x7faef3f024d4: add rax, 0xc9b8
old instr: 0x40ea96: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f024da: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea99: add r12d, eax
    new instr:0x7faef3f024dd: add r12d, eax
old instr: 0x40ea9c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f024e0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ea9f: cdqe 
    new instr:0x7faef3f024e3: cdqe 
old instr: 0x40eaa1: add rax, 0x2f
    new instr:0x7faef3f024e5: add rax, 0x2f
old instr: 0x40eaa5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f024e9: lea rdx, ptr [rax+rax*1]
old instr: 0x40eaa9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f024ed: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eaad: add rax, rdx
    new instr:0x7faef3f024f1: add rax, rdx
old instr: 0x40eab0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f024f4: movzx ebx, word ptr [rax]
old instr: 0x40eab3: movzx edx, bx
    new instr:0x7faef3f024f7: movzx edx, bx
old instr: 0x40eab6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f024fa: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eabd: movsxd rdx, edx
    new instr:0x7faef3f02501: movsxd rdx, edx
old instr: 0x40eac0: add rdx, 0xc9b
    new instr:0x7faef3f02504: add rdx, 0xc9b
40eac7
old instr: 0x40eac7: shl rdx, 0x4
    new instr:0x7faef3f0250b: shl rdx, 0x4
old instr: 0x40eacb: add rax, rdx
    new instr:0x7faef3f0250f: add rax, rdx
old instr: 0x40eace: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02512: mov eax, dword ptr [rax+0x8]
old instr: 0x40ead1: add r14d, eax
    new instr:0x7faef3f02515: add r14d, eax
old instr: 0x40ead4: movzx edx, bx
    new instr:0x7faef3f02518: movzx edx, bx
old instr: 0x40ead7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0251b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eade: movsxd rdx, edx
    new instr:0x7faef3f02522: movsxd rdx, edx
old instr: 0x40eae1: shl rdx, 0x4
    new instr:0x7faef3f02525: shl rdx, 0x4
old instr: 0x40eae5: add rax, rdx
    new instr:0x7faef3f02529: add rax, rdx
old instr: 0x40eae8: add rax, 0xc9b4
    new instr:0x7faef3f0252c: add rax, 0xc9b4
old instr: 0x40eaee: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02532: mov eax, dword ptr [rax+0x8]
old instr: 0x40eaf1: add r13d, eax
    new instr:0x7faef3f02535: add r13d, eax
old instr: 0x40eaf4: movzx edx, bx
    new instr:0x7faef3f02538: movzx edx, bx
old instr: 0x40eaf7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0253b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eafe: movsxd rdx, edx
    new instr:0x7faef3f02542: movsxd rdx, edx
old instr: 0x40eb01: shl rdx, 0x4
    new instr:0x7faef3f02545: shl rdx, 0x4
old instr: 0x40eb05: add rax, rdx
    new instr:0x7faef3f02549: add rax, rdx
old instr: 0x40eb08: add rax, 0xc9b8
    new instr:0x7faef3f0254c: add rax, 0xc9b8
old instr: 0x40eb0e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02552: mov eax, dword ptr [rax+0x8]
old instr: 0x40eb11: add r12d, eax
    new instr:0x7faef3f02555: add r12d, eax
old instr: 0x40eb14: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02558: mov eax, dword ptr [rbp-0x34]
old instr: 0x40eb17: cdqe 
    new instr:0x7faef3f0255b: cdqe 
old instr: 0x40eb19: add rax, 0x30
    new instr:0x7faef3f0255d: add rax, 0x30
old instr: 0x40eb1d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02561: lea rdx, ptr [rax+rax*1]
old instr: 0x40eb21: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02565: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eb25: add rax, rdx
    new instr:0x7faef3f02569: add rax, rdx
old instr: 0x40eb28: movzx ebx, word ptr [rax]
    new instr:0x7faef3f0256c: movzx ebx, word ptr [rax]
old instr: 0x40eb2b: movzx edx, bx
    new instr:0x7faef3f0256f: movzx edx, bx
old instr: 0x40eb2e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02572: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eb35: movsxd rdx, edx
    new instr:0x7faef3f02579: movsxd rdx, edx
old instr: 0x40eb38: add rdx, 0xc9b
    new instr:0x7faef3f0257c: add rdx, 0xc9b
old instr: 0x40eb3f: shl rdx, 0x4
    new instr:0x7faef3f02583: shl rdx, 0x4
old instr: 0x40eb43: add rax, rdx
    new instr:0x7faef3f02587: add rax, rdx
old instr: 0x40eb46: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0258a: mov eax, dword ptr [rax+0x8]
old instr: 0x40eb49: add r14d, eax
    new instr:0x7faef3f0258d: add r14d, eax
old instr: 0x40eb4c: movzx edx, bx
    new instr:0x7faef3f02590: movzx edx, bx
old instr: 0x40eb4f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02593: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eb56: movsxd rdx, edx
    new instr:0x7faef3f0259a: movsxd rdx, edx
old instr: 0x40eb59: shl rdx, 0x4
    new instr:0x7faef3f0259d: shl rdx, 0x4
old instr: 0x40eb5d: add rax, rdx
    new instr:0x7faef3f025a1: add rax, rdx
old instr: 0x40eb60: add rax, 0xc9b4
    new instr:0x7faef3f025a4: add rax, 0xc9b4
old instr: 0x40eb66: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f025aa: mov eax, dword ptr [rax+0x8]
old instr: 0x40eb69: add r13d, eax
    new instr:0x7faef3f025ad: add r13d, eax
old instr: 0x40eb6c: movzx edx, bx
    new instr:0x7faef3f025b0: movzx edx, bx
old instr: 0x40eb6f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f025b3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eb76: movsxd rdx, edx
    new instr:0x7faef3f025ba: movsxd rdx, edx
old instr: 0x40eb79: shl rdx, 0x4
    new instr:0x7faef3f025bd: shl rdx, 0x4
old instr: 0x40eb7d: add rax, rdx
    new instr:0x7faef3f025c1: add rax, rdx
old instr: 0x40eb80: add rax, 0xc9b8
    new instr:0x7faef3f025c4: add rax, 0xc9b8
old instr: 0x40eb86: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f025ca: mov eax, dword ptr [rax+0x8]
old instr: 0x40eb89: add r12d, eax
    new instr:0x7faef3f025cd: add r12d, eax
old instr: 0x40eb8c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f025d0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40eb8f: cdqe 
    new instr:0x7faef3f025d3: cdqe 
old instr: 0x40eb91: add rax, 0x31
    new instr:0x7faef3f025d5: add rax, 0x31
old instr: 0x40eb95: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f025d9: lea rdx, ptr [rax+rax*1]
old instr: 0x40eb99: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f025dd: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eb9d: add rax, rdx
    new instr:0x7faef3f025e1: add rax, rdx
old instr: 0x40eba0: movzx ebx, word ptr [rax]
    new instr:0x7faef3f025e4: movzx ebx, word ptr [rax]
old instr: 0x40eba3: movzx edx, bx
    new instr:0x7faef3f025e7: movzx edx, bx
old instr: 0x40eba6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f025ea: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ebad: movsxd rdx, edx
    new instr:0x7faef3f025f1: movsxd rdx, edx
old instr: 0x40ebb0: add rdx, 0xc9b
    new instr:0x7faef3f025f4: add rdx, 0xc9b
old instr: 0x40ebb7: shl rdx, 0x4
    new instr:0x7faef3f025fb: shl rdx, 0x4
old instr: 0x40ebbb: add rax, rdx
    new instr:0x7faef3f025ff: add rax, rdx
old instr: 0x40ebbe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02602: mov eax, dword ptr [rax+0x8]
old instr: 0x40ebc1: add r14d, eax
    new instr:0x7faef3f02605: add r14d, eax
old instr: 0x40ebc4: movzx edx, bx
    new instr:0x7faef3f02608: movzx edx, bx
old instr: 0x40ebc7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0260b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ebce: movsxd rdx, edx
    new instr:0x7faef3f02612: movsxd rdx, edx
old instr: 0x40ebd1: shl rdx, 0x4
    new instr:0x7faef3f02615: shl rdx, 0x4
40ebd5
old instr: 0x40ebd5: add rax, rdx
    new instr:0x7faef3f02619: add rax, rdx
old instr: 0x40ebd8: add rax, 0xc9b4
    new instr:0x7faef3f0261c: add rax, 0xc9b4
old instr: 0x40ebde: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02622: mov eax, dword ptr [rax+0x8]
old instr: 0x40ebe1: add r13d, eax
    new instr:0x7faef3f02625: add r13d, eax
old instr: 0x40ebe4: movzx edx, bx
    new instr:0x7faef3f02628: movzx edx, bx
old instr: 0x40ebe7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0262b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ebee: movsxd rdx, edx
    new instr:0x7faef3f02632: movsxd rdx, edx
old instr: 0x40ebf1: shl rdx, 0x4
    new instr:0x7faef3f02635: shl rdx, 0x4
old instr: 0x40ebf5: add rax, rdx
    new instr:0x7faef3f02639: add rax, rdx
old instr: 0x40ebf8: add rax, 0xc9b8
    new instr:0x7faef3f0263c: add rax, 0xc9b8
old instr: 0x40ebfe: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f02642: mov eax, dword ptr [rax+0x8]
old instr: 0x40ec01: add r12d, eax
    new instr:0x7faef3f02645: add r12d, eax
old instr: 0x40ec04: mov eax, r14d
    new instr:0x7faef3f02648: mov eax, r14d
old instr: 0x40ec07: mov word ptr [rbp-0xb0], ax
    new instr:0x7faef3f0264b: mov word ptr [rbp-0xb0], ax
old instr: 0x40ec0e: mov eax, r14d
    new instr:0x7faef3f02652: mov eax, r14d
old instr: 0x40ec11: shr eax, 0x10
    new instr:0x7faef3f02655: shr eax, 0x10
old instr: 0x40ec14: mov word ptr [rbp-0xae], ax
    new instr:0x7faef3f02658: mov word ptr [rbp-0xae], ax
old instr: 0x40ec1b: mov eax, r13d
    new instr:0x7faef3f0265f: mov eax, r13d
old instr: 0x40ec1e: mov word ptr [rbp-0xac], ax
    new instr:0x7faef3f02662: mov word ptr [rbp-0xac], ax
old instr: 0x40ec25: mov eax, r13d
    new instr:0x7faef3f02669: mov eax, r13d
old instr: 0x40ec28: shr eax, 0x10
    new instr:0x7faef3f0266c: shr eax, 0x10
old instr: 0x40ec2b: mov word ptr [rbp-0xaa], ax
    new instr:0x7faef3f0266f: mov word ptr [rbp-0xaa], ax
old instr: 0x40ec32: mov eax, r12d
    new instr:0x7faef3f02676: mov eax, r12d
old instr: 0x40ec35: mov word ptr [rbp-0xa8], ax
    new instr:0x7faef3f02679: mov word ptr [rbp-0xa8], ax
old instr: 0x40ec3c: mov eax, r12d
    new instr:0x7faef3f02680: mov eax, r12d
old instr: 0x40ec3f: shr eax, 0x10
    new instr:0x7faef3f02683: shr eax, 0x10
old instr: 0x40ec42: mov word ptr [rbp-0xa6], ax
    new instr:0x7faef3f02686: mov word ptr [rbp-0xa6], ax
in revert 
removing jump and inserting a dummy entry 
40ecea
old instr: 0x40ecea: mov dword ptr [rbp-0x44], 0x3b9ac9ff
    new instr:0x7faef3f0268d: mov dword ptr [rbp-0x44], 0x3b9ac9ff
old instr: 0x40ecf1: mov dword ptr [rbp-0x40], 0xffffffff
    new instr:0x7faef3f02694: mov dword ptr [rbp-0x40], 0xffffffff
old instr: 0x40ecf8: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f0269b: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40ed33
old instr: 0x40ed33: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f026a2: mov eax, dword ptr [rbp-0x28]
old instr: 0x40ed36: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f026a5: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7faef3f026a8: jnl 0x7faef3f02670
40ed01
old instr: 0x40ed01: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f026aa: mov eax, dword ptr [rbp-0x28]
old instr: 0x40ed04: cdqe 
    new instr:0x7faef3f026ad: cdqe 
old instr: 0x40ed06: movzx eax, word ptr [rbp+rax*2-0xb0]
    new instr:0x7faef3f026af: movzx eax, word ptr [rbp+rax*2-0xb0]
old instr: 0x40ed0e: movzx eax, ax
    new instr:0x7faef3f026b7: movzx eax, ax
old instr: 0x40ed11: cmp eax, dword ptr [rbp-0x44]
    new instr:0x7faef3f026ba: cmp eax, dword ptr [rbp-0x44]
in revert 
    new instr:0x7faef3f026bd: jl 0x7faef3f026d8
40ed2f
old instr: 0x40ed2f: add dword ptr [rbp-0x28], 0x1
    new instr:0x7faef3f026bf: add dword ptr [rbp-0x28], 0x1
40ed16
old instr: 0x40ed16: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f026c3: mov eax, dword ptr [rbp-0x28]
40ec4e
old instr: 0x40ec4e: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f026c6: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ec51: mov dword ptr [rbp-0x2c], eax
    new instr:0x7faef3f026c9: mov dword ptr [rbp-0x2c], eax
in revert 
removing jump and inserting a dummy entry 
40ecde
old instr: 0x40ecde: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f026cc: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40ece1: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f026cf: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7faef3f026d2: jnle 0x7faef3f02647
40ec59
old instr: 0x40ec59: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f026d8: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40ec5c: cdqe 
    new instr:0x7faef3f026db: cdqe 
old instr: 0x40ec5e: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f026dd: lea rdx, ptr [rax+rax*1]
old instr: 0x40ec62: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f026e1: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ec66: add rax, rdx
    new instr:0x7faef3f026e5: add rax, rdx
old instr: 0x40ec69: movzx eax, word ptr [rax]
    new instr:0x7faef3f026e8: movzx eax, word ptr [rax]
old instr: 0x40ec6c: mov word ptr [rbp-0x82], ax
    new instr:0x7faef3f026eb: mov word ptr [rbp-0x82], ax
old instr: 0x40ec73: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f026f2: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40ecd2
old instr: 0x40ecd2: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f026f9: mov eax, dword ptr [rbp-0x28]
old instr: 0x40ecd5: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f026fc: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7faef3f026ff: jnl 0x7faef3f026a3
40ec7c
old instr: 0x40ec7c: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f02701: mov eax, dword ptr [rbp-0x28]
40d035
old instr: 0x40d035: mov dword ptr [rbp-0x5c], 0x4
    new instr:0x7faef3f02704: mov dword ptr [rbp-0x5c], 0x4
old instr: 0x40d03c: jmp 0x40d062
    new instr:0x7faef3f0270b: jmp 0x7faef3f02731
inserted instruction
40ecda
old instr: 0x40ecda: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7faef3f0270d: add dword ptr [rbp-0x2c], 0x1
4107ed
old instr: 0x4107ed: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02711: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4107f4: mov eax, dword ptr [rax+0x74]
    new instr:0x7faef3f02718: mov eax, dword ptr [rax+0x74]
old instr: 0x4107f7: mov dword ptr [rbp-0x88], eax
    new instr:0x7faef3f0271b: mov dword ptr [rbp-0x88], eax
old instr: 0x4107fd: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7faef3f02721: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
41084f
old instr: 0x41084f: cmp dword ptr [rbp-0x2c], 0xf
    new instr:0x7faef3f02728: cmp dword ptr [rbp-0x2c], 0xf
in revert 
    new instr:0x7faef3f0272c: jnle 0x7faef3f026df
410806
old instr: 0x410806: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f0272e: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410809: cdqe 
    new instr:0x7faef3f02731: cdqe 
old instr: 0x41080b: movzx eax, byte ptr [rbp+rax*1-0xf0]
    new instr:0x7faef3f02733: movzx eax, byte ptr [rbp+rax*1-0xf0]
old instr: 0x410813: test al, al
    new instr:0x7faef3f0273b: test al, al
in revert 
    new instr:0x7faef3f0273d: jnz 0x7faef3f0275a
410832
old instr: 0x410832: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0273f: mov rax, qword ptr [rbp-0xf8]
old instr: 0x410839: mov edx, 0x0
    new instr:0x7faef3f02746: mov edx, 0x0
old instr: 0x41083e: mov esi, 0x1
    new instr:0x7faef3f0274b: mov esi, 0x1
old instr: 0x410843: mov rdi, rax
    new instr:0x7faef3f02750: mov rdi, rax
old instr: 0x410846: call 0x40c94c
    new instr:0x7faef3f02753: call 0x7faef3efe859
inserted instruction
410817
old instr: 0x410817: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02758: mov rax, qword ptr [rbp-0xf8]
old instr: 0x41081e: mov edx, 0x1
    new instr:0x7faef3f0275f: mov edx, 0x1
old instr: 0x410823: mov esi, 0x1
    new instr:0x7faef3f02764: mov esi, 0x1
old instr: 0x410828: mov rdi, rax
    new instr:0x7faef3f02769: mov rdi, rax
old instr: 0x41082b: call 0x40c94c
    new instr:0x7faef3f0276c: call 0x7faef3efe88d
inserted instruction
40d2c5
old instr: 0x40d2c5: add dword ptr [rbp-0x28], 0x1
    new instr:0x7faef3f02771: add dword ptr [rbp-0x28], 0x1
40ed3b
old instr: 0x40ed3b: mov eax, dword ptr [rbp-0x44]
    new instr:0x7faef3f02775: mov eax, dword ptr [rbp-0x44]
old instr: 0x40ed3e: add dword ptr [rbp-0x3c], eax
    new instr:0x7faef3f02778: add dword ptr [rbp-0x3c], eax
old instr: 0x40ed41: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0277b: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ed44: cdqe 
    new instr:0x7faef3f0277e: cdqe 
old instr: 0x40ed46: mov eax, dword ptr [rbp+rax*4-0xd0]
    new instr:0x7faef3f02780: mov eax, dword ptr [rbp+rax*4-0xd0]
old instr: 0x40ed4d: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f02787: lea edx, ptr [rax+0x1]
old instr: 0x40ed50: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0278a: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ed53: cdqe 
    new instr:0x7faef3f0278d: cdqe 
old instr: 0x40ed55: mov dword ptr [rbp+rax*4-0xd0], edx
    new instr:0x7faef3f0278f: mov dword ptr [rbp+rax*4-0xd0], edx
old instr: 0x40ed5c: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02796: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ed5f: mov ecx, eax
    new instr:0x7faef3f02799: mov ecx, eax
old instr: 0x40ed61: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0279b: mov rdx, qword ptr [rbp-0xf8]
old instr: 0x40ed68: mov eax, dword ptr [rbp-0x4c]
    new instr:0x7faef3f027a2: mov eax, dword ptr [rbp-0x4c]
old instr: 0x40ed6b: cdqe 
    new instr:0x7faef3f027a5: cdqe 
old instr: 0x40ed6d: mov byte ptr [rdx+rax*1+0x6a8], cl
    new instr:0x7faef3f027a7: mov byte ptr [rdx+rax*1+0x6a8], cl
old instr: 0x40ed74: add dword ptr [rbp-0x4c], 0x1
    new instr:0x7faef3f027ae: add dword ptr [rbp-0x4c], 0x1
old instr: 0x40ed78: cmp dword ptr [rbp-0x5c], 0x6
    new instr:0x7faef3f027b2: cmp dword ptr [rbp-0x5c], 0x6
old instr: 0x40ed7c: jnz 0x410343
    new instr:0x7faef3f027b6: jnz 0x7faef3f03d7d
inserted instruction
40ed82
old instr: 0x40ed82: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f027bc: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ed85: mov edx, dword ptr [rbp-0x38]
    new instr:0x7faef3f027bf: mov edx, dword ptr [rbp-0x38]
old instr: 0x40ed88: mov ecx, edx
    new instr:0x7faef3f027c2: mov ecx, edx
old instr: 0x40ed8a: sub ecx, eax
    new instr:0x7faef3f027c4: sub ecx, eax
old instr: 0x40ed8c: mov eax, ecx
    new instr:0x7faef3f027c6: mov eax, ecx
old instr: 0x40ed8e: cmp eax, 0x31
    new instr:0x7faef3f027c8: cmp eax, 0x31
old instr: 0x40ed91: jnz 0x410343
    new instr:0x7faef3f027cb: jnz 0x7faef3f03d7d
inserted instruction
40ed97
old instr: 0x40ed97: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f027d1: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ed9a: cdqe 
    new instr:0x7faef3f027d4: cdqe 
old instr: 0x40ed9c: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f027d6: lea rdx, ptr [rax+rax*1]
old instr: 0x40eda0: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f027da: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eda4: add rax, rdx
    new instr:0x7faef3f027de: add rax, rdx
old instr: 0x40eda7: movzx eax, word ptr [rax]
    new instr:0x7faef3f027e1: movzx eax, word ptr [rax]
old instr: 0x40edaa: movzx edx, ax
    new instr:0x7faef3f027e4: movzx edx, ax
old instr: 0x40edad: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f027e7: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40edb4: movsxd rsi, edx
    new instr:0x7faef3f027ee: movsxd rsi, edx
old instr: 0x40edb7: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f027f1: mov eax, dword ptr [rbp-0x40]
old instr: 0x40edba: cdqe 
    new instr:0x7faef3f027f4: cdqe 
old instr: 0x40edbc: add rax, rax
    new instr:0x7faef3f027f6: add rax, rax
old instr: 0x40edbf: mov rdi, rax
    new instr:0x7faef3f027f9: mov rdi, rax
old instr: 0x40edc2: shl rdi, 0x7
    new instr:0x7faef3f027fc: shl rdi, 0x7
old instr: 0x40edc6: add rax, rdi
    new instr:0x7faef3f02800: add rax, rdi
old instr: 0x40edc9: add rax, rsi
    new instr:0x7faef3f02803: add rax, rsi
old instr: 0x40edcc: add rax, 0x2c60
    new instr:0x7faef3f02806: add rax, 0x2c60
old instr: 0x40edd2: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f0280c: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40edd6: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02810: lea esi, ptr [rax+0x1]
old instr: 0x40edd9: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02813: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ede0: movsxd rdx, edx
    new instr:0x7faef3f0281a: movsxd rdx, edx
old instr: 0x40ede3: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0281d: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ede6: cdqe 
    new instr:0x7faef3f02820: cdqe 
old instr: 0x40ede8: add rax, rax
    new instr:0x7faef3f02822: add rax, rax
old instr: 0x40edeb: mov rdi, rax
    new instr:0x7faef3f02825: mov rdi, rax
old instr: 0x40edee: shl rdi, 0x7
    new instr:0x7faef3f02828: shl rdi, 0x7
old instr: 0x40edf2: add rax, rdi
    new instr:0x7faef3f0282c: add rax, rdi
old instr: 0x40edf5: add rax, rdx
    new instr:0x7faef3f0282f: add rax, rdx
old instr: 0x40edf8: add rax, 0x2c60
    new instr:0x7faef3f02832: add rax, 0x2c60
old instr: 0x40edfe: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02838: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ee02: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0283c: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ee05: cdqe 
    new instr:0x7faef3f0283f: cdqe 
old instr: 0x40ee07: add rax, 0x1
    new instr:0x7faef3f02841: add rax, 0x1
old instr: 0x40ee0b: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02845: lea rdx, ptr [rax+rax*1]
old instr: 0x40ee0f: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02849: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ee13: add rax, rdx
    new instr:0x7faef3f0284d: add rax, rdx
old instr: 0x40ee16: movzx eax, word ptr [rax]
    new instr:0x7faef3f02850: movzx eax, word ptr [rax]
old instr: 0x40ee19: movzx edx, ax
    new instr:0x7faef3f02853: movzx edx, ax
old instr: 0x40ee1c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02856: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ee23: movsxd rsi, edx
    new instr:0x7faef3f0285d: movsxd rsi, edx
old instr: 0x40ee26: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02860: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ee29: cdqe 
    new instr:0x7faef3f02863: cdqe 
old instr: 0x40ee2b: add rax, rax
    new instr:0x7faef3f02865: add rax, rax
old instr: 0x40ee2e: mov rdi, rax
    new instr:0x7faef3f02868: mov rdi, rax
old instr: 0x40ee31: shl rdi, 0x7
    new instr:0x7faef3f0286b: shl rdi, 0x7
old instr: 0x40ee35: add rax, rdi
    new instr:0x7faef3f0286f: add rax, rdi
old instr: 0x40ee38: add rax, rsi
    new instr:0x7faef3f02872: add rax, rsi
old instr: 0x40ee3b: add rax, 0x2c60
    new instr:0x7faef3f02875: add rax, 0x2c60
old instr: 0x40ee41: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f0287b: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ee45: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0287f: lea esi, ptr [rax+0x1]
old instr: 0x40ee48: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02882: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ee4f: movsxd rdx, edx
    new instr:0x7faef3f02889: movsxd rdx, edx
old instr: 0x40ee52: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0288c: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ee55: cdqe 
    new instr:0x7faef3f0288f: cdqe 
old instr: 0x40ee57: add rax, rax
    new instr:0x7faef3f02891: add rax, rax
old instr: 0x40ee5a: mov rdi, rax
    new instr:0x7faef3f02894: mov rdi, rax
old instr: 0x40ee5d: shl rdi, 0x7
    new instr:0x7faef3f02897: shl rdi, 0x7
old instr: 0x40ee61: add rax, rdi
    new instr:0x7faef3f0289b: add rax, rdi
old instr: 0x40ee64: add rax, rdx
    new instr:0x7faef3f0289e: add rax, rdx
old instr: 0x40ee67: add rax, 0x2c60
    new instr:0x7faef3f028a1: add rax, 0x2c60
old instr: 0x40ee6d: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f028a7: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ee71: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f028ab: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ee74: cdqe 
    new instr:0x7faef3f028ae: cdqe 
40ee76
old instr: 0x40ee76: add rax, 0x2
    new instr:0x7faef3f028b0: add rax, 0x2
old instr: 0x40ee7a: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f028b4: lea rdx, ptr [rax+rax*1]
old instr: 0x40ee7e: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f028b8: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ee82: add rax, rdx
    new instr:0x7faef3f028bc: add rax, rdx
old instr: 0x40ee85: movzx eax, word ptr [rax]
    new instr:0x7faef3f028bf: movzx eax, word ptr [rax]
old instr: 0x40ee88: movzx edx, ax
    new instr:0x7faef3f028c2: movzx edx, ax
old instr: 0x40ee8b: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f028c5: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ee92: movsxd rsi, edx
    new instr:0x7faef3f028cc: movsxd rsi, edx
old instr: 0x40ee95: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f028cf: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ee98: cdqe 
    new instr:0x7faef3f028d2: cdqe 
old instr: 0x40ee9a: add rax, rax
    new instr:0x7faef3f028d4: add rax, rax
old instr: 0x40ee9d: mov rdi, rax
    new instr:0x7faef3f028d7: mov rdi, rax
old instr: 0x40eea0: shl rdi, 0x7
    new instr:0x7faef3f028da: shl rdi, 0x7
old instr: 0x40eea4: add rax, rdi
    new instr:0x7faef3f028de: add rax, rdi
old instr: 0x40eea7: add rax, rsi
    new instr:0x7faef3f028e1: add rax, rsi
old instr: 0x40eeaa: add rax, 0x2c60
    new instr:0x7faef3f028e4: add rax, 0x2c60
old instr: 0x40eeb0: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f028ea: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40eeb4: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f028ee: lea esi, ptr [rax+0x1]
old instr: 0x40eeb7: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f028f1: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40eebe: movsxd rdx, edx
    new instr:0x7faef3f028f8: movsxd rdx, edx
old instr: 0x40eec1: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f028fb: mov eax, dword ptr [rbp-0x40]
old instr: 0x40eec4: cdqe 
    new instr:0x7faef3f028fe: cdqe 
old instr: 0x40eec6: add rax, rax
    new instr:0x7faef3f02900: add rax, rax
old instr: 0x40eec9: mov rdi, rax
    new instr:0x7faef3f02903: mov rdi, rax
old instr: 0x40eecc: shl rdi, 0x7
    new instr:0x7faef3f02906: shl rdi, 0x7
old instr: 0x40eed0: add rax, rdi
    new instr:0x7faef3f0290a: add rax, rdi
old instr: 0x40eed3: add rax, rdx
    new instr:0x7faef3f0290d: add rax, rdx
old instr: 0x40eed6: add rax, 0x2c60
    new instr:0x7faef3f02910: add rax, 0x2c60
old instr: 0x40eedc: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02916: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40eee0: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0291a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40eee3: cdqe 
    new instr:0x7faef3f0291d: cdqe 
old instr: 0x40eee5: add rax, 0x3
    new instr:0x7faef3f0291f: add rax, 0x3
old instr: 0x40eee9: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02923: lea rdx, ptr [rax+rax*1]
old instr: 0x40eeed: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02927: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eef1: add rax, rdx
    new instr:0x7faef3f0292b: add rax, rdx
old instr: 0x40eef4: movzx eax, word ptr [rax]
    new instr:0x7faef3f0292e: movzx eax, word ptr [rax]
old instr: 0x40eef7: movzx edx, ax
    new instr:0x7faef3f02931: movzx edx, ax
old instr: 0x40eefa: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02934: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ef01: movsxd rsi, edx
    new instr:0x7faef3f0293b: movsxd rsi, edx
old instr: 0x40ef04: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0293e: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ef07: cdqe 
    new instr:0x7faef3f02941: cdqe 
old instr: 0x40ef09: add rax, rax
    new instr:0x7faef3f02943: add rax, rax
old instr: 0x40ef0c: mov rdi, rax
    new instr:0x7faef3f02946: mov rdi, rax
old instr: 0x40ef0f: shl rdi, 0x7
    new instr:0x7faef3f02949: shl rdi, 0x7
old instr: 0x40ef13: add rax, rdi
    new instr:0x7faef3f0294d: add rax, rdi
old instr: 0x40ef16: add rax, rsi
    new instr:0x7faef3f02950: add rax, rsi
old instr: 0x40ef19: add rax, 0x2c60
    new instr:0x7faef3f02953: add rax, 0x2c60
old instr: 0x40ef1f: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02959: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ef23: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0295d: lea esi, ptr [rax+0x1]
old instr: 0x40ef26: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02960: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ef2d: movsxd rdx, edx
    new instr:0x7faef3f02967: movsxd rdx, edx
old instr: 0x40ef30: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0296a: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ef33: cdqe 
    new instr:0x7faef3f0296d: cdqe 
old instr: 0x40ef35: add rax, rax
    new instr:0x7faef3f0296f: add rax, rax
old instr: 0x40ef38: mov rdi, rax
    new instr:0x7faef3f02972: mov rdi, rax
old instr: 0x40ef3b: shl rdi, 0x7
    new instr:0x7faef3f02975: shl rdi, 0x7
old instr: 0x40ef3f: add rax, rdi
    new instr:0x7faef3f02979: add rax, rdi
old instr: 0x40ef42: add rax, rdx
    new instr:0x7faef3f0297c: add rax, rdx
old instr: 0x40ef45: add rax, 0x2c60
    new instr:0x7faef3f0297f: add rax, 0x2c60
old instr: 0x40ef4b: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02985: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ef4f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02989: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ef52: cdqe 
    new instr:0x7faef3f0298c: cdqe 
old instr: 0x40ef54: add rax, 0x4
    new instr:0x7faef3f0298e: add rax, 0x4
old instr: 0x40ef58: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02992: lea rdx, ptr [rax+rax*1]
old instr: 0x40ef5c: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02996: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ef60: add rax, rdx
    new instr:0x7faef3f0299a: add rax, rdx
old instr: 0x40ef63: movzx eax, word ptr [rax]
    new instr:0x7faef3f0299d: movzx eax, word ptr [rax]
old instr: 0x40ef66: movzx edx, ax
    new instr:0x7faef3f029a0: movzx edx, ax
old instr: 0x40ef69: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f029a3: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ef70: movsxd rsi, edx
    new instr:0x7faef3f029aa: movsxd rsi, edx
40ef73
old instr: 0x40ef73: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f029ad: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ef76: cdqe 
    new instr:0x7faef3f029b0: cdqe 
old instr: 0x40ef78: add rax, rax
    new instr:0x7faef3f029b2: add rax, rax
old instr: 0x40ef7b: mov rdi, rax
    new instr:0x7faef3f029b5: mov rdi, rax
old instr: 0x40ef7e: shl rdi, 0x7
    new instr:0x7faef3f029b8: shl rdi, 0x7
old instr: 0x40ef82: add rax, rdi
    new instr:0x7faef3f029bc: add rax, rdi
old instr: 0x40ef85: add rax, rsi
    new instr:0x7faef3f029bf: add rax, rsi
old instr: 0x40ef88: add rax, 0x2c60
    new instr:0x7faef3f029c2: add rax, 0x2c60
old instr: 0x40ef8e: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f029c8: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ef92: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f029cc: lea esi, ptr [rax+0x1]
old instr: 0x40ef95: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f029cf: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ef9c: movsxd rdx, edx
    new instr:0x7faef3f029d6: movsxd rdx, edx
old instr: 0x40ef9f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f029d9: mov eax, dword ptr [rbp-0x40]
old instr: 0x40efa2: cdqe 
    new instr:0x7faef3f029dc: cdqe 
old instr: 0x40efa4: add rax, rax
    new instr:0x7faef3f029de: add rax, rax
old instr: 0x40efa7: mov rdi, rax
    new instr:0x7faef3f029e1: mov rdi, rax
old instr: 0x40efaa: shl rdi, 0x7
    new instr:0x7faef3f029e4: shl rdi, 0x7
old instr: 0x40efae: add rax, rdi
    new instr:0x7faef3f029e8: add rax, rdi
old instr: 0x40efb1: add rax, rdx
    new instr:0x7faef3f029eb: add rax, rdx
old instr: 0x40efb4: add rax, 0x2c60
    new instr:0x7faef3f029ee: add rax, 0x2c60
old instr: 0x40efba: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f029f4: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40efbe: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f029f8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40efc1: cdqe 
    new instr:0x7faef3f029fb: cdqe 
old instr: 0x40efc3: add rax, 0x5
    new instr:0x7faef3f029fd: add rax, 0x5
old instr: 0x40efc7: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02a01: lea rdx, ptr [rax+rax*1]
old instr: 0x40efcb: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02a05: mov rax, qword ptr [rbp-0x78]
old instr: 0x40efcf: add rax, rdx
    new instr:0x7faef3f02a09: add rax, rdx
old instr: 0x40efd2: movzx eax, word ptr [rax]
    new instr:0x7faef3f02a0c: movzx eax, word ptr [rax]
old instr: 0x40efd5: movzx edx, ax
    new instr:0x7faef3f02a0f: movzx edx, ax
old instr: 0x40efd8: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02a12: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40efdf: movsxd rsi, edx
    new instr:0x7faef3f02a19: movsxd rsi, edx
old instr: 0x40efe2: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02a1c: mov eax, dword ptr [rbp-0x40]
old instr: 0x40efe5: cdqe 
    new instr:0x7faef3f02a1f: cdqe 
old instr: 0x40efe7: add rax, rax
    new instr:0x7faef3f02a21: add rax, rax
old instr: 0x40efea: mov rdi, rax
    new instr:0x7faef3f02a24: mov rdi, rax
old instr: 0x40efed: shl rdi, 0x7
    new instr:0x7faef3f02a27: shl rdi, 0x7
old instr: 0x40eff1: add rax, rdi
    new instr:0x7faef3f02a2b: add rax, rdi
old instr: 0x40eff4: add rax, rsi
    new instr:0x7faef3f02a2e: add rax, rsi
old instr: 0x40eff7: add rax, 0x2c60
    new instr:0x7faef3f02a31: add rax, 0x2c60
old instr: 0x40effd: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02a37: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f001: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02a3b: lea esi, ptr [rax+0x1]
old instr: 0x40f004: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02a3e: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f00b: movsxd rdx, edx
    new instr:0x7faef3f02a45: movsxd rdx, edx
old instr: 0x40f00e: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02a48: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f011: cdqe 
    new instr:0x7faef3f02a4b: cdqe 
old instr: 0x40f013: add rax, rax
    new instr:0x7faef3f02a4d: add rax, rax
old instr: 0x40f016: mov rdi, rax
    new instr:0x7faef3f02a50: mov rdi, rax
old instr: 0x40f019: shl rdi, 0x7
    new instr:0x7faef3f02a53: shl rdi, 0x7
old instr: 0x40f01d: add rax, rdi
    new instr:0x7faef3f02a57: add rax, rdi
old instr: 0x40f020: add rax, rdx
    new instr:0x7faef3f02a5a: add rax, rdx
old instr: 0x40f023: add rax, 0x2c60
    new instr:0x7faef3f02a5d: add rax, 0x2c60
old instr: 0x40f029: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02a63: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f02d: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02a67: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f030: cdqe 
    new instr:0x7faef3f02a6a: cdqe 
old instr: 0x40f032: add rax, 0x6
    new instr:0x7faef3f02a6c: add rax, 0x6
old instr: 0x40f036: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02a70: lea rdx, ptr [rax+rax*1]
old instr: 0x40f03a: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02a74: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f03e: add rax, rdx
    new instr:0x7faef3f02a78: add rax, rdx
old instr: 0x40f041: movzx eax, word ptr [rax]
    new instr:0x7faef3f02a7b: movzx eax, word ptr [rax]
old instr: 0x40f044: movzx edx, ax
    new instr:0x7faef3f02a7e: movzx edx, ax
old instr: 0x40f047: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02a81: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f04e: movsxd rsi, edx
    new instr:0x7faef3f02a88: movsxd rsi, edx
old instr: 0x40f051: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02a8b: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f054: cdqe 
    new instr:0x7faef3f02a8e: cdqe 
old instr: 0x40f056: add rax, rax
    new instr:0x7faef3f02a90: add rax, rax
old instr: 0x40f059: mov rdi, rax
    new instr:0x7faef3f02a93: mov rdi, rax
old instr: 0x40f05c: shl rdi, 0x7
    new instr:0x7faef3f02a96: shl rdi, 0x7
old instr: 0x40f060: add rax, rdi
    new instr:0x7faef3f02a9a: add rax, rdi
old instr: 0x40f063: add rax, rsi
    new instr:0x7faef3f02a9d: add rax, rsi
old instr: 0x40f066: add rax, 0x2c60
    new instr:0x7faef3f02aa0: add rax, 0x2c60
40f06c
old instr: 0x40f06c: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02aa6: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f070: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02aaa: lea esi, ptr [rax+0x1]
old instr: 0x40f073: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02aad: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f07a: movsxd rdx, edx
    new instr:0x7faef3f02ab4: movsxd rdx, edx
old instr: 0x40f07d: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02ab7: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f080: cdqe 
    new instr:0x7faef3f02aba: cdqe 
old instr: 0x40f082: add rax, rax
    new instr:0x7faef3f02abc: add rax, rax
old instr: 0x40f085: mov rdi, rax
    new instr:0x7faef3f02abf: mov rdi, rax
old instr: 0x40f088: shl rdi, 0x7
    new instr:0x7faef3f02ac2: shl rdi, 0x7
old instr: 0x40f08c: add rax, rdi
    new instr:0x7faef3f02ac6: add rax, rdi
old instr: 0x40f08f: add rax, rdx
    new instr:0x7faef3f02ac9: add rax, rdx
old instr: 0x40f092: add rax, 0x2c60
    new instr:0x7faef3f02acc: add rax, 0x2c60
old instr: 0x40f098: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02ad2: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f09c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02ad6: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f09f: cdqe 
    new instr:0x7faef3f02ad9: cdqe 
old instr: 0x40f0a1: add rax, 0x7
    new instr:0x7faef3f02adb: add rax, 0x7
old instr: 0x40f0a5: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02adf: lea rdx, ptr [rax+rax*1]
old instr: 0x40f0a9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02ae3: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f0ad: add rax, rdx
    new instr:0x7faef3f02ae7: add rax, rdx
old instr: 0x40f0b0: movzx eax, word ptr [rax]
    new instr:0x7faef3f02aea: movzx eax, word ptr [rax]
old instr: 0x40f0b3: movzx edx, ax
    new instr:0x7faef3f02aed: movzx edx, ax
old instr: 0x40f0b6: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02af0: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f0bd: movsxd rsi, edx
    new instr:0x7faef3f02af7: movsxd rsi, edx
old instr: 0x40f0c0: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02afa: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f0c3: cdqe 
    new instr:0x7faef3f02afd: cdqe 
old instr: 0x40f0c5: add rax, rax
    new instr:0x7faef3f02aff: add rax, rax
old instr: 0x40f0c8: mov rdi, rax
    new instr:0x7faef3f02b02: mov rdi, rax
old instr: 0x40f0cb: shl rdi, 0x7
    new instr:0x7faef3f02b05: shl rdi, 0x7
old instr: 0x40f0cf: add rax, rdi
    new instr:0x7faef3f02b09: add rax, rdi
old instr: 0x40f0d2: add rax, rsi
    new instr:0x7faef3f02b0c: add rax, rsi
old instr: 0x40f0d5: add rax, 0x2c60
    new instr:0x7faef3f02b0f: add rax, 0x2c60
old instr: 0x40f0db: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02b15: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f0df: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02b19: lea esi, ptr [rax+0x1]
old instr: 0x40f0e2: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02b1c: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f0e9: movsxd rdx, edx
    new instr:0x7faef3f02b23: movsxd rdx, edx
old instr: 0x40f0ec: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02b26: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f0ef: cdqe 
    new instr:0x7faef3f02b29: cdqe 
old instr: 0x40f0f1: add rax, rax
    new instr:0x7faef3f02b2b: add rax, rax
old instr: 0x40f0f4: mov rdi, rax
    new instr:0x7faef3f02b2e: mov rdi, rax
old instr: 0x40f0f7: shl rdi, 0x7
    new instr:0x7faef3f02b31: shl rdi, 0x7
old instr: 0x40f0fb: add rax, rdi
    new instr:0x7faef3f02b35: add rax, rdi
old instr: 0x40f0fe: add rax, rdx
    new instr:0x7faef3f02b38: add rax, rdx
old instr: 0x40f101: add rax, 0x2c60
    new instr:0x7faef3f02b3b: add rax, 0x2c60
old instr: 0x40f107: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02b41: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f10b: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02b45: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f10e: cdqe 
    new instr:0x7faef3f02b48: cdqe 
old instr: 0x40f110: add rax, 0x8
    new instr:0x7faef3f02b4a: add rax, 0x8
old instr: 0x40f114: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02b4e: lea rdx, ptr [rax+rax*1]
old instr: 0x40f118: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02b52: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f11c: add rax, rdx
    new instr:0x7faef3f02b56: add rax, rdx
old instr: 0x40f11f: movzx eax, word ptr [rax]
    new instr:0x7faef3f02b59: movzx eax, word ptr [rax]
old instr: 0x40f122: movzx edx, ax
    new instr:0x7faef3f02b5c: movzx edx, ax
old instr: 0x40f125: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02b5f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f12c: movsxd rsi, edx
    new instr:0x7faef3f02b66: movsxd rsi, edx
old instr: 0x40f12f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02b69: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f132: cdqe 
    new instr:0x7faef3f02b6c: cdqe 
old instr: 0x40f134: add rax, rax
    new instr:0x7faef3f02b6e: add rax, rax
old instr: 0x40f137: mov rdi, rax
    new instr:0x7faef3f02b71: mov rdi, rax
old instr: 0x40f13a: shl rdi, 0x7
    new instr:0x7faef3f02b74: shl rdi, 0x7
old instr: 0x40f13e: add rax, rdi
    new instr:0x7faef3f02b78: add rax, rdi
old instr: 0x40f141: add rax, rsi
    new instr:0x7faef3f02b7b: add rax, rsi
old instr: 0x40f144: add rax, 0x2c60
    new instr:0x7faef3f02b7e: add rax, 0x2c60
old instr: 0x40f14a: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02b84: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f14e: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02b88: lea esi, ptr [rax+0x1]
old instr: 0x40f151: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02b8b: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f158: movsxd rdx, edx
    new instr:0x7faef3f02b92: movsxd rdx, edx
old instr: 0x40f15b: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02b95: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f15e: cdqe 
    new instr:0x7faef3f02b98: cdqe 
old instr: 0x40f160: add rax, rax
    new instr:0x7faef3f02b9a: add rax, rax
old instr: 0x40f163: mov rdi, rax
    new instr:0x7faef3f02b9d: mov rdi, rax
40f166
old instr: 0x40f166: shl rdi, 0x7
    new instr:0x7faef3f02ba0: shl rdi, 0x7
old instr: 0x40f16a: add rax, rdi
    new instr:0x7faef3f02ba4: add rax, rdi
old instr: 0x40f16d: add rax, rdx
    new instr:0x7faef3f02ba7: add rax, rdx
old instr: 0x40f170: add rax, 0x2c60
    new instr:0x7faef3f02baa: add rax, 0x2c60
old instr: 0x40f176: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02bb0: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f17a: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02bb4: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f17d: cdqe 
    new instr:0x7faef3f02bb7: cdqe 
old instr: 0x40f17f: add rax, 0x9
    new instr:0x7faef3f02bb9: add rax, 0x9
old instr: 0x40f183: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02bbd: lea rdx, ptr [rax+rax*1]
old instr: 0x40f187: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02bc1: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f18b: add rax, rdx
    new instr:0x7faef3f02bc5: add rax, rdx
old instr: 0x40f18e: movzx eax, word ptr [rax]
    new instr:0x7faef3f02bc8: movzx eax, word ptr [rax]
old instr: 0x40f191: movzx edx, ax
    new instr:0x7faef3f02bcb: movzx edx, ax
old instr: 0x40f194: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02bce: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f19b: movsxd rsi, edx
    new instr:0x7faef3f02bd5: movsxd rsi, edx
old instr: 0x40f19e: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02bd8: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f1a1: cdqe 
    new instr:0x7faef3f02bdb: cdqe 
old instr: 0x40f1a3: add rax, rax
    new instr:0x7faef3f02bdd: add rax, rax
old instr: 0x40f1a6: mov rdi, rax
    new instr:0x7faef3f02be0: mov rdi, rax
old instr: 0x40f1a9: shl rdi, 0x7
    new instr:0x7faef3f02be3: shl rdi, 0x7
old instr: 0x40f1ad: add rax, rdi
    new instr:0x7faef3f02be7: add rax, rdi
old instr: 0x40f1b0: add rax, rsi
    new instr:0x7faef3f02bea: add rax, rsi
old instr: 0x40f1b3: add rax, 0x2c60
    new instr:0x7faef3f02bed: add rax, 0x2c60
old instr: 0x40f1b9: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02bf3: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f1bd: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02bf7: lea esi, ptr [rax+0x1]
old instr: 0x40f1c0: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02bfa: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f1c7: movsxd rdx, edx
    new instr:0x7faef3f02c01: movsxd rdx, edx
old instr: 0x40f1ca: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02c04: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f1cd: cdqe 
    new instr:0x7faef3f02c07: cdqe 
old instr: 0x40f1cf: add rax, rax
    new instr:0x7faef3f02c09: add rax, rax
old instr: 0x40f1d2: mov rdi, rax
    new instr:0x7faef3f02c0c: mov rdi, rax
old instr: 0x40f1d5: shl rdi, 0x7
    new instr:0x7faef3f02c0f: shl rdi, 0x7
old instr: 0x40f1d9: add rax, rdi
    new instr:0x7faef3f02c13: add rax, rdi
old instr: 0x40f1dc: add rax, rdx
    new instr:0x7faef3f02c16: add rax, rdx
old instr: 0x40f1df: add rax, 0x2c60
    new instr:0x7faef3f02c19: add rax, 0x2c60
old instr: 0x40f1e5: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02c1f: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f1e9: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02c23: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f1ec: cdqe 
    new instr:0x7faef3f02c26: cdqe 
old instr: 0x40f1ee: add rax, 0xa
    new instr:0x7faef3f02c28: add rax, 0xa
old instr: 0x40f1f2: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02c2c: lea rdx, ptr [rax+rax*1]
old instr: 0x40f1f6: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02c30: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f1fa: add rax, rdx
    new instr:0x7faef3f02c34: add rax, rdx
old instr: 0x40f1fd: movzx eax, word ptr [rax]
    new instr:0x7faef3f02c37: movzx eax, word ptr [rax]
old instr: 0x40f200: movzx edx, ax
    new instr:0x7faef3f02c3a: movzx edx, ax
old instr: 0x40f203: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02c3d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f20a: movsxd rsi, edx
    new instr:0x7faef3f02c44: movsxd rsi, edx
old instr: 0x40f20d: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02c47: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f210: cdqe 
    new instr:0x7faef3f02c4a: cdqe 
old instr: 0x40f212: add rax, rax
    new instr:0x7faef3f02c4c: add rax, rax
old instr: 0x40f215: mov rdi, rax
    new instr:0x7faef3f02c4f: mov rdi, rax
old instr: 0x40f218: shl rdi, 0x7
    new instr:0x7faef3f02c52: shl rdi, 0x7
old instr: 0x40f21c: add rax, rdi
    new instr:0x7faef3f02c56: add rax, rdi
old instr: 0x40f21f: add rax, rsi
    new instr:0x7faef3f02c59: add rax, rsi
old instr: 0x40f222: add rax, 0x2c60
    new instr:0x7faef3f02c5c: add rax, 0x2c60
old instr: 0x40f228: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02c62: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f22c: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02c66: lea esi, ptr [rax+0x1]
old instr: 0x40f22f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02c69: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f236: movsxd rdx, edx
    new instr:0x7faef3f02c70: movsxd rdx, edx
old instr: 0x40f239: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02c73: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f23c: cdqe 
    new instr:0x7faef3f02c76: cdqe 
old instr: 0x40f23e: add rax, rax
    new instr:0x7faef3f02c78: add rax, rax
old instr: 0x40f241: mov rdi, rax
    new instr:0x7faef3f02c7b: mov rdi, rax
old instr: 0x40f244: shl rdi, 0x7
    new instr:0x7faef3f02c7e: shl rdi, 0x7
old instr: 0x40f248: add rax, rdi
    new instr:0x7faef3f02c82: add rax, rdi
old instr: 0x40f24b: add rax, rdx
    new instr:0x7faef3f02c85: add rax, rdx
old instr: 0x40f24e: add rax, 0x2c60
    new instr:0x7faef3f02c88: add rax, 0x2c60
old instr: 0x40f254: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02c8e: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f258: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02c92: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f25b: cdqe 
    new instr:0x7faef3f02c95: cdqe 
old instr: 0x40f25d: add rax, 0xb
    new instr:0x7faef3f02c97: add rax, 0xb
40f261
old instr: 0x40f261: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02c9b: lea rdx, ptr [rax+rax*1]
old instr: 0x40f265: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02c9f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f269: add rax, rdx
    new instr:0x7faef3f02ca3: add rax, rdx
old instr: 0x40f26c: movzx eax, word ptr [rax]
    new instr:0x7faef3f02ca6: movzx eax, word ptr [rax]
old instr: 0x40f26f: movzx edx, ax
    new instr:0x7faef3f02ca9: movzx edx, ax
old instr: 0x40f272: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02cac: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f279: movsxd rsi, edx
    new instr:0x7faef3f02cb3: movsxd rsi, edx
old instr: 0x40f27c: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02cb6: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f27f: cdqe 
    new instr:0x7faef3f02cb9: cdqe 
old instr: 0x40f281: add rax, rax
    new instr:0x7faef3f02cbb: add rax, rax
old instr: 0x40f284: mov rdi, rax
    new instr:0x7faef3f02cbe: mov rdi, rax
old instr: 0x40f287: shl rdi, 0x7
    new instr:0x7faef3f02cc1: shl rdi, 0x7
old instr: 0x40f28b: add rax, rdi
    new instr:0x7faef3f02cc5: add rax, rdi
old instr: 0x40f28e: add rax, rsi
    new instr:0x7faef3f02cc8: add rax, rsi
old instr: 0x40f291: add rax, 0x2c60
    new instr:0x7faef3f02ccb: add rax, 0x2c60
old instr: 0x40f297: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02cd1: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f29b: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02cd5: lea esi, ptr [rax+0x1]
old instr: 0x40f29e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02cd8: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f2a5: movsxd rdx, edx
    new instr:0x7faef3f02cdf: movsxd rdx, edx
old instr: 0x40f2a8: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02ce2: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f2ab: cdqe 
    new instr:0x7faef3f02ce5: cdqe 
old instr: 0x40f2ad: add rax, rax
    new instr:0x7faef3f02ce7: add rax, rax
old instr: 0x40f2b0: mov rdi, rax
    new instr:0x7faef3f02cea: mov rdi, rax
old instr: 0x40f2b3: shl rdi, 0x7
    new instr:0x7faef3f02ced: shl rdi, 0x7
old instr: 0x40f2b7: add rax, rdi
    new instr:0x7faef3f02cf1: add rax, rdi
old instr: 0x40f2ba: add rax, rdx
    new instr:0x7faef3f02cf4: add rax, rdx
old instr: 0x40f2bd: add rax, 0x2c60
    new instr:0x7faef3f02cf7: add rax, 0x2c60
old instr: 0x40f2c3: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02cfd: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f2c7: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02d01: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f2ca: cdqe 
    new instr:0x7faef3f02d04: cdqe 
old instr: 0x40f2cc: add rax, 0xc
    new instr:0x7faef3f02d06: add rax, 0xc
old instr: 0x40f2d0: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02d0a: lea rdx, ptr [rax+rax*1]
old instr: 0x40f2d4: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02d0e: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f2d8: add rax, rdx
    new instr:0x7faef3f02d12: add rax, rdx
old instr: 0x40f2db: movzx eax, word ptr [rax]
    new instr:0x7faef3f02d15: movzx eax, word ptr [rax]
old instr: 0x40f2de: movzx edx, ax
    new instr:0x7faef3f02d18: movzx edx, ax
old instr: 0x40f2e1: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02d1b: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f2e8: movsxd rsi, edx
    new instr:0x7faef3f02d22: movsxd rsi, edx
old instr: 0x40f2eb: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02d25: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f2ee: cdqe 
    new instr:0x7faef3f02d28: cdqe 
old instr: 0x40f2f0: add rax, rax
    new instr:0x7faef3f02d2a: add rax, rax
old instr: 0x40f2f3: mov rdi, rax
    new instr:0x7faef3f02d2d: mov rdi, rax
old instr: 0x40f2f6: shl rdi, 0x7
    new instr:0x7faef3f02d30: shl rdi, 0x7
old instr: 0x40f2fa: add rax, rdi
    new instr:0x7faef3f02d34: add rax, rdi
old instr: 0x40f2fd: add rax, rsi
    new instr:0x7faef3f02d37: add rax, rsi
old instr: 0x40f300: add rax, 0x2c60
    new instr:0x7faef3f02d3a: add rax, 0x2c60
old instr: 0x40f306: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02d40: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f30a: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02d44: lea esi, ptr [rax+0x1]
old instr: 0x40f30d: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02d47: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f314: movsxd rdx, edx
    new instr:0x7faef3f02d4e: movsxd rdx, edx
old instr: 0x40f317: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02d51: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f31a: cdqe 
    new instr:0x7faef3f02d54: cdqe 
old instr: 0x40f31c: add rax, rax
    new instr:0x7faef3f02d56: add rax, rax
old instr: 0x40f31f: mov rdi, rax
    new instr:0x7faef3f02d59: mov rdi, rax
old instr: 0x40f322: shl rdi, 0x7
    new instr:0x7faef3f02d5c: shl rdi, 0x7
old instr: 0x40f326: add rax, rdi
    new instr:0x7faef3f02d60: add rax, rdi
old instr: 0x40f329: add rax, rdx
    new instr:0x7faef3f02d63: add rax, rdx
old instr: 0x40f32c: add rax, 0x2c60
    new instr:0x7faef3f02d66: add rax, 0x2c60
old instr: 0x40f332: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02d6c: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f336: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02d70: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f339: cdqe 
    new instr:0x7faef3f02d73: cdqe 
old instr: 0x40f33b: add rax, 0xd
    new instr:0x7faef3f02d75: add rax, 0xd
old instr: 0x40f33f: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02d79: lea rdx, ptr [rax+rax*1]
old instr: 0x40f343: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02d7d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f347: add rax, rdx
    new instr:0x7faef3f02d81: add rax, rdx
old instr: 0x40f34a: movzx eax, word ptr [rax]
    new instr:0x7faef3f02d84: movzx eax, word ptr [rax]
old instr: 0x40f34d: movzx edx, ax
    new instr:0x7faef3f02d87: movzx edx, ax
old instr: 0x40f350: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02d8a: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f357: movsxd rsi, edx
    new instr:0x7faef3f02d91: movsxd rsi, edx
old instr: 0x40f35a: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02d94: mov eax, dword ptr [rbp-0x40]
40f35d
old instr: 0x40f35d: cdqe 
    new instr:0x7faef3f02d97: cdqe 
old instr: 0x40f35f: add rax, rax
    new instr:0x7faef3f02d99: add rax, rax
old instr: 0x40f362: mov rdi, rax
    new instr:0x7faef3f02d9c: mov rdi, rax
old instr: 0x40f365: shl rdi, 0x7
    new instr:0x7faef3f02d9f: shl rdi, 0x7
old instr: 0x40f369: add rax, rdi
    new instr:0x7faef3f02da3: add rax, rdi
old instr: 0x40f36c: add rax, rsi
    new instr:0x7faef3f02da6: add rax, rsi
old instr: 0x40f36f: add rax, 0x2c60
    new instr:0x7faef3f02da9: add rax, 0x2c60
old instr: 0x40f375: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02daf: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f379: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02db3: lea esi, ptr [rax+0x1]
old instr: 0x40f37c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02db6: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f383: movsxd rdx, edx
    new instr:0x7faef3f02dbd: movsxd rdx, edx
old instr: 0x40f386: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02dc0: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f389: cdqe 
    new instr:0x7faef3f02dc3: cdqe 
old instr: 0x40f38b: add rax, rax
    new instr:0x7faef3f02dc5: add rax, rax
old instr: 0x40f38e: mov rdi, rax
    new instr:0x7faef3f02dc8: mov rdi, rax
old instr: 0x40f391: shl rdi, 0x7
    new instr:0x7faef3f02dcb: shl rdi, 0x7
old instr: 0x40f395: add rax, rdi
    new instr:0x7faef3f02dcf: add rax, rdi
old instr: 0x40f398: add rax, rdx
    new instr:0x7faef3f02dd2: add rax, rdx
old instr: 0x40f39b: add rax, 0x2c60
    new instr:0x7faef3f02dd5: add rax, 0x2c60
old instr: 0x40f3a1: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02ddb: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f3a5: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02ddf: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f3a8: cdqe 
    new instr:0x7faef3f02de2: cdqe 
old instr: 0x40f3aa: add rax, 0xe
    new instr:0x7faef3f02de4: add rax, 0xe
old instr: 0x40f3ae: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02de8: lea rdx, ptr [rax+rax*1]
old instr: 0x40f3b2: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02dec: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f3b6: add rax, rdx
    new instr:0x7faef3f02df0: add rax, rdx
old instr: 0x40f3b9: movzx eax, word ptr [rax]
    new instr:0x7faef3f02df3: movzx eax, word ptr [rax]
old instr: 0x40f3bc: movzx edx, ax
    new instr:0x7faef3f02df6: movzx edx, ax
old instr: 0x40f3bf: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02df9: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f3c6: movsxd rsi, edx
    new instr:0x7faef3f02e00: movsxd rsi, edx
old instr: 0x40f3c9: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02e03: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f3cc: cdqe 
    new instr:0x7faef3f02e06: cdqe 
old instr: 0x40f3ce: add rax, rax
    new instr:0x7faef3f02e08: add rax, rax
old instr: 0x40f3d1: mov rdi, rax
    new instr:0x7faef3f02e0b: mov rdi, rax
old instr: 0x40f3d4: shl rdi, 0x7
    new instr:0x7faef3f02e0e: shl rdi, 0x7
old instr: 0x40f3d8: add rax, rdi
    new instr:0x7faef3f02e12: add rax, rdi
old instr: 0x40f3db: add rax, rsi
    new instr:0x7faef3f02e15: add rax, rsi
old instr: 0x40f3de: add rax, 0x2c60
    new instr:0x7faef3f02e18: add rax, 0x2c60
old instr: 0x40f3e4: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02e1e: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f3e8: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02e22: lea esi, ptr [rax+0x1]
old instr: 0x40f3eb: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02e25: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f3f2: movsxd rdx, edx
    new instr:0x7faef3f02e2c: movsxd rdx, edx
old instr: 0x40f3f5: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02e2f: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f3f8: cdqe 
    new instr:0x7faef3f02e32: cdqe 
old instr: 0x40f3fa: add rax, rax
    new instr:0x7faef3f02e34: add rax, rax
old instr: 0x40f3fd: mov rdi, rax
    new instr:0x7faef3f02e37: mov rdi, rax
old instr: 0x40f400: shl rdi, 0x7
    new instr:0x7faef3f02e3a: shl rdi, 0x7
old instr: 0x40f404: add rax, rdi
    new instr:0x7faef3f02e3e: add rax, rdi
old instr: 0x40f407: add rax, rdx
    new instr:0x7faef3f02e41: add rax, rdx
old instr: 0x40f40a: add rax, 0x2c60
    new instr:0x7faef3f02e44: add rax, 0x2c60
old instr: 0x40f410: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02e4a: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f414: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02e4e: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f417: cdqe 
    new instr:0x7faef3f02e51: cdqe 
old instr: 0x40f419: add rax, 0xf
    new instr:0x7faef3f02e53: add rax, 0xf
old instr: 0x40f41d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02e57: lea rdx, ptr [rax+rax*1]
old instr: 0x40f421: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02e5b: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f425: add rax, rdx
    new instr:0x7faef3f02e5f: add rax, rdx
old instr: 0x40f428: movzx eax, word ptr [rax]
    new instr:0x7faef3f02e62: movzx eax, word ptr [rax]
old instr: 0x40f42b: movzx edx, ax
    new instr:0x7faef3f02e65: movzx edx, ax
old instr: 0x40f42e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02e68: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f435: movsxd rsi, edx
    new instr:0x7faef3f02e6f: movsxd rsi, edx
old instr: 0x40f438: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02e72: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f43b: cdqe 
    new instr:0x7faef3f02e75: cdqe 
old instr: 0x40f43d: add rax, rax
    new instr:0x7faef3f02e77: add rax, rax
old instr: 0x40f440: mov rdi, rax
    new instr:0x7faef3f02e7a: mov rdi, rax
old instr: 0x40f443: shl rdi, 0x7
    new instr:0x7faef3f02e7d: shl rdi, 0x7
old instr: 0x40f447: add rax, rdi
    new instr:0x7faef3f02e81: add rax, rdi
old instr: 0x40f44a: add rax, rsi
    new instr:0x7faef3f02e84: add rax, rsi
old instr: 0x40f44d: add rax, 0x2c60
    new instr:0x7faef3f02e87: add rax, 0x2c60
old instr: 0x40f453: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02e8d: mov eax, dword ptr [rcx+rax*4+0x8]
40f457
old instr: 0x40f457: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02e91: lea esi, ptr [rax+0x1]
old instr: 0x40f45a: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02e94: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f461: movsxd rdx, edx
    new instr:0x7faef3f02e9b: movsxd rdx, edx
old instr: 0x40f464: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02e9e: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f467: cdqe 
    new instr:0x7faef3f02ea1: cdqe 
old instr: 0x40f469: add rax, rax
    new instr:0x7faef3f02ea3: add rax, rax
old instr: 0x40f46c: mov rdi, rax
    new instr:0x7faef3f02ea6: mov rdi, rax
old instr: 0x40f46f: shl rdi, 0x7
    new instr:0x7faef3f02ea9: shl rdi, 0x7
old instr: 0x40f473: add rax, rdi
    new instr:0x7faef3f02ead: add rax, rdi
old instr: 0x40f476: add rax, rdx
    new instr:0x7faef3f02eb0: add rax, rdx
old instr: 0x40f479: add rax, 0x2c60
    new instr:0x7faef3f02eb3: add rax, 0x2c60
old instr: 0x40f47f: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02eb9: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f483: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02ebd: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f486: cdqe 
    new instr:0x7faef3f02ec0: cdqe 
old instr: 0x40f488: add rax, 0x10
    new instr:0x7faef3f02ec2: add rax, 0x10
old instr: 0x40f48c: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02ec6: lea rdx, ptr [rax+rax*1]
old instr: 0x40f490: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02eca: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f494: add rax, rdx
    new instr:0x7faef3f02ece: add rax, rdx
old instr: 0x40f497: movzx eax, word ptr [rax]
    new instr:0x7faef3f02ed1: movzx eax, word ptr [rax]
old instr: 0x40f49a: movzx edx, ax
    new instr:0x7faef3f02ed4: movzx edx, ax
old instr: 0x40f49d: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02ed7: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f4a4: movsxd rsi, edx
    new instr:0x7faef3f02ede: movsxd rsi, edx
old instr: 0x40f4a7: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02ee1: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f4aa: cdqe 
    new instr:0x7faef3f02ee4: cdqe 
old instr: 0x40f4ac: add rax, rax
    new instr:0x7faef3f02ee6: add rax, rax
old instr: 0x40f4af: mov rdi, rax
    new instr:0x7faef3f02ee9: mov rdi, rax
old instr: 0x40f4b2: shl rdi, 0x7
    new instr:0x7faef3f02eec: shl rdi, 0x7
old instr: 0x40f4b6: add rax, rdi
    new instr:0x7faef3f02ef0: add rax, rdi
old instr: 0x40f4b9: add rax, rsi
    new instr:0x7faef3f02ef3: add rax, rsi
old instr: 0x40f4bc: add rax, 0x2c60
    new instr:0x7faef3f02ef6: add rax, 0x2c60
old instr: 0x40f4c2: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02efc: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f4c6: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02f00: lea esi, ptr [rax+0x1]
old instr: 0x40f4c9: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02f03: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f4d0: movsxd rdx, edx
    new instr:0x7faef3f02f0a: movsxd rdx, edx
old instr: 0x40f4d3: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02f0d: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f4d6: cdqe 
    new instr:0x7faef3f02f10: cdqe 
old instr: 0x40f4d8: add rax, rax
    new instr:0x7faef3f02f12: add rax, rax
old instr: 0x40f4db: mov rdi, rax
    new instr:0x7faef3f02f15: mov rdi, rax
old instr: 0x40f4de: shl rdi, 0x7
    new instr:0x7faef3f02f18: shl rdi, 0x7
old instr: 0x40f4e2: add rax, rdi
    new instr:0x7faef3f02f1c: add rax, rdi
old instr: 0x40f4e5: add rax, rdx
    new instr:0x7faef3f02f1f: add rax, rdx
old instr: 0x40f4e8: add rax, 0x2c60
    new instr:0x7faef3f02f22: add rax, 0x2c60
old instr: 0x40f4ee: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02f28: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f4f2: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02f2c: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f4f5: cdqe 
    new instr:0x7faef3f02f2f: cdqe 
old instr: 0x40f4f7: add rax, 0x11
    new instr:0x7faef3f02f31: add rax, 0x11
old instr: 0x40f4fb: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02f35: lea rdx, ptr [rax+rax*1]
old instr: 0x40f4ff: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02f39: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f503: add rax, rdx
    new instr:0x7faef3f02f3d: add rax, rdx
old instr: 0x40f506: movzx eax, word ptr [rax]
    new instr:0x7faef3f02f40: movzx eax, word ptr [rax]
old instr: 0x40f509: movzx edx, ax
    new instr:0x7faef3f02f43: movzx edx, ax
old instr: 0x40f50c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02f46: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f513: movsxd rsi, edx
    new instr:0x7faef3f02f4d: movsxd rsi, edx
old instr: 0x40f516: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02f50: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f519: cdqe 
    new instr:0x7faef3f02f53: cdqe 
old instr: 0x40f51b: add rax, rax
    new instr:0x7faef3f02f55: add rax, rax
old instr: 0x40f51e: mov rdi, rax
    new instr:0x7faef3f02f58: mov rdi, rax
old instr: 0x40f521: shl rdi, 0x7
    new instr:0x7faef3f02f5b: shl rdi, 0x7
old instr: 0x40f525: add rax, rdi
    new instr:0x7faef3f02f5f: add rax, rdi
old instr: 0x40f528: add rax, rsi
    new instr:0x7faef3f02f62: add rax, rsi
old instr: 0x40f52b: add rax, 0x2c60
    new instr:0x7faef3f02f65: add rax, 0x2c60
old instr: 0x40f531: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02f6b: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f535: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02f6f: lea esi, ptr [rax+0x1]
old instr: 0x40f538: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02f72: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f53f: movsxd rdx, edx
    new instr:0x7faef3f02f79: movsxd rdx, edx
old instr: 0x40f542: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02f7c: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f545: cdqe 
    new instr:0x7faef3f02f7f: cdqe 
old instr: 0x40f547: add rax, rax
    new instr:0x7faef3f02f81: add rax, rax
old instr: 0x40f54a: mov rdi, rax
    new instr:0x7faef3f02f84: mov rdi, rax
old instr: 0x40f54d: shl rdi, 0x7
    new instr:0x7faef3f02f87: shl rdi, 0x7
40f551
old instr: 0x40f551: add rax, rdi
    new instr:0x7faef3f02f8b: add rax, rdi
old instr: 0x40f554: add rax, rdx
    new instr:0x7faef3f02f8e: add rax, rdx
old instr: 0x40f557: add rax, 0x2c60
    new instr:0x7faef3f02f91: add rax, 0x2c60
old instr: 0x40f55d: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f02f97: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f561: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f02f9b: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f564: cdqe 
    new instr:0x7faef3f02f9e: cdqe 
old instr: 0x40f566: add rax, 0x12
    new instr:0x7faef3f02fa0: add rax, 0x12
old instr: 0x40f56a: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f02fa4: lea rdx, ptr [rax+rax*1]
old instr: 0x40f56e: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f02fa8: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f572: add rax, rdx
    new instr:0x7faef3f02fac: add rax, rdx
old instr: 0x40f575: movzx eax, word ptr [rax]
    new instr:0x7faef3f02faf: movzx eax, word ptr [rax]
old instr: 0x40f578: movzx edx, ax
    new instr:0x7faef3f02fb2: movzx edx, ax
old instr: 0x40f57b: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02fb5: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f582: movsxd rsi, edx
    new instr:0x7faef3f02fbc: movsxd rsi, edx
old instr: 0x40f585: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02fbf: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f588: cdqe 
    new instr:0x7faef3f02fc2: cdqe 
old instr: 0x40f58a: add rax, rax
    new instr:0x7faef3f02fc4: add rax, rax
old instr: 0x40f58d: mov rdi, rax
    new instr:0x7faef3f02fc7: mov rdi, rax
old instr: 0x40f590: shl rdi, 0x7
    new instr:0x7faef3f02fca: shl rdi, 0x7
old instr: 0x40f594: add rax, rdi
    new instr:0x7faef3f02fce: add rax, rdi
old instr: 0x40f597: add rax, rsi
    new instr:0x7faef3f02fd1: add rax, rsi
old instr: 0x40f59a: add rax, 0x2c60
    new instr:0x7faef3f02fd4: add rax, 0x2c60
old instr: 0x40f5a0: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f02fda: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f5a4: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f02fde: lea esi, ptr [rax+0x1]
old instr: 0x40f5a7: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f02fe1: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f5ae: movsxd rdx, edx
    new instr:0x7faef3f02fe8: movsxd rdx, edx
old instr: 0x40f5b1: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f02feb: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f5b4: cdqe 
    new instr:0x7faef3f02fee: cdqe 
old instr: 0x40f5b6: add rax, rax
    new instr:0x7faef3f02ff0: add rax, rax
old instr: 0x40f5b9: mov rdi, rax
    new instr:0x7faef3f02ff3: mov rdi, rax
old instr: 0x40f5bc: shl rdi, 0x7
    new instr:0x7faef3f02ff6: shl rdi, 0x7
old instr: 0x40f5c0: add rax, rdi
    new instr:0x7faef3f02ffa: add rax, rdi
old instr: 0x40f5c3: add rax, rdx
    new instr:0x7faef3f02ffd: add rax, rdx
old instr: 0x40f5c6: add rax, 0x2c60
    new instr:0x7faef3f03000: add rax, 0x2c60
old instr: 0x40f5cc: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03006: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f5d0: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0300a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f5d3: cdqe 
    new instr:0x7faef3f0300d: cdqe 
old instr: 0x40f5d5: add rax, 0x13
    new instr:0x7faef3f0300f: add rax, 0x13
old instr: 0x40f5d9: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03013: lea rdx, ptr [rax+rax*1]
old instr: 0x40f5dd: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03017: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f5e1: add rax, rdx
    new instr:0x7faef3f0301b: add rax, rdx
old instr: 0x40f5e4: movzx eax, word ptr [rax]
    new instr:0x7faef3f0301e: movzx eax, word ptr [rax]
old instr: 0x40f5e7: movzx edx, ax
    new instr:0x7faef3f03021: movzx edx, ax
old instr: 0x40f5ea: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03024: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f5f1: movsxd rsi, edx
    new instr:0x7faef3f0302b: movsxd rsi, edx
old instr: 0x40f5f4: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0302e: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f5f7: cdqe 
    new instr:0x7faef3f03031: cdqe 
old instr: 0x40f5f9: add rax, rax
    new instr:0x7faef3f03033: add rax, rax
old instr: 0x40f5fc: mov rdi, rax
    new instr:0x7faef3f03036: mov rdi, rax
old instr: 0x40f5ff: shl rdi, 0x7
    new instr:0x7faef3f03039: shl rdi, 0x7
old instr: 0x40f603: add rax, rdi
    new instr:0x7faef3f0303d: add rax, rdi
old instr: 0x40f606: add rax, rsi
    new instr:0x7faef3f03040: add rax, rsi
old instr: 0x40f609: add rax, 0x2c60
    new instr:0x7faef3f03043: add rax, 0x2c60
old instr: 0x40f60f: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03049: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f613: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0304d: lea esi, ptr [rax+0x1]
old instr: 0x40f616: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03050: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f61d: movsxd rdx, edx
    new instr:0x7faef3f03057: movsxd rdx, edx
old instr: 0x40f620: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0305a: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f623: cdqe 
    new instr:0x7faef3f0305d: cdqe 
old instr: 0x40f625: add rax, rax
    new instr:0x7faef3f0305f: add rax, rax
old instr: 0x40f628: mov rdi, rax
    new instr:0x7faef3f03062: mov rdi, rax
old instr: 0x40f62b: shl rdi, 0x7
    new instr:0x7faef3f03065: shl rdi, 0x7
old instr: 0x40f62f: add rax, rdi
    new instr:0x7faef3f03069: add rax, rdi
old instr: 0x40f632: add rax, rdx
    new instr:0x7faef3f0306c: add rax, rdx
old instr: 0x40f635: add rax, 0x2c60
    new instr:0x7faef3f0306f: add rax, 0x2c60
old instr: 0x40f63b: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03075: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f63f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03079: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f642: cdqe 
    new instr:0x7faef3f0307c: cdqe 
old instr: 0x40f644: add rax, 0x14
    new instr:0x7faef3f0307e: add rax, 0x14
old instr: 0x40f648: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03082: lea rdx, ptr [rax+rax*1]
40f64c
old instr: 0x40f64c: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03086: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f650: add rax, rdx
    new instr:0x7faef3f0308a: add rax, rdx
old instr: 0x40f653: movzx eax, word ptr [rax]
    new instr:0x7faef3f0308d: movzx eax, word ptr [rax]
old instr: 0x40f656: movzx edx, ax
    new instr:0x7faef3f03090: movzx edx, ax
old instr: 0x40f659: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03093: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f660: movsxd rsi, edx
    new instr:0x7faef3f0309a: movsxd rsi, edx
old instr: 0x40f663: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0309d: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f666: cdqe 
    new instr:0x7faef3f030a0: cdqe 
old instr: 0x40f668: add rax, rax
    new instr:0x7faef3f030a2: add rax, rax
old instr: 0x40f66b: mov rdi, rax
    new instr:0x7faef3f030a5: mov rdi, rax
old instr: 0x40f66e: shl rdi, 0x7
    new instr:0x7faef3f030a8: shl rdi, 0x7
old instr: 0x40f672: add rax, rdi
    new instr:0x7faef3f030ac: add rax, rdi
old instr: 0x40f675: add rax, rsi
    new instr:0x7faef3f030af: add rax, rsi
old instr: 0x40f678: add rax, 0x2c60
    new instr:0x7faef3f030b2: add rax, 0x2c60
old instr: 0x40f67e: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f030b8: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f682: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f030bc: lea esi, ptr [rax+0x1]
old instr: 0x40f685: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f030bf: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f68c: movsxd rdx, edx
    new instr:0x7faef3f030c6: movsxd rdx, edx
old instr: 0x40f68f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f030c9: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f692: cdqe 
    new instr:0x7faef3f030cc: cdqe 
old instr: 0x40f694: add rax, rax
    new instr:0x7faef3f030ce: add rax, rax
old instr: 0x40f697: mov rdi, rax
    new instr:0x7faef3f030d1: mov rdi, rax
old instr: 0x40f69a: shl rdi, 0x7
    new instr:0x7faef3f030d4: shl rdi, 0x7
old instr: 0x40f69e: add rax, rdi
    new instr:0x7faef3f030d8: add rax, rdi
old instr: 0x40f6a1: add rax, rdx
    new instr:0x7faef3f030db: add rax, rdx
old instr: 0x40f6a4: add rax, 0x2c60
    new instr:0x7faef3f030de: add rax, 0x2c60
old instr: 0x40f6aa: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f030e4: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f6ae: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f030e8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f6b1: cdqe 
    new instr:0x7faef3f030eb: cdqe 
old instr: 0x40f6b3: add rax, 0x15
    new instr:0x7faef3f030ed: add rax, 0x15
old instr: 0x40f6b7: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f030f1: lea rdx, ptr [rax+rax*1]
old instr: 0x40f6bb: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f030f5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f6bf: add rax, rdx
    new instr:0x7faef3f030f9: add rax, rdx
old instr: 0x40f6c2: movzx eax, word ptr [rax]
    new instr:0x7faef3f030fc: movzx eax, word ptr [rax]
old instr: 0x40f6c5: movzx edx, ax
    new instr:0x7faef3f030ff: movzx edx, ax
old instr: 0x40f6c8: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03102: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f6cf: movsxd rsi, edx
    new instr:0x7faef3f03109: movsxd rsi, edx
old instr: 0x40f6d2: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0310c: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f6d5: cdqe 
    new instr:0x7faef3f0310f: cdqe 
old instr: 0x40f6d7: add rax, rax
    new instr:0x7faef3f03111: add rax, rax
old instr: 0x40f6da: mov rdi, rax
    new instr:0x7faef3f03114: mov rdi, rax
old instr: 0x40f6dd: shl rdi, 0x7
    new instr:0x7faef3f03117: shl rdi, 0x7
old instr: 0x40f6e1: add rax, rdi
    new instr:0x7faef3f0311b: add rax, rdi
old instr: 0x40f6e4: add rax, rsi
    new instr:0x7faef3f0311e: add rax, rsi
old instr: 0x40f6e7: add rax, 0x2c60
    new instr:0x7faef3f03121: add rax, 0x2c60
old instr: 0x40f6ed: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03127: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f6f1: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0312b: lea esi, ptr [rax+0x1]
old instr: 0x40f6f4: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0312e: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f6fb: movsxd rdx, edx
    new instr:0x7faef3f03135: movsxd rdx, edx
old instr: 0x40f6fe: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03138: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f701: cdqe 
    new instr:0x7faef3f0313b: cdqe 
old instr: 0x40f703: add rax, rax
    new instr:0x7faef3f0313d: add rax, rax
old instr: 0x40f706: mov rdi, rax
    new instr:0x7faef3f03140: mov rdi, rax
old instr: 0x40f709: shl rdi, 0x7
    new instr:0x7faef3f03143: shl rdi, 0x7
old instr: 0x40f70d: add rax, rdi
    new instr:0x7faef3f03147: add rax, rdi
old instr: 0x40f710: add rax, rdx
    new instr:0x7faef3f0314a: add rax, rdx
old instr: 0x40f713: add rax, 0x2c60
    new instr:0x7faef3f0314d: add rax, 0x2c60
old instr: 0x40f719: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03153: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f71d: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03157: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f720: cdqe 
    new instr:0x7faef3f0315a: cdqe 
old instr: 0x40f722: add rax, 0x16
    new instr:0x7faef3f0315c: add rax, 0x16
old instr: 0x40f726: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03160: lea rdx, ptr [rax+rax*1]
old instr: 0x40f72a: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03164: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f72e: add rax, rdx
    new instr:0x7faef3f03168: add rax, rdx
old instr: 0x40f731: movzx eax, word ptr [rax]
    new instr:0x7faef3f0316b: movzx eax, word ptr [rax]
old instr: 0x40f734: movzx edx, ax
    new instr:0x7faef3f0316e: movzx edx, ax
old instr: 0x40f737: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03171: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f73e: movsxd rsi, edx
    new instr:0x7faef3f03178: movsxd rsi, edx
old instr: 0x40f741: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0317b: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f744: cdqe 
    new instr:0x7faef3f0317e: cdqe 
40f746
old instr: 0x40f746: add rax, rax
    new instr:0x7faef3f03180: add rax, rax
old instr: 0x40f749: mov rdi, rax
    new instr:0x7faef3f03183: mov rdi, rax
old instr: 0x40f74c: shl rdi, 0x7
    new instr:0x7faef3f03186: shl rdi, 0x7
old instr: 0x40f750: add rax, rdi
    new instr:0x7faef3f0318a: add rax, rdi
old instr: 0x40f753: add rax, rsi
    new instr:0x7faef3f0318d: add rax, rsi
old instr: 0x40f756: add rax, 0x2c60
    new instr:0x7faef3f03190: add rax, 0x2c60
old instr: 0x40f75c: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03196: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f760: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0319a: lea esi, ptr [rax+0x1]
old instr: 0x40f763: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0319d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f76a: movsxd rdx, edx
    new instr:0x7faef3f031a4: movsxd rdx, edx
old instr: 0x40f76d: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f031a7: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f770: cdqe 
    new instr:0x7faef3f031aa: cdqe 
old instr: 0x40f772: add rax, rax
    new instr:0x7faef3f031ac: add rax, rax
old instr: 0x40f775: mov rdi, rax
    new instr:0x7faef3f031af: mov rdi, rax
old instr: 0x40f778: shl rdi, 0x7
    new instr:0x7faef3f031b2: shl rdi, 0x7
old instr: 0x40f77c: add rax, rdi
    new instr:0x7faef3f031b6: add rax, rdi
old instr: 0x40f77f: add rax, rdx
    new instr:0x7faef3f031b9: add rax, rdx
old instr: 0x40f782: add rax, 0x2c60
    new instr:0x7faef3f031bc: add rax, 0x2c60
old instr: 0x40f788: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f031c2: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f78c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f031c6: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f78f: cdqe 
    new instr:0x7faef3f031c9: cdqe 
old instr: 0x40f791: add rax, 0x17
    new instr:0x7faef3f031cb: add rax, 0x17
old instr: 0x40f795: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f031cf: lea rdx, ptr [rax+rax*1]
old instr: 0x40f799: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f031d3: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f79d: add rax, rdx
    new instr:0x7faef3f031d7: add rax, rdx
old instr: 0x40f7a0: movzx eax, word ptr [rax]
    new instr:0x7faef3f031da: movzx eax, word ptr [rax]
old instr: 0x40f7a3: movzx edx, ax
    new instr:0x7faef3f031dd: movzx edx, ax
old instr: 0x40f7a6: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f031e0: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f7ad: movsxd rsi, edx
    new instr:0x7faef3f031e7: movsxd rsi, edx
old instr: 0x40f7b0: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f031ea: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f7b3: cdqe 
    new instr:0x7faef3f031ed: cdqe 
old instr: 0x40f7b5: add rax, rax
    new instr:0x7faef3f031ef: add rax, rax
old instr: 0x40f7b8: mov rdi, rax
    new instr:0x7faef3f031f2: mov rdi, rax
old instr: 0x40f7bb: shl rdi, 0x7
    new instr:0x7faef3f031f5: shl rdi, 0x7
old instr: 0x40f7bf: add rax, rdi
    new instr:0x7faef3f031f9: add rax, rdi
old instr: 0x40f7c2: add rax, rsi
    new instr:0x7faef3f031fc: add rax, rsi
old instr: 0x40f7c5: add rax, 0x2c60
    new instr:0x7faef3f031ff: add rax, 0x2c60
old instr: 0x40f7cb: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03205: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f7cf: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03209: lea esi, ptr [rax+0x1]
old instr: 0x40f7d2: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0320c: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f7d9: movsxd rdx, edx
    new instr:0x7faef3f03213: movsxd rdx, edx
old instr: 0x40f7dc: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03216: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f7df: cdqe 
    new instr:0x7faef3f03219: cdqe 
old instr: 0x40f7e1: add rax, rax
    new instr:0x7faef3f0321b: add rax, rax
old instr: 0x40f7e4: mov rdi, rax
    new instr:0x7faef3f0321e: mov rdi, rax
old instr: 0x40f7e7: shl rdi, 0x7
    new instr:0x7faef3f03221: shl rdi, 0x7
old instr: 0x40f7eb: add rax, rdi
    new instr:0x7faef3f03225: add rax, rdi
old instr: 0x40f7ee: add rax, rdx
    new instr:0x7faef3f03228: add rax, rdx
old instr: 0x40f7f1: add rax, 0x2c60
    new instr:0x7faef3f0322b: add rax, 0x2c60
old instr: 0x40f7f7: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03231: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f7fb: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03235: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f7fe: cdqe 
    new instr:0x7faef3f03238: cdqe 
old instr: 0x40f800: add rax, 0x18
    new instr:0x7faef3f0323a: add rax, 0x18
old instr: 0x40f804: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f0323e: lea rdx, ptr [rax+rax*1]
old instr: 0x40f808: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03242: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f80c: add rax, rdx
    new instr:0x7faef3f03246: add rax, rdx
old instr: 0x40f80f: movzx eax, word ptr [rax]
    new instr:0x7faef3f03249: movzx eax, word ptr [rax]
old instr: 0x40f812: movzx edx, ax
    new instr:0x7faef3f0324c: movzx edx, ax
old instr: 0x40f815: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0324f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f81c: movsxd rsi, edx
    new instr:0x7faef3f03256: movsxd rsi, edx
old instr: 0x40f81f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03259: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f822: cdqe 
    new instr:0x7faef3f0325c: cdqe 
old instr: 0x40f824: add rax, rax
    new instr:0x7faef3f0325e: add rax, rax
old instr: 0x40f827: mov rdi, rax
    new instr:0x7faef3f03261: mov rdi, rax
old instr: 0x40f82a: shl rdi, 0x7
    new instr:0x7faef3f03264: shl rdi, 0x7
old instr: 0x40f82e: add rax, rdi
    new instr:0x7faef3f03268: add rax, rdi
old instr: 0x40f831: add rax, rsi
    new instr:0x7faef3f0326b: add rax, rsi
old instr: 0x40f834: add rax, 0x2c60
    new instr:0x7faef3f0326e: add rax, 0x2c60
old instr: 0x40f83a: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03274: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f83e: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03278: lea esi, ptr [rax+0x1]
40f841
old instr: 0x40f841: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0327b: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f848: movsxd rdx, edx
    new instr:0x7faef3f03282: movsxd rdx, edx
old instr: 0x40f84b: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03285: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f84e: cdqe 
    new instr:0x7faef3f03288: cdqe 
old instr: 0x40f850: add rax, rax
    new instr:0x7faef3f0328a: add rax, rax
old instr: 0x40f853: mov rdi, rax
    new instr:0x7faef3f0328d: mov rdi, rax
old instr: 0x40f856: shl rdi, 0x7
    new instr:0x7faef3f03290: shl rdi, 0x7
old instr: 0x40f85a: add rax, rdi
    new instr:0x7faef3f03294: add rax, rdi
old instr: 0x40f85d: add rax, rdx
    new instr:0x7faef3f03297: add rax, rdx
old instr: 0x40f860: add rax, 0x2c60
    new instr:0x7faef3f0329a: add rax, 0x2c60
old instr: 0x40f866: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f032a0: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f86a: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f032a4: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f86d: cdqe 
    new instr:0x7faef3f032a7: cdqe 
old instr: 0x40f86f: add rax, 0x19
    new instr:0x7faef3f032a9: add rax, 0x19
old instr: 0x40f873: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f032ad: lea rdx, ptr [rax+rax*1]
old instr: 0x40f877: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f032b1: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f87b: add rax, rdx
    new instr:0x7faef3f032b5: add rax, rdx
old instr: 0x40f87e: movzx eax, word ptr [rax]
    new instr:0x7faef3f032b8: movzx eax, word ptr [rax]
old instr: 0x40f881: movzx edx, ax
    new instr:0x7faef3f032bb: movzx edx, ax
old instr: 0x40f884: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f032be: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f88b: movsxd rsi, edx
    new instr:0x7faef3f032c5: movsxd rsi, edx
old instr: 0x40f88e: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f032c8: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f891: cdqe 
    new instr:0x7faef3f032cb: cdqe 
old instr: 0x40f893: add rax, rax
    new instr:0x7faef3f032cd: add rax, rax
old instr: 0x40f896: mov rdi, rax
    new instr:0x7faef3f032d0: mov rdi, rax
old instr: 0x40f899: shl rdi, 0x7
    new instr:0x7faef3f032d3: shl rdi, 0x7
old instr: 0x40f89d: add rax, rdi
    new instr:0x7faef3f032d7: add rax, rdi
old instr: 0x40f8a0: add rax, rsi
    new instr:0x7faef3f032da: add rax, rsi
old instr: 0x40f8a3: add rax, 0x2c60
    new instr:0x7faef3f032dd: add rax, 0x2c60
old instr: 0x40f8a9: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f032e3: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f8ad: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f032e7: lea esi, ptr [rax+0x1]
old instr: 0x40f8b0: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f032ea: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f8b7: movsxd rdx, edx
    new instr:0x7faef3f032f1: movsxd rdx, edx
old instr: 0x40f8ba: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f032f4: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f8bd: cdqe 
    new instr:0x7faef3f032f7: cdqe 
old instr: 0x40f8bf: add rax, rax
    new instr:0x7faef3f032f9: add rax, rax
old instr: 0x40f8c2: mov rdi, rax
    new instr:0x7faef3f032fc: mov rdi, rax
old instr: 0x40f8c5: shl rdi, 0x7
    new instr:0x7faef3f032ff: shl rdi, 0x7
old instr: 0x40f8c9: add rax, rdi
    new instr:0x7faef3f03303: add rax, rdi
old instr: 0x40f8cc: add rax, rdx
    new instr:0x7faef3f03306: add rax, rdx
old instr: 0x40f8cf: add rax, 0x2c60
    new instr:0x7faef3f03309: add rax, 0x2c60
old instr: 0x40f8d5: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f0330f: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f8d9: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03313: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f8dc: cdqe 
    new instr:0x7faef3f03316: cdqe 
old instr: 0x40f8de: add rax, 0x1a
    new instr:0x7faef3f03318: add rax, 0x1a
old instr: 0x40f8e2: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f0331c: lea rdx, ptr [rax+rax*1]
old instr: 0x40f8e6: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03320: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f8ea: add rax, rdx
    new instr:0x7faef3f03324: add rax, rdx
old instr: 0x40f8ed: movzx eax, word ptr [rax]
    new instr:0x7faef3f03327: movzx eax, word ptr [rax]
old instr: 0x40f8f0: movzx edx, ax
    new instr:0x7faef3f0332a: movzx edx, ax
old instr: 0x40f8f3: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0332d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f8fa: movsxd rsi, edx
    new instr:0x7faef3f03334: movsxd rsi, edx
old instr: 0x40f8fd: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03337: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f900: cdqe 
    new instr:0x7faef3f0333a: cdqe 
old instr: 0x40f902: add rax, rax
    new instr:0x7faef3f0333c: add rax, rax
old instr: 0x40f905: mov rdi, rax
    new instr:0x7faef3f0333f: mov rdi, rax
old instr: 0x40f908: shl rdi, 0x7
    new instr:0x7faef3f03342: shl rdi, 0x7
old instr: 0x40f90c: add rax, rdi
    new instr:0x7faef3f03346: add rax, rdi
old instr: 0x40f90f: add rax, rsi
    new instr:0x7faef3f03349: add rax, rsi
old instr: 0x40f912: add rax, 0x2c60
    new instr:0x7faef3f0334c: add rax, 0x2c60
old instr: 0x40f918: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03352: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f91c: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03356: lea esi, ptr [rax+0x1]
old instr: 0x40f91f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03359: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f926: movsxd rdx, edx
    new instr:0x7faef3f03360: movsxd rdx, edx
old instr: 0x40f929: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03363: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f92c: cdqe 
    new instr:0x7faef3f03366: cdqe 
old instr: 0x40f92e: add rax, rax
    new instr:0x7faef3f03368: add rax, rax
old instr: 0x40f931: mov rdi, rax
    new instr:0x7faef3f0336b: mov rdi, rax
old instr: 0x40f934: shl rdi, 0x7
    new instr:0x7faef3f0336e: shl rdi, 0x7
old instr: 0x40f938: add rax, rdi
    new instr:0x7faef3f03372: add rax, rdi
40f93b
old instr: 0x40f93b: add rax, rdx
    new instr:0x7faef3f03375: add rax, rdx
old instr: 0x40f93e: add rax, 0x2c60
    new instr:0x7faef3f03378: add rax, 0x2c60
old instr: 0x40f944: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f0337e: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f948: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03382: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f94b: cdqe 
    new instr:0x7faef3f03385: cdqe 
old instr: 0x40f94d: add rax, 0x1b
    new instr:0x7faef3f03387: add rax, 0x1b
old instr: 0x40f951: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f0338b: lea rdx, ptr [rax+rax*1]
old instr: 0x40f955: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0338f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f959: add rax, rdx
    new instr:0x7faef3f03393: add rax, rdx
old instr: 0x40f95c: movzx eax, word ptr [rax]
    new instr:0x7faef3f03396: movzx eax, word ptr [rax]
old instr: 0x40f95f: movzx edx, ax
    new instr:0x7faef3f03399: movzx edx, ax
old instr: 0x40f962: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0339c: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f969: movsxd rsi, edx
    new instr:0x7faef3f033a3: movsxd rsi, edx
old instr: 0x40f96c: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f033a6: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f96f: cdqe 
    new instr:0x7faef3f033a9: cdqe 
old instr: 0x40f971: add rax, rax
    new instr:0x7faef3f033ab: add rax, rax
old instr: 0x40f974: mov rdi, rax
    new instr:0x7faef3f033ae: mov rdi, rax
old instr: 0x40f977: shl rdi, 0x7
    new instr:0x7faef3f033b1: shl rdi, 0x7
old instr: 0x40f97b: add rax, rdi
    new instr:0x7faef3f033b5: add rax, rdi
old instr: 0x40f97e: add rax, rsi
    new instr:0x7faef3f033b8: add rax, rsi
old instr: 0x40f981: add rax, 0x2c60
    new instr:0x7faef3f033bb: add rax, 0x2c60
old instr: 0x40f987: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f033c1: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f98b: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f033c5: lea esi, ptr [rax+0x1]
old instr: 0x40f98e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f033c8: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f995: movsxd rdx, edx
    new instr:0x7faef3f033cf: movsxd rdx, edx
old instr: 0x40f998: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f033d2: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f99b: cdqe 
    new instr:0x7faef3f033d5: cdqe 
old instr: 0x40f99d: add rax, rax
    new instr:0x7faef3f033d7: add rax, rax
old instr: 0x40f9a0: mov rdi, rax
    new instr:0x7faef3f033da: mov rdi, rax
old instr: 0x40f9a3: shl rdi, 0x7
    new instr:0x7faef3f033dd: shl rdi, 0x7
old instr: 0x40f9a7: add rax, rdi
    new instr:0x7faef3f033e1: add rax, rdi
old instr: 0x40f9aa: add rax, rdx
    new instr:0x7faef3f033e4: add rax, rdx
old instr: 0x40f9ad: add rax, 0x2c60
    new instr:0x7faef3f033e7: add rax, 0x2c60
old instr: 0x40f9b3: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f033ed: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f9b7: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f033f1: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f9ba: cdqe 
    new instr:0x7faef3f033f4: cdqe 
old instr: 0x40f9bc: add rax, 0x1c
    new instr:0x7faef3f033f6: add rax, 0x1c
old instr: 0x40f9c0: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f033fa: lea rdx, ptr [rax+rax*1]
old instr: 0x40f9c4: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f033fe: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f9c8: add rax, rdx
    new instr:0x7faef3f03402: add rax, rdx
old instr: 0x40f9cb: movzx eax, word ptr [rax]
    new instr:0x7faef3f03405: movzx eax, word ptr [rax]
old instr: 0x40f9ce: movzx edx, ax
    new instr:0x7faef3f03408: movzx edx, ax
old instr: 0x40f9d1: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0340b: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f9d8: movsxd rsi, edx
    new instr:0x7faef3f03412: movsxd rsi, edx
old instr: 0x40f9db: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03415: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f9de: cdqe 
    new instr:0x7faef3f03418: cdqe 
old instr: 0x40f9e0: add rax, rax
    new instr:0x7faef3f0341a: add rax, rax
old instr: 0x40f9e3: mov rdi, rax
    new instr:0x7faef3f0341d: mov rdi, rax
old instr: 0x40f9e6: shl rdi, 0x7
    new instr:0x7faef3f03420: shl rdi, 0x7
old instr: 0x40f9ea: add rax, rdi
    new instr:0x7faef3f03424: add rax, rdi
old instr: 0x40f9ed: add rax, rsi
    new instr:0x7faef3f03427: add rax, rsi
old instr: 0x40f9f0: add rax, 0x2c60
    new instr:0x7faef3f0342a: add rax, 0x2c60
old instr: 0x40f9f6: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03430: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f9fa: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03434: lea esi, ptr [rax+0x1]
old instr: 0x40f9fd: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03437: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fa04: movsxd rdx, edx
    new instr:0x7faef3f0343e: movsxd rdx, edx
old instr: 0x40fa07: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03441: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fa0a: cdqe 
    new instr:0x7faef3f03444: cdqe 
old instr: 0x40fa0c: add rax, rax
    new instr:0x7faef3f03446: add rax, rax
old instr: 0x40fa0f: mov rdi, rax
    new instr:0x7faef3f03449: mov rdi, rax
old instr: 0x40fa12: shl rdi, 0x7
    new instr:0x7faef3f0344c: shl rdi, 0x7
old instr: 0x40fa16: add rax, rdi
    new instr:0x7faef3f03450: add rax, rdi
old instr: 0x40fa19: add rax, rdx
    new instr:0x7faef3f03453: add rax, rdx
old instr: 0x40fa1c: add rax, 0x2c60
    new instr:0x7faef3f03456: add rax, 0x2c60
old instr: 0x40fa22: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f0345c: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fa26: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03460: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fa29: cdqe 
    new instr:0x7faef3f03463: cdqe 
old instr: 0x40fa2b: add rax, 0x1d
    new instr:0x7faef3f03465: add rax, 0x1d
old instr: 0x40fa2f: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03469: lea rdx, ptr [rax+rax*1]
old instr: 0x40fa33: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0346d: mov rax, qword ptr [rbp-0x78]
40fa37
old instr: 0x40fa37: add rax, rdx
    new instr:0x7faef3f03471: add rax, rdx
old instr: 0x40fa3a: movzx eax, word ptr [rax]
    new instr:0x7faef3f03474: movzx eax, word ptr [rax]
old instr: 0x40fa3d: movzx edx, ax
    new instr:0x7faef3f03477: movzx edx, ax
old instr: 0x40fa40: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0347a: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fa47: movsxd rsi, edx
    new instr:0x7faef3f03481: movsxd rsi, edx
old instr: 0x40fa4a: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03484: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fa4d: cdqe 
    new instr:0x7faef3f03487: cdqe 
old instr: 0x40fa4f: add rax, rax
    new instr:0x7faef3f03489: add rax, rax
old instr: 0x40fa52: mov rdi, rax
    new instr:0x7faef3f0348c: mov rdi, rax
old instr: 0x40fa55: shl rdi, 0x7
    new instr:0x7faef3f0348f: shl rdi, 0x7
old instr: 0x40fa59: add rax, rdi
    new instr:0x7faef3f03493: add rax, rdi
old instr: 0x40fa5c: add rax, rsi
    new instr:0x7faef3f03496: add rax, rsi
old instr: 0x40fa5f: add rax, 0x2c60
    new instr:0x7faef3f03499: add rax, 0x2c60
old instr: 0x40fa65: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f0349f: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fa69: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f034a3: lea esi, ptr [rax+0x1]
old instr: 0x40fa6c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f034a6: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fa73: movsxd rdx, edx
    new instr:0x7faef3f034ad: movsxd rdx, edx
old instr: 0x40fa76: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f034b0: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fa79: cdqe 
    new instr:0x7faef3f034b3: cdqe 
old instr: 0x40fa7b: add rax, rax
    new instr:0x7faef3f034b5: add rax, rax
old instr: 0x40fa7e: mov rdi, rax
    new instr:0x7faef3f034b8: mov rdi, rax
old instr: 0x40fa81: shl rdi, 0x7
    new instr:0x7faef3f034bb: shl rdi, 0x7
old instr: 0x40fa85: add rax, rdi
    new instr:0x7faef3f034bf: add rax, rdi
old instr: 0x40fa88: add rax, rdx
    new instr:0x7faef3f034c2: add rax, rdx
old instr: 0x40fa8b: add rax, 0x2c60
    new instr:0x7faef3f034c5: add rax, 0x2c60
old instr: 0x40fa91: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f034cb: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fa95: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f034cf: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fa98: cdqe 
    new instr:0x7faef3f034d2: cdqe 
old instr: 0x40fa9a: add rax, 0x1e
    new instr:0x7faef3f034d4: add rax, 0x1e
old instr: 0x40fa9e: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f034d8: lea rdx, ptr [rax+rax*1]
old instr: 0x40faa2: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f034dc: mov rax, qword ptr [rbp-0x78]
old instr: 0x40faa6: add rax, rdx
    new instr:0x7faef3f034e0: add rax, rdx
old instr: 0x40faa9: movzx eax, word ptr [rax]
    new instr:0x7faef3f034e3: movzx eax, word ptr [rax]
old instr: 0x40faac: movzx edx, ax
    new instr:0x7faef3f034e6: movzx edx, ax
old instr: 0x40faaf: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f034e9: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fab6: movsxd rsi, edx
    new instr:0x7faef3f034f0: movsxd rsi, edx
old instr: 0x40fab9: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f034f3: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fabc: cdqe 
    new instr:0x7faef3f034f6: cdqe 
old instr: 0x40fabe: add rax, rax
    new instr:0x7faef3f034f8: add rax, rax
old instr: 0x40fac1: mov rdi, rax
    new instr:0x7faef3f034fb: mov rdi, rax
old instr: 0x40fac4: shl rdi, 0x7
    new instr:0x7faef3f034fe: shl rdi, 0x7
old instr: 0x40fac8: add rax, rdi
    new instr:0x7faef3f03502: add rax, rdi
old instr: 0x40facb: add rax, rsi
    new instr:0x7faef3f03505: add rax, rsi
old instr: 0x40face: add rax, 0x2c60
    new instr:0x7faef3f03508: add rax, 0x2c60
old instr: 0x40fad4: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f0350e: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fad8: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03512: lea esi, ptr [rax+0x1]
old instr: 0x40fadb: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03515: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fae2: movsxd rdx, edx
    new instr:0x7faef3f0351c: movsxd rdx, edx
old instr: 0x40fae5: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0351f: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fae8: cdqe 
    new instr:0x7faef3f03522: cdqe 
old instr: 0x40faea: add rax, rax
    new instr:0x7faef3f03524: add rax, rax
old instr: 0x40faed: mov rdi, rax
    new instr:0x7faef3f03527: mov rdi, rax
old instr: 0x40faf0: shl rdi, 0x7
    new instr:0x7faef3f0352a: shl rdi, 0x7
old instr: 0x40faf4: add rax, rdi
    new instr:0x7faef3f0352e: add rax, rdi
old instr: 0x40faf7: add rax, rdx
    new instr:0x7faef3f03531: add rax, rdx
old instr: 0x40fafa: add rax, 0x2c60
    new instr:0x7faef3f03534: add rax, 0x2c60
old instr: 0x40fb00: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f0353a: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fb04: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0353e: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fb07: cdqe 
    new instr:0x7faef3f03541: cdqe 
old instr: 0x40fb09: add rax, 0x1f
    new instr:0x7faef3f03543: add rax, 0x1f
old instr: 0x40fb0d: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03547: lea rdx, ptr [rax+rax*1]
old instr: 0x40fb11: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f0354b: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fb15: add rax, rdx
    new instr:0x7faef3f0354f: add rax, rdx
old instr: 0x40fb18: movzx eax, word ptr [rax]
    new instr:0x7faef3f03552: movzx eax, word ptr [rax]
old instr: 0x40fb1b: movzx edx, ax
    new instr:0x7faef3f03555: movzx edx, ax
old instr: 0x40fb1e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03558: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fb25: movsxd rsi, edx
    new instr:0x7faef3f0355f: movsxd rsi, edx
old instr: 0x40fb28: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03562: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fb2b: cdqe 
    new instr:0x7faef3f03565: cdqe 
old instr: 0x40fb2d: add rax, rax
    new instr:0x7faef3f03567: add rax, rax
40fb30
old instr: 0x40fb30: mov rdi, rax
    new instr:0x7faef3f0356a: mov rdi, rax
old instr: 0x40fb33: shl rdi, 0x7
    new instr:0x7faef3f0356d: shl rdi, 0x7
old instr: 0x40fb37: add rax, rdi
    new instr:0x7faef3f03571: add rax, rdi
old instr: 0x40fb3a: add rax, rsi
    new instr:0x7faef3f03574: add rax, rsi
old instr: 0x40fb3d: add rax, 0x2c60
    new instr:0x7faef3f03577: add rax, 0x2c60
old instr: 0x40fb43: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f0357d: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fb47: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03581: lea esi, ptr [rax+0x1]
old instr: 0x40fb4a: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03584: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fb51: movsxd rdx, edx
    new instr:0x7faef3f0358b: movsxd rdx, edx
old instr: 0x40fb54: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0358e: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fb57: cdqe 
    new instr:0x7faef3f03591: cdqe 
old instr: 0x40fb59: add rax, rax
    new instr:0x7faef3f03593: add rax, rax
old instr: 0x40fb5c: mov rdi, rax
    new instr:0x7faef3f03596: mov rdi, rax
old instr: 0x40fb5f: shl rdi, 0x7
    new instr:0x7faef3f03599: shl rdi, 0x7
old instr: 0x40fb63: add rax, rdi
    new instr:0x7faef3f0359d: add rax, rdi
old instr: 0x40fb66: add rax, rdx
    new instr:0x7faef3f035a0: add rax, rdx
old instr: 0x40fb69: add rax, 0x2c60
    new instr:0x7faef3f035a3: add rax, 0x2c60
old instr: 0x40fb6f: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f035a9: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fb73: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f035ad: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fb76: cdqe 
    new instr:0x7faef3f035b0: cdqe 
old instr: 0x40fb78: add rax, 0x20
    new instr:0x7faef3f035b2: add rax, 0x20
old instr: 0x40fb7c: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f035b6: lea rdx, ptr [rax+rax*1]
old instr: 0x40fb80: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f035ba: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fb84: add rax, rdx
    new instr:0x7faef3f035be: add rax, rdx
old instr: 0x40fb87: movzx eax, word ptr [rax]
    new instr:0x7faef3f035c1: movzx eax, word ptr [rax]
old instr: 0x40fb8a: movzx edx, ax
    new instr:0x7faef3f035c4: movzx edx, ax
old instr: 0x40fb8d: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f035c7: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fb94: movsxd rsi, edx
    new instr:0x7faef3f035ce: movsxd rsi, edx
old instr: 0x40fb97: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f035d1: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fb9a: cdqe 
    new instr:0x7faef3f035d4: cdqe 
old instr: 0x40fb9c: add rax, rax
    new instr:0x7faef3f035d6: add rax, rax
old instr: 0x40fb9f: mov rdi, rax
    new instr:0x7faef3f035d9: mov rdi, rax
old instr: 0x40fba2: shl rdi, 0x7
    new instr:0x7faef3f035dc: shl rdi, 0x7
old instr: 0x40fba6: add rax, rdi
    new instr:0x7faef3f035e0: add rax, rdi
old instr: 0x40fba9: add rax, rsi
    new instr:0x7faef3f035e3: add rax, rsi
old instr: 0x40fbac: add rax, 0x2c60
    new instr:0x7faef3f035e6: add rax, 0x2c60
old instr: 0x40fbb2: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f035ec: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fbb6: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f035f0: lea esi, ptr [rax+0x1]
old instr: 0x40fbb9: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f035f3: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fbc0: movsxd rdx, edx
    new instr:0x7faef3f035fa: movsxd rdx, edx
old instr: 0x40fbc3: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f035fd: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fbc6: cdqe 
    new instr:0x7faef3f03600: cdqe 
old instr: 0x40fbc8: add rax, rax
    new instr:0x7faef3f03602: add rax, rax
old instr: 0x40fbcb: mov rdi, rax
    new instr:0x7faef3f03605: mov rdi, rax
old instr: 0x40fbce: shl rdi, 0x7
    new instr:0x7faef3f03608: shl rdi, 0x7
old instr: 0x40fbd2: add rax, rdi
    new instr:0x7faef3f0360c: add rax, rdi
old instr: 0x40fbd5: add rax, rdx
    new instr:0x7faef3f0360f: add rax, rdx
old instr: 0x40fbd8: add rax, 0x2c60
    new instr:0x7faef3f03612: add rax, 0x2c60
old instr: 0x40fbde: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03618: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fbe2: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0361c: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fbe5: cdqe 
    new instr:0x7faef3f0361f: cdqe 
old instr: 0x40fbe7: add rax, 0x21
    new instr:0x7faef3f03621: add rax, 0x21
old instr: 0x40fbeb: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03625: lea rdx, ptr [rax+rax*1]
old instr: 0x40fbef: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03629: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fbf3: add rax, rdx
    new instr:0x7faef3f0362d: add rax, rdx
old instr: 0x40fbf6: movzx eax, word ptr [rax]
    new instr:0x7faef3f03630: movzx eax, word ptr [rax]
old instr: 0x40fbf9: movzx edx, ax
    new instr:0x7faef3f03633: movzx edx, ax
old instr: 0x40fbfc: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03636: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fc03: movsxd rsi, edx
    new instr:0x7faef3f0363d: movsxd rsi, edx
old instr: 0x40fc06: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03640: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fc09: cdqe 
    new instr:0x7faef3f03643: cdqe 
old instr: 0x40fc0b: add rax, rax
    new instr:0x7faef3f03645: add rax, rax
old instr: 0x40fc0e: mov rdi, rax
    new instr:0x7faef3f03648: mov rdi, rax
old instr: 0x40fc11: shl rdi, 0x7
    new instr:0x7faef3f0364b: shl rdi, 0x7
old instr: 0x40fc15: add rax, rdi
    new instr:0x7faef3f0364f: add rax, rdi
old instr: 0x40fc18: add rax, rsi
    new instr:0x7faef3f03652: add rax, rsi
old instr: 0x40fc1b: add rax, 0x2c60
    new instr:0x7faef3f03655: add rax, 0x2c60
old instr: 0x40fc21: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f0365b: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fc25: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0365f: lea esi, ptr [rax+0x1]
old instr: 0x40fc28: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03662: mov rcx, qword ptr [rbp-0xf8]
40fc2f
old instr: 0x40fc2f: movsxd rdx, edx
    new instr:0x7faef3f03669: movsxd rdx, edx
old instr: 0x40fc32: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0366c: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fc35: cdqe 
    new instr:0x7faef3f0366f: cdqe 
old instr: 0x40fc37: add rax, rax
    new instr:0x7faef3f03671: add rax, rax
old instr: 0x40fc3a: mov rdi, rax
    new instr:0x7faef3f03674: mov rdi, rax
old instr: 0x40fc3d: shl rdi, 0x7
    new instr:0x7faef3f03677: shl rdi, 0x7
old instr: 0x40fc41: add rax, rdi
    new instr:0x7faef3f0367b: add rax, rdi
old instr: 0x40fc44: add rax, rdx
    new instr:0x7faef3f0367e: add rax, rdx
old instr: 0x40fc47: add rax, 0x2c60
    new instr:0x7faef3f03681: add rax, 0x2c60
old instr: 0x40fc4d: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03687: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fc51: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f0368b: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fc54: cdqe 
    new instr:0x7faef3f0368e: cdqe 
old instr: 0x40fc56: add rax, 0x22
    new instr:0x7faef3f03690: add rax, 0x22
old instr: 0x40fc5a: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03694: lea rdx, ptr [rax+rax*1]
old instr: 0x40fc5e: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03698: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fc62: add rax, rdx
    new instr:0x7faef3f0369c: add rax, rdx
old instr: 0x40fc65: movzx eax, word ptr [rax]
    new instr:0x7faef3f0369f: movzx eax, word ptr [rax]
old instr: 0x40fc68: movzx edx, ax
    new instr:0x7faef3f036a2: movzx edx, ax
old instr: 0x40fc6b: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f036a5: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fc72: movsxd rsi, edx
    new instr:0x7faef3f036ac: movsxd rsi, edx
old instr: 0x40fc75: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f036af: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fc78: cdqe 
    new instr:0x7faef3f036b2: cdqe 
old instr: 0x40fc7a: add rax, rax
    new instr:0x7faef3f036b4: add rax, rax
old instr: 0x40fc7d: mov rdi, rax
    new instr:0x7faef3f036b7: mov rdi, rax
old instr: 0x40fc80: shl rdi, 0x7
    new instr:0x7faef3f036ba: shl rdi, 0x7
old instr: 0x40fc84: add rax, rdi
    new instr:0x7faef3f036be: add rax, rdi
old instr: 0x40fc87: add rax, rsi
    new instr:0x7faef3f036c1: add rax, rsi
old instr: 0x40fc8a: add rax, 0x2c60
    new instr:0x7faef3f036c4: add rax, 0x2c60
old instr: 0x40fc90: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f036ca: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fc94: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f036ce: lea esi, ptr [rax+0x1]
old instr: 0x40fc97: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f036d1: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fc9e: movsxd rdx, edx
    new instr:0x7faef3f036d8: movsxd rdx, edx
old instr: 0x40fca1: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f036db: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fca4: cdqe 
    new instr:0x7faef3f036de: cdqe 
old instr: 0x40fca6: add rax, rax
    new instr:0x7faef3f036e0: add rax, rax
old instr: 0x40fca9: mov rdi, rax
    new instr:0x7faef3f036e3: mov rdi, rax
old instr: 0x40fcac: shl rdi, 0x7
    new instr:0x7faef3f036e6: shl rdi, 0x7
old instr: 0x40fcb0: add rax, rdi
    new instr:0x7faef3f036ea: add rax, rdi
old instr: 0x40fcb3: add rax, rdx
    new instr:0x7faef3f036ed: add rax, rdx
old instr: 0x40fcb6: add rax, 0x2c60
    new instr:0x7faef3f036f0: add rax, 0x2c60
old instr: 0x40fcbc: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f036f6: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fcc0: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f036fa: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fcc3: cdqe 
    new instr:0x7faef3f036fd: cdqe 
old instr: 0x40fcc5: add rax, 0x23
    new instr:0x7faef3f036ff: add rax, 0x23
old instr: 0x40fcc9: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03703: lea rdx, ptr [rax+rax*1]
old instr: 0x40fccd: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03707: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fcd1: add rax, rdx
    new instr:0x7faef3f0370b: add rax, rdx
old instr: 0x40fcd4: movzx eax, word ptr [rax]
    new instr:0x7faef3f0370e: movzx eax, word ptr [rax]
old instr: 0x40fcd7: movzx edx, ax
    new instr:0x7faef3f03711: movzx edx, ax
old instr: 0x40fcda: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03714: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fce1: movsxd rsi, edx
    new instr:0x7faef3f0371b: movsxd rsi, edx
old instr: 0x40fce4: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0371e: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fce7: cdqe 
    new instr:0x7faef3f03721: cdqe 
old instr: 0x40fce9: add rax, rax
    new instr:0x7faef3f03723: add rax, rax
old instr: 0x40fcec: mov rdi, rax
    new instr:0x7faef3f03726: mov rdi, rax
old instr: 0x40fcef: shl rdi, 0x7
    new instr:0x7faef3f03729: shl rdi, 0x7
old instr: 0x40fcf3: add rax, rdi
    new instr:0x7faef3f0372d: add rax, rdi
old instr: 0x40fcf6: add rax, rsi
    new instr:0x7faef3f03730: add rax, rsi
old instr: 0x40fcf9: add rax, 0x2c60
    new instr:0x7faef3f03733: add rax, 0x2c60
old instr: 0x40fcff: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03739: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fd03: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0373d: lea esi, ptr [rax+0x1]
old instr: 0x40fd06: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03740: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fd0d: movsxd rdx, edx
    new instr:0x7faef3f03747: movsxd rdx, edx
old instr: 0x40fd10: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0374a: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fd13: cdqe 
    new instr:0x7faef3f0374d: cdqe 
old instr: 0x40fd15: add rax, rax
    new instr:0x7faef3f0374f: add rax, rax
old instr: 0x40fd18: mov rdi, rax
    new instr:0x7faef3f03752: mov rdi, rax
old instr: 0x40fd1b: shl rdi, 0x7
    new instr:0x7faef3f03755: shl rdi, 0x7
old instr: 0x40fd1f: add rax, rdi
    new instr:0x7faef3f03759: add rax, rdi
old instr: 0x40fd22: add rax, rdx
    new instr:0x7faef3f0375c: add rax, rdx
40fd25
old instr: 0x40fd25: add rax, 0x2c60
    new instr:0x7faef3f0375f: add rax, 0x2c60
old instr: 0x40fd2b: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03765: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fd2f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03769: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fd32: cdqe 
    new instr:0x7faef3f0376c: cdqe 
old instr: 0x40fd34: add rax, 0x24
    new instr:0x7faef3f0376e: add rax, 0x24
old instr: 0x40fd38: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03772: lea rdx, ptr [rax+rax*1]
old instr: 0x40fd3c: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03776: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fd40: add rax, rdx
    new instr:0x7faef3f0377a: add rax, rdx
old instr: 0x40fd43: movzx eax, word ptr [rax]
    new instr:0x7faef3f0377d: movzx eax, word ptr [rax]
old instr: 0x40fd46: movzx edx, ax
    new instr:0x7faef3f03780: movzx edx, ax
old instr: 0x40fd49: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03783: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fd50: movsxd rsi, edx
    new instr:0x7faef3f0378a: movsxd rsi, edx
old instr: 0x40fd53: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0378d: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fd56: cdqe 
    new instr:0x7faef3f03790: cdqe 
old instr: 0x40fd58: add rax, rax
    new instr:0x7faef3f03792: add rax, rax
old instr: 0x40fd5b: mov rdi, rax
    new instr:0x7faef3f03795: mov rdi, rax
old instr: 0x40fd5e: shl rdi, 0x7
    new instr:0x7faef3f03798: shl rdi, 0x7
old instr: 0x40fd62: add rax, rdi
    new instr:0x7faef3f0379c: add rax, rdi
old instr: 0x40fd65: add rax, rsi
    new instr:0x7faef3f0379f: add rax, rsi
old instr: 0x40fd68: add rax, 0x2c60
    new instr:0x7faef3f037a2: add rax, 0x2c60
old instr: 0x40fd6e: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f037a8: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fd72: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f037ac: lea esi, ptr [rax+0x1]
old instr: 0x40fd75: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f037af: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fd7c: movsxd rdx, edx
    new instr:0x7faef3f037b6: movsxd rdx, edx
old instr: 0x40fd7f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f037b9: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fd82: cdqe 
    new instr:0x7faef3f037bc: cdqe 
old instr: 0x40fd84: add rax, rax
    new instr:0x7faef3f037be: add rax, rax
old instr: 0x40fd87: mov rdi, rax
    new instr:0x7faef3f037c1: mov rdi, rax
old instr: 0x40fd8a: shl rdi, 0x7
    new instr:0x7faef3f037c4: shl rdi, 0x7
old instr: 0x40fd8e: add rax, rdi
    new instr:0x7faef3f037c8: add rax, rdi
old instr: 0x40fd91: add rax, rdx
    new instr:0x7faef3f037cb: add rax, rdx
old instr: 0x40fd94: add rax, 0x2c60
    new instr:0x7faef3f037ce: add rax, 0x2c60
old instr: 0x40fd9a: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f037d4: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fd9e: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f037d8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fda1: cdqe 
    new instr:0x7faef3f037db: cdqe 
old instr: 0x40fda3: add rax, 0x25
    new instr:0x7faef3f037dd: add rax, 0x25
old instr: 0x40fda7: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f037e1: lea rdx, ptr [rax+rax*1]
old instr: 0x40fdab: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f037e5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fdaf: add rax, rdx
    new instr:0x7faef3f037e9: add rax, rdx
old instr: 0x40fdb2: movzx eax, word ptr [rax]
    new instr:0x7faef3f037ec: movzx eax, word ptr [rax]
old instr: 0x40fdb5: movzx edx, ax
    new instr:0x7faef3f037ef: movzx edx, ax
old instr: 0x40fdb8: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f037f2: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fdbf: movsxd rsi, edx
    new instr:0x7faef3f037f9: movsxd rsi, edx
old instr: 0x40fdc2: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f037fc: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fdc5: cdqe 
    new instr:0x7faef3f037ff: cdqe 
old instr: 0x40fdc7: add rax, rax
    new instr:0x7faef3f03801: add rax, rax
old instr: 0x40fdca: mov rdi, rax
    new instr:0x7faef3f03804: mov rdi, rax
old instr: 0x40fdcd: shl rdi, 0x7
    new instr:0x7faef3f03807: shl rdi, 0x7
old instr: 0x40fdd1: add rax, rdi
    new instr:0x7faef3f0380b: add rax, rdi
old instr: 0x40fdd4: add rax, rsi
    new instr:0x7faef3f0380e: add rax, rsi
old instr: 0x40fdd7: add rax, 0x2c60
    new instr:0x7faef3f03811: add rax, 0x2c60
old instr: 0x40fddd: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03817: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fde1: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0381b: lea esi, ptr [rax+0x1]
old instr: 0x40fde4: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0381e: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fdeb: movsxd rdx, edx
    new instr:0x7faef3f03825: movsxd rdx, edx
old instr: 0x40fdee: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03828: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fdf1: cdqe 
    new instr:0x7faef3f0382b: cdqe 
old instr: 0x40fdf3: add rax, rax
    new instr:0x7faef3f0382d: add rax, rax
old instr: 0x40fdf6: mov rdi, rax
    new instr:0x7faef3f03830: mov rdi, rax
old instr: 0x40fdf9: shl rdi, 0x7
    new instr:0x7faef3f03833: shl rdi, 0x7
old instr: 0x40fdfd: add rax, rdi
    new instr:0x7faef3f03837: add rax, rdi
old instr: 0x40fe00: add rax, rdx
    new instr:0x7faef3f0383a: add rax, rdx
old instr: 0x40fe03: add rax, 0x2c60
    new instr:0x7faef3f0383d: add rax, 0x2c60
old instr: 0x40fe09: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03843: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fe0d: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03847: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fe10: cdqe 
    new instr:0x7faef3f0384a: cdqe 
old instr: 0x40fe12: add rax, 0x26
    new instr:0x7faef3f0384c: add rax, 0x26
old instr: 0x40fe16: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03850: lea rdx, ptr [rax+rax*1]
old instr: 0x40fe1a: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03854: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fe1e: add rax, rdx
    new instr:0x7faef3f03858: add rax, rdx
40fe21
old instr: 0x40fe21: movzx eax, word ptr [rax]
    new instr:0x7faef3f0385b: movzx eax, word ptr [rax]
old instr: 0x40fe24: movzx edx, ax
    new instr:0x7faef3f0385e: movzx edx, ax
old instr: 0x40fe27: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03861: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fe2e: movsxd rsi, edx
    new instr:0x7faef3f03868: movsxd rsi, edx
old instr: 0x40fe31: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f0386b: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fe34: cdqe 
    new instr:0x7faef3f0386e: cdqe 
old instr: 0x40fe36: add rax, rax
    new instr:0x7faef3f03870: add rax, rax
old instr: 0x40fe39: mov rdi, rax
    new instr:0x7faef3f03873: mov rdi, rax
old instr: 0x40fe3c: shl rdi, 0x7
    new instr:0x7faef3f03876: shl rdi, 0x7
old instr: 0x40fe40: add rax, rdi
    new instr:0x7faef3f0387a: add rax, rdi
old instr: 0x40fe43: add rax, rsi
    new instr:0x7faef3f0387d: add rax, rsi
old instr: 0x40fe46: add rax, 0x2c60
    new instr:0x7faef3f03880: add rax, 0x2c60
old instr: 0x40fe4c: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03886: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fe50: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f0388a: lea esi, ptr [rax+0x1]
old instr: 0x40fe53: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0388d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fe5a: movsxd rdx, edx
    new instr:0x7faef3f03894: movsxd rdx, edx
old instr: 0x40fe5d: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03897: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fe60: cdqe 
    new instr:0x7faef3f0389a: cdqe 
old instr: 0x40fe62: add rax, rax
    new instr:0x7faef3f0389c: add rax, rax
old instr: 0x40fe65: mov rdi, rax
    new instr:0x7faef3f0389f: mov rdi, rax
old instr: 0x40fe68: shl rdi, 0x7
    new instr:0x7faef3f038a2: shl rdi, 0x7
old instr: 0x40fe6c: add rax, rdi
    new instr:0x7faef3f038a6: add rax, rdi
old instr: 0x40fe6f: add rax, rdx
    new instr:0x7faef3f038a9: add rax, rdx
old instr: 0x40fe72: add rax, 0x2c60
    new instr:0x7faef3f038ac: add rax, 0x2c60
old instr: 0x40fe78: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f038b2: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fe7c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f038b6: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fe7f: cdqe 
    new instr:0x7faef3f038b9: cdqe 
old instr: 0x40fe81: add rax, 0x27
    new instr:0x7faef3f038bb: add rax, 0x27
old instr: 0x40fe85: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f038bf: lea rdx, ptr [rax+rax*1]
old instr: 0x40fe89: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f038c3: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fe8d: add rax, rdx
    new instr:0x7faef3f038c7: add rax, rdx
old instr: 0x40fe90: movzx eax, word ptr [rax]
    new instr:0x7faef3f038ca: movzx eax, word ptr [rax]
old instr: 0x40fe93: movzx edx, ax
    new instr:0x7faef3f038cd: movzx edx, ax
old instr: 0x40fe96: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f038d0: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fe9d: movsxd rsi, edx
    new instr:0x7faef3f038d7: movsxd rsi, edx
old instr: 0x40fea0: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f038da: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fea3: cdqe 
    new instr:0x7faef3f038dd: cdqe 
old instr: 0x40fea5: add rax, rax
    new instr:0x7faef3f038df: add rax, rax
old instr: 0x40fea8: mov rdi, rax
    new instr:0x7faef3f038e2: mov rdi, rax
old instr: 0x40feab: shl rdi, 0x7
    new instr:0x7faef3f038e5: shl rdi, 0x7
old instr: 0x40feaf: add rax, rdi
    new instr:0x7faef3f038e9: add rax, rdi
old instr: 0x40feb2: add rax, rsi
    new instr:0x7faef3f038ec: add rax, rsi
old instr: 0x40feb5: add rax, 0x2c60
    new instr:0x7faef3f038ef: add rax, 0x2c60
old instr: 0x40febb: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f038f5: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40febf: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f038f9: lea esi, ptr [rax+0x1]
old instr: 0x40fec2: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f038fc: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fec9: movsxd rdx, edx
    new instr:0x7faef3f03903: movsxd rdx, edx
old instr: 0x40fecc: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03906: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fecf: cdqe 
    new instr:0x7faef3f03909: cdqe 
old instr: 0x40fed1: add rax, rax
    new instr:0x7faef3f0390b: add rax, rax
old instr: 0x40fed4: mov rdi, rax
    new instr:0x7faef3f0390e: mov rdi, rax
old instr: 0x40fed7: shl rdi, 0x7
    new instr:0x7faef3f03911: shl rdi, 0x7
old instr: 0x40fedb: add rax, rdi
    new instr:0x7faef3f03915: add rax, rdi
old instr: 0x40fede: add rax, rdx
    new instr:0x7faef3f03918: add rax, rdx
old instr: 0x40fee1: add rax, 0x2c60
    new instr:0x7faef3f0391b: add rax, 0x2c60
old instr: 0x40fee7: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03921: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40feeb: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03925: mov eax, dword ptr [rbp-0x34]
old instr: 0x40feee: cdqe 
    new instr:0x7faef3f03928: cdqe 
old instr: 0x40fef0: add rax, 0x28
    new instr:0x7faef3f0392a: add rax, 0x28
old instr: 0x40fef4: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f0392e: lea rdx, ptr [rax+rax*1]
old instr: 0x40fef8: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03932: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fefc: add rax, rdx
    new instr:0x7faef3f03936: add rax, rdx
old instr: 0x40feff: movzx eax, word ptr [rax]
    new instr:0x7faef3f03939: movzx eax, word ptr [rax]
old instr: 0x40ff02: movzx edx, ax
    new instr:0x7faef3f0393c: movzx edx, ax
old instr: 0x40ff05: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0393f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ff0c: movsxd rsi, edx
    new instr:0x7faef3f03946: movsxd rsi, edx
old instr: 0x40ff0f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03949: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ff12: cdqe 
    new instr:0x7faef3f0394c: cdqe 
old instr: 0x40ff14: add rax, rax
    new instr:0x7faef3f0394e: add rax, rax
old instr: 0x40ff17: mov rdi, rax
    new instr:0x7faef3f03951: mov rdi, rax
40ff1a
old instr: 0x40ff1a: shl rdi, 0x7
    new instr:0x7faef3f03954: shl rdi, 0x7
old instr: 0x40ff1e: add rax, rdi
    new instr:0x7faef3f03958: add rax, rdi
old instr: 0x40ff21: add rax, rsi
    new instr:0x7faef3f0395b: add rax, rsi
old instr: 0x40ff24: add rax, 0x2c60
    new instr:0x7faef3f0395e: add rax, 0x2c60
old instr: 0x40ff2a: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03964: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ff2e: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03968: lea esi, ptr [rax+0x1]
old instr: 0x40ff31: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f0396b: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ff38: movsxd rdx, edx
    new instr:0x7faef3f03972: movsxd rdx, edx
old instr: 0x40ff3b: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03975: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ff3e: cdqe 
    new instr:0x7faef3f03978: cdqe 
old instr: 0x40ff40: add rax, rax
    new instr:0x7faef3f0397a: add rax, rax
old instr: 0x40ff43: mov rdi, rax
    new instr:0x7faef3f0397d: mov rdi, rax
old instr: 0x40ff46: shl rdi, 0x7
    new instr:0x7faef3f03980: shl rdi, 0x7
old instr: 0x40ff4a: add rax, rdi
    new instr:0x7faef3f03984: add rax, rdi
old instr: 0x40ff4d: add rax, rdx
    new instr:0x7faef3f03987: add rax, rdx
old instr: 0x40ff50: add rax, 0x2c60
    new instr:0x7faef3f0398a: add rax, 0x2c60
old instr: 0x40ff56: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03990: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ff5a: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03994: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ff5d: cdqe 
    new instr:0x7faef3f03997: cdqe 
old instr: 0x40ff5f: add rax, 0x29
    new instr:0x7faef3f03999: add rax, 0x29
old instr: 0x40ff63: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f0399d: lea rdx, ptr [rax+rax*1]
old instr: 0x40ff67: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f039a1: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ff6b: add rax, rdx
    new instr:0x7faef3f039a5: add rax, rdx
old instr: 0x40ff6e: movzx eax, word ptr [rax]
    new instr:0x7faef3f039a8: movzx eax, word ptr [rax]
old instr: 0x40ff71: movzx edx, ax
    new instr:0x7faef3f039ab: movzx edx, ax
old instr: 0x40ff74: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f039ae: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ff7b: movsxd rsi, edx
    new instr:0x7faef3f039b5: movsxd rsi, edx
old instr: 0x40ff7e: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f039b8: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ff81: cdqe 
    new instr:0x7faef3f039bb: cdqe 
old instr: 0x40ff83: add rax, rax
    new instr:0x7faef3f039bd: add rax, rax
old instr: 0x40ff86: mov rdi, rax
    new instr:0x7faef3f039c0: mov rdi, rax
old instr: 0x40ff89: shl rdi, 0x7
    new instr:0x7faef3f039c3: shl rdi, 0x7
old instr: 0x40ff8d: add rax, rdi
    new instr:0x7faef3f039c7: add rax, rdi
old instr: 0x40ff90: add rax, rsi
    new instr:0x7faef3f039ca: add rax, rsi
old instr: 0x40ff93: add rax, 0x2c60
    new instr:0x7faef3f039cd: add rax, 0x2c60
old instr: 0x40ff99: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f039d3: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ff9d: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f039d7: lea esi, ptr [rax+0x1]
old instr: 0x40ffa0: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f039da: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ffa7: movsxd rdx, edx
    new instr:0x7faef3f039e1: movsxd rdx, edx
old instr: 0x40ffaa: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f039e4: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ffad: cdqe 
    new instr:0x7faef3f039e7: cdqe 
old instr: 0x40ffaf: add rax, rax
    new instr:0x7faef3f039e9: add rax, rax
old instr: 0x40ffb2: mov rdi, rax
    new instr:0x7faef3f039ec: mov rdi, rax
old instr: 0x40ffb5: shl rdi, 0x7
    new instr:0x7faef3f039ef: shl rdi, 0x7
old instr: 0x40ffb9: add rax, rdi
    new instr:0x7faef3f039f3: add rax, rdi
old instr: 0x40ffbc: add rax, rdx
    new instr:0x7faef3f039f6: add rax, rdx
old instr: 0x40ffbf: add rax, 0x2c60
    new instr:0x7faef3f039f9: add rax, 0x2c60
old instr: 0x40ffc5: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f039ff: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ffc9: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03a03: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ffcc: cdqe 
    new instr:0x7faef3f03a06: cdqe 
old instr: 0x40ffce: add rax, 0x2a
    new instr:0x7faef3f03a08: add rax, 0x2a
old instr: 0x40ffd2: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03a0c: lea rdx, ptr [rax+rax*1]
old instr: 0x40ffd6: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03a10: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ffda: add rax, rdx
    new instr:0x7faef3f03a14: add rax, rdx
old instr: 0x40ffdd: movzx eax, word ptr [rax]
    new instr:0x7faef3f03a17: movzx eax, word ptr [rax]
old instr: 0x40ffe0: movzx edx, ax
    new instr:0x7faef3f03a1a: movzx edx, ax
old instr: 0x40ffe3: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03a1d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ffea: movsxd rsi, edx
    new instr:0x7faef3f03a24: movsxd rsi, edx
old instr: 0x40ffed: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03a27: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fff0: cdqe 
    new instr:0x7faef3f03a2a: cdqe 
old instr: 0x40fff2: add rax, rax
    new instr:0x7faef3f03a2c: add rax, rax
old instr: 0x40fff5: mov rdi, rax
    new instr:0x7faef3f03a2f: mov rdi, rax
old instr: 0x40fff8: shl rdi, 0x7
    new instr:0x7faef3f03a32: shl rdi, 0x7
old instr: 0x40fffc: add rax, rdi
    new instr:0x7faef3f03a36: add rax, rdi
old instr: 0x40ffff: add rax, rsi
    new instr:0x7faef3f03a39: add rax, rsi
old instr: 0x410002: add rax, 0x2c60
    new instr:0x7faef3f03a3c: add rax, 0x2c60
old instr: 0x410008: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03a42: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x41000c: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03a46: lea esi, ptr [rax+0x1]
old instr: 0x41000f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03a49: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410016: movsxd rdx, edx
    new instr:0x7faef3f03a50: movsxd rdx, edx
410019
old instr: 0x410019: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03a53: mov eax, dword ptr [rbp-0x40]
old instr: 0x41001c: cdqe 
    new instr:0x7faef3f03a56: cdqe 
old instr: 0x41001e: add rax, rax
    new instr:0x7faef3f03a58: add rax, rax
old instr: 0x410021: mov rdi, rax
    new instr:0x7faef3f03a5b: mov rdi, rax
old instr: 0x410024: shl rdi, 0x7
    new instr:0x7faef3f03a5e: shl rdi, 0x7
old instr: 0x410028: add rax, rdi
    new instr:0x7faef3f03a62: add rax, rdi
old instr: 0x41002b: add rax, rdx
    new instr:0x7faef3f03a65: add rax, rdx
old instr: 0x41002e: add rax, 0x2c60
    new instr:0x7faef3f03a68: add rax, 0x2c60
old instr: 0x410034: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03a6e: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x410038: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03a72: mov eax, dword ptr [rbp-0x34]
old instr: 0x41003b: cdqe 
    new instr:0x7faef3f03a75: cdqe 
old instr: 0x41003d: add rax, 0x2b
    new instr:0x7faef3f03a77: add rax, 0x2b
old instr: 0x410041: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03a7b: lea rdx, ptr [rax+rax*1]
old instr: 0x410045: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03a7f: mov rax, qword ptr [rbp-0x78]
old instr: 0x410049: add rax, rdx
    new instr:0x7faef3f03a83: add rax, rdx
old instr: 0x41004c: movzx eax, word ptr [rax]
    new instr:0x7faef3f03a86: movzx eax, word ptr [rax]
old instr: 0x41004f: movzx edx, ax
    new instr:0x7faef3f03a89: movzx edx, ax
old instr: 0x410052: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03a8c: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410059: movsxd rsi, edx
    new instr:0x7faef3f03a93: movsxd rsi, edx
old instr: 0x41005c: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03a96: mov eax, dword ptr [rbp-0x40]
old instr: 0x41005f: cdqe 
    new instr:0x7faef3f03a99: cdqe 
old instr: 0x410061: add rax, rax
    new instr:0x7faef3f03a9b: add rax, rax
old instr: 0x410064: mov rdi, rax
    new instr:0x7faef3f03a9e: mov rdi, rax
old instr: 0x410067: shl rdi, 0x7
    new instr:0x7faef3f03aa1: shl rdi, 0x7
old instr: 0x41006b: add rax, rdi
    new instr:0x7faef3f03aa5: add rax, rdi
old instr: 0x41006e: add rax, rsi
    new instr:0x7faef3f03aa8: add rax, rsi
old instr: 0x410071: add rax, 0x2c60
    new instr:0x7faef3f03aab: add rax, 0x2c60
old instr: 0x410077: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03ab1: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x41007b: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03ab5: lea esi, ptr [rax+0x1]
old instr: 0x41007e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03ab8: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410085: movsxd rdx, edx
    new instr:0x7faef3f03abf: movsxd rdx, edx
old instr: 0x410088: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03ac2: mov eax, dword ptr [rbp-0x40]
old instr: 0x41008b: cdqe 
    new instr:0x7faef3f03ac5: cdqe 
old instr: 0x41008d: add rax, rax
    new instr:0x7faef3f03ac7: add rax, rax
old instr: 0x410090: mov rdi, rax
    new instr:0x7faef3f03aca: mov rdi, rax
old instr: 0x410093: shl rdi, 0x7
    new instr:0x7faef3f03acd: shl rdi, 0x7
old instr: 0x410097: add rax, rdi
    new instr:0x7faef3f03ad1: add rax, rdi
old instr: 0x41009a: add rax, rdx
    new instr:0x7faef3f03ad4: add rax, rdx
old instr: 0x41009d: add rax, 0x2c60
    new instr:0x7faef3f03ad7: add rax, 0x2c60
old instr: 0x4100a3: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03add: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x4100a7: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03ae1: mov eax, dword ptr [rbp-0x34]
old instr: 0x4100aa: cdqe 
    new instr:0x7faef3f03ae4: cdqe 
old instr: 0x4100ac: add rax, 0x2c
    new instr:0x7faef3f03ae6: add rax, 0x2c
old instr: 0x4100b0: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03aea: lea rdx, ptr [rax+rax*1]
old instr: 0x4100b4: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03aee: mov rax, qword ptr [rbp-0x78]
old instr: 0x4100b8: add rax, rdx
    new instr:0x7faef3f03af2: add rax, rdx
old instr: 0x4100bb: movzx eax, word ptr [rax]
    new instr:0x7faef3f03af5: movzx eax, word ptr [rax]
old instr: 0x4100be: movzx edx, ax
    new instr:0x7faef3f03af8: movzx edx, ax
old instr: 0x4100c1: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03afb: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4100c8: movsxd rsi, edx
    new instr:0x7faef3f03b02: movsxd rsi, edx
old instr: 0x4100cb: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03b05: mov eax, dword ptr [rbp-0x40]
old instr: 0x4100ce: cdqe 
    new instr:0x7faef3f03b08: cdqe 
old instr: 0x4100d0: add rax, rax
    new instr:0x7faef3f03b0a: add rax, rax
old instr: 0x4100d3: mov rdi, rax
    new instr:0x7faef3f03b0d: mov rdi, rax
old instr: 0x4100d6: shl rdi, 0x7
    new instr:0x7faef3f03b10: shl rdi, 0x7
old instr: 0x4100da: add rax, rdi
    new instr:0x7faef3f03b14: add rax, rdi
old instr: 0x4100dd: add rax, rsi
    new instr:0x7faef3f03b17: add rax, rsi
old instr: 0x4100e0: add rax, 0x2c60
    new instr:0x7faef3f03b1a: add rax, 0x2c60
old instr: 0x4100e6: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03b20: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x4100ea: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03b24: lea esi, ptr [rax+0x1]
old instr: 0x4100ed: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03b27: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4100f4: movsxd rdx, edx
    new instr:0x7faef3f03b2e: movsxd rdx, edx
old instr: 0x4100f7: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03b31: mov eax, dword ptr [rbp-0x40]
old instr: 0x4100fa: cdqe 
    new instr:0x7faef3f03b34: cdqe 
old instr: 0x4100fc: add rax, rax
    new instr:0x7faef3f03b36: add rax, rax
old instr: 0x4100ff: mov rdi, rax
    new instr:0x7faef3f03b39: mov rdi, rax
old instr: 0x410102: shl rdi, 0x7
    new instr:0x7faef3f03b3c: shl rdi, 0x7
old instr: 0x410106: add rax, rdi
    new instr:0x7faef3f03b40: add rax, rdi
old instr: 0x410109: add rax, rdx
    new instr:0x7faef3f03b43: add rax, rdx
old instr: 0x41010c: add rax, 0x2c60
    new instr:0x7faef3f03b46: add rax, 0x2c60
410112
old instr: 0x410112: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03b4c: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x410116: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03b50: mov eax, dword ptr [rbp-0x34]
old instr: 0x410119: cdqe 
    new instr:0x7faef3f03b53: cdqe 
old instr: 0x41011b: add rax, 0x2d
    new instr:0x7faef3f03b55: add rax, 0x2d
old instr: 0x41011f: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03b59: lea rdx, ptr [rax+rax*1]
old instr: 0x410123: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03b5d: mov rax, qword ptr [rbp-0x78]
old instr: 0x410127: add rax, rdx
    new instr:0x7faef3f03b61: add rax, rdx
old instr: 0x41012a: movzx eax, word ptr [rax]
    new instr:0x7faef3f03b64: movzx eax, word ptr [rax]
old instr: 0x41012d: movzx edx, ax
    new instr:0x7faef3f03b67: movzx edx, ax
old instr: 0x410130: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03b6a: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410137: movsxd rsi, edx
    new instr:0x7faef3f03b71: movsxd rsi, edx
old instr: 0x41013a: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03b74: mov eax, dword ptr [rbp-0x40]
old instr: 0x41013d: cdqe 
    new instr:0x7faef3f03b77: cdqe 
old instr: 0x41013f: add rax, rax
    new instr:0x7faef3f03b79: add rax, rax
old instr: 0x410142: mov rdi, rax
    new instr:0x7faef3f03b7c: mov rdi, rax
old instr: 0x410145: shl rdi, 0x7
    new instr:0x7faef3f03b7f: shl rdi, 0x7
old instr: 0x410149: add rax, rdi
    new instr:0x7faef3f03b83: add rax, rdi
old instr: 0x41014c: add rax, rsi
    new instr:0x7faef3f03b86: add rax, rsi
old instr: 0x41014f: add rax, 0x2c60
    new instr:0x7faef3f03b89: add rax, 0x2c60
old instr: 0x410155: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03b8f: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x410159: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03b93: lea esi, ptr [rax+0x1]
old instr: 0x41015c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03b96: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410163: movsxd rdx, edx
    new instr:0x7faef3f03b9d: movsxd rdx, edx
old instr: 0x410166: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03ba0: mov eax, dword ptr [rbp-0x40]
old instr: 0x410169: cdqe 
    new instr:0x7faef3f03ba3: cdqe 
old instr: 0x41016b: add rax, rax
    new instr:0x7faef3f03ba5: add rax, rax
old instr: 0x41016e: mov rdi, rax
    new instr:0x7faef3f03ba8: mov rdi, rax
old instr: 0x410171: shl rdi, 0x7
    new instr:0x7faef3f03bab: shl rdi, 0x7
old instr: 0x410175: add rax, rdi
    new instr:0x7faef3f03baf: add rax, rdi
old instr: 0x410178: add rax, rdx
    new instr:0x7faef3f03bb2: add rax, rdx
old instr: 0x41017b: add rax, 0x2c60
    new instr:0x7faef3f03bb5: add rax, 0x2c60
old instr: 0x410181: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03bbb: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x410185: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03bbf: mov eax, dword ptr [rbp-0x34]
old instr: 0x410188: cdqe 
    new instr:0x7faef3f03bc2: cdqe 
old instr: 0x41018a: add rax, 0x2e
    new instr:0x7faef3f03bc4: add rax, 0x2e
old instr: 0x41018e: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03bc8: lea rdx, ptr [rax+rax*1]
old instr: 0x410192: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03bcc: mov rax, qword ptr [rbp-0x78]
old instr: 0x410196: add rax, rdx
    new instr:0x7faef3f03bd0: add rax, rdx
old instr: 0x410199: movzx eax, word ptr [rax]
    new instr:0x7faef3f03bd3: movzx eax, word ptr [rax]
old instr: 0x41019c: movzx edx, ax
    new instr:0x7faef3f03bd6: movzx edx, ax
old instr: 0x41019f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03bd9: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4101a6: movsxd rsi, edx
    new instr:0x7faef3f03be0: movsxd rsi, edx
old instr: 0x4101a9: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03be3: mov eax, dword ptr [rbp-0x40]
old instr: 0x4101ac: cdqe 
    new instr:0x7faef3f03be6: cdqe 
old instr: 0x4101ae: add rax, rax
    new instr:0x7faef3f03be8: add rax, rax
old instr: 0x4101b1: mov rdi, rax
    new instr:0x7faef3f03beb: mov rdi, rax
old instr: 0x4101b4: shl rdi, 0x7
    new instr:0x7faef3f03bee: shl rdi, 0x7
old instr: 0x4101b8: add rax, rdi
    new instr:0x7faef3f03bf2: add rax, rdi
old instr: 0x4101bb: add rax, rsi
    new instr:0x7faef3f03bf5: add rax, rsi
old instr: 0x4101be: add rax, 0x2c60
    new instr:0x7faef3f03bf8: add rax, 0x2c60
old instr: 0x4101c4: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03bfe: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x4101c8: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03c02: lea esi, ptr [rax+0x1]
old instr: 0x4101cb: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03c05: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4101d2: movsxd rdx, edx
    new instr:0x7faef3f03c0c: movsxd rdx, edx
old instr: 0x4101d5: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03c0f: mov eax, dword ptr [rbp-0x40]
old instr: 0x4101d8: cdqe 
    new instr:0x7faef3f03c12: cdqe 
old instr: 0x4101da: add rax, rax
    new instr:0x7faef3f03c14: add rax, rax
old instr: 0x4101dd: mov rdi, rax
    new instr:0x7faef3f03c17: mov rdi, rax
old instr: 0x4101e0: shl rdi, 0x7
    new instr:0x7faef3f03c1a: shl rdi, 0x7
old instr: 0x4101e4: add rax, rdi
    new instr:0x7faef3f03c1e: add rax, rdi
old instr: 0x4101e7: add rax, rdx
    new instr:0x7faef3f03c21: add rax, rdx
old instr: 0x4101ea: add rax, 0x2c60
    new instr:0x7faef3f03c24: add rax, 0x2c60
old instr: 0x4101f0: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03c2a: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x4101f4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03c2e: mov eax, dword ptr [rbp-0x34]
old instr: 0x4101f7: cdqe 
    new instr:0x7faef3f03c31: cdqe 
old instr: 0x4101f9: add rax, 0x2f
    new instr:0x7faef3f03c33: add rax, 0x2f
old instr: 0x4101fd: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03c37: lea rdx, ptr [rax+rax*1]
old instr: 0x410201: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03c3b: mov rax, qword ptr [rbp-0x78]
old instr: 0x410205: add rax, rdx
    new instr:0x7faef3f03c3f: add rax, rdx
old instr: 0x410208: movzx eax, word ptr [rax]
    new instr:0x7faef3f03c42: movzx eax, word ptr [rax]
41020b
old instr: 0x41020b: movzx edx, ax
    new instr:0x7faef3f03c45: movzx edx, ax
old instr: 0x41020e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03c48: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410215: movsxd rsi, edx
    new instr:0x7faef3f03c4f: movsxd rsi, edx
old instr: 0x410218: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03c52: mov eax, dword ptr [rbp-0x40]
old instr: 0x41021b: cdqe 
    new instr:0x7faef3f03c55: cdqe 
old instr: 0x41021d: add rax, rax
    new instr:0x7faef3f03c57: add rax, rax
old instr: 0x410220: mov rdi, rax
    new instr:0x7faef3f03c5a: mov rdi, rax
old instr: 0x410223: shl rdi, 0x7
    new instr:0x7faef3f03c5d: shl rdi, 0x7
old instr: 0x410227: add rax, rdi
    new instr:0x7faef3f03c61: add rax, rdi
old instr: 0x41022a: add rax, rsi
    new instr:0x7faef3f03c64: add rax, rsi
old instr: 0x41022d: add rax, 0x2c60
    new instr:0x7faef3f03c67: add rax, 0x2c60
old instr: 0x410233: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03c6d: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x410237: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03c71: lea esi, ptr [rax+0x1]
old instr: 0x41023a: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03c74: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410241: movsxd rdx, edx
    new instr:0x7faef3f03c7b: movsxd rdx, edx
old instr: 0x410244: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03c7e: mov eax, dword ptr [rbp-0x40]
old instr: 0x410247: cdqe 
    new instr:0x7faef3f03c81: cdqe 
old instr: 0x410249: add rax, rax
    new instr:0x7faef3f03c83: add rax, rax
old instr: 0x41024c: mov rdi, rax
    new instr:0x7faef3f03c86: mov rdi, rax
old instr: 0x41024f: shl rdi, 0x7
    new instr:0x7faef3f03c89: shl rdi, 0x7
old instr: 0x410253: add rax, rdi
    new instr:0x7faef3f03c8d: add rax, rdi
old instr: 0x410256: add rax, rdx
    new instr:0x7faef3f03c90: add rax, rdx
old instr: 0x410259: add rax, 0x2c60
    new instr:0x7faef3f03c93: add rax, 0x2c60
old instr: 0x41025f: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03c99: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x410263: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03c9d: mov eax, dword ptr [rbp-0x34]
old instr: 0x410266: cdqe 
    new instr:0x7faef3f03ca0: cdqe 
old instr: 0x410268: add rax, 0x30
    new instr:0x7faef3f03ca2: add rax, 0x30
old instr: 0x41026c: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03ca6: lea rdx, ptr [rax+rax*1]
old instr: 0x410270: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03caa: mov rax, qword ptr [rbp-0x78]
old instr: 0x410274: add rax, rdx
    new instr:0x7faef3f03cae: add rax, rdx
old instr: 0x410277: movzx eax, word ptr [rax]
    new instr:0x7faef3f03cb1: movzx eax, word ptr [rax]
old instr: 0x41027a: movzx edx, ax
    new instr:0x7faef3f03cb4: movzx edx, ax
old instr: 0x41027d: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03cb7: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410284: movsxd rsi, edx
    new instr:0x7faef3f03cbe: movsxd rsi, edx
old instr: 0x410287: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03cc1: mov eax, dword ptr [rbp-0x40]
old instr: 0x41028a: cdqe 
    new instr:0x7faef3f03cc4: cdqe 
old instr: 0x41028c: add rax, rax
    new instr:0x7faef3f03cc6: add rax, rax
old instr: 0x41028f: mov rdi, rax
    new instr:0x7faef3f03cc9: mov rdi, rax
old instr: 0x410292: shl rdi, 0x7
    new instr:0x7faef3f03ccc: shl rdi, 0x7
old instr: 0x410296: add rax, rdi
    new instr:0x7faef3f03cd0: add rax, rdi
old instr: 0x410299: add rax, rsi
    new instr:0x7faef3f03cd3: add rax, rsi
old instr: 0x41029c: add rax, 0x2c60
    new instr:0x7faef3f03cd6: add rax, 0x2c60
old instr: 0x4102a2: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7faef3f03cdc: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x4102a6: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03ce0: lea esi, ptr [rax+0x1]
old instr: 0x4102a9: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03ce3: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4102b0: movsxd rdx, edx
    new instr:0x7faef3f03cea: movsxd rdx, edx
old instr: 0x4102b3: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03ced: mov eax, dword ptr [rbp-0x40]
old instr: 0x4102b6: cdqe 
    new instr:0x7faef3f03cf0: cdqe 
old instr: 0x4102b8: add rax, rax
    new instr:0x7faef3f03cf2: add rax, rax
old instr: 0x4102bb: mov rdi, rax
    new instr:0x7faef3f03cf5: mov rdi, rax
old instr: 0x4102be: shl rdi, 0x7
    new instr:0x7faef3f03cf8: shl rdi, 0x7
old instr: 0x4102c2: add rax, rdi
    new instr:0x7faef3f03cfc: add rax, rdi
old instr: 0x4102c5: add rax, rdx
    new instr:0x7faef3f03cff: add rax, rdx
old instr: 0x4102c8: add rax, 0x2c60
    new instr:0x7faef3f03d02: add rax, 0x2c60
old instr: 0x4102ce: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03d08: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x4102d2: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03d0c: mov eax, dword ptr [rbp-0x34]
old instr: 0x4102d5: cdqe 
    new instr:0x7faef3f03d0f: cdqe 
old instr: 0x4102d7: add rax, 0x31
    new instr:0x7faef3f03d11: add rax, 0x31
old instr: 0x4102db: lea rdx, ptr [rax+rax*1]
    new instr:0x7faef3f03d15: lea rdx, ptr [rax+rax*1]
old instr: 0x4102df: mov rax, qword ptr [rbp-0x78]
    new instr:0x7faef3f03d19: mov rax, qword ptr [rbp-0x78]
old instr: 0x4102e3: add rax, rdx
    new instr:0x7faef3f03d1d: add rax, rdx
old instr: 0x4102e6: movzx eax, word ptr [rax]
    new instr:0x7faef3f03d20: movzx eax, word ptr [rax]
old instr: 0x4102e9: movzx edx, ax
    new instr:0x7faef3f03d23: movzx edx, ax
old instr: 0x4102ec: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03d26: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4102f3: movsxd rsi, edx
    new instr:0x7faef3f03d2d: movsxd rsi, edx
old instr: 0x4102f6: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03d30: mov eax, dword ptr [rbp-0x40]
old instr: 0x4102f9: cdqe 
    new instr:0x7faef3f03d33: cdqe 
old instr: 0x4102fb: add rax, rax
    new instr:0x7faef3f03d35: add rax, rax
old instr: 0x4102fe: mov rdi, rax
    new instr:0x7faef3f03d38: mov rdi, rax
old instr: 0x410301: shl rdi, 0x7
    new instr:0x7faef3f03d3b: shl rdi, 0x7
410305
old instr: 0x410305: add rax, rdi
    new instr:0x7faef3f03d3f: add rax, rdi
410322
old instr: 0x410322: mov eax, dword ptr [rbp-0x40]
    new instr:0x7faef3f03d42: mov eax, dword ptr [rbp-0x40]
old instr: 0x410325: cdqe 
    new instr:0x7faef3f03d45: cdqe 
old instr: 0x410327: add rax, rax
    new instr:0x7faef3f03d47: add rax, rax
old instr: 0x41032a: mov rdi, rax
    new instr:0x7faef3f03d4a: mov rdi, rax
old instr: 0x41032d: shl rdi, 0x7
    new instr:0x7faef3f03d4d: shl rdi, 0x7
old instr: 0x410331: add rax, rdi
    new instr:0x7faef3f03d51: add rax, rdi
old instr: 0x410334: add rax, rdx
    new instr:0x7faef3f03d54: add rax, rdx
old instr: 0x410337: add rax, 0x2c60
    new instr:0x7faef3f03d57: add rax, 0x2c60
old instr: 0x41033d: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7faef3f03d5d: mov dword ptr [rcx+rax*4+0x8], esi
in revert 
removing jump and inserting a dummy entry 
4103c2
old instr: 0x4103c2: mov eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f03d61: mov eax, dword ptr [rbp-0x38]
old instr: 0x4103c5: add eax, 0x1
    new instr:0x7faef3f03d64: add eax, 0x1
old instr: 0x4103c8: mov dword ptr [rbp-0x34], eax
    new instr:0x7faef3f03d67: mov dword ptr [rbp-0x34], eax
old instr: 0x4103cb: jmp 0x40d405
    new instr:0x7faef3f03d6a: jmp 0x7faef3f00da4
inserted instruction
410343
old instr: 0x410343: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f03d6f: mov eax, dword ptr [rbp-0x34]
old instr: 0x410346: mov dword ptr [rbp-0x2c], eax
    new instr:0x7faef3f03d72: mov dword ptr [rbp-0x2c], eax
in revert 
removing jump and inserting a dummy entry 
4103ba
old instr: 0x4103ba: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f03d75: mov eax, dword ptr [rbp-0x2c]
old instr: 0x4103bd: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7faef3f03d78: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7faef3f03d7b: jnle 0x7faef3f03d06
41034b
old instr: 0x41034b: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f03d7d: mov eax, dword ptr [rbp-0x2c]
4103d0
old instr: 0x4103d0: nop
    new instr:0x7faef3f03d80: nop
old instr: 0x4103d1: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03d81: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4103d8: mov eax, dword ptr [rax+0x290]
    new instr:0x7faef3f03d88: mov eax, dword ptr [rax+0x290]
old instr: 0x4103de: cmp eax, 0x2
    new instr:0x7faef3f03d8e: cmp eax, 0x2
in revert 
    new instr:0x7faef3f03d91: jnle 0x7faef3f03e18
410468
old instr: 0x410468: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f03d97: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
4104d3
old instr: 0x4104d3: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f03d9e: mov eax, dword ptr [rbp-0x28]
old instr: 0x4104d6: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7faef3f03da1: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7faef3f03da4: jnl 0x7faef3f03d3c
410471
old instr: 0x410471: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f03da6: mov eax, dword ptr [rbp-0x28]
old instr: 0x410474: cdqe 
    new instr:0x7faef3f03da9: cdqe 
old instr: 0x410476: shl rax, 0x3
    new instr:0x7faef3f03dab: shl rax, 0x3
old instr: 0x41047a: mov rdx, rax
    new instr:0x7faef3f03daf: mov rdx, rax
old instr: 0x41047d: shl rdx, 0x7
    new instr:0x7faef3f03db2: shl rdx, 0x7
old instr: 0x410481: add rax, rdx
    new instr:0x7faef3f03db6: add rax, rdx
old instr: 0x410484: lea rdx, ptr [rax+0xb180]
    new instr:0x7faef3f03db9: lea rdx, ptr [rax+0xb180]
old instr: 0x41048b: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03dc0: mov rax, qword ptr [rbp-0xf8]
old instr: 0x410492: add rax, rdx
    new instr:0x7faef3f03dc7: add rax, rdx
old instr: 0x410495: lea rsi, ptr [rax+0x8]
    new instr:0x7faef3f03dca: lea rsi, ptr [rax+0x8]
old instr: 0x410499: mov eax, dword ptr [rbp-0x28]
    new instr:0x7faef3f03dce: mov eax, dword ptr [rbp-0x28]
old instr: 0x41049c: cdqe 
    new instr:0x7faef3f03dd1: cdqe 
old instr: 0x41049e: add rax, rax
    new instr:0x7faef3f03dd3: add rax, rax
old instr: 0x4104a1: mov rdx, rax
    new instr:0x7faef3f03dd6: mov rdx, rax
old instr: 0x4104a4: shl rdx, 0x7
    new instr:0x7faef3f03dd9: shl rdx, 0x7
old instr: 0x4104a8: add rax, rdx
    new instr:0x7faef3f03ddd: add rax, rdx
old instr: 0x4104ab: lea rdx, ptr [rax+0x9340]
    new instr:0x7faef3f03de0: lea rdx, ptr [rax+0x9340]
old instr: 0x4104b2: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03de7: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4104b9: add rax, rdx
    new instr:0x7faef3f03dee: add rax, rdx
old instr: 0x4104bc: lea rdi, ptr [rax+0xc]
    new instr:0x7faef3f03df1: lea rdi, ptr [rax+0xc]
old instr: 0x4104c0: mov eax, dword ptr [rbp-0x7c]
    new instr:0x7faef3f03df5: mov eax, dword ptr [rbp-0x7c]
old instr: 0x4104c3: mov ecx, 0x11
    new instr:0x7faef3f03df8: mov ecx, 0x11
old instr: 0x4104c8: mov edx, eax
    new instr:0x7faef3f03dfd: mov edx, eax
old instr: 0x4104ca: call 0x417d54
    new instr:0x7faef3f03dff: call 0x7faef3f0b689
inserted instruction
410855
old instr: 0x410855: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7faef3f03e04: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
4108dc
old instr: 0x4108dc: cmp dword ptr [rbp-0x2c], 0xf
    new instr:0x7faef3f03e0b: cmp dword ptr [rbp-0x2c], 0xf
in revert 
    new instr:0x7faef3f03e0f: jnle 0x7faef3f03d8d
41085e
old instr: 0x41085e: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f03e15: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410861: cdqe 
    new instr:0x7faef3f03e18: cdqe 
old instr: 0x410863: movzx eax, byte ptr [rbp+rax*1-0xf0]
    new instr:0x7faef3f03e1a: movzx eax, byte ptr [rbp+rax*1-0xf0]
old instr: 0x41086b: test al, al
    new instr:0x7faef3f03e22: test al, al
in revert 
    new instr:0x7faef3f03e24: jnz 0x7faef3f03e8f
4108d8
old instr: 0x4108d8: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7faef3f03e26: add dword ptr [rbp-0x2c], 0x1
41086f
old instr: 0x41086f: mov dword ptr [rbp-0x30], 0x0
    new instr:0x7faef3f03e2a: mov dword ptr [rbp-0x30], 0x0
in revert 
removing jump and inserting a dummy entry 
4108d2
old instr: 0x4108d2: cmp dword ptr [rbp-0x30], 0xf
    new instr:0x7faef3f03e31: cmp dword ptr [rbp-0x30], 0xf
in revert 
    new instr:0x7faef3f03e35: jnle 0x7faef3f03dd7
410878
old instr: 0x410878: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7faef3f03e37: mov eax, dword ptr [rbp-0x2c]
old instr: 0x41087b: mov edx, eax
    new instr:0x7faef3f03e3a: mov edx, eax
old instr: 0x41087d: shl edx, 0x4
    new instr:0x7faef3f03e3c: shl edx, 0x4
old instr: 0x410880: mov eax, dword ptr [rbp-0x30]
    new instr:0x7faef3f03e3f: mov eax, dword ptr [rbp-0x30]
old instr: 0x410883: add eax, edx
    new instr:0x7faef3f03e42: add eax, edx
old instr: 0x410885: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03e44: mov rdx, qword ptr [rbp-0xf8]
old instr: 0x41088c: cdqe 
    new instr:0x7faef3f03e4b: cdqe 
old instr: 0x41088e: movzx eax, byte ptr [rdx+rax*1+0x80]
    new instr:0x7faef3f03e4d: movzx eax, byte ptr [rdx+rax*1+0x80]
old instr: 0x410896: test al, al
    new instr:0x7faef3f03e55: test al, al
old instr: 0x410898: jz 0x4108b5
    new instr:0x7faef3f03e57: jz 0x7faef3f03e74
inserted instruction
41089a
old instr: 0x41089a: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03e59: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4108a1: mov edx, 0x1
    new instr:0x7faef3f03e60: mov edx, 0x1
old instr: 0x4108a6: mov esi, 0x1
    new instr:0x7faef3f03e65: mov esi, 0x1
old instr: 0x4108ab: mov rdi, rax
    new instr:0x7faef3f03e6a: mov rdi, rax
old instr: 0x4108ae: call 0x40c94c
    new instr:0x7faef3f03e6d: call 0x7faef3efff0b
inserted instruction
4108b5
old instr: 0x4108b5: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03e72: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4108bc: mov edx, 0x0
    new instr:0x7faef3f03e79: mov edx, 0x0
old instr: 0x4108c1: mov esi, 0x1
    new instr:0x7faef3f03e7e: mov esi, 0x1
old instr: 0x4108c6: mov rdi, rax
    new instr:0x7faef3f03e83: mov rdi, rax
old instr: 0x4108c9: call 0x40c94c
    new instr:0x7faef3f03e86: call 0x7faef3efff09
inserted instruction
4104db
old instr: 0x4104db: add dword ptr [rbp-0x48], 0x1
    new instr:0x7faef3f03e8b: add dword ptr [rbp-0x48], 0x1
4103e7
old instr: 0x4103e7: mov eax, dword ptr [rbp-0x3c]
    new instr:0x7faef3f03e8f: mov eax, dword ptr [rbp-0x3c]
old instr: 0x4103ea: lea edx, ptr [rax+0x7]
    new instr:0x7faef3f03e92: lea edx, ptr [rax+0x7]
old instr: 0x4103ed: test eax, eax
    new instr:0x7faef3f03e95: test eax, eax
old instr: 0x4103ef: cmovs eax, edx
    new instr:0x7faef3f03e97: cmovs eax, edx
old instr: 0x4103f2: sar eax, 0x3
    new instr:0x7faef3f03e9a: sar eax, 0x3
old instr: 0x4103f5: mov edx, eax
    new instr:0x7faef3f03e9d: mov edx, eax
old instr: 0x4103f7: mov eax, dword ptr [rbp-0x48]
    new instr:0x7faef3f03e9f: mov eax, dword ptr [rbp-0x48]
old instr: 0x4103fa: lea esi, ptr [rax+0x1]
    new instr:0x7faef3f03ea2: lea esi, ptr [rax+0x1]
old instr: 0x4103fd: mov rax, qword ptr [rip+0x20ceac]
    new instr:0x7faef3f03ea5: mov rax, qword ptr [rip+0x20ceac]
old instr: 0x410404: mov ecx, edx
    new instr:0x7faef3f03eac: mov ecx, edx
old instr: 0x410406: mov edx, esi
    new instr:0x7faef3f03eae: mov edx, esi
old instr: 0x410408: mov esi, 0x41acb8
    new instr:0x7faef3f03eb0: mov esi, 0x41acb8
old instr: 0x41040d: mov rdi, rax
    new instr:0x7faef3f03eb5: mov rdi, rax
old instr: 0x410410: mov eax, 0x0
    new instr:0x7faef3f03eb8: mov eax, 0x0
old instr: 0x410415: call 0x4011f0
    new instr:0x7faef3f03ebd: call 0x7faef3ef4c98
inserted instruction
4108e6
old instr: 0x4108e6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03ec2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4108ed: mov eax, dword ptr [rax+0x290]
    new instr:0x7faef3f03ec9: mov eax, dword ptr [rax+0x290]
old instr: 0x4108f3: cmp eax, 0x2
    new instr:0x7faef3f03ecf: cmp eax, 0x2
in revert 
    new instr:0x7faef3f03ed2: jnle 0x7faef3f03eff
410923
old instr: 0x410923: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03ed4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x41092a: mov eax, dword ptr [rax+0x74]
    new instr:0x7faef3f03edb: mov eax, dword ptr [rax+0x74]
old instr: 0x41092d: mov dword ptr [rbp-0x88], eax
    new instr:0x7faef3f03ede: mov dword ptr [rbp-0x88], eax
old instr: 0x410933: mov edx, dword ptr [rbp-0x5c]
    new instr:0x7faef3f03ee4: mov edx, dword ptr [rbp-0x5c]
old instr: 0x410936: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03ee7: mov rax, qword ptr [rbp-0xf8]
old instr: 0x41093d: mov esi, 0x3
    new instr:0x7faef3f03eee: mov esi, 0x3
old instr: 0x410942: mov rdi, rax
    new instr:0x7faef3f03ef3: mov rdi, rax
old instr: 0x410945: call 0x40c94c
    new instr:0x7faef3f03ef6: call 0x7faef3effefd
inserted instruction
4108f8
old instr: 0x4108f8: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7faef3f03efb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4108ff: mov eax, dword ptr [rax+0x74]
    new instr:0x7faef3f03f02: mov eax, dword ptr [rax+0x74]
old instr: 0x410902: mov edx, eax
    new instr:0x7faef3f03f05: mov edx, eax
old instr: 0x410904: sub edx, dword ptr [rbp-0x88]
    new instr:0x7faef3f03f07: sub edx, dword ptr [rbp-0x88]
old instr: 0x41090a: mov rax, qword ptr [rip+0x20c99f]
    new instr:0x7faef3f03f0d: mov rax, qword ptr [rip+0x20c99f]
old instr: 0x410911: mov esi, 0x41ace5
    new instr:0x7faef3f03f14: mov esi, 0x41ace5
old instr: 0x410916: mov rdi, rax
    new instr:0x7faef3f03f19: mov rdi, rax
old instr: 0x410919: mov eax, 0x0
    new instr:0x7faef3f03f1c: mov eax, 0x0
old instr: 0x41091e: call 0x4011f0
    new instr:0x7faef3f03f21: call 0x7faef3ef47f3
inserted instruction
rtn name: sendMTFValues : 3
c
405388
old instr: 0x405388: push rbp
    new instr:0x7faef3f03f26: push rbp
old instr: 0x405389: mov rbp, rsp
    new instr:0x7faef3f03f27: mov rbp, rsp
old instr: 0x40538c: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f03f2a: mov qword ptr [rbp-0x18], rdi
old instr: 0x405390: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f2e: mov rax, qword ptr [rbp-0x18]
old instr: 0x405394: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f03f32: mov eax, dword ptr [rax+0x5c]
old instr: 0x405397: mov byte ptr [rbp-0x5], al
    new instr:0x7faef3f03f35: mov byte ptr [rbp-0x5], al
old instr: 0x40539a: mov dword ptr [rbp-0x4], 0x0
    new instr:0x7faef3f03f38: mov dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
4053e0
old instr: 0x4053e0: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f3f: mov rax, qword ptr [rbp-0x18]
old instr: 0x4053e4: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f03f43: mov eax, dword ptr [rax+0x60]
old instr: 0x4053e7: cmp eax, dword ptr [rbp-0x4]
    new instr:0x7faef3f03f46: cmp eax, dword ptr [rbp-0x4]
in revert 
    new instr:0x7faef3f03f49: jle 0x7faef3f03f02
4053a3
old instr: 0x4053a3: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f4b: mov rax, qword ptr [rbp-0x18]
4053ec
old instr: 0x4053ec: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f4f: mov rax, qword ptr [rbp-0x18]
old instr: 0x4053f0: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f03f53: mov eax, dword ptr [rax+0x5c]
old instr: 0x4053f3: mov rdx, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f56: mov rdx, qword ptr [rbp-0x18]
old instr: 0x4053f7: mov eax, eax
    new instr:0x7faef3f03f5a: mov eax, eax
old instr: 0x4053f9: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7faef3f03f5c: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x405401: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f64: mov rax, qword ptr [rbp-0x18]
old instr: 0x405405: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f03f68: mov eax, dword ptr [rax+0x60]
old instr: 0x405408: cmp eax, 0x2
    new instr:0x7faef3f03f6b: cmp eax, 0x2
old instr: 0x40540b: jz 0x40544f
    new instr:0x7faef3f03f6e: jz 0x7faef3f03fb2
inserted instruction
40540d
old instr: 0x40540d: cmp eax, 0x3
    new instr:0x7faef3f03f70: cmp eax, 0x3
old instr: 0x405410: jz 0x4054aa
    new instr:0x7faef3f03f73: jz 0x7faef3f0400d
inserted instruction
405416
old instr: 0x405416: cmp eax, 0x1
    new instr:0x7faef3f03f79: cmp eax, 0x1
in revert 
    new instr:0x7faef3f03f7c: jz 0x7faef3f04093
405530
old instr: 0x405530: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f82: mov rax, qword ptr [rbp-0x18]
old instr: 0x405534: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f03f86: mov eax, dword ptr [rax+0x60]
old instr: 0x405537: sub eax, 0x4
    new instr:0x7faef3f03f89: sub eax, 0x4
old instr: 0x40553a: mov rdx, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f8c: mov rdx, qword ptr [rbp-0x18]
old instr: 0x40553e: cdqe 
    new instr:0x7faef3f03f90: cdqe 
old instr: 0x405540: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7faef3f03f92: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x405548: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03f9a: mov rax, qword ptr [rbp-0x18]
old instr: 0x40554c: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f03f9e: mov rdx, qword ptr [rax+0x40]
old instr: 0x405550: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03fa2: mov rax, qword ptr [rbp-0x18]
old instr: 0x405554: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f03fa6: mov eax, dword ptr [rax+0x6c]
old instr: 0x405557: cdqe 
    new instr:0x7faef3f03fa9: cdqe 
old instr: 0x405559: add rdx, rax
    new instr:0x7faef3f03fab: add rdx, rax
old instr: 0x40555c: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f03fae: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405560: mov byte ptr [rdx], al
    new instr:0x7faef3f03fb2: mov byte ptr [rdx], al
old instr: 0x405562: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03fb4: mov rax, qword ptr [rbp-0x18]
old instr: 0x405566: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f03fb8: mov eax, dword ptr [rax+0x6c]
old instr: 0x405569: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f03fbb: lea edx, ptr [rax+0x1]
old instr: 0x40556c: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03fbe: mov rax, qword ptr [rbp-0x18]
old instr: 0x405570: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f03fc2: mov dword ptr [rax+0x6c], edx
old instr: 0x405573: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03fc5: mov rax, qword ptr [rbp-0x18]
old instr: 0x405577: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f03fc9: mov rdx, qword ptr [rax+0x40]
old instr: 0x40557b: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03fcd: mov rax, qword ptr [rbp-0x18]
old instr: 0x40557f: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f03fd1: mov eax, dword ptr [rax+0x6c]
old instr: 0x405582: cdqe 
    new instr:0x7faef3f03fd4: cdqe 
old instr: 0x405584: add rdx, rax
    new instr:0x7faef3f03fd6: add rdx, rax
old instr: 0x405587: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f03fd9: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40558b: mov byte ptr [rdx], al
    new instr:0x7faef3f03fdd: mov byte ptr [rdx], al
old instr: 0x40558d: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03fdf: mov rax, qword ptr [rbp-0x18]
old instr: 0x405591: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f03fe3: mov eax, dword ptr [rax+0x6c]
old instr: 0x405594: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f03fe6: lea edx, ptr [rax+0x1]
old instr: 0x405597: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03fe9: mov rax, qword ptr [rbp-0x18]
old instr: 0x40559b: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f03fed: mov dword ptr [rax+0x6c], edx
old instr: 0x40559e: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03ff0: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055a2: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f03ff4: mov rdx, qword ptr [rax+0x40]
old instr: 0x4055a6: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f03ff8: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055aa: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f03ffc: mov eax, dword ptr [rax+0x6c]
old instr: 0x4055ad: cdqe 
    new instr:0x7faef3f03fff: cdqe 
old instr: 0x4055af: add rdx, rax
    new instr:0x7faef3f04001: add rdx, rax
old instr: 0x4055b2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f04004: movzx eax, byte ptr [rbp-0x5]
old instr: 0x4055b6: mov byte ptr [rdx], al
    new instr:0x7faef3f04008: mov byte ptr [rdx], al
old instr: 0x4055b8: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0400a: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055bc: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f0400e: mov eax, dword ptr [rax+0x6c]
old instr: 0x4055bf: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f04011: lea edx, ptr [rax+0x1]
old instr: 0x4055c2: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04014: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055c6: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f04018: mov dword ptr [rax+0x6c], edx
old instr: 0x4055c9: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0401b: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055cd: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f0401f: mov rdx, qword ptr [rax+0x40]
old instr: 0x4055d1: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04023: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055d5: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04027: mov eax, dword ptr [rax+0x6c]
old instr: 0x4055d8: cdqe 
    new instr:0x7faef3f0402a: cdqe 
old instr: 0x4055da: add rdx, rax
    new instr:0x7faef3f0402c: add rdx, rax
old instr: 0x4055dd: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f0402f: movzx eax, byte ptr [rbp-0x5]
old instr: 0x4055e1: mov byte ptr [rdx], al
    new instr:0x7faef3f04033: mov byte ptr [rdx], al
old instr: 0x4055e3: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04035: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055e7: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04039: mov eax, dword ptr [rax+0x6c]
old instr: 0x4055ea: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f0403c: lea edx, ptr [rax+0x1]
old instr: 0x4055ed: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0403f: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055f1: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f04043: mov dword ptr [rax+0x6c], edx
old instr: 0x4055f4: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04046: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055f8: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f0404a: mov rdx, qword ptr [rax+0x40]
old instr: 0x4055fc: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0404e: mov rax, qword ptr [rbp-0x18]
old instr: 0x405600: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04052: mov eax, dword ptr [rax+0x6c]
old instr: 0x405603: cdqe 
    new instr:0x7faef3f04055: cdqe 
old instr: 0x405605: add rdx, rax
    new instr:0x7faef3f04057: add rdx, rax
old instr: 0x405608: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0405a: mov rax, qword ptr [rbp-0x18]
old instr: 0x40560c: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f0405e: mov eax, dword ptr [rax+0x60]
old instr: 0x40560f: sub eax, 0x4
    new instr:0x7faef3f04061: sub eax, 0x4
old instr: 0x405612: mov byte ptr [rdx], al
    new instr:0x7faef3f04064: mov byte ptr [rdx], al
old instr: 0x405614: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04066: mov rax, qword ptr [rbp-0x18]
old instr: 0x405618: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f0406a: mov eax, dword ptr [rax+0x6c]
40561b
old instr: 0x40561b: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f0406d: lea edx, ptr [rax+0x1]
405626
old instr: 0x405626: pop rbp
    new instr:0x7faef3f04070: pop rbp
old instr: 0x405627: ret 
    new instr:0x7faef3f04071: ret 
40544f
old instr: 0x40544f: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04072: mov rax, qword ptr [rbp-0x18]
old instr: 0x405453: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f04076: mov rdx, qword ptr [rax+0x40]
old instr: 0x405457: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0407a: mov rax, qword ptr [rbp-0x18]
old instr: 0x40545b: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f0407e: mov eax, dword ptr [rax+0x6c]
old instr: 0x40545e: cdqe 
    new instr:0x7faef3f04081: cdqe 
old instr: 0x405460: add rdx, rax
    new instr:0x7faef3f04083: add rdx, rax
old instr: 0x405463: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f04086: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405467: mov byte ptr [rdx], al
    new instr:0x7faef3f0408a: mov byte ptr [rdx], al
old instr: 0x405469: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0408c: mov rax, qword ptr [rbp-0x18]
old instr: 0x40546d: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04090: mov eax, dword ptr [rax+0x6c]
old instr: 0x405470: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f04093: lea edx, ptr [rax+0x1]
old instr: 0x405473: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04096: mov rax, qword ptr [rbp-0x18]
old instr: 0x405477: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f0409a: mov dword ptr [rax+0x6c], edx
old instr: 0x40547a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0409d: mov rax, qword ptr [rbp-0x18]
old instr: 0x40547e: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f040a1: mov rdx, qword ptr [rax+0x40]
old instr: 0x405482: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f040a5: mov rax, qword ptr [rbp-0x18]
old instr: 0x405486: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f040a9: mov eax, dword ptr [rax+0x6c]
old instr: 0x405489: cdqe 
    new instr:0x7faef3f040ac: cdqe 
old instr: 0x40548b: add rdx, rax
    new instr:0x7faef3f040ae: add rdx, rax
old instr: 0x40548e: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f040b1: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405492: mov byte ptr [rdx], al
    new instr:0x7faef3f040b5: mov byte ptr [rdx], al
old instr: 0x405494: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f040b7: mov rax, qword ptr [rbp-0x18]
old instr: 0x405498: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f040bb: mov eax, dword ptr [rax+0x6c]
old instr: 0x40549b: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f040be: lea edx, ptr [rax+0x1]
old instr: 0x40549e: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f040c1: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054a2: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f040c5: mov dword ptr [rax+0x6c], edx
old instr: 0x4054a5: jmp 0x405626
    new instr:0x7faef3f040c8: jmp 0x7faef3f04249
inserted instruction
4054aa
old instr: 0x4054aa: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f040cd: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054ae: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f040d1: mov rdx, qword ptr [rax+0x40]
old instr: 0x4054b2: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f040d5: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054b6: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f040d9: mov eax, dword ptr [rax+0x6c]
old instr: 0x4054b9: cdqe 
    new instr:0x7faef3f040dc: cdqe 
old instr: 0x4054bb: add rdx, rax
    new instr:0x7faef3f040de: add rdx, rax
old instr: 0x4054be: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f040e1: movzx eax, byte ptr [rbp-0x5]
old instr: 0x4054c2: mov byte ptr [rdx], al
    new instr:0x7faef3f040e5: mov byte ptr [rdx], al
old instr: 0x4054c4: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f040e7: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054c8: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f040eb: mov eax, dword ptr [rax+0x6c]
old instr: 0x4054cb: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f040ee: lea edx, ptr [rax+0x1]
old instr: 0x4054ce: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f040f1: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054d2: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f040f5: mov dword ptr [rax+0x6c], edx
old instr: 0x4054d5: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f040f8: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054d9: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f040fc: mov rdx, qword ptr [rax+0x40]
old instr: 0x4054dd: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04100: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054e1: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04104: mov eax, dword ptr [rax+0x6c]
old instr: 0x4054e4: cdqe 
    new instr:0x7faef3f04107: cdqe 
old instr: 0x4054e6: add rdx, rax
    new instr:0x7faef3f04109: add rdx, rax
old instr: 0x4054e9: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f0410c: movzx eax, byte ptr [rbp-0x5]
old instr: 0x4054ed: mov byte ptr [rdx], al
    new instr:0x7faef3f04110: mov byte ptr [rdx], al
old instr: 0x4054ef: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04112: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054f3: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04116: mov eax, dword ptr [rax+0x6c]
old instr: 0x4054f6: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f04119: lea edx, ptr [rax+0x1]
old instr: 0x4054f9: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0411c: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054fd: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f04120: mov dword ptr [rax+0x6c], edx
old instr: 0x405500: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04123: mov rax, qword ptr [rbp-0x18]
old instr: 0x405504: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f04127: mov rdx, qword ptr [rax+0x40]
old instr: 0x405508: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0412b: mov rax, qword ptr [rbp-0x18]
old instr: 0x40550c: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f0412f: mov eax, dword ptr [rax+0x6c]
old instr: 0x40550f: cdqe 
    new instr:0x7faef3f04132: cdqe 
old instr: 0x405511: add rdx, rax
    new instr:0x7faef3f04134: add rdx, rax
old instr: 0x405514: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f04137: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405518: mov byte ptr [rdx], al
    new instr:0x7faef3f0413b: mov byte ptr [rdx], al
old instr: 0x40551a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0413d: mov rax, qword ptr [rbp-0x18]
old instr: 0x40551e: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04141: mov eax, dword ptr [rax+0x6c]
old instr: 0x405521: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f04144: lea edx, ptr [rax+0x1]
old instr: 0x405524: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04147: mov rax, qword ptr [rbp-0x18]
old instr: 0x405528: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f0414b: mov dword ptr [rax+0x6c], edx
old instr: 0x40552b: jmp 0x405626
    new instr:0x7faef3f0414e: jmp 0x7faef3f04249
inserted instruction
40541f
old instr: 0x40541f: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04153: mov rax, qword ptr [rbp-0x18]
old instr: 0x405423: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f04157: mov rdx, qword ptr [rax+0x40]
old instr: 0x405427: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0415b: mov rax, qword ptr [rbp-0x18]
old instr: 0x40542b: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f0415f: mov eax, dword ptr [rax+0x6c]
old instr: 0x40542e: cdqe 
    new instr:0x7faef3f04162: cdqe 
old instr: 0x405430: add rdx, rax
    new instr:0x7faef3f04164: add rdx, rax
old instr: 0x405433: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7faef3f04167: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405437: mov byte ptr [rdx], al
    new instr:0x7faef3f0416b: mov byte ptr [rdx], al
old instr: 0x405439: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0416d: mov rax, qword ptr [rbp-0x18]
old instr: 0x40543d: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04171: mov eax, dword ptr [rax+0x6c]
old instr: 0x405440: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f04174: lea edx, ptr [rax+0x1]
old instr: 0x405443: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04177: mov rax, qword ptr [rbp-0x18]
old instr: 0x405447: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f0417b: mov dword ptr [rax+0x6c], edx
old instr: 0x40544a: jmp 0x405626
    new instr:0x7faef3f0417e: jmp 0x7faef3f0435a
inserted instruction
rtn name: add_pair_to_block : 4
9
40c679
old instr: 0x40c679: push rbp
    new instr:0x7faef3f04183: push rbp
old instr: 0x40c67a: mov rbp, rsp
    new instr:0x7faef3f04184: mov rbp, rsp
old instr: 0x40c67d: sub rsp, 0x60
    new instr:0x7faef3f04187: sub rsp, 0x60
old instr: 0x40c681: mov qword ptr [rbp-0x48], rdi
    new instr:0x7faef3f0418b: mov qword ptr [rbp-0x48], rdi
old instr: 0x40c685: mov rax, qword ptr [rbp-0x48]
    new instr:0x7faef3f0418f: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c689: mov rax, qword ptr [rax+0x38]
    new instr:0x7faef3f04193: mov rax, qword ptr [rax+0x38]
old instr: 0x40c68d: mov qword ptr [rbp-0x10], rax
    new instr:0x7faef3f04197: mov qword ptr [rbp-0x10], rax
old instr: 0x40c691: mov rax, qword ptr [rbp-0x48]
    new instr:0x7faef3f0419b: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c695: mov rax, qword ptr [rax+0x40]
    new instr:0x7faef3f0419f: mov rax, qword ptr [rax+0x40]
old instr: 0x40c699: mov qword ptr [rbp-0x18], rax
    new instr:0x7faef3f041a3: mov qword ptr [rbp-0x18], rax
old instr: 0x40c69d: mov rax, qword ptr [rbp-0x48]
    new instr:0x7faef3f041a7: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6a1: mov rax, qword ptr [rax+0x28]
    new instr:0x7faef3f041ab: mov rax, qword ptr [rax+0x28]
old instr: 0x40c6a5: mov qword ptr [rbp-0x20], rax
    new instr:0x7faef3f041af: mov qword ptr [rbp-0x20], rax
old instr: 0x40c6a9: mov rax, qword ptr [rbp-0x48]
    new instr:0x7faef3f041b3: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6ad: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f041b7: mov eax, dword ptr [rax+0x6c]
old instr: 0x40c6b0: mov dword ptr [rbp-0x24], eax
    new instr:0x7faef3f041ba: mov dword ptr [rbp-0x24], eax
old instr: 0x40c6b3: mov rax, qword ptr [rbp-0x48]
    new instr:0x7faef3f041bd: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6b7: mov eax, dword ptr [rax+0x290]
    new instr:0x7faef3f041c1: mov eax, dword ptr [rax+0x290]
old instr: 0x40c6bd: mov dword ptr [rbp-0x28], eax
    new instr:0x7faef3f041c7: mov dword ptr [rbp-0x28], eax
old instr: 0x40c6c0: mov rax, qword ptr [rbp-0x48]
    new instr:0x7faef3f041ca: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6c4: mov eax, dword ptr [rax+0x58]
    new instr:0x7faef3f041ce: mov eax, dword ptr [rax+0x58]
old instr: 0x40c6c7: mov dword ptr [rbp-0x4], eax
    new instr:0x7faef3f041d1: mov dword ptr [rbp-0x4], eax
old instr: 0x40c6ca: cmp dword ptr [rbp-0x24], 0x270f
    new instr:0x7faef3f041d4: cmp dword ptr [rbp-0x24], 0x270f
in revert 
    new instr:0x7faef3f041db: jle 0x7faef3f04207
40c6fd
old instr: 0x40c6fd: mov eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f041dd: mov eax, dword ptr [rbp-0x24]
old instr: 0x40c700: add eax, 0x22
    new instr:0x7faef3f041e0: add eax, 0x22
old instr: 0x40c703: mov dword ptr [rbp-0x8], eax
    new instr:0x7faef3f041e3: mov dword ptr [rbp-0x8], eax
old instr: 0x40c706: mov eax, dword ptr [rbp-0x8]
    new instr:0x7faef3f041e6: mov eax, dword ptr [rbp-0x8]
old instr: 0x40c709: and eax, 0x1
    new instr:0x7faef3f041e9: and eax, 0x1
old instr: 0x40c70c: test eax, eax
    new instr:0x7faef3f041ec: test eax, eax
old instr: 0x40c70e: jz 0x40c714
    new instr:0x7faef3f041ee: jz 0x7faef3f041f4
inserted instruction
40c710
old instr: 0x40c710: add dword ptr [rbp-0x8], 0x1
    new instr:0x7faef3f041f0: add dword ptr [rbp-0x8], 0x1
40c714
old instr: 0x40c714: mov eax, dword ptr [rbp-0x8]
    new instr:0x7faef3f041f4: mov eax, dword ptr [rbp-0x8]
old instr: 0x40c717: movsxd rdx, eax
    new instr:0x7faef3f041f7: movsxd rdx, eax
old instr: 0x40c71a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f041fa: mov rax, qword ptr [rbp-0x18]
old instr: 0x40c71e: add rax, rdx
    new instr:0x7faef3f041fe: add rax, rdx
old instr: 0x40c721: mov qword ptr [rbp-0x30], rax
    new instr:0x7faef3f04201: mov qword ptr [rbp-0x30], rax
old instr: 0x40c725: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7faef3f04205: cmp dword ptr [rbp-0x4], 0x0
in revert 
    new instr:0x7faef3f04209: jle 0x7faef3f04212
40c732
old instr: 0x40c732: cmp dword ptr [rbp-0x4], 0x64
    new instr:0x7faef3f0420b: cmp dword ptr [rbp-0x4], 0x64
in revert 
    new instr:0x7faef3f0420f: jnle 0x7faef3f04218
40c73f
old instr: 0x40c73f: mov eax, dword ptr [rbp-0x4]
    new instr:0x7faef3f04211: mov eax, dword ptr [rbp-0x4]
old instr: 0x40c742: lea ecx, ptr [rax-0x1]
    new instr:0x7faef3f04214: lea ecx, ptr [rax-0x1]
old instr: 0x40c745: mov edx, 0x55555556
    new instr:0x7faef3f04217: mov edx, 0x55555556
old instr: 0x40c74a: mov eax, ecx
    new instr:0x7faef3f0421c: mov eax, ecx
old instr: 0x40c74c: imul edx
    new instr:0x7faef3f0421e: imul edx
old instr: 0x40c74e: mov eax, ecx
    new instr:0x7faef3f04220: mov eax, ecx
old instr: 0x40c750: sar eax, 0x1f
    new instr:0x7faef3f04222: sar eax, 0x1f
old instr: 0x40c753: mov ecx, edx
    new instr:0x7faef3f04225: mov ecx, edx
old instr: 0x40c755: sub ecx, eax
    new instr:0x7faef3f04227: sub ecx, eax
old instr: 0x40c757: mov eax, ecx
    new instr:0x7faef3f04229: mov eax, ecx
old instr: 0x40c759: imul eax, dword ptr [rbp-0x24]
    new instr:0x7faef3f0422b: imul eax, dword ptr [rbp-0x24]
old instr: 0x40c75d: mov dword ptr [rbp-0x34], eax
    new instr:0x7faef3f0422f: mov dword ptr [rbp-0x34], eax
old instr: 0x40c760: mov eax, dword ptr [rbp-0x34]
    new instr:0x7faef3f04232: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c763: mov dword ptr [rbp-0x38], eax
    new instr:0x7faef3f04235: mov dword ptr [rbp-0x38], eax
old instr: 0x40c766: mov r9d, dword ptr [rbp-0x28]
    new instr:0x7faef3f04238: mov r9d, dword ptr [rbp-0x28]
old instr: 0x40c76a: mov r8d, dword ptr [rbp-0x24]
    new instr:0x7faef3f0423c: mov r8d, dword ptr [rbp-0x24]
old instr: 0x40c76e: mov rcx, qword ptr [rbp-0x20]
    new instr:0x7faef3f04240: mov rcx, qword ptr [rbp-0x20]
old instr: 0x40c772: mov rdx, qword ptr [rbp-0x30]
    new instr:0x7faef3f04244: mov rdx, qword ptr [rbp-0x30]
old instr: 0x40c776: mov rsi, qword ptr [rbp-0x18]
    new instr:0x7faef3f04248: mov rsi, qword ptr [rbp-0x18]
old instr: 0x40c77a: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f0424c: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c77e: lea rdi, ptr [rbp-0x38]
    new instr:0x7faef3f04250: lea rdi, ptr [rbp-0x38]
old instr: 0x40c782: mov qword ptr [rsp], rdi
    new instr:0x7faef3f04254: mov qword ptr [rsp], rdi
old instr: 0x40c786: mov rdi, rax
    new instr:0x7faef3f04258: mov rdi, rax
old instr: 0x40c789: call 0x40b826
    new instr:0x7faef3f0425b: call 0x7faef3f032f8
inserted instruction
40c72b
old instr: 0x40c72b: mov dword ptr [rbp-0x4], 0x1
    new instr:0x7faef3f04260: mov dword ptr [rbp-0x4], 0x1
40c738
old instr: 0x40c738: mov dword ptr [rbp-0x4], 0x64
    new instr:0x7faef3f04267: mov dword ptr [rbp-0x4], 0x64
40c6d3
old instr: 0x40c6d3: mov rax, qword ptr [rbp-0x48]
    new instr:0x7faef3f0426e: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6d7: mov rsi, qword ptr [rax+0x20]
    new instr:0x7faef3f04272: mov rsi, qword ptr [rax+0x20]
old instr: 0x40c6db: mov rax, qword ptr [rbp-0x48]
    new instr:0x7faef3f04276: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6df: mov rax, qword ptr [rax+0x18]
    new instr:0x7faef3f0427a: mov rax, qword ptr [rax+0x18]
old instr: 0x40c6e3: mov edi, dword ptr [rbp-0x28]
    new instr:0x7faef3f0427e: mov edi, dword ptr [rbp-0x28]
old instr: 0x40c6e6: mov ecx, dword ptr [rbp-0x24]
    new instr:0x7faef3f04281: mov ecx, dword ptr [rbp-0x24]
old instr: 0x40c6e9: mov rdx, qword ptr [rbp-0x20]
    new instr:0x7faef3f04284: mov rdx, qword ptr [rbp-0x20]
old instr: 0x40c6ed: mov r8d, edi
    new instr:0x7faef3f04288: mov r8d, edi
old instr: 0x40c6f0: mov rdi, rax
    new instr:0x7faef3f0428b: mov rdi, rax
old instr: 0x40c6f3: call 0x409c33
    new instr:0x7faef3f0428e: call 0x7faef3f017ce
inserted instruction
rtn name: BZ2_blockSort : 5
4
40c94c
old instr: 0x40c94c: push rbp
    new instr:0x7faef3f04293: push rbp
old instr: 0x40c94d: mov rbp, rsp
    new instr:0x7faef3f04294: mov rbp, rsp
old instr: 0x40c950: push rbx
    new instr:0x7faef3f04297: push rbx
old instr: 0x40c951: mov qword ptr [rbp-0x10], rdi
    new instr:0x7faef3f04298: mov qword ptr [rbp-0x10], rdi
old instr: 0x40c955: mov dword ptr [rbp-0x14], esi
    new instr:0x7faef3f0429c: mov dword ptr [rbp-0x14], esi
old instr: 0x40c958: mov dword ptr [rbp-0x18], edx
    new instr:0x7faef3f0429f: mov dword ptr [rbp-0x18], edx
in revert 
removing jump and inserting a dummy entry 
40c9c1
old instr: 0x40c9c1: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f042a2: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9c5: mov eax, dword ptr [rax+0x284]
    new instr:0x7faef3f042a6: mov eax, dword ptr [rax+0x284]
old instr: 0x40c9cb: cmp eax, 0x7
    new instr:0x7faef3f042ac: cmp eax, 0x7
old instr: 0x40c9ce: jnle 0x40c95d
    new instr:0x7faef3f042af: jnle 0x7faef3f0423e
inserted instruction
40c9d0
old instr: 0x40c9d0: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f042b1: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9d4: mov edx, dword ptr [rax+0x280]
    new instr:0x7faef3f042b5: mov edx, dword ptr [rax+0x280]
old instr: 0x40c9da: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f042bb: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9de: mov eax, dword ptr [rax+0x284]
    new instr:0x7faef3f042bf: mov eax, dword ptr [rax+0x284]
old instr: 0x40c9e4: mov ecx, 0x20
    new instr:0x7faef3f042c5: mov ecx, 0x20
old instr: 0x40c9e9: mov ebx, ecx
    new instr:0x7faef3f042ca: mov ebx, ecx
old instr: 0x40c9eb: sub ebx, eax
    new instr:0x7faef3f042cc: sub ebx, eax
old instr: 0x40c9ed: mov eax, ebx
    new instr:0x7faef3f042ce: mov eax, ebx
old instr: 0x40c9ef: sub eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f042d0: sub eax, dword ptr [rbp-0x14]
old instr: 0x40c9f2: mov esi, dword ptr [rbp-0x18]
    new instr:0x7faef3f042d3: mov esi, dword ptr [rbp-0x18]
old instr: 0x40c9f5: mov ebx, esi
    new instr:0x7faef3f042d6: mov ebx, esi
old instr: 0x40c9f7: mov ecx, eax
    new instr:0x7faef3f042d8: mov ecx, eax
old instr: 0x40c9f9: shl ebx, cl
    new instr:0x7faef3f042da: shl ebx, cl
old instr: 0x40c9fb: mov eax, ebx
    new instr:0x7faef3f042dc: mov eax, ebx
old instr: 0x40c9fd: or edx, eax
    new instr:0x7faef3f042de: or edx, eax
old instr: 0x40c9ff: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f042e0: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca03: mov dword ptr [rax+0x280], edx
    new instr:0x7faef3f042e4: mov dword ptr [rax+0x280], edx
old instr: 0x40ca09: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f042ea: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca0d: mov edx, dword ptr [rax+0x284]
    new instr:0x7faef3f042ee: mov edx, dword ptr [rax+0x284]
old instr: 0x40ca13: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f042f4: mov eax, dword ptr [rbp-0x14]
old instr: 0x40ca16: add edx, eax
    new instr:0x7faef3f042f7: add edx, eax
old instr: 0x40ca18: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f042f9: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca1c: mov dword ptr [rax+0x284], edx
    new instr:0x7faef3f042fd: mov dword ptr [rax+0x284], edx
old instr: 0x40ca22: pop rbx
    new instr:0x7faef3f04303: pop rbx
old instr: 0x40ca23: pop rbp
    new instr:0x7faef3f04304: pop rbp
old instr: 0x40ca24: ret 
    new instr:0x7faef3f04305: ret 
40c95d
old instr: 0x40c95d: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f04306: mov rax, qword ptr [rbp-0x10]
rtn name: bsW : 6
6
405ac7
old instr: 0x405ac7: push rbp
    new instr:0x7faef3f0430a: push rbp
old instr: 0x405ac8: mov rbp, rsp
    new instr:0x7faef3f0430b: mov rbp, rsp
old instr: 0x405acb: sub rsp, 0x20
    new instr:0x7faef3f0430e: sub rsp, 0x20
old instr: 0x405acf: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04312: mov qword ptr [rbp-0x18], rdi
old instr: 0x405ad3: mov byte ptr [rbp-0x1], 0x0
    new instr:0x7faef3f04316: mov byte ptr [rbp-0x1], 0x0
old instr: 0x405ad7: mov byte ptr [rbp-0x2], 0x0
    new instr:0x7faef3f0431a: mov byte ptr [rbp-0x2], 0x0
old instr: 0x405adb: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0431e: mov rax, qword ptr [rbp-0x18]
old instr: 0x405adf: mov rax, qword ptr [rax+0x30]
    new instr:0x7faef3f04322: mov rax, qword ptr [rax+0x30]
old instr: 0x405ae3: mov qword ptr [rbp-0x10], rax
    new instr:0x7faef3f04326: mov qword ptr [rbp-0x10], rax
in revert 
removing jump and inserting a dummy entry 
405aea
old instr: 0x405aea: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f0432a: mov rax, qword ptr [rbp-0x10]
old instr: 0x405aee: mov eax, dword ptr [rax+0xc]
    new instr:0x7faef3f0432e: mov eax, dword ptr [rax+0xc]
old instr: 0x405af1: cmp eax, 0x1
    new instr:0x7faef3f04331: cmp eax, 0x1
in revert 
    new instr:0x7faef3f04334: jz 0x7faef3f043cc
405b8c
old instr: 0x405b8c: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f0433a: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b90: mov eax, dword ptr [rax+0xc]
    new instr:0x7faef3f0433e: mov eax, dword ptr [rax+0xc]
old instr: 0x405b93: cmp eax, 0x2
    new instr:0x7faef3f04341: cmp eax, 0x2
old instr: 0x405b96: jnz 0x405ae9
    new instr:0x7faef3f04344: jnz 0x7faef3f04297
inserted instruction
405b9c
old instr: 0x405b9c: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f0434a: mov rax, qword ptr [rbp-0x10]
old instr: 0x405ba0: mov rdi, rax
    new instr:0x7faef3f0434e: mov rdi, rax
    new instr:0x7faef3f04351: sub rsp, 0x8
old instr: 0x40565c: push rbp
    new instr:0x7faef3f04355: push rbp
old instr: 0x40565d: mov rbp, rsp
    new instr:0x7faef3f04356: mov rbp, rsp
old instr: 0x405660: sub rsp, 0x28
    new instr:0x7faef3f04359: sub rsp, 0x28
old instr: 0x405664: mov qword ptr [rbp-0x28], rdi
    new instr:0x7faef3f0435d: mov qword ptr [rbp-0x28], rdi
old instr: 0x405668: mov byte ptr [rbp-0x1], 0x0
    new instr:0x7faef3f04361: mov byte ptr [rbp-0x1], 0x0
old instr: 0x40566c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04365: mov rax, qword ptr [rbp-0x28]
old instr: 0x405670: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f04369: mov eax, dword ptr [rax+0x8]
old instr: 0x405673: cmp eax, 0x2
    new instr:0x7faef3f0436c: cmp eax, 0x2
old instr: 0x405676: jnz 0x405821
    new instr:0x7faef3f0436f: jnz 0x7faef3f0451a
old instr: 0x40567c: jmp 0x40567f
    new instr:0x7faef3f04375: jmp 0x7faef3f04378
old instr: 0x40567e: nop
    new instr:0x7faef3f04377: nop
old instr: 0x40567f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04378: mov rax, qword ptr [rbp-0x28]
old instr: 0x405683: mov edx, dword ptr [rax+0x6c]
    new instr:0x7faef3f0437c: mov edx, dword ptr [rax+0x6c]
old instr: 0x405686: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0437f: mov rax, qword ptr [rbp-0x28]
old instr: 0x40568a: mov eax, dword ptr [rax+0x70]
    new instr:0x7faef3f04383: mov eax, dword ptr [rax+0x70]
old instr: 0x40568d: cmp edx, eax
    new instr:0x7faef3f04386: cmp edx, eax
old instr: 0x40568f: jnl 0x4059df
    new instr:0x7faef3f04388: jnl 0x7faef3f046d8
old instr: 0x405695: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0438e: mov rax, qword ptr [rbp-0x28]
old instr: 0x405699: mov rax, qword ptr [rax]
    new instr:0x7faef3f04392: mov rax, qword ptr [rax]
old instr: 0x40569c: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f04395: mov eax, dword ptr [rax+0x8]
old instr: 0x40569f: test eax, eax
    new instr:0x7faef3f04398: test eax, eax
old instr: 0x4056a1: jz 0x4059e2
    new instr:0x7faef3f0439a: jz 0x7faef3f046db
old instr: 0x4056a7: mov byte ptr [rbp-0x1], 0x1
    new instr:0x7faef3f043a0: mov byte ptr [rbp-0x1], 0x1
old instr: 0x4056ab: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f043a4: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056af: mov rax, qword ptr [rax]
    new instr:0x7faef3f043a8: mov rax, qword ptr [rax]
old instr: 0x4056b2: mov rax, qword ptr [rax]
    new instr:0x7faef3f043ab: mov rax, qword ptr [rax]
old instr: 0x4056b5: movzx eax, byte ptr [rax]
    new instr:0x7faef3f043ae: movzx eax, byte ptr [rax]
old instr: 0x4056b8: movzx eax, al
    new instr:0x7faef3f043b1: movzx eax, al
old instr: 0x4056bb: mov dword ptr [rbp-0x8], eax
    new instr:0x7faef3f043b4: mov dword ptr [rbp-0x8], eax
old instr: 0x4056be: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f043b7: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056c2: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f043bb: mov eax, dword ptr [rax+0x5c]
old instr: 0x4056c5: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7faef3f043be: cmp eax, dword ptr [rbp-0x8]
old instr: 0x4056c8: jz 0x40576d
    new instr:0x7faef3f043c1: jz 0x7faef3f04466
old instr: 0x4056ce: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f043c7: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056d2: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f043cb: mov eax, dword ptr [rax+0x60]
old instr: 0x4056d5: cmp eax, 0x1
    new instr:0x7faef3f043ce: cmp eax, 0x1
old instr: 0x4056d8: jnz 0x40576d
    new instr:0x7faef3f043d1: jnz 0x7faef3f04466
old instr: 0x4056de: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f043d7: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056e2: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f043db: mov eax, dword ptr [rax+0x5c]
old instr: 0x4056e5: mov byte ptr [rbp-0x9], al
    new instr:0x7faef3f043de: mov byte ptr [rbp-0x9], al
old instr: 0x4056e8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f043e1: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056ec: mov eax, dword ptr [rax+0x288]
    new instr:0x7faef3f043e5: mov eax, dword ptr [rax+0x288]
old instr: 0x4056f2: mov edx, eax
    new instr:0x7faef3f043eb: mov edx, eax
old instr: 0x4056f4: shl edx, 0x8
    new instr:0x7faef3f043ed: shl edx, 0x8
old instr: 0x4056f7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f043f0: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056fb: mov eax, dword ptr [rax+0x288]
    new instr:0x7faef3f043f4: mov eax, dword ptr [rax+0x288]
old instr: 0x405701: mov ecx, eax
    new instr:0x7faef3f043fa: mov ecx, eax
old instr: 0x405703: shr ecx, 0x18
    new instr:0x7faef3f043fc: shr ecx, 0x18
old instr: 0x405706: movzx eax, byte ptr [rbp-0x9]
    new instr:0x7faef3f043ff: movzx eax, byte ptr [rbp-0x9]
old instr: 0x40570a: xor eax, ecx
    new instr:0x7faef3f04403: xor eax, ecx
old instr: 0x40570c: mov eax, eax
    new instr:0x7faef3f04405: mov eax, eax
old instr: 0x40570e: mov eax, dword ptr [rax*4+0x61c6a0]
    new instr:0x7faef3f04407: mov eax, dword ptr [rax*4+0x61c6a0]
old instr: 0x405715: xor edx, eax
    new instr:0x7faef3f0440e: xor edx, eax
old instr: 0x405717: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04410: mov rax, qword ptr [rbp-0x28]
old instr: 0x40571b: mov dword ptr [rax+0x288], edx
    new instr:0x7faef3f04414: mov dword ptr [rax+0x288], edx
old instr: 0x405721: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0441a: mov rax, qword ptr [rbp-0x28]
old instr: 0x405725: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f0441e: mov eax, dword ptr [rax+0x5c]
old instr: 0x405728: mov rdx, qword ptr [rbp-0x28]
    new instr:0x7faef3f04421: mov rdx, qword ptr [rbp-0x28]
old instr: 0x40572c: mov eax, eax
    new instr:0x7faef3f04425: mov eax, eax
old instr: 0x40572e: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7faef3f04427: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x405736: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0442f: mov rax, qword ptr [rbp-0x28]
old instr: 0x40573a: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f04433: mov rdx, qword ptr [rax+0x40]
old instr: 0x40573e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04437: mov rax, qword ptr [rbp-0x28]
old instr: 0x405742: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f0443b: mov eax, dword ptr [rax+0x6c]
old instr: 0x405745: cdqe 
    new instr:0x7faef3f0443e: cdqe 
old instr: 0x405747: add rdx, rax
    new instr:0x7faef3f04440: add rdx, rax
old instr: 0x40574a: movzx eax, byte ptr [rbp-0x9]
    new instr:0x7faef3f04443: movzx eax, byte ptr [rbp-0x9]
old instr: 0x40574e: mov byte ptr [rdx], al
    new instr:0x7faef3f04447: mov byte ptr [rdx], al
old instr: 0x405750: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04449: mov rax, qword ptr [rbp-0x28]
old instr: 0x405754: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f0444d: mov eax, dword ptr [rax+0x6c]
old instr: 0x405757: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f04450: lea edx, ptr [rax+0x1]
old instr: 0x40575a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04453: mov rax, qword ptr [rbp-0x28]
old instr: 0x40575e: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f04457: mov dword ptr [rax+0x6c], edx
old instr: 0x405761: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0445a: mov rax, qword ptr [rbp-0x28]
old instr: 0x405765: mov edx, dword ptr [rbp-0x8]
    new instr:0x7faef3f0445e: mov edx, dword ptr [rbp-0x8]
old instr: 0x405768: mov dword ptr [rax+0x5c], edx
    new instr:0x7faef3f04461: mov dword ptr [rax+0x5c], edx
old instr: 0x40576b: jmp 0x4057c9
    new instr:0x7faef3f04464: jmp 0x7faef3f044c2
old instr: 0x40576d: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04466: mov rax, qword ptr [rbp-0x28]
old instr: 0x405771: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f0446a: mov eax, dword ptr [rax+0x5c]
old instr: 0x405774: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7faef3f0446d: cmp eax, dword ptr [rbp-0x8]
old instr: 0x405777: jnz 0x405787
    new instr:0x7faef3f04470: jnz 0x7faef3f04480
old instr: 0x405779: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04472: mov rax, qword ptr [rbp-0x28]
old instr: 0x40577d: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f04476: mov eax, dword ptr [rax+0x60]
old instr: 0x405780: cmp eax, 0xff
    new instr:0x7faef3f04479: cmp eax, 0xff
old instr: 0x405785: jnz 0x4057b8
    new instr:0x7faef3f0447e: jnz 0x7faef3f044b1
old instr: 0x405787: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04480: mov rax, qword ptr [rbp-0x28]
old instr: 0x40578b: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f04484: mov eax, dword ptr [rax+0x5c]
old instr: 0x40578e: cmp eax, 0xff
    new instr:0x7faef3f04487: cmp eax, 0xff
old instr: 0x405793: jnbe 0x4057a1
    new instr:0x7faef3f0448c: jnbe 0x7faef3f0449a
old instr: 0x405795: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0448e: mov rax, qword ptr [rbp-0x28]
old instr: 0x405799: mov rdi, rax
    new instr:0x7faef3f04492: mov rdi, rax
old instr: 0x40579c: call 0x405388
    new instr:0x7faef3f04495: call 0x7faef3f04081
old instr: 0x4057a1: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0449a: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057a5: mov edx, dword ptr [rbp-0x8]
    new instr:0x7faef3f0449e: mov edx, dword ptr [rbp-0x8]
old instr: 0x4057a8: mov dword ptr [rax+0x5c], edx
    new instr:0x7faef3f044a1: mov dword ptr [rax+0x5c], edx
old instr: 0x4057ab: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f044a4: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057af: mov dword ptr [rax+0x60], 0x1
    new instr:0x7faef3f044a8: mov dword ptr [rax+0x60], 0x1
old instr: 0x4057b6: jmp 0x4057c9
    new instr:0x7faef3f044af: jmp 0x7faef3f044c2
old instr: 0x4057b8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f044b1: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057bc: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f044b5: mov eax, dword ptr [rax+0x60]
old instr: 0x4057bf: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f044b8: lea edx, ptr [rax+0x1]
old instr: 0x4057c2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f044bb: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057c6: mov dword ptr [rax+0x60], edx
    new instr:0x7faef3f044bf: mov dword ptr [rax+0x60], edx
old instr: 0x4057c9: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f044c2: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057cd: mov rax, qword ptr [rax]
    new instr:0x7faef3f044c6: mov rax, qword ptr [rax]
old instr: 0x4057d0: mov rdx, qword ptr [rax]
    new instr:0x7faef3f044c9: mov rdx, qword ptr [rax]
old instr: 0x4057d3: add rdx, 0x1
    new instr:0x7faef3f044cc: add rdx, 0x1
old instr: 0x4057d7: mov qword ptr [rax], rdx
    new instr:0x7faef3f044d0: mov qword ptr [rax], rdx
old instr: 0x4057da: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f044d3: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057de: mov rax, qword ptr [rax]
    new instr:0x7faef3f044d7: mov rax, qword ptr [rax]
old instr: 0x4057e1: mov edx, dword ptr [rax+0x8]
    new instr:0x7faef3f044da: mov edx, dword ptr [rax+0x8]
old instr: 0x4057e4: sub edx, 0x1
    new instr:0x7faef3f044dd: sub edx, 0x1
old instr: 0x4057e7: mov dword ptr [rax+0x8], edx
    new instr:0x7faef3f044e0: mov dword ptr [rax+0x8], edx
old instr: 0x4057ea: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f044e3: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057ee: mov rax, qword ptr [rax]
    new instr:0x7faef3f044e7: mov rax, qword ptr [rax]
old instr: 0x4057f1: mov edx, dword ptr [rax+0xc]
    new instr:0x7faef3f044ea: mov edx, dword ptr [rax+0xc]
old instr: 0x4057f4: add edx, 0x1
    new instr:0x7faef3f044ed: add edx, 0x1
old instr: 0x4057f7: mov dword ptr [rax+0xc], edx
    new instr:0x7faef3f044f0: mov dword ptr [rax+0xc], edx
old instr: 0x4057fa: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f044f3: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057fe: mov rax, qword ptr [rax]
    new instr:0x7faef3f044f7: mov rax, qword ptr [rax]
old instr: 0x405801: mov eax, dword ptr [rax+0xc]
    new instr:0x7faef3f044fa: mov eax, dword ptr [rax+0xc]
old instr: 0x405804: test eax, eax
    new instr:0x7faef3f044fd: test eax, eax
old instr: 0x405806: jnz 0x40567e
    new instr:0x7faef3f044ff: jnz 0x7faef3f04377
old instr: 0x40580c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04505: mov rax, qword ptr [rbp-0x28]
old instr: 0x405810: mov rax, qword ptr [rax]
    new instr:0x7faef3f04509: mov rax, qword ptr [rax]
old instr: 0x405813: mov edx, dword ptr [rax+0x10]
    new instr:0x7faef3f0450c: mov edx, dword ptr [rax+0x10]
old instr: 0x405816: add edx, 0x1
    new instr:0x7faef3f0450f: add edx, 0x1
old instr: 0x405819: mov dword ptr [rax+0x10], edx
    new instr:0x7faef3f04512: mov dword ptr [rax+0x10], edx
old instr: 0x40581c: jmp 0x40567e
    new instr:0x7faef3f04515: jmp 0x7faef3f04377
old instr: 0x405821: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0451a: mov rax, qword ptr [rbp-0x28]
old instr: 0x405825: mov edx, dword ptr [rax+0x6c]
    new instr:0x7faef3f0451e: mov edx, dword ptr [rax+0x6c]
old instr: 0x405828: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04521: mov rax, qword ptr [rbp-0x28]
old instr: 0x40582c: mov eax, dword ptr [rax+0x70]
    new instr:0x7faef3f04525: mov eax, dword ptr [rax+0x70]
old instr: 0x40582f: cmp edx, eax
    new instr:0x7faef3f04528: cmp edx, eax
old instr: 0x405831: jnl 0x4059e5
    new instr:0x7faef3f0452a: jnl 0x7faef3f046de
old instr: 0x405837: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04530: mov rax, qword ptr [rbp-0x28]
old instr: 0x40583b: mov rax, qword ptr [rax]
    new instr:0x7faef3f04534: mov rax, qword ptr [rax]
old instr: 0x40583e: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f04537: mov eax, dword ptr [rax+0x8]
old instr: 0x405841: test eax, eax
    new instr:0x7faef3f0453a: test eax, eax
old instr: 0x405843: jz 0x4059e8
    new instr:0x7faef3f0453c: jz 0x7faef3f046e1
old instr: 0x405849: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04542: mov rax, qword ptr [rbp-0x28]
old instr: 0x40584d: mov eax, dword ptr [rax+0x10]
    new instr:0x7faef3f04546: mov eax, dword ptr [rax+0x10]
old instr: 0x405850: test eax, eax
    new instr:0x7faef3f04549: test eax, eax
old instr: 0x405852: jz 0x4059eb
    new instr:0x7faef3f0454b: jz 0x7faef3f046e4
old instr: 0x405858: mov byte ptr [rbp-0x1], 0x1
    new instr:0x7faef3f04551: mov byte ptr [rbp-0x1], 0x1
old instr: 0x40585c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04555: mov rax, qword ptr [rbp-0x28]
old instr: 0x405860: mov rax, qword ptr [rax]
    new instr:0x7faef3f04559: mov rax, qword ptr [rax]
old instr: 0x405863: mov rax, qword ptr [rax]
    new instr:0x7faef3f0455c: mov rax, qword ptr [rax]
old instr: 0x405866: movzx eax, byte ptr [rax]
    new instr:0x7faef3f0455f: movzx eax, byte ptr [rax]
old instr: 0x405869: movzx eax, al
    new instr:0x7faef3f04562: movzx eax, al
old instr: 0x40586c: mov dword ptr [rbp-0x10], eax
    new instr:0x7faef3f04565: mov dword ptr [rbp-0x10], eax
old instr: 0x40586f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04568: mov rax, qword ptr [rbp-0x28]
old instr: 0x405873: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f0456c: mov eax, dword ptr [rax+0x5c]
old instr: 0x405876: cmp eax, dword ptr [rbp-0x10]
    new instr:0x7faef3f0456f: cmp eax, dword ptr [rbp-0x10]
old instr: 0x405879: jz 0x40591e
    new instr:0x7faef3f04572: jz 0x7faef3f04617
old instr: 0x40587f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04578: mov rax, qword ptr [rbp-0x28]
old instr: 0x405883: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f0457c: mov eax, dword ptr [rax+0x60]
old instr: 0x405886: cmp eax, 0x1
    new instr:0x7faef3f0457f: cmp eax, 0x1
old instr: 0x405889: jnz 0x40591e
    new instr:0x7faef3f04582: jnz 0x7faef3f04617
old instr: 0x40588f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04588: mov rax, qword ptr [rbp-0x28]
old instr: 0x405893: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f0458c: mov eax, dword ptr [rax+0x5c]
old instr: 0x405896: mov byte ptr [rbp-0x11], al
    new instr:0x7faef3f0458f: mov byte ptr [rbp-0x11], al
old instr: 0x405899: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04592: mov rax, qword ptr [rbp-0x28]
old instr: 0x40589d: mov eax, dword ptr [rax+0x288]
    new instr:0x7faef3f04596: mov eax, dword ptr [rax+0x288]
old instr: 0x4058a3: mov edx, eax
    new instr:0x7faef3f0459c: mov edx, eax
old instr: 0x4058a5: shl edx, 0x8
    new instr:0x7faef3f0459e: shl edx, 0x8
old instr: 0x4058a8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f045a1: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058ac: mov eax, dword ptr [rax+0x288]
    new instr:0x7faef3f045a5: mov eax, dword ptr [rax+0x288]
old instr: 0x4058b2: mov ecx, eax
    new instr:0x7faef3f045ab: mov ecx, eax
old instr: 0x4058b4: shr ecx, 0x18
    new instr:0x7faef3f045ad: shr ecx, 0x18
old instr: 0x4058b7: movzx eax, byte ptr [rbp-0x11]
    new instr:0x7faef3f045b0: movzx eax, byte ptr [rbp-0x11]
old instr: 0x4058bb: xor eax, ecx
    new instr:0x7faef3f045b4: xor eax, ecx
old instr: 0x4058bd: mov eax, eax
    new instr:0x7faef3f045b6: mov eax, eax
old instr: 0x4058bf: mov eax, dword ptr [rax*4+0x61c6a0]
    new instr:0x7faef3f045b8: mov eax, dword ptr [rax*4+0x61c6a0]
old instr: 0x4058c6: xor edx, eax
    new instr:0x7faef3f045bf: xor edx, eax
old instr: 0x4058c8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f045c1: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058cc: mov dword ptr [rax+0x288], edx
    new instr:0x7faef3f045c5: mov dword ptr [rax+0x288], edx
old instr: 0x4058d2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f045cb: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058d6: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f045cf: mov eax, dword ptr [rax+0x5c]
old instr: 0x4058d9: mov rdx, qword ptr [rbp-0x28]
    new instr:0x7faef3f045d2: mov rdx, qword ptr [rbp-0x28]
old instr: 0x4058dd: mov eax, eax
    new instr:0x7faef3f045d6: mov eax, eax
old instr: 0x4058df: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7faef3f045d8: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x4058e7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f045e0: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058eb: mov rdx, qword ptr [rax+0x40]
    new instr:0x7faef3f045e4: mov rdx, qword ptr [rax+0x40]
old instr: 0x4058ef: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f045e8: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058f3: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f045ec: mov eax, dword ptr [rax+0x6c]
old instr: 0x4058f6: cdqe 
    new instr:0x7faef3f045ef: cdqe 
old instr: 0x4058f8: add rdx, rax
    new instr:0x7faef3f045f1: add rdx, rax
old instr: 0x4058fb: movzx eax, byte ptr [rbp-0x11]
    new instr:0x7faef3f045f4: movzx eax, byte ptr [rbp-0x11]
old instr: 0x4058ff: mov byte ptr [rdx], al
    new instr:0x7faef3f045f8: mov byte ptr [rdx], al
old instr: 0x405901: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f045fa: mov rax, qword ptr [rbp-0x28]
old instr: 0x405905: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f045fe: mov eax, dword ptr [rax+0x6c]
old instr: 0x405908: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f04601: lea edx, ptr [rax+0x1]
old instr: 0x40590b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04604: mov rax, qword ptr [rbp-0x28]
old instr: 0x40590f: mov dword ptr [rax+0x6c], edx
    new instr:0x7faef3f04608: mov dword ptr [rax+0x6c], edx
old instr: 0x405912: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0460b: mov rax, qword ptr [rbp-0x28]
old instr: 0x405916: mov edx, dword ptr [rbp-0x10]
    new instr:0x7faef3f0460f: mov edx, dword ptr [rbp-0x10]
old instr: 0x405919: mov dword ptr [rax+0x5c], edx
    new instr:0x7faef3f04612: mov dword ptr [rax+0x5c], edx
old instr: 0x40591c: jmp 0x40597a
    new instr:0x7faef3f04615: jmp 0x7faef3f04673
old instr: 0x40591e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04617: mov rax, qword ptr [rbp-0x28]
old instr: 0x405922: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f0461b: mov eax, dword ptr [rax+0x5c]
old instr: 0x405925: cmp eax, dword ptr [rbp-0x10]
    new instr:0x7faef3f0461e: cmp eax, dword ptr [rbp-0x10]
old instr: 0x405928: jnz 0x405938
    new instr:0x7faef3f04621: jnz 0x7faef3f04631
old instr: 0x40592a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04623: mov rax, qword ptr [rbp-0x28]
old instr: 0x40592e: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f04627: mov eax, dword ptr [rax+0x60]
old instr: 0x405931: cmp eax, 0xff
    new instr:0x7faef3f0462a: cmp eax, 0xff
old instr: 0x405936: jnz 0x405969
    new instr:0x7faef3f0462f: jnz 0x7faef3f04662
old instr: 0x405938: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04631: mov rax, qword ptr [rbp-0x28]
old instr: 0x40593c: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f04635: mov eax, dword ptr [rax+0x5c]
old instr: 0x40593f: cmp eax, 0xff
    new instr:0x7faef3f04638: cmp eax, 0xff
old instr: 0x405944: jnbe 0x405952
    new instr:0x7faef3f0463d: jnbe 0x7faef3f0464b
old instr: 0x405946: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0463f: mov rax, qword ptr [rbp-0x28]
old instr: 0x40594a: mov rdi, rax
    new instr:0x7faef3f04643: mov rdi, rax
old instr: 0x40594d: call 0x405388
    new instr:0x7faef3f04646: call 0x7faef3f04081
old instr: 0x405952: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0464b: mov rax, qword ptr [rbp-0x28]
old instr: 0x405956: mov edx, dword ptr [rbp-0x10]
    new instr:0x7faef3f0464f: mov edx, dword ptr [rbp-0x10]
old instr: 0x405959: mov dword ptr [rax+0x5c], edx
    new instr:0x7faef3f04652: mov dword ptr [rax+0x5c], edx
old instr: 0x40595c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04655: mov rax, qword ptr [rbp-0x28]
old instr: 0x405960: mov dword ptr [rax+0x60], 0x1
    new instr:0x7faef3f04659: mov dword ptr [rax+0x60], 0x1
old instr: 0x405967: jmp 0x40597a
    new instr:0x7faef3f04660: jmp 0x7faef3f04673
old instr: 0x405969: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04662: mov rax, qword ptr [rbp-0x28]
old instr: 0x40596d: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f04666: mov eax, dword ptr [rax+0x60]
old instr: 0x405970: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f04669: lea edx, ptr [rax+0x1]
old instr: 0x405973: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f0466c: mov rax, qword ptr [rbp-0x28]
old instr: 0x405977: mov dword ptr [rax+0x60], edx
    new instr:0x7faef3f04670: mov dword ptr [rax+0x60], edx
old instr: 0x40597a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04673: mov rax, qword ptr [rbp-0x28]
old instr: 0x40597e: mov rax, qword ptr [rax]
    new instr:0x7faef3f04677: mov rax, qword ptr [rax]
old instr: 0x405981: mov rdx, qword ptr [rax]
    new instr:0x7faef3f0467a: mov rdx, qword ptr [rax]
old instr: 0x405984: add rdx, 0x1
    new instr:0x7faef3f0467d: add rdx, 0x1
old instr: 0x405988: mov qword ptr [rax], rdx
    new instr:0x7faef3f04681: mov qword ptr [rax], rdx
old instr: 0x40598b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04684: mov rax, qword ptr [rbp-0x28]
old instr: 0x40598f: mov rax, qword ptr [rax]
    new instr:0x7faef3f04688: mov rax, qword ptr [rax]
old instr: 0x405992: mov edx, dword ptr [rax+0x8]
    new instr:0x7faef3f0468b: mov edx, dword ptr [rax+0x8]
old instr: 0x405995: sub edx, 0x1
    new instr:0x7faef3f0468e: sub edx, 0x1
old instr: 0x405998: mov dword ptr [rax+0x8], edx
    new instr:0x7faef3f04691: mov dword ptr [rax+0x8], edx
old instr: 0x40599b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04694: mov rax, qword ptr [rbp-0x28]
old instr: 0x40599f: mov rax, qword ptr [rax]
    new instr:0x7faef3f04698: mov rax, qword ptr [rax]
old instr: 0x4059a2: mov edx, dword ptr [rax+0xc]
    new instr:0x7faef3f0469b: mov edx, dword ptr [rax+0xc]
old instr: 0x4059a5: add edx, 0x1
    new instr:0x7faef3f0469e: add edx, 0x1
old instr: 0x4059a8: mov dword ptr [rax+0xc], edx
    new instr:0x7faef3f046a1: mov dword ptr [rax+0xc], edx
old instr: 0x4059ab: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f046a4: mov rax, qword ptr [rbp-0x28]
old instr: 0x4059af: mov rax, qword ptr [rax]
    new instr:0x7faef3f046a8: mov rax, qword ptr [rax]
old instr: 0x4059b2: mov eax, dword ptr [rax+0xc]
    new instr:0x7faef3f046ab: mov eax, dword ptr [rax+0xc]
old instr: 0x4059b5: test eax, eax
    new instr:0x7faef3f046ae: test eax, eax
old instr: 0x4059b7: jnz 0x4059c9
    new instr:0x7faef3f046b0: jnz 0x7faef3f046c2
old instr: 0x4059b9: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f046b2: mov rax, qword ptr [rbp-0x28]
old instr: 0x4059bd: mov rax, qword ptr [rax]
    new instr:0x7faef3f046b6: mov rax, qword ptr [rax]
old instr: 0x4059c0: mov edx, dword ptr [rax+0x10]
    new instr:0x7faef3f046b9: mov edx, dword ptr [rax+0x10]
old instr: 0x4059c3: add edx, 0x1
    new instr:0x7faef3f046bc: add edx, 0x1
old instr: 0x4059c6: mov dword ptr [rax+0x10], edx
    new instr:0x7faef3f046bf: mov dword ptr [rax+0x10], edx
old instr: 0x4059c9: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f046c2: mov rax, qword ptr [rbp-0x28]
old instr: 0x4059cd: mov eax, dword ptr [rax+0x10]
    new instr:0x7faef3f046c6: mov eax, dword ptr [rax+0x10]
old instr: 0x4059d0: lea edx, ptr [rax-0x1]
    new instr:0x7faef3f046c9: lea edx, ptr [rax-0x1]
old instr: 0x4059d3: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f046cc: mov rax, qword ptr [rbp-0x28]
old instr: 0x4059d7: mov dword ptr [rax+0x10], edx
    new instr:0x7faef3f046d0: mov dword ptr [rax+0x10], edx
old instr: 0x4059da: jmp 0x405821
    new instr:0x7faef3f046d3: jmp 0x7faef3f0451a
old instr: 0x4059df: nop
    new instr:0x7faef3f046d8: nop
old instr: 0x4059e0: jmp 0x4059ec
    new instr:0x7faef3f046d9: jmp 0x7faef3f046e5
old instr: 0x4059e2: nop
    new instr:0x7faef3f046db: nop
old instr: 0x4059e3: jmp 0x4059ec
    new instr:0x7faef3f046dc: jmp 0x7faef3f046e5
old instr: 0x4059e5: nop
    new instr:0x7faef3f046de: nop
old instr: 0x4059e6: jmp 0x4059ec
    new instr:0x7faef3f046df: jmp 0x7faef3f046e5
old instr: 0x4059e8: nop
    new instr:0x7faef3f046e1: nop
old instr: 0x4059e9: jmp 0x4059ec
    new instr:0x7faef3f046e2: jmp 0x7faef3f046e5
old instr: 0x4059eb: nop
    new instr:0x7faef3f046e4: nop
old instr: 0x4059ec: movzx eax, byte ptr [rbp-0x1]
    new instr:0x7faef3f046e5: movzx eax, byte ptr [rbp-0x1]
old instr: 0x4059f0: leave 
    new instr:0x7faef3f046e9: leave 
old instr: 0x4059f1: ret 
    new instr:0x7faef3f046ea: add rsp, 0x8
old instr: 0x405ba3: call 0xfffffffffffffab9
    new instr:0x7faef3f046ee: call 0x7faef3f041a7
inserted instruction
405afa
old instr: 0x405afa: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f046f3: mov rax, qword ptr [rbp-0x10]
old instr: 0x405afe: mov rdi, rax
    new instr:0x7faef3f046f7: mov rdi, rax
old instr: 0x405b01: call 0x4059f2
    new instr:0x7faef3f046fa: call 0x7faef3f045eb
inserted instruction
405ae9
old instr: 0x405ae9: nop
    new instr:0x7faef3f046ff: nop
rtn name: handle_compress : 7
18
405c64
old instr: 0x405c64: push rbp
    new instr:0x7faef3f04700: push rbp
old instr: 0x405c65: mov rbp, rsp
    new instr:0x7faef3f04701: mov rbp, rsp
old instr: 0x405c68: sub rsp, 0x20
    new instr:0x7faef3f04704: sub rsp, 0x20
old instr: 0x405c6c: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04708: mov qword ptr [rbp-0x18], rdi
old instr: 0x405c70: mov dword ptr [rbp-0x1c], esi
    new instr:0x7faef3f0470c: mov dword ptr [rbp-0x1c], esi
old instr: 0x405c73: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7faef3f0470f: cmp qword ptr [rbp-0x18], 0x0
in revert 
    new instr:0x7faef3f04714: jz 0x7faef3f04720
405c84
old instr: 0x405c84: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04716: mov rax, qword ptr [rbp-0x18]
old instr: 0x405c88: mov rax, qword ptr [rax+0x30]
    new instr:0x7faef3f0471a: mov rax, qword ptr [rax+0x30]
old instr: 0x405c8c: mov qword ptr [rbp-0x8], rax
    new instr:0x7faef3f0471e: mov qword ptr [rbp-0x8], rax
old instr: 0x405c90: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04722: cmp qword ptr [rbp-0x8], 0x0
in revert 
    new instr:0x7faef3f04727: jz 0x7faef3f04733
405ca1
old instr: 0x405ca1: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04729: mov rax, qword ptr [rbp-0x8]
old instr: 0x405ca5: mov rax, qword ptr [rax]
    new instr:0x7faef3f0472d: mov rax, qword ptr [rax]
old instr: 0x405ca8: cmp rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04730: cmp rax, qword ptr [rbp-0x18]
in revert 
    new instr:0x7faef3f04734: jnz 0x7faef3f04740
405cb8
old instr: 0x405cb8: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04736: mov rax, qword ptr [rbp-0x8]
old instr: 0x405cbc: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0473a: mov eax, dword ptr [rax+0x8]
old instr: 0x405cbf: cmp eax, 0x2
    new instr:0x7faef3f0473d: cmp eax, 0x2
in revert 
    new instr:0x7faef3f04740: jnz 0x7faef3f04772
405cf4
old instr: 0x405cf4: cmp dword ptr [rbp-0x1c], 0x0
    new instr:0x7faef3f04742: cmp dword ptr [rbp-0x1c], 0x0
old instr: 0x405cf8: jnz 0x405d20
    new instr:0x7faef3f04746: jnz 0x7faef3f0476e
inserted instruction
405cfa
old instr: 0x405cfa: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04748: mov rax, qword ptr [rbp-0x18]
old instr: 0x405cfe: mov rdi, rax
    new instr:0x7faef3f0474c: mov rdi, rax
old instr: 0x405d01: call 0x405ac7
    new instr:0x7faef3f0474f: call 0x7faef3f04515
inserted instruction
405cc4
old instr: 0x405cc4: cmp eax, 0x2
    new instr:0x7faef3f04754: cmp eax, 0x2
in revert 
    new instr:0x7faef3f04757: jle 0x7faef3f04763
405cd3
old instr: 0x405cd3: cmp eax, 0x3
    new instr:0x7faef3f04759: cmp eax, 0x3
old instr: 0x405cd6: jz 0x405d72
    new instr:0x7faef3f0475c: jz 0x7faef3f047f8
inserted instruction
405cdc
old instr: 0x405cdc: cmp eax, 0x4
    new instr:0x7faef3f04762: cmp eax, 0x4
in revert 
    new instr:0x7faef3f04765: jnz 0x7faef3f04882
405dfc
old instr: 0x405dfc: cmp dword ptr [rbp-0x1c], 0x2
    new instr:0x7faef3f0476b: cmp dword ptr [rbp-0x1c], 0x2
in revert 
    new instr:0x7faef3f0476f: jnz 0x7faef3f0477b
405e0c
old instr: 0x405e0c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04771: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e10: mov edx, dword ptr [rax+0x10]
    new instr:0x7faef3f04775: mov edx, dword ptr [rax+0x10]
old instr: 0x405e13: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04778: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e17: mov rax, qword ptr [rax]
    new instr:0x7faef3f0477c: mov rax, qword ptr [rax]
old instr: 0x405e1a: mov eax, dword ptr [rax+0x8]
    new instr:0x7faef3f0477f: mov eax, dword ptr [rax+0x8]
old instr: 0x405e1d: cmp edx, eax
    new instr:0x7faef3f04782: cmp edx, eax
in revert 
    new instr:0x7faef3f04784: jnz 0x7faef3f0478d
405e28
old instr: 0x405e28: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04786: mov rax, qword ptr [rbp-0x18]
old instr: 0x405e2c: mov rdi, rax
    new instr:0x7faef3f0478a: mov rdi, rax
old instr: 0x405e2f: call 0x405ac7
    new instr:0x7faef3f0478d: call 0x7faef3f04425
inserted instruction
405d20
old instr: 0x405d20: cmp dword ptr [rbp-0x1c], 0x1
    new instr:0x7faef3f04792: cmp dword ptr [rbp-0x1c], 0x1
in revert 
    new instr:0x7faef3f04796: jz 0x7faef3f047b6
405d44
old instr: 0x405d44: cmp dword ptr [rbp-0x1c], 0x2
    new instr:0x7faef3f04798: cmp dword ptr [rbp-0x1c], 0x2
old instr: 0x405d48: jnz 0x405d68
    new instr:0x7faef3f0479c: jnz 0x7faef3f047bc
inserted instruction
405d4a
old instr: 0x405d4a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0479e: mov rax, qword ptr [rbp-0x18]
old instr: 0x405d4e: mov edx, dword ptr [rax+0x8]
    new instr:0x7faef3f047a2: mov edx, dword ptr [rax+0x8]
old instr: 0x405d51: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f047a5: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d55: mov dword ptr [rax+0x10], edx
    new instr:0x7faef3f047a9: mov dword ptr [rax+0x10], edx
old instr: 0x405d58: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f047ac: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d5c: mov dword ptr [rax+0x8], 0x4
    new instr:0x7faef3f047b0: mov dword ptr [rax+0x8], 0x4
old instr: 0x405d63: jmp 0x405cb8
    new instr:0x7faef3f047b7: jmp 0x7faef3f0470c
inserted instruction
405cae
old instr: 0x405cae: mov eax, 0xfffffffe
    new instr:0x7faef3f047bc: mov eax, 0xfffffffe
old instr: 0x405cb3: jmp 0x405e8f
    new instr:0x7faef3f047c1: jmp 0x7faef3f0499d
inserted instruction
405cc9
old instr: 0x405cc9: cmp eax, 0x1
    new instr:0x7faef3f047c6: cmp eax, 0x1
old instr: 0x405ccc: jz 0x405cea
    new instr:0x7faef3f047c9: jz 0x7faef3f047e7
inserted instruction
add jump to 
    new instr:0x7faef3f047cb: jmp 0x7faef430a49e
405e21
old instr: 0x405e21: mov eax, 0xffffffff
    new instr:0x7faef3f047d0: mov eax, 0xffffffff
old instr: 0x405e26: jmp 0x405e8f
    new instr:0x7faef3f047d5: jmp 0x7faef3f0483e
inserted instruction
405d26
old instr: 0x405d26: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f047d7: mov rax, qword ptr [rbp-0x18]
old instr: 0x405d2a: mov edx, dword ptr [rax+0x8]
    new instr:0x7faef3f047db: mov edx, dword ptr [rax+0x8]
old instr: 0x405d2d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f047de: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d31: mov dword ptr [rax+0x10], edx
    new instr:0x7faef3f047e2: mov dword ptr [rax+0x10], edx
old instr: 0x405d34: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f047e5: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d38: mov dword ptr [rax+0x8], 0x3
    new instr:0x7faef3f047e9: mov dword ptr [rax+0x8], 0x3
old instr: 0x405d3f: jmp 0x405cb8
    new instr:0x7faef3f047f0: jmp 0x7faef3f04769
inserted instruction
405e8f
old instr: 0x405e8f: leave 
    new instr:0x7faef3f047f5: leave 
old instr: 0x405e90: ret 
    new instr:0x7faef3f047f6: ret 
405c7a
old instr: 0x405c7a: mov eax, 0xfffffffe
    new instr:0x7faef3f047f7: mov eax, 0xfffffffe
old instr: 0x405c7f: jmp 0x405e8f
    new instr:0x7faef3f047fc: jmp 0x7faef3f04a0c
inserted instruction
405e02
old instr: 0x405e02: mov eax, 0xffffffff
    new instr:0x7faef3f04801: mov eax, 0xffffffff
old instr: 0x405e07: jmp 0x405e8f
    new instr:0x7faef3f04806: jmp 0x7faef3f0488e
inserted instruction
405c97
old instr: 0x405c97: mov eax, 0xfffffffe
    new instr:0x7faef3f0480b: mov eax, 0xfffffffe
old instr: 0x405c9c: jmp 0x405e8f
    new instr:0x7faef3f04810: jmp 0x7faef3f04a03
inserted instruction
405ce5
old instr: 0x405ce5: jmp 0x405e8a
    new instr:0x7faef3f04815: jmp 0x7faef3f049ba
inserted instruction
rtn name: BZ2_bzCompress : 8
1
4016ce
old instr: 0x4016ce: push rbp
    new instr:0x7faef3f0481a: push rbp
old instr: 0x4016cf: mov rbp, rsp
    new instr:0x7faef3f0481b: mov rbp, rsp
old instr: 0x4016d2: sub rsp, 0x1450
    new instr:0x7faef3f0481e: sub rsp, 0x1450
old instr: 0x4016d9: mov qword ptr [rbp-0x1428], rdi
    new instr:0x7faef3f04825: mov qword ptr [rbp-0x1428], rdi
old instr: 0x4016e0: mov qword ptr [rbp-0x1430], rsi
    new instr:0x7faef3f0482c: mov qword ptr [rbp-0x1430], rsi
old instr: 0x4016e7: mov qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04833: mov qword ptr [rbp-0x8], 0x0
old instr: 0x4016ef: mov rax, qword ptr [rbp-0x1428]
    new instr:0x7faef3f0483b: mov rax, qword ptr [rbp-0x1428]
old instr: 0x4016f6: mov rdi, rax
    new instr:0x7faef3f04842: mov rdi, rax
old instr: 0x4016f9: call 0x4010f0
    new instr:0x7faef3f04845: call 0x7faef3f0423c
inserted instruction
rtn name: compressStream : 9
4
404f65
old instr: 0x404f65: push rbp
    new instr:0x7faef3f0484a: push rbp
old instr: 0x404f66: mov rbp, rsp
    new instr:0x7faef3f0484b: mov rbp, rsp
old instr: 0x404f69: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f0484e: mov qword ptr [rbp-0x18], rdi
old instr: 0x404f6d: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04852: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f71: mov dword ptr [rax+0x6c], 0x0
    new instr:0x7faef3f04856: mov dword ptr [rax+0x6c], 0x0
old instr: 0x404f78: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f0485d: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f7c: mov dword ptr [rax+0x74], 0x0
    new instr:0x7faef3f04861: mov dword ptr [rax+0x74], 0x0
old instr: 0x404f83: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04868: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f87: mov dword ptr [rax+0x78], 0x0
    new instr:0x7faef3f0486c: mov dword ptr [rax+0x78], 0x0
old instr: 0x404f8e: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04873: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f92: mov dword ptr [rax+0x288], 0xffffffff
    new instr:0x7faef3f04877: mov dword ptr [rax+0x288], 0xffffffff
old instr: 0x404f9c: mov dword ptr [rbp-0x4], 0x0
    new instr:0x7faef3f04881: mov dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
404fba
old instr: 0x404fba: cmp dword ptr [rbp-0x4], 0xff
    new instr:0x7faef3f04888: cmp dword ptr [rbp-0x4], 0xff
in revert 
    new instr:0x7faef3f0488f: jnle 0x7faef3f04873
404fa5
old instr: 0x404fa5: mov rdx, qword ptr [rbp-0x18]
    new instr:0x7faef3f04891: mov rdx, qword ptr [rbp-0x18]
404fc3
old instr: 0x404fc3: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04895: mov rax, qword ptr [rbp-0x18]
old instr: 0x404fc7: mov eax, dword ptr [rax+0x294]
    new instr:0x7faef3f04899: mov eax, dword ptr [rax+0x294]
old instr: 0x404fcd: lea edx, ptr [rax+0x1]
    new instr:0x7faef3f0489f: lea edx, ptr [rax+0x1]
old instr: 0x404fd0: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f048a2: mov rax, qword ptr [rbp-0x18]
old instr: 0x404fd4: mov dword ptr [rax+0x294], edx
    new instr:0x7faef3f048a6: mov dword ptr [rax+0x294], edx
old instr: 0x404fda: pop rbp
    new instr:0x7faef3f048ac: pop rbp
old instr: 0x404fdb: ret 
    new instr:0x7faef3f048ad: ret 
rtn name: prepare_new_block : 10
d
41216d
old instr: 0x41216d: push rbp
    new instr:0x7faef3f048ae: push rbp
old instr: 0x41216e: mov rbp, rsp
    new instr:0x7faef3f048af: mov rbp, rsp
old instr: 0x412171: sub rsp, 0x10
    new instr:0x7faef3f048b2: sub rsp, 0x10
old instr: 0x412175: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f048b6: mov qword ptr [rbp-0x8], rdi
old instr: 0x412179: mov eax, esi
    new instr:0x7faef3f048ba: mov eax, esi
old instr: 0x41217b: mov byte ptr [rbp-0xc], al
    new instr:0x7faef3f048bc: mov byte ptr [rbp-0xc], al
old instr: 0x41217e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f048bf: mov rax, qword ptr [rbp-0x8]
old instr: 0x412182: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f048c3: mov eax, dword ptr [rax+0x6c]
old instr: 0x412185: test eax, eax
    new instr:0x7faef3f048c6: test eax, eax
old instr: 0x412187: jle 0x412256
    new instr:0x7faef3f048c8: jle 0x7faef3f04997
inserted instruction
41218d
old instr: 0x41218d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f048ce: mov rax, qword ptr [rbp-0x8]
old instr: 0x412191: mov eax, dword ptr [rax+0x288]
    new instr:0x7faef3f048d2: mov eax, dword ptr [rax+0x288]
old instr: 0x412197: mov edx, eax
    new instr:0x7faef3f048d8: mov edx, eax
old instr: 0x412199: not edx
    new instr:0x7faef3f048da: not edx
old instr: 0x41219b: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f048dc: mov rax, qword ptr [rbp-0x8]
old instr: 0x41219f: mov dword ptr [rax+0x288], edx
    new instr:0x7faef3f048e0: mov dword ptr [rax+0x288], edx
old instr: 0x4121a5: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f048e6: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121a9: mov eax, dword ptr [rax+0x28c]
    new instr:0x7faef3f048ea: mov eax, dword ptr [rax+0x28c]
old instr: 0x4121af: mov edx, eax
    new instr:0x7faef3f048f0: mov edx, eax
old instr: 0x4121b1: rol edx, 0x1
    new instr:0x7faef3f048f2: rol edx, 0x1
old instr: 0x4121b3: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f048f4: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121b7: mov dword ptr [rax+0x28c], edx
    new instr:0x7faef3f048f8: mov dword ptr [rax+0x28c], edx
old instr: 0x4121bd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f048fe: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121c1: mov edx, dword ptr [rax+0x28c]
    new instr:0x7faef3f04902: mov edx, dword ptr [rax+0x28c]
old instr: 0x4121c7: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04908: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121cb: mov eax, dword ptr [rax+0x288]
    new instr:0x7faef3f0490c: mov eax, dword ptr [rax+0x288]
old instr: 0x4121d1: xor edx, eax
    new instr:0x7faef3f04912: xor edx, eax
old instr: 0x4121d3: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04914: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121d7: mov dword ptr [rax+0x28c], edx
    new instr:0x7faef3f04918: mov dword ptr [rax+0x28c], edx
old instr: 0x4121dd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f0491e: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121e1: mov eax, dword ptr [rax+0x294]
    new instr:0x7faef3f04922: mov eax, dword ptr [rax+0x294]
old instr: 0x4121e7: cmp eax, 0x1
    new instr:0x7faef3f04928: cmp eax, 0x1
old instr: 0x4121ea: jle 0x4121f7
    new instr:0x7faef3f0492b: jle 0x7faef3f04938
inserted instruction
4121ec
old instr: 0x4121ec: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f0492d: mov rax, qword ptr [rbp-0x8]
4121f7
old instr: 0x4121f7: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04931: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121fb: mov eax, dword ptr [rax+0x290]
    new instr:0x7faef3f04935: mov eax, dword ptr [rax+0x290]
old instr: 0x412201: cmp eax, 0x1
    new instr:0x7faef3f0493b: cmp eax, 0x1
in revert 
    new instr:0x7faef3f0493e: jnle 0x7faef3f04984
41224a
old instr: 0x41224a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04940: mov rax, qword ptr [rbp-0x8]
old instr: 0x41224e: mov rdi, rax
    new instr:0x7faef3f04944: mov rdi, rax
old instr: 0x412251: call 0x40c679
    new instr:0x7faef3f04947: call 0x7faef3efed6f
inserted instruction
412256
old instr: 0x412256: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f0494c: mov rax, qword ptr [rbp-0x8]
old instr: 0x41225a: mov rdx, qword ptr [rax+0x20]
    new instr:0x7faef3f04950: mov rdx, qword ptr [rax+0x20]
old instr: 0x41225e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04954: mov rax, qword ptr [rbp-0x8]
old instr: 0x412262: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f04958: mov eax, dword ptr [rax+0x6c]
old instr: 0x412265: cdqe 
    new instr:0x7faef3f0495b: cdqe 
old instr: 0x412267: add rdx, rax
    new instr:0x7faef3f0495d: add rdx, rax
old instr: 0x41226a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04960: mov rax, qword ptr [rbp-0x8]
old instr: 0x41226e: mov qword ptr [rax+0x50], rdx
    new instr:0x7faef3f04964: mov qword ptr [rax+0x50], rdx
old instr: 0x412272: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04968: mov rax, qword ptr [rbp-0x8]
old instr: 0x412276: mov eax, dword ptr [rax+0x294]
    new instr:0x7faef3f0496c: mov eax, dword ptr [rax+0x294]
old instr: 0x41227c: cmp eax, 0x1
    new instr:0x7faef3f04972: cmp eax, 0x1
in revert 
    new instr:0x7faef3f04975: jz 0x7faef3f049d4
4122de
old instr: 0x4122de: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04977: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122e2: mov eax, dword ptr [rax+0x6c]
    new instr:0x7faef3f0497b: mov eax, dword ptr [rax+0x6c]
old instr: 0x4122e5: test eax, eax
    new instr:0x7faef3f0497e: test eax, eax
old instr: 0x4122e7: jle 0x4123b3
    new instr:0x7faef3f04980: jle 0x7faef3f04a4c
inserted instruction
4122ed
old instr: 0x4122ed: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04986: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122f1: mov esi, 0x31
    new instr:0x7faef3f0498a: mov esi, 0x31
old instr: 0x4122f6: mov rdi, rax
    new instr:0x7faef3f0498f: mov rdi, rax
old instr: 0x4122f9: call 0x40ca9a
    new instr:0x7faef3f04992: call 0x7faef3eff133
inserted instruction
412281
old instr: 0x412281: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04997: mov rax, qword ptr [rbp-0x8]
old instr: 0x412285: mov rdi, rax
    new instr:0x7faef3f0499b: mov rdi, rax
old instr: 0x412288: call 0x40c8a8
    new instr:0x7faef3f0499e: call 0x7faef3efefbe
inserted instruction
412206
old instr: 0x412206: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f049a3: mov rax, qword ptr [rbp-0x8]
old instr: 0x41220a: mov edi, dword ptr [rax+0x6c]
    new instr:0x7faef3f049a7: mov edi, dword ptr [rax+0x6c]
old instr: 0x41220d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f049aa: mov rax, qword ptr [rbp-0x8]
old instr: 0x412211: mov esi, dword ptr [rax+0x28c]
    new instr:0x7faef3f049ae: mov esi, dword ptr [rax+0x28c]
old instr: 0x412217: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f049b4: mov rax, qword ptr [rbp-0x8]
old instr: 0x41221b: mov ecx, dword ptr [rax+0x288]
    new instr:0x7faef3f049b8: mov ecx, dword ptr [rax+0x288]
old instr: 0x412221: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f049be: mov rax, qword ptr [rbp-0x8]
old instr: 0x412225: mov edx, dword ptr [rax+0x294]
    new instr:0x7faef3f049c2: mov edx, dword ptr [rax+0x294]
old instr: 0x41222b: mov rax, qword ptr [rip+0x20b07e]
    new instr:0x7faef3f049c8: mov rax, qword ptr [rip+0x20b07e]
old instr: 0x412232: mov r9d, edi
    new instr:0x7faef3f049cf: mov r9d, edi
old instr: 0x412235: mov r8d, esi
    new instr:0x7faef3f049d2: mov r8d, esi
old instr: 0x412238: mov esi, 0x41ad30
    new instr:0x7faef3f049d5: mov esi, 0x41ad30
old instr: 0x41223d: mov rdi, rax
    new instr:0x7faef3f049da: mov rdi, rax
old instr: 0x412240: mov eax, 0x0
    new instr:0x7faef3f049dd: mov eax, 0x0
old instr: 0x412245: call 0x4011f0
    new instr:0x7faef3f049e2: call 0x7faef3ef398d
inserted instruction
4123b3
old instr: 0x4123b3: cmp byte ptr [rbp-0xc], 0x0
    new instr:0x7faef3f049e7: cmp byte ptr [rbp-0xc], 0x0
in revert 
    new instr:0x7faef3f049eb: jnz 0x7faef3f04aad
412479
old instr: 0x412479: leave 
    new instr:0x7faef3f049f1: leave 
old instr: 0x41247a: ret 
    new instr:0x7faef3f049f2: ret 
4123bd
old instr: 0x4123bd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f049f3: mov rax, qword ptr [rbp-0x8]
old instr: 0x4123c1: mov esi, 0x17
    new instr:0x7faef3f049f7: mov esi, 0x17
old instr: 0x4123c6: mov rdi, rax
    new instr:0x7faef3f049fc: mov rdi, rax
old instr: 0x4123c9: call 0x40ca9a
    new instr:0x7faef3f049ff: call 0x7faef3eff0d0
inserted instruction
rtn name: BZ2_compressBlock : 11
1
40ca9a
old instr: 0x40ca9a: push rbp
    new instr:0x7faef3f04a04: push rbp
old instr: 0x40ca9b: mov rbp, rsp
    new instr:0x7faef3f04a05: mov rbp, rsp
old instr: 0x40ca9e: sub rsp, 0x10
    new instr:0x7faef3f04a08: sub rsp, 0x10
old instr: 0x40caa2: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04a0c: mov qword ptr [rbp-0x8], rdi
old instr: 0x40caa6: mov eax, esi
    new instr:0x7faef3f04a10: mov eax, esi
old instr: 0x40caa8: mov byte ptr [rbp-0xc], al
    new instr:0x7faef3f04a12: mov byte ptr [rbp-0xc], al
old instr: 0x40caab: movzx edx, byte ptr [rbp-0xc]
    new instr:0x7faef3f04a15: movzx edx, byte ptr [rbp-0xc]
old instr: 0x40caaf: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04a19: mov rax, qword ptr [rbp-0x8]
old instr: 0x40cab3: mov esi, 0x8
    new instr:0x7faef3f04a1d: mov esi, 0x8
old instr: 0x40cab8: mov rdi, rax
    new instr:0x7faef3f04a22: mov rdi, rax
old instr: 0x40cabb: call 0x40c94c
    new instr:0x7faef3f04a25: call 0x7faef3f048b6
inserted instruction
rtn name: bsPutUChar : 12
1
40ca25
old instr: 0x40ca25: push rbp
    new instr:0x7faef3f04a2a: push rbp
old instr: 0x40ca26: mov rbp, rsp
    new instr:0x7faef3f04a2b: mov rbp, rsp
old instr: 0x40ca29: sub rsp, 0x10
    new instr:0x7faef3f04a2e: sub rsp, 0x10
old instr: 0x40ca2d: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04a32: mov qword ptr [rbp-0x8], rdi
old instr: 0x40ca31: mov dword ptr [rbp-0xc], esi
    new instr:0x7faef3f04a36: mov dword ptr [rbp-0xc], esi
old instr: 0x40ca34: mov eax, dword ptr [rbp-0xc]
    new instr:0x7faef3f04a39: mov eax, dword ptr [rbp-0xc]
old instr: 0x40ca37: mov edx, eax
    new instr:0x7faef3f04a3c: mov edx, eax
old instr: 0x40ca39: shr edx, 0x18
    new instr:0x7faef3f04a3e: shr edx, 0x18
old instr: 0x40ca3c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04a41: mov rax, qword ptr [rbp-0x8]
old instr: 0x40ca40: mov esi, 0x8
    new instr:0x7faef3f04a45: mov esi, 0x8
old instr: 0x40ca45: mov rdi, rax
    new instr:0x7faef3f04a4a: mov rdi, rax
old instr: 0x40ca48: call 0x40c94c
    new instr:0x7faef3f04a4d: call 0x7faef3f04951
inserted instruction
rtn name: bsPutUInt32 : 13
7
408127
old instr: 0x408127: push rbp
    new instr:0x7faef3f04a52: push rbp
old instr: 0x408128: mov rbp, rsp
    new instr:0x7faef3f04a53: mov rbp, rsp
old instr: 0x40812b: sub rsp, 0x50
    new instr:0x7faef3f04a56: sub rsp, 0x50
old instr: 0x40812f: mov qword ptr [rbp-0x28], rdi
    new instr:0x7faef3f04a5a: mov qword ptr [rbp-0x28], rdi
old instr: 0x408133: mov qword ptr [rbp-0x30], rsi
    new instr:0x7faef3f04a5e: mov qword ptr [rbp-0x30], rsi
old instr: 0x408137: mov dword ptr [rbp-0x34], edx
    new instr:0x7faef3f04a62: mov dword ptr [rbp-0x34], edx
old instr: 0x40813a: mov qword ptr [rbp-0x40], rcx
    new instr:0x7faef3f04a65: mov qword ptr [rbp-0x40], rcx
old instr: 0x40813e: mov qword ptr [rbp-0x48], r8
    new instr:0x7faef3f04a69: mov qword ptr [rbp-0x48], r8
old instr: 0x408142: mov qword ptr [rbp-0x50], r9
    new instr:0x7faef3f04a6d: mov qword ptr [rbp-0x50], r9
old instr: 0x408146: mov rax, qword ptr [rbp-0x30]
    new instr:0x7faef3f04a71: mov rax, qword ptr [rbp-0x30]
old instr: 0x40814a: mov qword ptr [rbp-0x8], rax
    new instr:0x7faef3f04a75: mov qword ptr [rbp-0x8], rax
old instr: 0x40814e: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04a79: cmp qword ptr [rbp-0x8], 0x0
in revert 
    new instr:0x7faef3f04a7e: jz 0x7faef3f04aaf
408184
old instr: 0x408184: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04a80: mov rax, qword ptr [rbp-0x8]
old instr: 0x408188: movzx eax, byte ptr [rax+0x1394]
    new instr:0x7faef3f04a84: movzx eax, byte ptr [rax+0x1394]
old instr: 0x40818f: test al, al
    new instr:0x7faef3f04a8b: test al, al
in revert 
    new instr:0x7faef3f04a8d: jz 0x7faef3f04abe
4081c2
old instr: 0x4081c2: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04a8f: mov rax, qword ptr [rbp-0x8]
old instr: 0x4081c6: mov rax, qword ptr [rax]
    new instr:0x7faef3f04a93: mov rax, qword ptr [rax]
old instr: 0x4081c9: mov rdi, rax
    new instr:0x7faef3f04a96: mov rdi, rax
old instr: 0x4081cc: call 0x4010f0
    new instr:0x7faef3f04a99: call 0x7faef3efd9bd
inserted instruction
408155
old instr: 0x408155: cmp qword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f04a9e: cmp qword ptr [rbp-0x28], 0x0
old instr: 0x40815a: jz 0x408166
    new instr:0x7faef3f04aa3: jz 0x7faef3f04aaf
inserted instruction
add jump to 
    new instr:0x7faef3f04aa5: jmp 0x7faef430cc06
408193
old instr: 0x408193: cmp qword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f04aaa: cmp qword ptr [rbp-0x28], 0x0
old instr: 0x408198: jz 0x4081a4
    new instr:0x7faef3f04aaf: jz 0x7faef3f04abb
inserted instruction
add jump to 
    new instr:0x7faef3f04ab1: jmp 0x7faef430cc50
40815c
old instr: 0x40815c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04ab6: mov rax, qword ptr [rbp-0x28]
old instr: 0x408160: mov dword ptr [rax], 0x0
    new instr:0x7faef3f04aba: mov dword ptr [rax], 0x0
old instr: 0x408166: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04ac0: cmp qword ptr [rbp-0x8], 0x0
old instr: 0x40816b: jz 0x408490
    new instr:0x7faef3f04ac5: jz 0x7faef3f04dea
inserted instruction
add jump to 
    new instr:0x7faef3f04acb: jmp 0x7faef430cc41
40819a
old instr: 0x40819a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04ad0: mov rax, qword ptr [rbp-0x28]
old instr: 0x40819e: mov dword ptr [rax], 0xffffffff
    new instr:0x7faef3f04ad4: mov dword ptr [rax], 0xffffffff
old instr: 0x4081a4: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04ada: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04adf: jmp 0x7faef430cc93
rtn name: BZ2_bzWriteClose64 : 14
1f
402b73
old instr: 0x402b73: push rbp
    new instr:0x7faef3f04ae4: push rbp
old instr: 0x402b74: mov rbp, rsp
    new instr:0x7faef3f04ae5: mov rbp, rsp
old instr: 0x402b77: sub rsp, 0xc0
    new instr:0x7faef3f04ae8: sub rsp, 0xc0
old instr: 0x402b7e: mov qword ptr [rbp-0xb8], rdi
    new instr:0x7faef3f04aef: mov qword ptr [rbp-0xb8], rdi
old instr: 0x402b85: mov byte ptr [rip+0x21b860], 0x0
    new instr:0x7faef3f04af6: mov byte ptr [rip+0x21b860], 0x0
old instr: 0x402b8c: cmp qword ptr [rbp-0xb8], 0x0
    new instr:0x7faef3f04afd: cmp qword ptr [rbp-0xb8], 0x0
in revert 
    new instr:0x7faef3f04b05: jz 0x7faef3f04b1c
402bab
old instr: 0x402bab: mov eax, dword ptr [rip+0x21aff7]
    new instr:0x7faef3f04b07: mov eax, dword ptr [rip+0x21aff7]
old instr: 0x402bb1: cmp eax, 0x2
    new instr:0x7faef3f04b0d: cmp eax, 0x2
old instr: 0x402bb4: jz 0x402c53
    new instr:0x7faef3f04b10: jz 0x7faef3f04baf
inserted instruction
402bba
old instr: 0x402bba: cmp eax, 0x3
    new instr:0x7faef3f04b16: cmp eax, 0x3
in revert 
    new instr:0x7faef3f04b19: jnz 0x7faef3f04b47
402beb
old instr: 0x402beb: mov rax, qword ptr [rbp-0xb8]
    new instr:0x7faef3f04b1b: mov rax, qword ptr [rbp-0xb8]
old instr: 0x402bf2: mov rsi, rax
    new instr:0x7faef3f04b22: mov rsi, rax
old instr: 0x402bf5: mov edi, 0x61dfe0
    new instr:0x7faef3f04b25: mov edi, 0x61dfe0
old instr: 0x402bfa: call 0x4027f1
    new instr:0x7faef3f04b2a: call 0x7faef3f04721
inserted instruction
402b96
old instr: 0x402b96: mov eax, dword ptr [rip+0x21b00c]
    new instr:0x7faef3f04b2f: mov eax, dword ptr [rip+0x21b00c]
old instr: 0x402b9c: cmp eax, 0x1
    new instr:0x7faef3f04b35: cmp eax, 0x1
old instr: 0x402b9f: jz 0x402bab
    new instr:0x7faef3f04b38: jz 0x7faef3f04b44
inserted instruction
add jump to 
    new instr:0x7faef3f04b3a: jmp 0x7faef43076e0
402bbf
old instr: 0x402bbf: cmp eax, 0x1
    new instr:0x7faef3f04b3f: cmp eax, 0x1
old instr: 0x402bc2: jnz 0x402c77
    new instr:0x7faef3f04b42: jnz 0x7faef3f04bf7
inserted instruction
add jump to 
    new instr:0x7faef3f04b48: jmp 0x7faef4307715
402ba1
old instr: 0x402ba1: mov edi, 0x4195b5
    new instr:0x7faef3f04b4d: mov edi, 0x4195b5
old instr: 0x402ba6: call 0x402557
    new instr:0x7faef3f04b52: call 0x7faef3f04503
inserted instruction
402c77
old instr: 0x402c77: mov eax, dword ptr [rip+0x21af2b]
    new instr:0x7faef3f04b57: mov eax, dword ptr [rip+0x21af2b]
old instr: 0x402c7d: cmp eax, 0x1
    new instr:0x7faef3f04b5d: cmp eax, 0x1
old instr: 0x402c80: jz 0x402ccf
    new instr:0x7faef3f04b60: jz 0x7faef3f04baf
inserted instruction
402c82
old instr: 0x402c82: mov edi, 0x61dfe0
    new instr:0x7faef3f04b62: mov edi, 0x61dfe0
old instr: 0x402c87: call 0x402a74
    new instr:0x7faef3f04b67: call 0x7faef3f04954
inserted instruction
402ccf
old instr: 0x402ccf: mov eax, dword ptr [rip+0x21aed3]
    new instr:0x7faef3f04b6c: mov eax, dword ptr [rip+0x21aed3]
old instr: 0x402cd5: cmp eax, 0x1
    new instr:0x7faef3f04b72: cmp eax, 0x1
old instr: 0x402cd8: jz 0x402d30
    new instr:0x7faef3f04b75: jz 0x7faef3f04bcd
inserted instruction
402cda
old instr: 0x402cda: mov edi, 0x61dfe0
    new instr:0x7faef3f04b77: mov edi, 0x61dfe0
old instr: 0x402cdf: call 0x402875
    new instr:0x7faef3f04b7c: call 0x7faef3f04712
inserted instruction
402d30
old instr: 0x402d30: mov dword ptr [rbp-0x14], 0x0
    new instr:0x7faef3f04b81: mov dword ptr [rbp-0x14], 0x0
in revert 
removing jump and inserting a dummy entry 
402daa
old instr: 0x402daa: cmp dword ptr [rbp-0x14], 0x3
    new instr:0x7faef3f04b88: cmp dword ptr [rbp-0x14], 0x3
in revert 
    new instr:0x7faef3f04b8c: jnle 0x7faef3f04b17
402d39
old instr: 0x402d39: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f04b8e: mov eax, dword ptr [rbp-0x14]
old instr: 0x402d3c: cdqe 
    new instr:0x7faef3f04b91: cdqe 
old instr: 0x402d3e: mov rax, qword ptr [rax*8+0x61c5a0]
    new instr:0x7faef3f04b93: mov rax, qword ptr [rax*8+0x61c5a0]
old instr: 0x402d46: mov rsi, rax
    new instr:0x7faef3f04b9b: mov rsi, rax
old instr: 0x402d49: mov edi, 0x61dfe0
    new instr:0x7faef3f04b9e: mov edi, 0x61dfe0
old instr: 0x402d4e: call 0x402a83
    new instr:0x7faef3f04ba3: call 0x7faef3f048d8
inserted instruction
402db0
old instr: 0x402db0: mov eax, dword ptr [rip+0x21adf2]
    new instr:0x7faef3f04ba8: mov eax, dword ptr [rip+0x21adf2]
old instr: 0x402db6: cmp eax, 0x3
    new instr:0x7faef3f04bae: cmp eax, 0x3
in revert 
    new instr:0x7faef3f04bb1: jnz 0x7faef3f04bbe
402dc6
old instr: 0x402dc6: lea rax, ptr [rbp-0xb0]
    new instr:0x7faef3f04bb3: lea rax, ptr [rbp-0xb0]
old instr: 0x402dcd: mov rsi, rax
    new instr:0x7faef3f04bba: mov rsi, rax
old instr: 0x402dd0: mov edi, 0x61dfe0
    new instr:0x7faef3f04bbd: mov edi, 0x61dfe0
old instr: 0x402dd5: call 0x418610
    new instr:0x7faef3f04bc2: call 0x7faef3f1a3fd
inserted instruction
402dbb
old instr: 0x402dbb: mov eax, dword ptr [rip+0x21ade7]
    new instr:0x7faef3f04bc7: mov eax, dword ptr [rip+0x21ade7]
old instr: 0x402dc1: cmp eax, 0x2
    new instr:0x7faef3f04bcd: cmp eax, 0x2
in revert 
    new instr:0x7faef3f04bd0: jz 0x7faef3f04c2c
402e20
old instr: 0x402e20: mov eax, dword ptr [rip+0x21ad82]
    new instr:0x7faef3f04bd2: mov eax, dword ptr [rip+0x21ad82]
old instr: 0x402e26: cmp eax, 0x3
    new instr:0x7faef3f04bd8: cmp eax, 0x3
old instr: 0x402e29: jnz 0x402e83
    new instr:0x7faef3f04bdb: jnz 0x7faef3f04c35
inserted instruction
402e2b
old instr: 0x402e2b: movzx eax, byte ptr [rip+0x21b5b9]
    new instr:0x7faef3f04bdd: movzx eax, byte ptr [rip+0x21b5b9]
old instr: 0x402e32: test al, al
    new instr:0x7faef3f04be4: test al, al
in revert 
    new instr:0x7faef3f04be6: jz 0x7faef3f04c35
402e83
old instr: 0x402e83: mov eax, dword ptr [rip+0x21ad1f]
    new instr:0x7faef3f04be8: mov eax, dword ptr [rip+0x21ad1f]
old instr: 0x402e89: cmp eax, 0x3
    new instr:0x7faef3f04bee: cmp eax, 0x3
old instr: 0x402e8c: jnz 0x402ee7
    new instr:0x7faef3f04bf1: jnz 0x7faef3f04c4c
inserted instruction
402e8e
old instr: 0x402e8e: mov edi, 0x61dbc0
    new instr:0x7faef3f04bf3: mov edi, 0x61dbc0
old instr: 0x402e93: call 0x402875
    new instr:0x7faef3f04bf8: call 0x7faef3f045da
inserted instruction
402ee7
old instr: 0x402ee7: mov eax, dword ptr [rip+0x21acbb]
    new instr:0x7faef3f04bfd: mov eax, dword ptr [rip+0x21acbb]
old instr: 0x402eed: cmp eax, 0x3
    new instr:0x7faef3f04c03: cmp eax, 0x3
old instr: 0x402ef0: jnz 0x402f5c
    new instr:0x7faef3f04c06: jnz 0x7faef3f04c72
inserted instruction
402ef2
old instr: 0x402ef2: movzx eax, byte ptr [rip+0x21b4f2]
    new instr:0x7faef3f04c08: movzx eax, byte ptr [rip+0x21b4f2]
old instr: 0x402ef9: test al, al
    new instr:0x7faef3f04c0f: test al, al
in revert 
    new instr:0x7faef3f04c11: jz 0x7faef3f04c72
402f5c
old instr: 0x402f5c: mov eax, dword ptr [rip+0x21ac46]
    new instr:0x7faef3f04c13: mov eax, dword ptr [rip+0x21ac46]
old instr: 0x402f62: cmp eax, 0x3
    new instr:0x7faef3f04c19: cmp eax, 0x3
old instr: 0x402f65: jnz 0x402f71
    new instr:0x7faef3f04c1c: jnz 0x7faef3f04c28
inserted instruction
402f67
old instr: 0x402f67: mov edi, 0x61dfe0
    new instr:0x7faef3f04c1e: mov edi, 0x61dfe0
old instr: 0x402f6c: call 0x4029c3
    new instr:0x7faef3f04c23: call 0x7faef3f0467a
inserted instruction
402efd
old instr: 0x402efd: mov edi, 0x61dfe0
    new instr:0x7faef3f04c28: mov edi, 0x61dfe0
old instr: 0x402f02: call 0x40297c
    new instr:0x7faef3f04c2d: call 0x7faef3f046a7
inserted instruction
402f71
old instr: 0x402f71: mov eax, dword ptr [rip+0x21ac31]
    new instr:0x7faef3f04c32: mov eax, dword ptr [rip+0x21ac31]
old instr: 0x402f77: cmp eax, 0x2
    new instr:0x7faef3f04c38: cmp eax, 0x2
old instr: 0x402f7a: jz 0x40301c
    new instr:0x7faef3f04c3b: jz 0x7faef3f04cdd
inserted instruction
402f80
old instr: 0x402f80: cmp eax, 0x3
    new instr:0x7faef3f04c41: cmp eax, 0x3
in revert 
    new instr:0x7faef3f04c44: jnz 0x7faef3f04dd1
403110
old instr: 0x403110: mov esi, 0x419598
    new instr:0x7faef3f04c4a: mov esi, 0x419598
old instr: 0x403115: mov edi, 0x61dfe0
    new instr:0x7faef3f04c4f: mov edi, 0x61dfe0
old instr: 0x40311a: call 0x401290
    new instr:0x7faef3f04c54: call 0x7faef3f02dca
inserted instruction
402e36
old instr: 0x402e36: mov edi, 0x61dfe0
    new instr:0x7faef3f04c59: mov edi, 0x61dfe0
old instr: 0x402e3b: call 0x402921
    new instr:0x7faef3f04c5e: call 0x7faef3f04744
inserted instruction
402f89
old instr: 0x402f89: cmp eax, 0x1
    new instr:0x7faef3f04c63: cmp eax, 0x1
    new instr:0x7faef3f04c66: jmp 0x7faef4307bfd
rtn name: compress : 15
6
403eb0
old instr: 0x403eb0: push rbp
    new instr:0x7faef3f04c6b: push rbp
old instr: 0x403eb1: mov rbp, rsp
    new instr:0x7faef3f04c6c: mov rbp, rsp
old instr: 0x403eb4: sub rsp, 0x20
    new instr:0x7faef3f04c6f: sub rsp, 0x20
old instr: 0x403eb8: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04c73: mov qword ptr [rbp-0x18], rdi
old instr: 0x403ebc: mov qword ptr [rbp-0x20], rsi
    new instr:0x7faef3f04c77: mov qword ptr [rbp-0x20], rsi
old instr: 0x403ec0: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7faef3f04c7b: cmp qword ptr [rbp-0x18], 0x0
old instr: 0x403ec5: jnz 0x403f09
    new instr:0x7faef3f04c80: jnz 0x7faef3f04cc4
inserted instruction
403ec7
old instr: 0x403ec7: call 0x403e7d
    new instr:0x7faef3f04c82: call 0x7faef3f04c38
inserted instruction
403f09
old instr: 0x403f09: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04c87: mov rax, qword ptr [rbp-0x18]
old instr: 0x403f0d: mov qword ptr [rbp-0x8], rax
    new instr:0x7faef3f04c8b: mov qword ptr [rbp-0x8], rax
in revert 
removing jump and inserting a dummy entry 
403f1f
old instr: 0x403f1f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04c8f: mov rax, qword ptr [rbp-0x8]
old instr: 0x403f23: mov rax, qword ptr [rax+0x8]
    new instr:0x7faef3f04c93: mov rax, qword ptr [rax+0x8]
old instr: 0x403f27: test rax, rax
    new instr:0x7faef3f04c97: test rax, rax
in revert 
    new instr:0x7faef3f04c9a: jz 0x7faef3f04c83
403f13
old instr: 0x403f13: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04c9c: mov rax, qword ptr [rbp-0x8]
403f2c
old instr: 0x403f2c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04ca0: mov rax, qword ptr [rbp-0x8]
old instr: 0x403f30: mov rax, qword ptr [rax+0x8]
    new instr:0x7faef3f04ca4: mov rax, qword ptr [rax+0x8]
old instr: 0x403f34: mov rdx, qword ptr [rbp-0x20]
    new instr:0x7faef3f04ca8: mov rdx, qword ptr [rbp-0x20]
old instr: 0x403f38: mov rsi, rdx
    new instr:0x7faef3f04cac: mov rsi, rdx
old instr: 0x403f3b: mov rdi, rax
    new instr:0x7faef3f04caf: mov rdi, rax
old instr: 0x403f3e: call 0x403eb0
    new instr:0x7faef3f04cb2: call 0x7faef3f04c24
inserted instruction
rtn name: snocString : 16
1
402a83
old instr: 0x402a83: push rbp
    new instr:0x7faef3f04cb7: push rbp
old instr: 0x402a84: mov rbp, rsp
    new instr:0x7faef3f04cb8: mov rbp, rsp
old instr: 0x402a87: sub rsp, 0x20
    new instr:0x7faef3f04cbb: sub rsp, 0x20
old instr: 0x402a8b: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04cbf: mov qword ptr [rbp-0x18], rdi
old instr: 0x402a8f: mov qword ptr [rbp-0x20], rsi
    new instr:0x7faef3f04cc3: mov qword ptr [rbp-0x20], rsi
old instr: 0x402a93: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04cc7: mov rax, qword ptr [rbp-0x18]
old instr: 0x402a97: mov rdi, rax
    new instr:0x7faef3f04ccb: mov rdi, rax
old instr: 0x402a9a: call 0x401150
    new instr:0x7faef3f04cce: call 0x7faef3f03384
inserted instruction
rtn name: hasSuffix : 17
1
4027f1
old instr: 0x4027f1: push rbp
    new instr:0x7faef3f04cd3: push rbp
old instr: 0x4027f2: mov rbp, rsp
    new instr:0x7faef3f04cd4: mov rbp, rsp
old instr: 0x4027f5: sub rsp, 0x10
    new instr:0x7faef3f04cd7: sub rsp, 0x10
old instr: 0x4027f9: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04cdb: mov qword ptr [rbp-0x8], rdi
old instr: 0x4027fd: mov qword ptr [rbp-0x10], rsi
    new instr:0x7faef3f04cdf: mov qword ptr [rbp-0x10], rsi
old instr: 0x402801: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f04ce3: mov rax, qword ptr [rbp-0x10]
old instr: 0x402805: mov rdi, rax
    new instr:0x7faef3f04ce7: mov rdi, rax
old instr: 0x402808: call 0x401150
    new instr:0x7faef3f04cea: call 0x7faef3f03632
inserted instruction
rtn name: copyFileName : 18
1
403e4f
old instr: 0x403e4f: push rbp
    new instr:0x7faef3f04cef: push rbp
old instr: 0x403e50: mov rbp, rsp
    new instr:0x7faef3f04cf0: mov rbp, rsp
old instr: 0x403e53: sub rsp, 0x20
    new instr:0x7faef3f04cf3: sub rsp, 0x20
old instr: 0x403e57: mov dword ptr [rbp-0x14], edi
    new instr:0x7faef3f04cf7: mov dword ptr [rbp-0x14], edi
old instr: 0x403e5a: mov eax, dword ptr [rbp-0x14]
    new instr:0x7faef3f04cfa: mov eax, dword ptr [rbp-0x14]
old instr: 0x403e5d: cdqe 
    new instr:0x7faef3f04cfd: cdqe 
old instr: 0x403e5f: mov rdi, rax
    new instr:0x7faef3f04cff: mov rdi, rax
old instr: 0x403e62: call 0x401220
    new instr:0x7faef3f04d02: call 0x7faef3f020c0
inserted instruction
rtn name: myMalloc : 19
d
407bfa
old instr: 0x407bfa: push rbp
    new instr:0x7faef3f04d07: push rbp
old instr: 0x407bfb: mov rbp, rsp
    new instr:0x7faef3f04d08: mov rbp, rsp
old instr: 0x407bfe: sub rsp, 0x30
    new instr:0x7faef3f04d0b: sub rsp, 0x30
old instr: 0x407c02: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04d0f: mov qword ptr [rbp-0x18], rdi
old instr: 0x407c06: mov qword ptr [rbp-0x20], rsi
    new instr:0x7faef3f04d13: mov qword ptr [rbp-0x20], rsi
old instr: 0x407c0a: mov dword ptr [rbp-0x24], edx
    new instr:0x7faef3f04d17: mov dword ptr [rbp-0x24], edx
old instr: 0x407c0d: mov dword ptr [rbp-0x28], ecx
    new instr:0x7faef3f04d1a: mov dword ptr [rbp-0x28], ecx
old instr: 0x407c10: mov dword ptr [rbp-0x2c], r8d
    new instr:0x7faef3f04d1d: mov dword ptr [rbp-0x2c], r8d
old instr: 0x407c14: mov qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04d21: mov qword ptr [rbp-0x8], 0x0
old instr: 0x407c1c: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7faef3f04d29: cmp qword ptr [rbp-0x18], 0x0
old instr: 0x407c21: jz 0x407c2d
    new instr:0x7faef3f04d2e: jz 0x7faef3f04d3a
inserted instruction
407c23
old instr: 0x407c23: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04d30: mov rax, qword ptr [rbp-0x18]
old instr: 0x407c27: mov dword ptr [rax], 0x0
    new instr:0x7faef3f04d34: mov dword ptr [rax], 0x0
old instr: 0x407c2d: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04d3a: cmp qword ptr [rbp-0x8], 0x0
in revert 
    new instr:0x7faef3f04d3f: jnz 0x7faef3f04d4f
407c42
old instr: 0x407c42: cmp qword ptr [rbp-0x20], 0x0
    new instr:0x7faef3f04d41: cmp qword ptr [rbp-0x20], 0x0
old instr: 0x407c47: jz 0x407c70
    new instr:0x7faef3f04d46: jz 0x7faef3f04d6f
inserted instruction
407c49
old instr: 0x407c49: cmp dword ptr [rbp-0x24], 0x0
    new instr:0x7faef3f04d48: cmp dword ptr [rbp-0x24], 0x0
old instr: 0x407c4d: jle 0x407c70
    new instr:0x7faef3f04d4c: jle 0x7faef3f04d6f
inserted instruction
407c4f
old instr: 0x407c4f: cmp dword ptr [rbp-0x24], 0x9
    new instr:0x7faef3f04d4e: cmp dword ptr [rbp-0x24], 0x9
old instr: 0x407c53: jnle 0x407c70
    new instr:0x7faef3f04d52: jnle 0x7faef3f04d6f
inserted instruction
407c55
old instr: 0x407c55: cmp dword ptr [rbp-0x2c], 0x0
    new instr:0x7faef3f04d54: cmp dword ptr [rbp-0x2c], 0x0
old instr: 0x407c59: js 0x407c70
    new instr:0x7faef3f04d58: js 0x7faef3f04d6f
inserted instruction
407c5b
old instr: 0x407c5b: cmp dword ptr [rbp-0x2c], 0xfa
    new instr:0x7faef3f04d5a: cmp dword ptr [rbp-0x2c], 0xfa
old instr: 0x407c62: jnle 0x407c70
    new instr:0x7faef3f04d61: jnle 0x7faef3f04d6f
inserted instruction
407c64
old instr: 0x407c64: cmp dword ptr [rbp-0x28], 0x0
    new instr:0x7faef3f04d63: cmp dword ptr [rbp-0x28], 0x0
old instr: 0x407c68: js 0x407c70
    new instr:0x7faef3f04d67: js 0x7faef3f04d6f
inserted instruction
407c6a
old instr: 0x407c6a: cmp dword ptr [rbp-0x28], 0x4
    new instr:0x7faef3f04d69: cmp dword ptr [rbp-0x28], 0x4
in revert 
    new instr:0x7faef3f04d6d: jnle 0x7faef3f04d9f
407ca0
old instr: 0x407ca0: mov rax, qword ptr [rbp-0x20]
    new instr:0x7faef3f04d6f: mov rax, qword ptr [rbp-0x20]
old instr: 0x407ca4: mov rdi, rax
    new instr:0x7faef3f04d73: mov rdi, rax
old instr: 0x407ca7: call 0x4010f0
    new instr:0x7faef3f04d76: call 0x7faef3efe1bf
inserted instruction
407c34
old instr: 0x407c34: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04d7b: mov rax, qword ptr [rbp-0x8]
407c70
old instr: 0x407c70: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7faef3f04d7f: cmp qword ptr [rbp-0x18], 0x0
old instr: 0x407c75: jz 0x407c81
    new instr:0x7faef3f04d84: jz 0x7faef3f04d90
inserted instruction
407c77
old instr: 0x407c77: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04d86: mov rax, qword ptr [rbp-0x18]
old instr: 0x407c7b: mov dword ptr [rax], 0xfffffffe
    new instr:0x7faef3f04d8a: mov dword ptr [rax], 0xfffffffe
old instr: 0x407c81: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04d90: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7faef3f04d95: jmp 0x7faef430ca22
rtn name: BZ2_bzWriteOpen : 20
4
40c8ce
old instr: 0x40c8ce: push rbp
    new instr:0x7faef3f04d9a: push rbp
old instr: 0x40c8cf: mov rbp, rsp
    new instr:0x7faef3f04d9b: mov rbp, rsp
old instr: 0x40c8d2: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04d9e: mov qword ptr [rbp-0x8], rdi
in revert 
removing jump and inserting a dummy entry 
40c93c
old instr: 0x40c93c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04da2: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c940: mov eax, dword ptr [rax+0x284]
    new instr:0x7faef3f04da6: mov eax, dword ptr [rax+0x284]
old instr: 0x40c946: test eax, eax
    new instr:0x7faef3f04dac: test eax, eax
in revert 
    new instr:0x7faef3f04dae: jle 0x7faef3f04d3e
40c8d8
old instr: 0x40c8d8: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04db0: mov rax, qword ptr [rbp-0x8]
40c94a
old instr: 0x40c94a: pop rbp
    new instr:0x7faef3f04db4: pop rbp
old instr: 0x40c94b: ret 
    new instr:0x7faef3f04db5: ret 
rtn name: bsFinishWrite : 21
1
404f13
old instr: 0x404f13: push rbp
    new instr:0x7faef3f04db6: push rbp
old instr: 0x404f14: mov rbp, rsp
    new instr:0x7faef3f04db7: mov rbp, rsp
old instr: 0x404f17: sub rsp, 0x20
    new instr:0x7faef3f04dba: sub rsp, 0x20
old instr: 0x404f1b: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04dbe: mov qword ptr [rbp-0x18], rdi
old instr: 0x404f1f: mov dword ptr [rbp-0x1c], esi
    new instr:0x7faef3f04dc2: mov dword ptr [rbp-0x1c], esi
old instr: 0x404f22: mov dword ptr [rbp-0x20], edx
    new instr:0x7faef3f04dc5: mov dword ptr [rbp-0x20], edx
old instr: 0x404f25: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7faef3f04dc8: mov eax, dword ptr [rbp-0x1c]
old instr: 0x404f28: imul eax, dword ptr [rbp-0x20]
    new instr:0x7faef3f04dcb: imul eax, dword ptr [rbp-0x20]
old instr: 0x404f2c: cdqe 
    new instr:0x7faef3f04dcf: cdqe 
old instr: 0x404f2e: mov rdi, rax
    new instr:0x7faef3f04dd1: mov rdi, rax
old instr: 0x404f31: call 0x401220
    new instr:0x7faef3f04dd4: call 0x7faef3f010c3
inserted instruction
rtn name: default_bzalloc : 22
4
404ffc
old instr: 0x404ffc: push rbp
    new instr:0x7faef3f04dd9: push rbp
old instr: 0x404ffd: mov rbp, rsp
    new instr:0x7faef3f04dda: mov rbp, rsp
old instr: 0x405000: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04ddd: mov qword ptr [rbp-0x8], rdi
old instr: 0x405004: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04de1: mov rax, qword ptr [rbp-0x8]
old instr: 0x405008: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f04de5: mov eax, dword ptr [rax+0x5c]
old instr: 0x40500b: cmp eax, 0xff
    new instr:0x7faef3f04de8: cmp eax, 0xff
in revert 
    new instr:0x7faef3f04ded: jbe 0x7faef3f04e01
405024
old instr: 0x405024: mov eax, 0x1
    new instr:0x7faef3f04def: mov eax, 0x1
old instr: 0x405029: pop rbp
    new instr:0x7faef3f04df4: pop rbp
old instr: 0x40502a: ret 
    new instr:0x7faef3f04df5: ret 
405012
old instr: 0x405012: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04df6: mov rax, qword ptr [rbp-0x8]
old instr: 0x405016: mov eax, dword ptr [rax+0x60]
    new instr:0x7faef3f04dfa: mov eax, dword ptr [rax+0x60]
old instr: 0x405019: test eax, eax
    new instr:0x7faef3f04dfd: test eax, eax
old instr: 0x40501b: jle 0x405024
    new instr:0x7faef3f04dff: jle 0x7faef3f04e08
inserted instruction
40501d
old instr: 0x40501d: mov eax, 0x0
    new instr:0x7faef3f04e01: mov eax, 0x0
old instr: 0x405022: jmp 0x405029
    new instr:0x7faef3f04e06: jmp 0x7faef3f04e0d
inserted instruction
rtn name: isempty_RL : 23
3
404f40
old instr: 0x404f40: push rbp
    new instr:0x7faef3f04e08: push rbp
old instr: 0x404f41: mov rbp, rsp
    new instr:0x7faef3f04e09: mov rbp, rsp
old instr: 0x404f44: sub rsp, 0x10
    new instr:0x7faef3f04e0c: sub rsp, 0x10
old instr: 0x404f48: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04e10: mov qword ptr [rbp-0x8], rdi
old instr: 0x404f4c: mov qword ptr [rbp-0x10], rsi
    new instr:0x7faef3f04e14: mov qword ptr [rbp-0x10], rsi
old instr: 0x404f50: cmp qword ptr [rbp-0x10], 0x0
    new instr:0x7faef3f04e18: cmp qword ptr [rbp-0x10], 0x0
old instr: 0x404f55: jz 0x404f63
    new instr:0x7faef3f04e1d: jz 0x7faef3f04e2b
inserted instruction
404f57
old instr: 0x404f57: mov rax, qword ptr [rbp-0x10]
    new instr:0x7faef3f04e1f: mov rax, qword ptr [rbp-0x10]
old instr: 0x404f5b: mov rdi, rax
    new instr:0x7faef3f04e23: mov rdi, rax
old instr: 0x404f5e: call 0x401080
    new instr:0x7faef3f04e26: call 0x7faef3f00f48
inserted instruction
404f63
old instr: 0x404f63: leave 
    new instr:0x7faef3f04e2b: leave 
old instr: 0x404f64: ret 
    new instr:0x7faef3f04e2c: ret 
rtn name: default_bzfree : 24
1
402875
old instr: 0x402875: push rbp
    new instr:0x7faef3f04e2d: push rbp
old instr: 0x402876: mov rbp, rsp
    new instr:0x7faef3f04e2e: mov rbp, rsp
old instr: 0x402879: sub rsp, 0x20
    new instr:0x7faef3f04e31: sub rsp, 0x20
old instr: 0x40287d: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04e35: mov qword ptr [rbp-0x18], rdi
old instr: 0x402881: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04e39: mov rax, qword ptr [rbp-0x18]
old instr: 0x402885: mov esi, 0x419598
    new instr:0x7faef3f04e3d: mov esi, 0x419598
old instr: 0x40288a: mov rdi, rax
    new instr:0x7faef3f04e42: mov rdi, rax
old instr: 0x40288d: call 0x401290
    new instr:0x7faef3f04e45: call 0x7faef3f03848
inserted instruction
rtn name: fileExists : 25
1
403e7d
old instr: 0x403e7d: push rbp
    new instr:0x7faef3f04e4a: push rbp
old instr: 0x403e7e: mov rbp, rsp
    new instr:0x7faef3f04e4b: mov rbp, rsp
old instr: 0x403e81: sub rsp, 0x10
    new instr:0x7faef3f04e4e: sub rsp, 0x10
old instr: 0x403e85: mov edi, 0x10
    new instr:0x7faef3f04e52: mov edi, 0x10
old instr: 0x403e8a: call 0x403e4f
    new instr:0x7faef3f04e57: call 0x7faef3f04e1c
inserted instruction
rtn name: mkCell : 26
1
4029f0
old instr: 0x4029f0: push rbp
    new instr:0x7faef3f04e5c: push rbp
old instr: 0x4029f1: mov rbp, rsp
    new instr:0x7faef3f04e5d: mov rbp, rsp
old instr: 0x4029f4: sub rsp, 0x30
    new instr:0x7faef3f04e60: sub rsp, 0x30
old instr: 0x4029f8: mov qword ptr [rbp-0x28], rdi
    new instr:0x7faef3f04e64: mov qword ptr [rbp-0x28], rdi
old instr: 0x4029fc: mov rax, qword ptr [rip+0x21a905]
    new instr:0x7faef3f04e68: mov rax, qword ptr [rip+0x21a905]
old instr: 0x402a03: mov qword ptr [rbp-0x20], rax
    new instr:0x7faef3f04e6f: mov qword ptr [rbp-0x20], rax
old instr: 0x402a07: mov rax, qword ptr [rip+0x21a90a]
    new instr:0x7faef3f04e73: mov rax, qword ptr [rip+0x21a90a]
old instr: 0x402a0e: mov qword ptr [rbp-0x18], rax
    new instr:0x7faef3f04e7a: mov qword ptr [rbp-0x18], rax
old instr: 0x402a12: mov edx, dword ptr [rip+0x21a8c0]
    new instr:0x7faef3f04e7e: mov edx, dword ptr [rip+0x21a8c0]
old instr: 0x402a18: mov rax, qword ptr [rbp-0x28]
    new instr:0x7faef3f04e84: mov rax, qword ptr [rbp-0x28]
old instr: 0x402a1c: mov esi, edx
    new instr:0x7faef3f04e88: mov esi, edx
old instr: 0x402a1e: mov rdi, rax
    new instr:0x7faef3f04e8a: mov rdi, rax
old instr: 0x402a21: call 0x401270
    new instr:0x7faef3f04e8d: call 0x7faef3f036dc
inserted instruction
rtn name: applySavedMetaInfoToOutputFile : 27
1
403f51
old instr: 0x403f51: push rbp
    new instr:0x7faef3f04e92: push rbp
old instr: 0x403f52: mov rbp, rsp
    new instr:0x7faef3f04e93: mov rbp, rsp
old instr: 0x403f55: sub rsp, 0x30
    new instr:0x7faef3f04e96: sub rsp, 0x30
old instr: 0x403f59: mov qword ptr [rbp-0x28], rdi
    new instr:0x7faef3f04e9a: mov qword ptr [rbp-0x28], rdi
old instr: 0x403f5d: mov qword ptr [rbp-0x30], rsi
    new instr:0x7faef3f04e9e: mov qword ptr [rbp-0x30], rsi
old instr: 0x403f61: mov rax, qword ptr [rbp-0x30]
    new instr:0x7faef3f04ea2: mov rax, qword ptr [rbp-0x30]
old instr: 0x403f65: mov rdi, rax
    new instr:0x7faef3f04ea6: mov rdi, rax
old instr: 0x403f68: call 0x401060
    new instr:0x7faef3f04ea9: call 0x7faef3f01fa1
inserted instruction
rtn name: addFlagsFromEnvVar : 28
1
4028ba
old instr: 0x4028ba: push rbp
    new instr:0x7faef3f04eae: push rbp
old instr: 0x4028bb: mov rbp, rsp
    new instr:0x7faef3f04eaf: mov rbp, rsp
old instr: 0x4028be: sub rsp, 0x20
    new instr:0x7faef3f04eb2: sub rsp, 0x20
old instr: 0x4028c2: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04eb6: mov qword ptr [rbp-0x18], rdi
old instr: 0x4028c6: mov qword ptr [rbp-0x20], rsi
    new instr:0x7faef3f04eba: mov qword ptr [rbp-0x20], rsi
old instr: 0x4028ca: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04ebe: mov rax, qword ptr [rbp-0x18]
old instr: 0x4028ce: mov edx, 0x180
    new instr:0x7faef3f04ec2: mov edx, 0x180
old instr: 0x4028d3: mov esi, 0xc1
    new instr:0x7faef3f04ec7: mov esi, 0xc1
old instr: 0x4028d8: mov rdi, rax
    new instr:0x7faef3f04ecc: mov rdi, rax
old instr: 0x4028db: mov eax, 0x0
    new instr:0x7faef3f04ecf: mov eax, 0x0
old instr: 0x4028e0: call 0x401280
    new instr:0x7faef3f04ed4: call 0x7faef3f03874
inserted instruction
rtn name: fopen_output_safely : 29
1
404fdc
old instr: 0x404fdc: push rbp
    new instr:0x7faef3f04ed9: push rbp
old instr: 0x404fdd: mov rbp, rsp
    new instr:0x7faef3f04eda: mov rbp, rsp
old instr: 0x404fe0: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04edd: mov qword ptr [rbp-0x8], rdi
old instr: 0x404fe4: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04ee1: mov rax, qword ptr [rbp-0x8]
old instr: 0x404fe8: mov dword ptr [rax+0x5c], 0x100
    new instr:0x7faef3f04ee5: mov dword ptr [rax+0x5c], 0x100
old instr: 0x404fef: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04eec: mov rax, qword ptr [rbp-0x8]
old instr: 0x404ff3: mov dword ptr [rax+0x60], 0x0
    new instr:0x7faef3f04ef0: mov dword ptr [rax+0x60], 0x0
old instr: 0x404ffa: pop rbp
    new instr:0x7faef3f04ef7: pop rbp
old instr: 0x404ffb: ret 
    new instr:0x7faef3f04ef8: ret 
rtn name: init_RL : 30
3
405628
old instr: 0x405628: push rbp
    new instr:0x7faef3f04ef9: push rbp
old instr: 0x405629: mov rbp, rsp
    new instr:0x7faef3f04efa: mov rbp, rsp
old instr: 0x40562c: sub rsp, 0x8
    new instr:0x7faef3f04efd: sub rsp, 0x8
old instr: 0x405630: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04f01: mov qword ptr [rbp-0x8], rdi
old instr: 0x405634: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04f05: mov rax, qword ptr [rbp-0x8]
old instr: 0x405638: mov eax, dword ptr [rax+0x5c]
    new instr:0x7faef3f04f09: mov eax, dword ptr [rax+0x5c]
old instr: 0x40563b: cmp eax, 0xff
    new instr:0x7faef3f04f0c: cmp eax, 0xff
old instr: 0x405640: jnbe 0x40564e
    new instr:0x7faef3f04f11: jnbe 0x7faef3f04f1f
inserted instruction
405642
old instr: 0x405642: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04f13: mov rax, qword ptr [rbp-0x8]
old instr: 0x405646: mov rdi, rax
    new instr:0x7faef3f04f17: mov rdi, rax
old instr: 0x405649: call 0x405388
    new instr:0x7faef3f04f1a: call 0x7faef3f04c59
inserted instruction
40564e
old instr: 0x40564e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04f1f: mov rax, qword ptr [rbp-0x8]
old instr: 0x405652: mov rdi, rax
    new instr:0x7faef3f04f23: mov rdi, rax
old instr: 0x405655: call 0x404fdc
    new instr:0x7faef3f04f26: call 0x7faef3f048ad
inserted instruction
rtn name: flush_RL : 31
1
4029c3
old instr: 0x4029c3: push rbp
    new instr:0x7faef3f04f2b: push rbp
old instr: 0x4029c4: mov rbp, rsp
    new instr:0x7faef3f04f2c: mov rbp, rsp
old instr: 0x4029c7: sub rsp, 0x20
    new instr:0x7faef3f04f2f: sub rsp, 0x20
old instr: 0x4029cb: mov qword ptr [rbp-0x18], rdi
    new instr:0x7faef3f04f33: mov qword ptr [rbp-0x18], rdi
old instr: 0x4029cf: mov rax, qword ptr [rbp-0x18]
    new instr:0x7faef3f04f37: mov rax, qword ptr [rbp-0x18]
old instr: 0x4029d3: mov esi, 0x61d2c0
    new instr:0x7faef3f04f3b: mov esi, 0x61d2c0
old instr: 0x4029d8: mov rdi, rax
    new instr:0x7faef3f04f40: mov rdi, rax
old instr: 0x4029db: call 0x418610
    new instr:0x7faef3f04f43: call 0x7faef3f1ab78
inserted instruction
rtn name: saveInputFileMetaInfo : 32
2
401390
old instr: 0x401390: mov eax, 0x61d2a0
    new instr:0x7faef3f04f48: mov eax, 0x61d2a0
old instr: 0x401395: push rbp
    new instr:0x7faef3f04f4d: push rbp
old instr: 0x401396: sub rax, 0x61d2a0
    new instr:0x7faef3f04f4e: sub rax, 0x61d2a0
old instr: 0x40139c: sar rax, 0x3
    new instr:0x7faef3f04f54: sar rax, 0x3
old instr: 0x4013a0: mov rbp, rsp
    new instr:0x7faef3f04f58: mov rbp, rsp
old instr: 0x4013a3: mov rdx, rax
    new instr:0x7faef3f04f5b: mov rdx, rax
old instr: 0x4013a6: shr rdx, 0x3f
    new instr:0x7faef3f04f5e: shr rdx, 0x3f
old instr: 0x4013aa: add rax, rdx
    new instr:0x7faef3f04f62: add rax, rdx
old instr: 0x4013ad: mov rsi, rax
    new instr:0x7faef3f04f65: mov rsi, rax
old instr: 0x4013b0: sar rsi, 0x1
    new instr:0x7faef3f04f68: sar rsi, 0x1
old instr: 0x4013b3: jnz 0x4013b7
    new instr:0x7faef3f04f6b: jnz 0x7faef3f04f6f
inserted instruction
4013b5
old instr: 0x4013b5: pop rbp
    new instr:0x7faef3f04f6d: pop rbp
old instr: 0x4013b6: ret 
    new instr:0x7faef3f04f6e: ret 
rtn name: register_tm_clones : 33
1
401310
old instr: 0x401310: xor ebp, ebp
    new instr:0x7faef3f04f6f: xor ebp, ebp
old instr: 0x401312: mov r9, rdx
    new instr:0x7faef3f04f71: mov r9, rdx
old instr: 0x401315: pop rsi
    new instr:0x7faef3f04f74: pop rsi
old instr: 0x401316: mov rdx, rsp
    new instr:0x7faef3f04f75: mov rdx, rsp
old instr: 0x401319: and rsp, 0xfffffffffffffff0
    new instr:0x7faef3f04f78: and rsp, 0xfffffffffffffff0
old instr: 0x40131d: push rax
    new instr:0x7faef3f04f7c: push rax
old instr: 0x40131e: push rsp
    new instr:0x7faef3f04f7d: push rsp
old instr: 0x40131f: mov r8, 0x418570
    new instr:0x7faef3f04f7e: mov r8, 0x418570
old instr: 0x401326: mov rcx, 0x418580
    new instr:0x7faef3f04f85: mov rcx, 0x418580
old instr: 0x40132d: mov rdi, 0x4040af
    new instr:0x7faef3f04f8c: mov rdi, 0x4040af
old instr: 0x401334: call 0x4011b0
    new instr:0x7faef3f04f93: call 0x7faef3f04e0f
inserted instruction
rtn name: _start : 34
1
40c8a8
old instr: 0x40c8a8: push rbp
    new instr:0x7faef3f04f98: push rbp
old instr: 0x40c8a9: mov rbp, rsp
    new instr:0x7faef3f04f99: mov rbp, rsp
old instr: 0x40c8ac: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04f9c: mov qword ptr [rbp-0x8], rdi
old instr: 0x40c8b0: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04fa0: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8b4: mov dword ptr [rax+0x284], 0x0
    new instr:0x7faef3f04fa4: mov dword ptr [rax+0x284], 0x0
old instr: 0x40c8be: mov rax, qword ptr [rbp-0x8]
    new instr:0x7faef3f04fae: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8c2: mov dword ptr [rax+0x280], 0x0
    new instr:0x7faef3f04fb2: mov dword ptr [rax+0x280], 0x0
old instr: 0x40c8cc: pop rbp
    new instr:0x7faef3f04fbc: pop rbp
old instr: 0x40c8cd: ret 
    new instr:0x7faef3f04fbd: ret 
rtn name: BZ2_bsInitWrite : 35
2
401360
old instr: 0x401360: mov eax, 0x61d2a7
    new instr:0x7faef3f04fbe: mov eax, 0x61d2a7
old instr: 0x401365: push rbp
    new instr:0x7faef3f04fc3: push rbp
old instr: 0x401366: sub rax, 0x61d2a0
    new instr:0x7faef3f04fc4: sub rax, 0x61d2a0
old instr: 0x40136c: cmp rax, 0xe
    new instr:0x7faef3f04fca: cmp rax, 0xe
old instr: 0x401370: mov rbp, rsp
    new instr:0x7faef3f04fce: mov rbp, rsp
old instr: 0x401373: jnbe 0x401377
    new instr:0x7faef3f04fd1: jnbe 0x7faef3f04fd5
inserted instruction
401375
old instr: 0x401375: pop rbp
    new instr:0x7faef3f04fd3: pop rbp
old instr: 0x401376: ret 
    new instr:0x7faef3f04fd4: ret 
rtn name: deregister_tm_clones : 36
2
418630
old instr: 0x418630: push rbp
    new instr:0x7faef3f04fd5: push rbp
old instr: 0x418631: sub rsp, 0x8
    new instr:0x7faef3f04fd6: sub rsp, 0x8
in revert 
entered revert with no jump
418640
old instr: 0x418630: push rbp
    new instr:0x7faef3f04fda: push rbp
old instr: 0x418631: sub rsp, 0x8
    new instr:0x7faef3f04fdb: sub rsp, 0x8
Branch instruction in the middle of a bbl 418635 in bbl: 418640
old instr: 0x41863a: add rsp, 0x8
    new instr:0x7faef3f04fdf: add rsp, 0x8
old instr: 0x41863e: pop rbp
    new instr:0x7faef3f04fe3: pop rbp
old instr: 0x41863f: ret 
    new instr:0x7faef3f04fe4: ret 
old instr: 0x418630: push rbp
    new instr:0x7faef3f04fe5: push rbp
rtn name: _fini : 37
1
402a74
old instr: 0x402a74: push rbp
    new instr:0x7faef3f04fe6: push rbp
old instr: 0x402a75: mov rbp, rsp
    new instr:0x7faef3f04fe7: mov rbp, rsp
old instr: 0x402a78: mov qword ptr [rbp-0x8], rdi
    new instr:0x7faef3f04fea: mov qword ptr [rbp-0x8], rdi
old instr: 0x402a7c: mov eax, 0x0
    new instr:0x7faef3f04fee: mov eax, 0x0
old instr: 0x402a81: pop rbp
    new instr:0x7faef3f04ff3: pop rbp
old instr: 0x402a82: ret 
    new instr:0x7faef3f04ff4: ret 
rtn name: containsDubiousChars : 38
1
404f08
old instr: 0x404f08: push rbp
    new instr:0x7faef3f04ff5: push rbp
old instr: 0x404f09: mov rbp, rsp
    new instr:0x7faef3f04ff6: mov rbp, rsp
old instr: 0x404f0c: mov eax, 0x1
    new instr:0x7faef3f04ff9: mov eax, 0x1
old instr: 0x404f11: pop rbp
    new instr:0x7faef3f04ffe: pop rbp
old instr: 0x404f12: ret 
    new instr:0x7faef3f04fff: ret 
rtn name: bz_config_ok : 39
1
401038
old instr: 0x401038: sub rsp, 0x8
    new instr:0x7faef3f05000: sub rsp, 0x8
old instr: 0x40103c: call 0x40133c
    new instr:0x7faef3f05004: call 0x7faef3f05304
inserted instruction
rtn name: _init : 40
after identifying candidate routines
after calculate direct br targets
starting a pass of fixing instructions displacements: 
20:  orig_ins_addr: 40a4a9 new_ins_addr: 7faef3eff041 orig_targ_addr: 40a4ab new_targ_addr: 7faef3eff5e9    new instr:0x7faef3eff041: jnz 0x7faef3eff5e9
35:  orig_ins_addr: 40a4e9 new_ins_addr: 7faef3eff076 orig_targ_addr: 40a4eb new_targ_addr: 7faef3eff608    new instr:0x7faef3eff076: jnz 0x7faef3eff608
50:  orig_ins_addr: 40a529 new_ins_addr: 7faef3eff0ab orig_targ_addr: 40a52b new_targ_addr: 7faef3eff654    new instr:0x7faef3eff0ab: jnz 0x7faef3eff654
65:  orig_ins_addr: 40a569 new_ins_addr: 7faef3eff0e0 orig_targ_addr: 40a56b new_targ_addr: 7faef3eff680    new instr:0x7faef3eff0e0: jnz 0x7faef3eff680
80:  orig_ins_addr: 40a5a9 new_ins_addr: 7faef3eff115 orig_targ_addr: 40a5ab new_targ_addr: 7faef3eff617    new instr:0x7faef3eff115: jnz 0x7faef3eff617
95:  orig_ins_addr: 40a5e9 new_ins_addr: 7faef3eff14a orig_targ_addr: 40a5eb new_targ_addr: 7faef3eff626    new instr:0x7faef3eff14a: jnz 0x7faef3eff626
110:  orig_ins_addr: 40a629 new_ins_addr: 7faef3eff17f orig_targ_addr: 40a62b new_targ_addr: 7faef3eff645    new instr:0x7faef3eff17f: jnz 0x7faef3eff645
125:  orig_ins_addr: 40a669 new_ins_addr: 7faef3eff1b4 orig_targ_addr: 40a66b new_targ_addr: 7faef3eff69f    new instr:0x7faef3eff1b4: jnz 0x7faef3eff69f
140:  orig_ins_addr: 40a6a9 new_ins_addr: 7faef3eff1e9 orig_targ_addr: 40a6ab new_targ_addr: 7faef3eff6ae    new instr:0x7faef3eff1e9: jnz 0x7faef3eff6ae
155:  orig_ins_addr: 40a6e9 new_ins_addr: 7faef3eff21e orig_targ_addr: 40a6eb new_targ_addr: 7faef3eff6db    new instr:0x7faef3eff21e: jnz 0x7faef3eff6db
170:  orig_ins_addr: 40a729 new_ins_addr: 7faef3eff253 orig_targ_addr: 40a72b new_targ_addr: 7faef3eff6f9    new instr:0x7faef3eff253: jnz 0x7faef3eff6f9
185:  orig_ins_addr: 40a769 new_ins_addr: 7faef3eff288 orig_targ_addr: 40a76b new_targ_addr: 7faef3eff708    new instr:0x7faef3eff288: jnz 0x7faef3eff708
199:  orig_ins_addr: 40a7b2 new_ins_addr: 7faef3eff2b9 orig_targ_addr: 40a7b4 new_targ_addr: 7faef3eff753    new instr:0x7faef3eff2b9: jnz 0x7faef3eff753
214:  orig_ins_addr: 40a7f5 new_ins_addr: 7faef3eff2f1 orig_targ_addr: 40a7f7 new_targ_addr: 7faef3eff5bc    new instr:0x7faef3eff2f1: jnz 0x7faef3eff5bc
229:  orig_ins_addr: 40a836 new_ins_addr: 7faef3eff326 orig_targ_addr: 40a838 new_targ_addr: 7faef3eff6cc    new instr:0x7faef3eff326: jnz 0x7faef3eff6cc
244:  orig_ins_addr: 40a879 new_ins_addr: 7faef3eff35e orig_targ_addr: 40a87b new_targ_addr: 7faef3eff5c9    new instr:0x7faef3eff35e: jnz 0x7faef3eff5c9
259:  orig_ins_addr: 40a8ba new_ins_addr: 7faef3eff393 orig_targ_addr: 40a8bc new_targ_addr: 7faef3eff6bd    new instr:0x7faef3eff393: jnz 0x7faef3eff6bd
274:  orig_ins_addr: 40a8fd new_ins_addr: 7faef3eff3cb orig_targ_addr: 40a8ff new_targ_addr: 7faef3eff5d9    new instr:0x7faef3eff3cb: jnz 0x7faef3eff5d9
289:  orig_ins_addr: 40a93e new_ins_addr: 7faef3eff400 orig_targ_addr: 40a940 new_targ_addr: 7faef3eff6ea    new instr:0x7faef3eff400: jnz 0x7faef3eff6ea
304:  orig_ins_addr: 40a981 new_ins_addr: 7faef3eff438 orig_targ_addr: 40a983 new_targ_addr: 7faef3eff5f8    new instr:0x7faef3eff438: jnz 0x7faef3eff5f8
319:  orig_ins_addr: 40a9c2 new_ins_addr: 7faef3eff46d orig_targ_addr: 40a9c4 new_targ_addr: 7faef3eff735    new instr:0x7faef3eff46d: jnz 0x7faef3eff735
334:  orig_ins_addr: 40aa05 new_ins_addr: 7faef3eff4a5 orig_targ_addr: 40aa07 new_targ_addr: 7faef3eff635    new instr:0x7faef3eff4a5: jnz 0x7faef3eff635
349:  orig_ins_addr: 40aa46 new_ins_addr: 7faef3eff4da orig_targ_addr: 40aa48 new_targ_addr: 7faef3eff726    new instr:0x7faef3eff4da: jnz 0x7faef3eff726
364:  orig_ins_addr: 40aa89 new_ins_addr: 7faef3eff512 orig_targ_addr: 40aa8b new_targ_addr: 7faef3eff670    new instr:0x7faef3eff512: jnz 0x7faef3eff670
379:  orig_ins_addr: 40aaca new_ins_addr: 7faef3eff547 orig_targ_addr: 40aacc new_targ_addr: 7faef3eff717    new instr:0x7faef3eff547: jnz 0x7faef3eff717
394:  orig_ins_addr: 40ab0d new_ins_addr: 7faef3eff57f orig_targ_addr: 40ab0f new_targ_addr: 7faef3eff68f    new instr:0x7faef3eff57f: jnz 0x7faef3eff68f
409:  orig_ins_addr: 40ab4e new_ins_addr: 7faef3eff5b4 orig_targ_addr: 40ab50 new_targ_addr: 7faef3eff744    new instr:0x7faef3eff5b4: jnz 0x7faef3eff744
424:  orig_ins_addr: 40ab91 new_ins_addr: 7faef3eff5ec orig_targ_addr: 40ab93 new_targ_addr: 7faef3eff663    new instr:0x7faef3eff5ec: jnz 0x7faef3eff663
429:  orig_ins_addr: 40abae new_ins_addr: 7faef3eff600 orig_targ_addr: 40abb0 new_targ_addr: 7faef3eff765    new instr:0x7faef3eff600: jnb 0x7faef3eff765
432:  orig_ins_addr: 40abbc new_ins_addr: 7faef3eff60c orig_targ_addr: 40abbe new_targ_addr: 7faef3eff762    new instr:0x7faef3eff60c: jnb 0x7faef3eff762
440:  orig_ins_addr: 40abdb new_ins_addr: 7faef3eff629 orig_targ_addr: 40a78b new_targ_addr: 7faef3eff292    new instr:0x7faef3eff629: jns 0x7faef3eff292
441:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7faef3eff62f orig_targ_addr: 40abe1 new_targ_addr: 7faef3eff768    new instr:0x7faef3eff62f: jmp 0x7faef3eff768
451:  orig_ins_addr: 40a886 new_ins_addr: 7faef3eff64c orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff64c: jmp 0x7faef3eff63f
455:  orig_ins_addr: 40a90a new_ins_addr: 7faef3eff65c orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff65c: jmp 0x7faef3eff63f
459:  orig_ins_addr: 40a4b5 new_ins_addr: 7faef3eff66b orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff66b: jmp 0x7faef3eff63f
463:  orig_ins_addr: 40a98e new_ins_addr: 7faef3eff67b orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff67b: jmp 0x7faef3eff63f
467:  orig_ins_addr: 40a4f5 new_ins_addr: 7faef3eff68a orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff68a: jmp 0x7faef3eff63f
471:  orig_ins_addr: 40a5b5 new_ins_addr: 7faef3eff699 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff699: jmp 0x7faef3eff63f
475:  orig_ins_addr: 40a5f5 new_ins_addr: 7faef3eff6a8 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff6a8: jmp 0x7faef3eff63f
479:  orig_ins_addr: 40aa12 new_ins_addr: 7faef3eff6b8 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff6b8: jmp 0x7faef3eff63f
483:  orig_ins_addr: 40a635 new_ins_addr: 7faef3eff6c7 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff6c7: jmp 0x7faef3eff63f
487:  orig_ins_addr: 40a535 new_ins_addr: 7faef3eff6d6 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff6d6: jmp 0x7faef3eff63f
491:  orig_ins_addr: 40ab9e new_ins_addr: 7faef3eff6e6 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff6e6: jmp 0x7faef3eff63f
495:  orig_ins_addr: 40aa96 new_ins_addr: 7faef3eff6f6 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff6f6: jmp 0x7faef3eff63f
499:  orig_ins_addr: 40a575 new_ins_addr: 7faef3eff705 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff705: jmp 0x7faef3eff63f
503:  orig_ins_addr: 40ab1a new_ins_addr: 7faef3eff715 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff715: jmp 0x7faef3eff63f
507:  orig_ins_addr: 40a675 new_ins_addr: 7faef3eff724 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff724: jmp 0x7faef3eff63f
511:  orig_ins_addr: 40a6b5 new_ins_addr: 7faef3eff733 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff733: jmp 0x7faef3eff63f
515:  orig_ins_addr: 40a8c6 new_ins_addr: 7faef3eff742 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff742: jmp 0x7faef3eff63f
519:  orig_ins_addr: 40a842 new_ins_addr: 7faef3eff751 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff751: jmp 0x7faef3eff63f
523:  orig_ins_addr: 40a6f5 new_ins_addr: 7faef3eff760 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff760: jmp 0x7faef3eff63f
527:  orig_ins_addr: 40a94a new_ins_addr: 7faef3eff76f orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff76f: jmp 0x7faef3eff63f
531:  orig_ins_addr: 40a735 new_ins_addr: 7faef3eff77e orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff77e: jmp 0x7faef3eff63f
535:  orig_ins_addr: 40a775 new_ins_addr: 7faef3eff78d orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff78d: jmp 0x7faef3eff63f
539:  orig_ins_addr: 40aad6 new_ins_addr: 7faef3eff79c orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff79c: jmp 0x7faef3eff63f
543:  orig_ins_addr: 40aa52 new_ins_addr: 7faef3eff7ab orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff7ab: jmp 0x7faef3eff63f
547:  orig_ins_addr: 40a9ce new_ins_addr: 7faef3eff7ba orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff7ba: jmp 0x7faef3eff63f
551:  orig_ins_addr: 40ab5a new_ins_addr: 7faef3eff7c9 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff7c9: jmp 0x7faef3eff63f
555:  orig_ins_addr: 40a7be new_ins_addr: 7faef3eff7d8 orig_targ_addr: 40abe6 new_targ_addr: 7faef3eff63f    new instr:0x7faef3eff7d8: jmp 0x7faef3eff63f
570:  orig_ins_addr: 40b863 new_ins_addr: 7faef3eff825 orig_targ_addr: 40b865 new_targ_addr: 7faef3eff8e1    new instr:0x7faef3eff825: jnle 0x7faef3eff8e1
574:  orig_ins_addr: 40b8b1 new_ins_addr: 7faef3eff836 orig_targ_addr: 40b8b3 new_targ_addr: 7faef3eff7bc    new instr:0x7faef3eff836: js 0x7faef3eff7bc
586:  orig_ins_addr: 40ba64 new_ins_addr: 7faef3eff862 orig_targ_addr: 40ba6a new_targ_addr: 7faef3eff8ff    new instr:0x7faef3eff862: jle 0x7faef3eff8ff
658:  orig_ins_addr: 40b865 new_ins_addr: 7faef3eff964 orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7faef3eff964: mov rax, qword ptr [0x61d2b0]
663:  orig_ins_addr: 40b87e new_ins_addr: 7faef3eff97e orig_targ_addr: 4012d0 new_targ_addr: 4012d0    new instr:0x7faef3eff97e: call qword ptr [rip-0x2b4d3a4]
666:  orig_ins_addr: 40bad0 new_ins_addr: 7faef3eff988 orig_targ_addr: 40bad2 new_targ_addr: 7faef3eff908    new instr:0x7faef3eff988: js 0x7faef3eff908
671:  orig_ins_addr: 40bb30 new_ins_addr: 7faef3eff99c orig_targ_addr: 40bb32 new_targ_addr: 7faef3eff918    new instr:0x7faef3eff99c: jnle 0x7faef3eff918
674:  orig_ins_addr: 40bb39 new_ins_addr: 7faef3eff9ac orig_targ_addr: 40bb3b new_targ_addr: 7faef3effa6f    new instr:0x7faef3eff9ac: jnle 0x7faef3effa6f
678:  orig_ins_addr: 40bbc0 new_ins_addr: 7faef3eff9c0 orig_targ_addr: 40bbc2 new_targ_addr: 7faef3eff934    new instr:0x7faef3eff9c0: jnle 0x7faef3eff934
690:  orig_ins_addr: 40bdf9 new_ins_addr: 7faef3eff9ed orig_targ_addr: 40bdff new_targ_addr: 7faef3effa8d    new instr:0x7faef3eff9ed: jle 0x7faef3effa8d
762:  orig_ins_addr: 40bb3b new_ins_addr: 7faef3effb04 orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7faef3effb04: mov rax, qword ptr [0x61d2b0]
767:  orig_ins_addr: 40bb54 new_ins_addr: 7faef3effb1e orig_targ_addr: 4012d0 new_targ_addr: 4012d0    new instr:0x7faef3effb1e: call qword ptr [rip-0x2b4bb44]
770:  orig_ins_addr: 40be8a new_ins_addr: 7faef3effb28 orig_targ_addr: 40be90 new_targ_addr: 7faef3effa9b    new instr:0x7faef3effb28: js 0x7faef3effa9b
775:  orig_ins_addr: 40bec0 new_ins_addr: 7faef3effb40 orig_targ_addr: 40bec2 new_targ_addr: 7faef3effaae    new instr:0x7faef3effb40: jnle 0x7faef3effaae
785:  orig_ins_addr: 40bedf new_ins_addr: 7faef3effb66 orig_targ_addr: 40bec9 new_targ_addr: 7faef3effb50    new instr:0x7faef3effb66: jle 0x7faef3effb50
800:  orig_ins_addr: 40c01c new_ins_addr: 7faef3effb93 orig_targ_addr: 40c022 new_targ_addr: 7faef3effbf5    new instr:0x7faef3effb93: jnle 0x7faef3effbf5
856:  orig_ins_addr: 40bff9 new_ins_addr: 7faef3effc54 orig_targ_addr: 40bf1d new_targ_addr: 7faef3effbbe    new instr:0x7faef3effc54: jnbe 0x7faef3effbbe
874:  orig_ins_addr: 40bf4d new_ins_addr: 7faef3effc8d orig_targ_addr: 40bf53 new_targ_addr: 7faef3effbae    new instr:0x7faef3effc8d: jl 0x7faef3effbae
877:  orig_ins_addr: 40c026 new_ins_addr: 7faef3effc98 orig_targ_addr: 40bee1 new_targ_addr: 7faef3effb6c    new instr:0x7faef3effc98: jnz 0x7faef3effb6c
882:  orig_ins_addr: 40c62e new_ins_addr: 7faef3effcb3 orig_targ_addr: 40c634 new_targ_addr: 7faef3f005c2    new instr:0x7faef3effcb3: jnle 0x7faef3f005c2
890:  orig_ins_addr: 40c1d0 new_ins_addr: 7faef3effcd6 orig_targ_addr: 40c1d6 new_targ_addr: 7faef3f0059a    new instr:0x7faef3effcd6: jnle 0x7faef3f0059a
893:  orig_ins_addr: 40c060 new_ins_addr: 7faef3effce2 orig_targ_addr: 40c1c5 new_targ_addr: 7faef3effcdc    new instr:0x7faef3effce2: jz 0x7faef3effcdc
908:  orig_ins_addr: 40c096 new_ins_addr: 7faef3effd18 orig_targ_addr: 40c09c new_targ_addr: 7faef3effc82    new instr:0x7faef3effd18: jz 0x7faef3effc82
930:  orig_ins_addr: 40c0eb new_ins_addr: 7faef3effd70 orig_targ_addr: 40c18c new_targ_addr: 7faef3effd1e    new instr:0x7faef3effd70: jle 0x7faef3effd1e
931:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7faef3effd76 orig_targ_addr: 40c0f1 new_targ_addr: 7faef3effce0    new instr:0x7faef3effd76: jmp 0x7faef3effce0
934:  orig_ins_addr: 40c0f8 new_ins_addr: 7faef3effd86 orig_targ_addr: 40c0fa new_targ_addr: 7faef3f00895    new instr:0x7faef3effd86: jnle 0x7faef3f00895
970:  orig_ins_addr: 40b02a new_ins_addr: 7faef3effe39 orig_targ_addr: 40b812 new_targ_addr: 7faef3f0057e    new instr:0x7faef3effe39: jmp 0x7faef3f0057e
972:  orig_ins_addr: 40b033 new_ins_addr: 7faef3effe42 orig_targ_addr: 40b03f new_targ_addr: 7faef3effdab    new instr:0x7faef3effe42: jle 0x7faef3effdab
974:  orig_ins_addr: 40b03a new_ins_addr: 7faef3effe4d orig_targ_addr: 404ea8 new_targ_addr: 404ea8    new instr:0x7faef3effe4d: call qword ptr [rip-0x2b48ab3]
994:  orig_ins_addr: 40b07f new_ins_addr: 7faef3effe93 orig_targ_addr: 40b087 new_targ_addr: 7faef3effdf3    new instr:0x7faef3effe93: jle 0x7faef3effdf3
996:  orig_ins_addr: 40b085 new_ins_addr: 7faef3effe9d orig_targ_addr: 40b0d4 new_targ_addr: 7faef3effe40    new instr:0x7faef3effe9d: jle 0x7faef3effe40
1008:  orig_ins_addr: 40b0bc new_ins_addr: 7faef3effed8 orig_targ_addr: 40abe8 new_targ_addr: 40abe8    new instr:0x7faef3effed8: call qword ptr [rip-0x2b482be]
1012:  orig_ins_addr: 40b0c9 new_ins_addr: 7faef3effee6 orig_targ_addr: 40b81c new_targ_addr: 7faef3f00588    new instr:0x7faef3effee6: js 0x7faef3f00588
1013:  orig_ins_addr: 40b0cf new_ins_addr: 7faef3effeec orig_targ_addr: 40b812 new_targ_addr: 7faef3f0057e    new instr:0x7faef3effeec: jmp 0x7faef3f0057e
1058:  orig_ins_addr: 40b16f new_ins_addr: 7faef3efff8c orig_targ_addr: 40af61 new_targ_addr: 40af61    new instr:0x7faef3efff8c: call qword ptr [rip-0x2b476f2]
1071:  orig_ins_addr: 40b198 new_ins_addr: 7faef3efffb6 orig_targ_addr: 40b261 new_targ_addr: 7faef3efffcd    new instr:0x7faef3efffb6: jnle 0x7faef3efffcd
1088:  orig_ins_addr: 40b1d8 new_ins_addr: 7faef3effff6 orig_targ_addr: 40b252 new_targ_addr: 7faef3efffbe    new instr:0x7faef3effff6: jnz 0x7faef3efffbe
1118:  orig_ins_addr: 40b24d new_ins_addr: 7faef3f0006f orig_targ_addr: 40b192 new_targ_addr: 7faef3efffb0    new instr:0x7faef3f0006f: jmp 0x7faef3efffb0
1120:  orig_ins_addr: 40b256 new_ins_addr: 7faef3f00078 orig_targ_addr: 40b264 new_targ_addr: 7faef3efffd0    new instr:0x7faef3f00078: jnle 0x7faef3efffd0
1122:  orig_ins_addr: 40b25c new_ins_addr: 7faef3f00082 orig_targ_addr: 40b192 new_targ_addr: 7faef3efffb0    new instr:0x7faef3f00082: jmp 0x7faef3efffb0
1124:  orig_ins_addr: 40b262 new_ins_addr: 7faef3f00088 orig_targ_addr: 40b265 new_targ_addr: 7faef3efffd1    new instr:0x7faef3f00088: jmp 0x7faef3efffd1
1128:  orig_ins_addr: 40b26b new_ins_addr: 7faef3f00094 orig_targ_addr: 40b334 new_targ_addr: 7faef3f000a0    new instr:0x7faef3f00094: jnle 0x7faef3f000a0
1145:  orig_ins_addr: 40b2ab new_ins_addr: 7faef3f000d4 orig_targ_addr: 40b325 new_targ_addr: 7faef3f00091    new instr:0x7faef3f000d4: jnz 0x7faef3f00091
1175:  orig_ins_addr: 40b320 new_ins_addr: 7faef3f0014d orig_targ_addr: 40b265 new_targ_addr: 7faef3f0008e    new instr:0x7faef3f0014d: jmp 0x7faef3f0008e
1177:  orig_ins_addr: 40b329 new_ins_addr: 7faef3f00156 orig_targ_addr: 40b337 new_targ_addr: 7faef3f000a3    new instr:0x7faef3f00156: js 0x7faef3f000a3
1179:  orig_ins_addr: 40b32f new_ins_addr: 7faef3f00160 orig_targ_addr: 40b265 new_targ_addr: 7faef3f0008e    new instr:0x7faef3f00160: jmp 0x7faef3f0008e
1181:  orig_ins_addr: 40b335 new_ins_addr: 7faef3f00166 orig_targ_addr: 40b338 new_targ_addr: 7faef3f000a4    new instr:0x7faef3f00166: jmp 0x7faef3f000a4
1185:  orig_ins_addr: 40b33e new_ins_addr: 7faef3f00172 orig_targ_addr: 40b3b7 new_targ_addr: 7faef3f00123    new instr:0x7faef3f00172: jnle 0x7faef3f00123
1214:  orig_ins_addr: 40b3b2 new_ins_addr: 7faef3f001ea orig_targ_addr: 40b192 new_targ_addr: 7faef3efffb0    new instr:0x7faef3f001ea: jmp 0x7faef3efffb0
1218:  orig_ins_addr: 40b3be new_ins_addr: 7faef3f001f6 orig_targ_addr: 40b3f9 new_targ_addr: 7faef3f00165    new instr:0x7faef3f001f6: jnl 0x7faef3f00165
1233:  orig_ins_addr: 40b3f4 new_ins_addr: 7faef3f00230 orig_targ_addr: 40b812 new_targ_addr: 7faef3f0057e    new instr:0x7faef3f00230: jmp 0x7faef3f0057e
1255:  orig_ins_addr: 40b430 new_ins_addr: 7faef3f0026c orig_targ_addr: 40b4a8 new_targ_addr: 7faef3f00214    new instr:0x7faef3f0026c: jmp 0x7faef3f00214
1286:  orig_ins_addr: 40b4ac new_ins_addr: 7faef3f002eb orig_targ_addr: 40b432 new_targ_addr: 7faef3f00271    new instr:0x7faef3f002eb: jnle 0x7faef3f00271
1309:  orig_ins_addr: 40b4e8 new_ins_addr: 7faef3f0032b orig_targ_addr: 40b560 new_targ_addr: 7faef3f002cc    new instr:0x7faef3f0032b: jmp 0x7faef3f002cc
1340:  orig_ins_addr: 40b564 new_ins_addr: 7faef3f003aa orig_targ_addr: 40b4ea new_targ_addr: 7faef3f00330    new instr:0x7faef3f003aa: jnle 0x7faef3f00330
1385:  orig_ins_addr: 40b608 new_ins_addr: 7faef3f00452 orig_targ_addr: 40b664 new_targ_addr: 7faef3f003d0    new instr:0x7faef3f00452: jnl 0x7faef3f003d0
1414:  orig_ins_addr: 40b688 new_ins_addr: 7faef3f004d6 orig_targ_addr: 40b6e4 new_targ_addr: 7faef3f00450    new instr:0x7faef3f004d6: jnl 0x7faef3f00450
1443:  orig_ins_addr: 40b708 new_ins_addr: 7faef3f0055a orig_targ_addr: 40b764 new_targ_addr: 7faef3f004d0    new instr:0x7faef3f0055a: jnl 0x7faef3f004d0
1502:  orig_ins_addr: 40b816 new_ins_addr: 7faef3f0066c orig_targ_addr: 40b02f new_targ_addr: 7faef3effe3e    new instr:0x7faef3f0066c: jnle 0x7faef3effe3e
1507:  orig_ins_addr: 40c167 new_ins_addr: 7faef3f0067f orig_targ_addr: 40afb7 new_targ_addr: 40afb7    new instr:0x7faef3f0067f: call qword ptr [rip-0x2b40da5]
1512:  orig_ins_addr: 40c1e5 new_ins_addr: 7faef3f00694 orig_targ_addr: 40c1e7 new_targ_addr: 7faef3f008cc    new instr:0x7faef3f00694: jnz 0x7faef3f008cc
1516:  orig_ins_addr: 40c279 new_ins_addr: 7faef3f006a8 orig_targ_addr: 40c27f new_targ_addr: 7faef3f005d5    new instr:0x7faef3f006a8: jnle 0x7faef3f005d5
1519:  orig_ins_addr: 40c63b new_ins_addr: 7faef3f006b8 orig_targ_addr: 40c63d new_targ_addr: 7faef3f00735    new instr:0x7faef3f006b8: jnle 0x7faef3f00735
1538:  orig_ins_addr: 40c34e new_ins_addr: 7faef3f006fb orig_targ_addr: 40c2a8 new_targ_addr: 7faef3f006d4    new instr:0x7faef3f006fb: jnle 0x7faef3f006d4
1555:  orig_ins_addr: 40c429 new_ins_addr: 7faef3f0073a orig_targ_addr: 40c383 new_targ_addr: 7faef3f0067f    new instr:0x7faef3f0073a: jl 0x7faef3f0067f
1564:  orig_ins_addr: 40c44c new_ins_addr: 7faef3f0075d orig_targ_addr: 40c44e new_targ_addr: 7faef3f00767    new instr:0x7faef3f0075d: jnz 0x7faef3f00767
1568:  orig_ins_addr: 40c4e2 new_ins_addr: 7faef3f00771 orig_targ_addr: 40c4e4 new_targ_addr: 7faef3f0077c    new instr:0x7faef3f00771: jnle 0x7faef3f0077c
1579:  orig_ins_addr: 40c3a6 new_ins_addr: 7faef3f0079d orig_targ_addr: 40c3a8 new_targ_addr: 7faef3f0072f    new instr:0x7faef3f0079d: js 0x7faef3f0072f
1590:  orig_ins_addr: 40c3d7 new_ins_addr: 7faef3f007c9 orig_targ_addr: 40c3d9 new_targ_addr: 7faef3f006d0    new instr:0x7faef3f007c9: jz 0x7faef3f006d0
1602:  orig_ins_addr: 40c2cb new_ins_addr: 7faef3f007fa orig_targ_addr: 40c2cd new_targ_addr: 7faef3f00729    new instr:0x7faef3f007fa: js 0x7faef3f00729
1613:  orig_ins_addr: 40c2fc new_ins_addr: 7faef3f00826 orig_targ_addr: 40c33b new_targ_addr: 7faef3f00725    new instr:0x7faef3f00826: jnz 0x7faef3f00725
1622:  orig_ins_addr: 40c64a new_ins_addr: 7faef3f0084d orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7faef3f0084d: mov rax, qword ptr [0x61d2b0]
1629:  orig_ins_addr: 40c66a new_ins_addr: 7faef3f0086e orig_targ_addr: 4011f0 new_targ_addr: 4011f0    new instr:0x7faef3f0086e: call qword ptr [rip-0x2b3f114]
ERROR: Invalid direct jump from translated code to original code in rotuine: mainSort  2  7faef3f00777
40c45c ffffffffffffffff
7faef3f00882 7faef3f00777
1634:  orig_ins_addr: 40c45c new_ins_addr: 7faef3f00882 orig_targ_addr: 40c477 new_targ_addr: 40c477    new instr:0x7faef3f00882: jnz 0x7faef3f0089d
