after memory allocation
63
40a468
old instr: 0x40a468: push rbp
    new instr:0x7fd3d0e27000: push rbp
old instr: 0x40a469: mov rbp, rsp
    new instr:0x7fd3d0e27001: mov rbp, rsp
old instr: 0x40a46c: mov dword ptr [rbp-0x14], edi
    new instr:0x7fd3d0e27004: mov dword ptr [rbp-0x14], edi
old instr: 0x40a46f: mov dword ptr [rbp-0x18], esi
    new instr:0x7fd3d0e27007: mov dword ptr [rbp-0x18], esi
old instr: 0x40a472: mov qword ptr [rbp-0x20], rdx
    new instr:0x7fd3d0e2700a: mov qword ptr [rbp-0x20], rdx
old instr: 0x40a476: mov qword ptr [rbp-0x28], rcx
    new instr:0x7fd3d0e2700e: mov qword ptr [rbp-0x28], rcx
old instr: 0x40a47a: mov dword ptr [rbp-0x2c], r8d
    new instr:0x7fd3d0e27012: mov dword ptr [rbp-0x2c], r8d
old instr: 0x40a47e: mov qword ptr [rbp-0x38], r9
    new instr:0x7fd3d0e27016: mov qword ptr [rbp-0x38], r9
old instr: 0x40a482: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e2701a: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a485: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2701d: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a489: add rax, rdx
    new instr:0x7fd3d0e27021: add rax, rdx
old instr: 0x40a48c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27024: movzx eax, byte ptr [rax]
old instr: 0x40a48f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e27027: mov byte ptr [rbp-0x5], al
old instr: 0x40a492: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e2702a: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a495: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2702d: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a499: add rax, rdx
    new instr:0x7fd3d0e27031: add rax, rdx
old instr: 0x40a49c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27034: movzx eax, byte ptr [rax]
old instr: 0x40a49f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e27037: mov byte ptr [rbp-0x6], al
old instr: 0x40a4a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e2703a: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2703e: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27041: jnz 0x7fd3d0e27052
40a4ba
old instr: 0x40a4ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e27043: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a4be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e27047: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a4c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e2704b: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a4c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2704e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a4c9: add rax, rdx
    new instr:0x7fd3d0e27052: add rax, rdx
old instr: 0x40a4cc: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27055: movzx eax, byte ptr [rax]
old instr: 0x40a4cf: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e27058: mov byte ptr [rbp-0x5], al
old instr: 0x40a4d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e2705b: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a4d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2705e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a4d9: add rax, rdx
    new instr:0x7fd3d0e27062: add rax, rdx
old instr: 0x40a4dc: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27065: movzx eax, byte ptr [rax]
old instr: 0x40a4df: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e27068: mov byte ptr [rbp-0x6], al
old instr: 0x40a4e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e2706b: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2706f: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27072: jnz 0x7fd3d0e27083
40a4fa
old instr: 0x40a4fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e27074: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a4fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e27078: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a502: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e2707c: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a505: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2707f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a509: add rax, rdx
    new instr:0x7fd3d0e27083: add rax, rdx
old instr: 0x40a50c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27086: movzx eax, byte ptr [rax]
old instr: 0x40a50f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e27089: mov byte ptr [rbp-0x5], al
old instr: 0x40a512: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e2708c: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a515: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2708f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a519: add rax, rdx
    new instr:0x7fd3d0e27093: add rax, rdx
old instr: 0x40a51c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27096: movzx eax, byte ptr [rax]
old instr: 0x40a51f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e27099: mov byte ptr [rbp-0x6], al
old instr: 0x40a522: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e2709c: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a526: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e270a0: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e270a3: jnz 0x7fd3d0e270b4
40a53a
old instr: 0x40a53a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e270a5: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a53e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e270a9: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a542: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e270ad: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a545: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e270b0: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a549: add rax, rdx
    new instr:0x7fd3d0e270b4: add rax, rdx
old instr: 0x40a54c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e270b7: movzx eax, byte ptr [rax]
old instr: 0x40a54f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e270ba: mov byte ptr [rbp-0x5], al
old instr: 0x40a552: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e270bd: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a555: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e270c0: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a559: add rax, rdx
    new instr:0x7fd3d0e270c4: add rax, rdx
old instr: 0x40a55c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e270c7: movzx eax, byte ptr [rax]
old instr: 0x40a55f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e270ca: mov byte ptr [rbp-0x6], al
old instr: 0x40a562: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e270cd: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a566: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e270d1: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e270d4: jnz 0x7fd3d0e270e5
40a57a
old instr: 0x40a57a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e270d6: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a57e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e270da: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a582: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e270de: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a585: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e270e1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a589: add rax, rdx
    new instr:0x7fd3d0e270e5: add rax, rdx
old instr: 0x40a58c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e270e8: movzx eax, byte ptr [rax]
old instr: 0x40a58f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e270eb: mov byte ptr [rbp-0x5], al
old instr: 0x40a592: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e270ee: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a595: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e270f1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a599: add rax, rdx
    new instr:0x7fd3d0e270f5: add rax, rdx
old instr: 0x40a59c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e270f8: movzx eax, byte ptr [rax]
old instr: 0x40a59f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e270fb: mov byte ptr [rbp-0x6], al
old instr: 0x40a5a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e270fe: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27102: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27105: jnz 0x7fd3d0e27116
40a5ba
old instr: 0x40a5ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e27107: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a5be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e2710b: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a5c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e2710f: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a5c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27112: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a5c9: add rax, rdx
    new instr:0x7fd3d0e27116: add rax, rdx
old instr: 0x40a5cc: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27119: movzx eax, byte ptr [rax]
old instr: 0x40a5cf: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e2711c: mov byte ptr [rbp-0x5], al
old instr: 0x40a5d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e2711f: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a5d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27122: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a5d9: add rax, rdx
    new instr:0x7fd3d0e27126: add rax, rdx
old instr: 0x40a5dc: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27129: movzx eax, byte ptr [rax]
old instr: 0x40a5df: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e2712c: mov byte ptr [rbp-0x6], al
old instr: 0x40a5e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e2712f: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27133: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27136: jnz 0x7fd3d0e27147
40a5fa
old instr: 0x40a5fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e27138: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a5fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e2713c: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a602: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27140: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a605: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27143: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a609: add rax, rdx
    new instr:0x7fd3d0e27147: add rax, rdx
old instr: 0x40a60c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2714a: movzx eax, byte ptr [rax]
old instr: 0x40a60f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e2714d: mov byte ptr [rbp-0x5], al
old instr: 0x40a612: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27150: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a615: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27153: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a619: add rax, rdx
    new instr:0x7fd3d0e27157: add rax, rdx
old instr: 0x40a61c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2715a: movzx eax, byte ptr [rax]
old instr: 0x40a61f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e2715d: mov byte ptr [rbp-0x6], al
old instr: 0x40a622: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27160: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a626: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27164: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27167: jnz 0x7fd3d0e27178
40a63a
old instr: 0x40a63a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e27169: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a63e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e2716d: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a642: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27171: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a645: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27174: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a649: add rax, rdx
    new instr:0x7fd3d0e27178: add rax, rdx
old instr: 0x40a64c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2717b: movzx eax, byte ptr [rax]
old instr: 0x40a64f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e2717e: mov byte ptr [rbp-0x5], al
old instr: 0x40a652: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27181: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a655: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27184: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a659: add rax, rdx
    new instr:0x7fd3d0e27188: add rax, rdx
old instr: 0x40a65c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2718b: movzx eax, byte ptr [rax]
old instr: 0x40a65f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e2718e: mov byte ptr [rbp-0x6], al
old instr: 0x40a662: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27191: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a666: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27195: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27198: jnz 0x7fd3d0e271a9
40a67a
old instr: 0x40a67a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e2719a: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a67e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e2719e: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a682: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e271a2: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a685: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e271a5: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a689: add rax, rdx
    new instr:0x7fd3d0e271a9: add rax, rdx
old instr: 0x40a68c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e271ac: movzx eax, byte ptr [rax]
old instr: 0x40a68f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e271af: mov byte ptr [rbp-0x5], al
old instr: 0x40a692: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e271b2: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a695: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e271b5: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a699: add rax, rdx
    new instr:0x7fd3d0e271b9: add rax, rdx
old instr: 0x40a69c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e271bc: movzx eax, byte ptr [rax]
old instr: 0x40a69f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e271bf: mov byte ptr [rbp-0x6], al
old instr: 0x40a6a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e271c2: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e271c6: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e271c9: jnz 0x7fd3d0e271da
40a6ba
old instr: 0x40a6ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e271cb: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a6be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e271cf: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a6c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e271d3: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a6c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e271d6: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a6c9: add rax, rdx
    new instr:0x7fd3d0e271da: add rax, rdx
old instr: 0x40a6cc: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e271dd: movzx eax, byte ptr [rax]
old instr: 0x40a6cf: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e271e0: mov byte ptr [rbp-0x5], al
old instr: 0x40a6d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e271e3: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a6d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e271e6: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a6d9: add rax, rdx
    new instr:0x7fd3d0e271ea: add rax, rdx
old instr: 0x40a6dc: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e271ed: movzx eax, byte ptr [rax]
old instr: 0x40a6df: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e271f0: mov byte ptr [rbp-0x6], al
old instr: 0x40a6e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e271f3: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e271f7: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e271fa: jnz 0x7fd3d0e2720b
40a6fa
old instr: 0x40a6fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e271fc: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a6fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e27200: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a702: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27204: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a705: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27207: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a709: add rax, rdx
    new instr:0x7fd3d0e2720b: add rax, rdx
old instr: 0x40a70c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2720e: movzx eax, byte ptr [rax]
old instr: 0x40a70f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e27211: mov byte ptr [rbp-0x5], al
old instr: 0x40a712: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27214: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a715: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27217: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a719: add rax, rdx
    new instr:0x7fd3d0e2721b: add rax, rdx
old instr: 0x40a71c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2721e: movzx eax, byte ptr [rax]
old instr: 0x40a71f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e27221: mov byte ptr [rbp-0x6], al
old instr: 0x40a722: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27224: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a726: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27228: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e2722b: jnz 0x7fd3d0e2723c
40a73a
old instr: 0x40a73a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e2722d: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a73e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e27231: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a742: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27235: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a745: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27238: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a749: add rax, rdx
    new instr:0x7fd3d0e2723c: add rax, rdx
old instr: 0x40a74c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2723f: movzx eax, byte ptr [rax]
old instr: 0x40a74f: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e27242: mov byte ptr [rbp-0x5], al
old instr: 0x40a752: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27245: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a755: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27248: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a759: add rax, rdx
    new instr:0x7fd3d0e2724c: add rax, rdx
old instr: 0x40a75c: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2724f: movzx eax, byte ptr [rax]
old instr: 0x40a75f: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e27252: mov byte ptr [rbp-0x6], al
old instr: 0x40a762: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27255: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a766: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27259: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e2725c: jnz 0x7fd3d0e2726d
40a77a
old instr: 0x40a77a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e2725e: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a77e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e27262: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a782: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e27266: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40a785: add eax, 0x8
    new instr:0x7fd3d0e27269: add eax, 0x8
old instr: 0x40a788: mov dword ptr [rbp-0x4], eax
    new instr:0x7fd3d0e2726c: mov dword ptr [rbp-0x4], eax
old instr: 0x40a78b: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e2726f: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a78e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27272: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a792: add rax, rdx
    new instr:0x7fd3d0e27276: add rax, rdx
old instr: 0x40a795: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27279: movzx eax, byte ptr [rax]
old instr: 0x40a798: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e2727c: mov byte ptr [rbp-0x5], al
old instr: 0x40a79b: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e2727f: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a79e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27282: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a7a2: add rax, rdx
    new instr:0x7fd3d0e27286: add rax, rdx
old instr: 0x40a7a5: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27289: movzx eax, byte ptr [rax]
old instr: 0x40a7a8: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e2728c: mov byte ptr [rbp-0x6], al
old instr: 0x40a7ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e2728f: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a7af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27293: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27296: jnz 0x7fd3d0e272a7
40a7c3
old instr: 0x40a7c3: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27298: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a7c6: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e2729b: lea rdx, ptr [rax+rax*1]
old instr: 0x40a7ca: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e2729f: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a7ce: add rax, rdx
    new instr:0x7fd3d0e272a3: add rax, rdx
old instr: 0x40a7d1: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e272a6: movzx eax, word ptr [rax]
old instr: 0x40a7d4: mov word ptr [rbp-0x8], ax
    new instr:0x7fd3d0e272a9: mov word ptr [rbp-0x8], ax
old instr: 0x40a7d8: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e272ad: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a7db: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e272b0: lea rdx, ptr [rax+rax*1]
old instr: 0x40a7df: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e272b4: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a7e3: add rax, rdx
    new instr:0x7fd3d0e272b8: add rax, rdx
old instr: 0x40a7e6: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e272bb: movzx eax, word ptr [rax]
old instr: 0x40a7e9: mov word ptr [rbp-0xa], ax
    new instr:0x7fd3d0e272be: mov word ptr [rbp-0xa], ax
old instr: 0x40a7ed: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e272c2: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a7f1: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e272c6: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fd3d0e272ca: jnz 0x7fd3d0e272dc
40a807
old instr: 0x40a807: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e272cc: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a80b: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e272d0: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a80f: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e272d4: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a812: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e272d7: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a816: add rax, rdx
    new instr:0x7fd3d0e272db: add rax, rdx
old instr: 0x40a819: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e272de: movzx eax, byte ptr [rax]
old instr: 0x40a81c: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e272e1: mov byte ptr [rbp-0x5], al
old instr: 0x40a81f: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e272e4: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a822: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e272e7: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a826: add rax, rdx
    new instr:0x7fd3d0e272eb: add rax, rdx
old instr: 0x40a829: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e272ee: movzx eax, byte ptr [rax]
old instr: 0x40a82c: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e272f1: mov byte ptr [rbp-0x6], al
old instr: 0x40a82f: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e272f4: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a833: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e272f8: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e272fb: jnz 0x7fd3d0e2730c
40a847
old instr: 0x40a847: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e272fd: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a84a: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27300: lea rdx, ptr [rax+rax*1]
old instr: 0x40a84e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27304: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a852: add rax, rdx
    new instr:0x7fd3d0e27308: add rax, rdx
old instr: 0x40a855: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e2730b: movzx eax, word ptr [rax]
old instr: 0x40a858: mov word ptr [rbp-0x8], ax
    new instr:0x7fd3d0e2730e: mov word ptr [rbp-0x8], ax
old instr: 0x40a85c: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27312: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a85f: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27315: lea rdx, ptr [rax+rax*1]
old instr: 0x40a863: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27319: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a867: add rax, rdx
    new instr:0x7fd3d0e2731d: add rax, rdx
old instr: 0x40a86a: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e27320: movzx eax, word ptr [rax]
old instr: 0x40a86d: mov word ptr [rbp-0xa], ax
    new instr:0x7fd3d0e27323: mov word ptr [rbp-0xa], ax
old instr: 0x40a871: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e27327: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a875: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e2732b: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fd3d0e2732f: jnz 0x7fd3d0e27341
40a88b
old instr: 0x40a88b: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e27331: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a88f: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e27335: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a893: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27339: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a896: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2733c: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a89a: add rax, rdx
    new instr:0x7fd3d0e27340: add rax, rdx
old instr: 0x40a89d: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27343: movzx eax, byte ptr [rax]
old instr: 0x40a8a0: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e27346: mov byte ptr [rbp-0x5], al
old instr: 0x40a8a3: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27349: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a8a6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2734c: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a8aa: add rax, rdx
    new instr:0x7fd3d0e27350: add rax, rdx
old instr: 0x40a8ad: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27353: movzx eax, byte ptr [rax]
old instr: 0x40a8b0: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e27356: mov byte ptr [rbp-0x6], al
old instr: 0x40a8b3: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27359: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a8b7: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2735d: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27360: jnz 0x7fd3d0e27371
40a8cb
old instr: 0x40a8cb: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27362: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a8ce: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27365: lea rdx, ptr [rax+rax*1]
old instr: 0x40a8d2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27369: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a8d6: add rax, rdx
    new instr:0x7fd3d0e2736d: add rax, rdx
old instr: 0x40a8d9: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e27370: movzx eax, word ptr [rax]
old instr: 0x40a8dc: mov word ptr [rbp-0x8], ax
    new instr:0x7fd3d0e27373: mov word ptr [rbp-0x8], ax
old instr: 0x40a8e0: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27377: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a8e3: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e2737a: lea rdx, ptr [rax+rax*1]
old instr: 0x40a8e7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e2737e: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a8eb: add rax, rdx
    new instr:0x7fd3d0e27382: add rax, rdx
old instr: 0x40a8ee: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e27385: movzx eax, word ptr [rax]
old instr: 0x40a8f1: mov word ptr [rbp-0xa], ax
    new instr:0x7fd3d0e27388: mov word ptr [rbp-0xa], ax
old instr: 0x40a8f5: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e2738c: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a8f9: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e27390: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fd3d0e27394: jnz 0x7fd3d0e273a6
40a90f
old instr: 0x40a90f: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e27396: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a913: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e2739a: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a917: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e2739e: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a91a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e273a1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a91e: add rax, rdx
    new instr:0x7fd3d0e273a5: add rax, rdx
old instr: 0x40a921: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e273a8: movzx eax, byte ptr [rax]
old instr: 0x40a924: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e273ab: mov byte ptr [rbp-0x5], al
old instr: 0x40a927: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e273ae: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a92a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e273b1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a92e: add rax, rdx
    new instr:0x7fd3d0e273b5: add rax, rdx
old instr: 0x40a931: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e273b8: movzx eax, byte ptr [rax]
old instr: 0x40a934: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e273bb: mov byte ptr [rbp-0x6], al
old instr: 0x40a937: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e273be: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a93b: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e273c2: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e273c5: jnz 0x7fd3d0e273d6
40a94f
old instr: 0x40a94f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e273c7: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a952: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e273ca: lea rdx, ptr [rax+rax*1]
old instr: 0x40a956: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e273ce: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a95a: add rax, rdx
    new instr:0x7fd3d0e273d2: add rax, rdx
old instr: 0x40a95d: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e273d5: movzx eax, word ptr [rax]
old instr: 0x40a960: mov word ptr [rbp-0x8], ax
    new instr:0x7fd3d0e273d8: mov word ptr [rbp-0x8], ax
old instr: 0x40a964: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e273dc: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a967: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e273df: lea rdx, ptr [rax+rax*1]
old instr: 0x40a96b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e273e3: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a96f: add rax, rdx
    new instr:0x7fd3d0e273e7: add rax, rdx
old instr: 0x40a972: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e273ea: movzx eax, word ptr [rax]
old instr: 0x40a975: mov word ptr [rbp-0xa], ax
    new instr:0x7fd3d0e273ed: mov word ptr [rbp-0xa], ax
old instr: 0x40a979: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e273f1: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a97d: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e273f5: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fd3d0e273f9: jnz 0x7fd3d0e2740b
40a993
old instr: 0x40a993: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e273fb: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a997: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e273ff: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a99b: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27403: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a99e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27406: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a9a2: add rax, rdx
    new instr:0x7fd3d0e2740a: add rax, rdx
old instr: 0x40a9a5: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2740d: movzx eax, byte ptr [rax]
old instr: 0x40a9a8: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e27410: mov byte ptr [rbp-0x5], al
old instr: 0x40a9ab: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27413: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a9ae: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27416: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a9b2: add rax, rdx
    new instr:0x7fd3d0e2741a: add rax, rdx
old instr: 0x40a9b5: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2741d: movzx eax, byte ptr [rax]
old instr: 0x40a9b8: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e27420: mov byte ptr [rbp-0x6], al
old instr: 0x40a9bb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27423: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a9bf: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27427: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e2742a: jnz 0x7fd3d0e2743b
40a9d3
old instr: 0x40a9d3: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e2742c: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a9d6: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e2742f: lea rdx, ptr [rax+rax*1]
old instr: 0x40a9da: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27433: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a9de: add rax, rdx
    new instr:0x7fd3d0e27437: add rax, rdx
old instr: 0x40a9e1: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e2743a: movzx eax, word ptr [rax]
old instr: 0x40a9e4: mov word ptr [rbp-0x8], ax
    new instr:0x7fd3d0e2743d: mov word ptr [rbp-0x8], ax
old instr: 0x40a9e8: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27441: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a9eb: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27444: lea rdx, ptr [rax+rax*1]
old instr: 0x40a9ef: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27448: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a9f3: add rax, rdx
    new instr:0x7fd3d0e2744c: add rax, rdx
old instr: 0x40a9f6: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e2744f: movzx eax, word ptr [rax]
old instr: 0x40a9f9: mov word ptr [rbp-0xa], ax
    new instr:0x7fd3d0e27452: mov word ptr [rbp-0xa], ax
old instr: 0x40a9fd: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e27456: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa01: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e2745a: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fd3d0e2745e: jnz 0x7fd3d0e27470
40aa17
old instr: 0x40aa17: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e27460: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aa1b: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e27464: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aa1f: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27468: mov edx, dword ptr [rbp-0x14]
old instr: 0x40aa22: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2746b: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aa26: add rax, rdx
    new instr:0x7fd3d0e2746f: add rax, rdx
old instr: 0x40aa29: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27472: movzx eax, byte ptr [rax]
old instr: 0x40aa2c: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e27475: mov byte ptr [rbp-0x5], al
old instr: 0x40aa2f: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27478: mov edx, dword ptr [rbp-0x18]
old instr: 0x40aa32: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e2747b: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aa36: add rax, rdx
    new instr:0x7fd3d0e2747f: add rax, rdx
old instr: 0x40aa39: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27482: movzx eax, byte ptr [rax]
old instr: 0x40aa3c: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e27485: mov byte ptr [rbp-0x6], al
old instr: 0x40aa3f: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27488: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aa43: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2748c: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e2748f: jnz 0x7fd3d0e274a0
40aa57
old instr: 0x40aa57: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27491: mov eax, dword ptr [rbp-0x14]
old instr: 0x40aa5a: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27494: lea rdx, ptr [rax+rax*1]
old instr: 0x40aa5e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27498: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aa62: add rax, rdx
    new instr:0x7fd3d0e2749c: add rax, rdx
old instr: 0x40aa65: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e2749f: movzx eax, word ptr [rax]
old instr: 0x40aa68: mov word ptr [rbp-0x8], ax
    new instr:0x7fd3d0e274a2: mov word ptr [rbp-0x8], ax
old instr: 0x40aa6c: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e274a6: mov eax, dword ptr [rbp-0x18]
old instr: 0x40aa6f: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e274a9: lea rdx, ptr [rax+rax*1]
old instr: 0x40aa73: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e274ad: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aa77: add rax, rdx
    new instr:0x7fd3d0e274b1: add rax, rdx
old instr: 0x40aa7a: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e274b4: movzx eax, word ptr [rax]
old instr: 0x40aa7d: mov word ptr [rbp-0xa], ax
    new instr:0x7fd3d0e274b7: mov word ptr [rbp-0xa], ax
old instr: 0x40aa81: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e274bb: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa85: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e274bf: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fd3d0e274c3: jnz 0x7fd3d0e274d5
40aa9b
old instr: 0x40aa9b: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e274c5: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aa9f: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e274c9: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aaa3: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e274cd: mov edx, dword ptr [rbp-0x14]
old instr: 0x40aaa6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e274d0: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aaaa: add rax, rdx
    new instr:0x7fd3d0e274d4: add rax, rdx
old instr: 0x40aaad: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e274d7: movzx eax, byte ptr [rax]
old instr: 0x40aab0: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e274da: mov byte ptr [rbp-0x5], al
old instr: 0x40aab3: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e274dd: mov edx, dword ptr [rbp-0x18]
old instr: 0x40aab6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e274e0: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aaba: add rax, rdx
    new instr:0x7fd3d0e274e4: add rax, rdx
old instr: 0x40aabd: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e274e7: movzx eax, byte ptr [rax]
old instr: 0x40aac0: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e274ea: mov byte ptr [rbp-0x6], al
old instr: 0x40aac3: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e274ed: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aac7: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e274f1: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e274f4: jnz 0x7fd3d0e27505
40aadb
old instr: 0x40aadb: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e274f6: mov eax, dword ptr [rbp-0x14]
old instr: 0x40aade: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e274f9: lea rdx, ptr [rax+rax*1]
old instr: 0x40aae2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e274fd: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aae6: add rax, rdx
    new instr:0x7fd3d0e27501: add rax, rdx
old instr: 0x40aae9: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e27504: movzx eax, word ptr [rax]
old instr: 0x40aaec: mov word ptr [rbp-0x8], ax
    new instr:0x7fd3d0e27507: mov word ptr [rbp-0x8], ax
old instr: 0x40aaf0: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e2750b: mov eax, dword ptr [rbp-0x18]
old instr: 0x40aaf3: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e2750e: lea rdx, ptr [rax+rax*1]
old instr: 0x40aaf7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27512: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aafb: add rax, rdx
    new instr:0x7fd3d0e27516: add rax, rdx
old instr: 0x40aafe: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e27519: movzx eax, word ptr [rax]
old instr: 0x40ab01: mov word ptr [rbp-0xa], ax
    new instr:0x7fd3d0e2751c: mov word ptr [rbp-0xa], ax
old instr: 0x40ab05: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e27520: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab09: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e27524: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fd3d0e27528: jnz 0x7fd3d0e2753a
40ab1f
old instr: 0x40ab1f: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e2752a: add dword ptr [rbp-0x14], 0x1
old instr: 0x40ab23: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e2752e: add dword ptr [rbp-0x18], 0x1
old instr: 0x40ab27: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27532: mov edx, dword ptr [rbp-0x14]
old instr: 0x40ab2a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27535: mov rax, qword ptr [rbp-0x20]
old instr: 0x40ab2e: add rax, rdx
    new instr:0x7fd3d0e27539: add rax, rdx
old instr: 0x40ab31: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2753c: movzx eax, byte ptr [rax]
old instr: 0x40ab34: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e2753f: mov byte ptr [rbp-0x5], al
old instr: 0x40ab37: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27542: mov edx, dword ptr [rbp-0x18]
old instr: 0x40ab3a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27545: mov rax, qword ptr [rbp-0x20]
old instr: 0x40ab3e: add rax, rdx
    new instr:0x7fd3d0e27549: add rax, rdx
old instr: 0x40ab41: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e2754c: movzx eax, byte ptr [rax]
old instr: 0x40ab44: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e2754f: mov byte ptr [rbp-0x6], al
old instr: 0x40ab47: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27552: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40ab4b: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27556: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fd3d0e27559: jnz 0x7fd3d0e2756a
40ab5f
old instr: 0x40ab5f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e2755b: mov eax, dword ptr [rbp-0x14]
old instr: 0x40ab62: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e2755e: lea rdx, ptr [rax+rax*1]
old instr: 0x40ab66: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27562: mov rax, qword ptr [rbp-0x28]
old instr: 0x40ab6a: add rax, rdx
    new instr:0x7fd3d0e27566: add rax, rdx
old instr: 0x40ab6d: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e27569: movzx eax, word ptr [rax]
old instr: 0x40ab70: mov word ptr [rbp-0x8], ax
    new instr:0x7fd3d0e2756c: mov word ptr [rbp-0x8], ax
old instr: 0x40ab74: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27570: mov eax, dword ptr [rbp-0x18]
old instr: 0x40ab77: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27573: lea rdx, ptr [rax+rax*1]
old instr: 0x40ab7b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27577: mov rax, qword ptr [rbp-0x28]
old instr: 0x40ab7f: add rax, rdx
    new instr:0x7fd3d0e2757b: add rax, rdx
old instr: 0x40ab82: movzx eax, word ptr [rax]
    new instr:0x7fd3d0e2757e: movzx eax, word ptr [rax]
old instr: 0x40ab85: mov word ptr [rbp-0xa], ax
    new instr:0x7fd3d0e27581: mov word ptr [rbp-0xa], ax
old instr: 0x40ab89: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e27585: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab8d: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e27589: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fd3d0e2758d: jnz 0x7fd3d0e2759c
40aba0
old instr: 0x40aba0: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fd3d0e2758f: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aba4: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fd3d0e27593: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aba8: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27597: mov eax, dword ptr [rbp-0x14]
old instr: 0x40abab: cmp eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e2759a: cmp eax, dword ptr [rbp-0x2c]
in revert 
    new instr:0x7fd3d0e2759d: jnb 0x7fd3d0e275a5
40abb6
old instr: 0x40abb6: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e2759f: mov eax, dword ptr [rbp-0x18]
old instr: 0x40abb9: cmp eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e275a2: cmp eax, dword ptr [rbp-0x2c]
in revert 
    new instr:0x7fd3d0e275a5: jnb 0x7fd3d0e275ad
40abc4
old instr: 0x40abc4: sub dword ptr [rbp-0x4], 0x8
    new instr:0x7fd3d0e275a7: sub dword ptr [rbp-0x4], 0x8
old instr: 0x40abc8: mov rax, qword ptr [rbp-0x38]
    new instr:0x7fd3d0e275ab: mov rax, qword ptr [rbp-0x38]
old instr: 0x40abcc: mov eax, dword ptr [rax]
    new instr:0x7fd3d0e275af: mov eax, dword ptr [rax]
old instr: 0x40abce: lea edx, ptr [rax-0x1]
    new instr:0x7fd3d0e275b1: lea edx, ptr [rax-0x1]
old instr: 0x40abd1: mov rax, qword ptr [rbp-0x38]
    new instr:0x7fd3d0e275b4: mov rax, qword ptr [rbp-0x38]
old instr: 0x40abd5: mov dword ptr [rax], edx
    new instr:0x7fd3d0e275b8: mov dword ptr [rax], edx
old instr: 0x40abd7: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fd3d0e275ba: cmp dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
40a78b
old instr: 0x40a78b: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e275be: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a78e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e275c1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a792: add rax, rdx
    new instr:0x7fd3d0e275c5: add rax, rdx
old instr: 0x40a795: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e275c8: movzx eax, byte ptr [rax]
old instr: 0x40a798: mov byte ptr [rbp-0x5], al
    new instr:0x7fd3d0e275cb: mov byte ptr [rbp-0x5], al
old instr: 0x40a79b: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e275ce: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a79e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e275d1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a7a2: add rax, rdx
    new instr:0x7fd3d0e275d5: add rax, rdx
old instr: 0x40a7a5: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e275d8: movzx eax, byte ptr [rax]
old instr: 0x40a7a8: mov byte ptr [rbp-0x6], al
    new instr:0x7fd3d0e275db: mov byte ptr [rbp-0x6], al
old instr: 0x40a7ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e275de: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a7af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e275e2: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a7b2: jz 0x40a7c3
    new instr:0x7fd3d0e275e5: jz 0x7fd3d0e275f6
inserted instruction
add jump to 
    new instr:0x7fd3d0e275e7: jmp 0x7fd3d1231da0
40a7f7
old instr: 0x40a7f7: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e275ec: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a7fb: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e275f0: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a7ff: setnbe al
    new instr:0x7fd3d0e275f4: setnbe al
in revert 
removing jump and inserting a dummy entry 
40abe6
old instr: 0x40abe6: pop rbp
    new instr:0x7fd3d0e275f7: pop rbp
old instr: 0x40abe7: ret 
    new instr:0x7fd3d0e275f8: ret 
inserted instruction
40a87b
old instr: 0x40a87b: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e275f9: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a87f: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e275fd: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a883: setnbe al
    new instr:0x7fd3d0e27601: setnbe al
old instr: 0x40a886: jmp 0x40abe6
    new instr:0x7fd3d0e27604: jmp 0x7fd3d0e27964
inserted instruction
40a8ff
old instr: 0x40a8ff: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e27609: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a903: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e2760d: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a907: setnbe al
    new instr:0x7fd3d0e27611: setnbe al
old instr: 0x40a90a: jmp 0x40abe6
    new instr:0x7fd3d0e27614: jmp 0x7fd3d0e278f0
inserted instruction
40a4ab
old instr: 0x40a4ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27619: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2761d: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a4b2: setnbe al
    new instr:0x7fd3d0e27620: setnbe al
old instr: 0x40a4b5: jmp 0x40abe6
    new instr:0x7fd3d0e27623: jmp 0x7fd3d0e27d54
inserted instruction
40a983
old instr: 0x40a983: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e27628: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a987: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e2762c: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a98b: setnbe al
    new instr:0x7fd3d0e27630: setnbe al
old instr: 0x40a98e: jmp 0x40abe6
    new instr:0x7fd3d0e27633: jmp 0x7fd3d0e2788b
inserted instruction
40a4eb
old instr: 0x40a4eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27638: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2763c: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a4f2: setnbe al
    new instr:0x7fd3d0e2763f: setnbe al
old instr: 0x40a4f5: jmp 0x40abe6
    new instr:0x7fd3d0e27642: jmp 0x7fd3d0e27d33
inserted instruction
40a5ab
old instr: 0x40a5ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27647: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2764b: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a5b2: setnbe al
    new instr:0x7fd3d0e2764e: setnbe al
old instr: 0x40a5b5: jmp 0x40abe6
    new instr:0x7fd3d0e27651: jmp 0x7fd3d0e27c82
inserted instruction
40a5eb
old instr: 0x40a5eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27656: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2765a: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a5f2: setnbe al
    new instr:0x7fd3d0e2765d: setnbe al
old instr: 0x40a5f5: jmp 0x40abe6
    new instr:0x7fd3d0e27660: jmp 0x7fd3d0e27c51
inserted instruction
40aa07
old instr: 0x40aa07: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e27665: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa0b: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e27669: cmp ax, word ptr [rbp-0xa]
old instr: 0x40aa0f: setnbe al
    new instr:0x7fd3d0e2766d: setnbe al
old instr: 0x40aa12: jmp 0x40abe6
    new instr:0x7fd3d0e27670: jmp 0x7fd3d0e27844
inserted instruction
40a62b
old instr: 0x40a62b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27675: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a62f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27679: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a632: setnbe al
    new instr:0x7fd3d0e2767c: setnbe al
old instr: 0x40a635: jmp 0x40abe6
    new instr:0x7fd3d0e2767f: jmp 0x7fd3d0e27c30
inserted instruction
40a52b
old instr: 0x40a52b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27684: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a52f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27688: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a532: setnbe al
    new instr:0x7fd3d0e2768b: setnbe al
old instr: 0x40a535: jmp 0x40abe6
    new instr:0x7fd3d0e2768e: jmp 0x7fd3d0e27d3f
inserted instruction
40ab93
old instr: 0x40ab93: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e27693: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab97: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e27697: cmp ax, word ptr [rbp-0xa]
old instr: 0x40ab9b: setnbe al
    new instr:0x7fd3d0e2769b: setnbe al
old instr: 0x40ab9e: jmp 0x40abe6
    new instr:0x7fd3d0e2769e: jmp 0x7fd3d0e276e6
inserted instruction
40aa8b
old instr: 0x40aa8b: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e276a0: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa8f: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e276a4: cmp ax, word ptr [rbp-0xa]
old instr: 0x40aa93: setnbe al
    new instr:0x7fd3d0e276a8: setnbe al
old instr: 0x40aa96: jmp 0x40abe6
    new instr:0x7fd3d0e276ab: jmp 0x7fd3d0e277fb
inserted instruction
40a56b
old instr: 0x40a56b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e276b0: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a56f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e276b4: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a572: setnbe al
    new instr:0x7fd3d0e276b7: setnbe al
old instr: 0x40a575: jmp 0x40abe6
    new instr:0x7fd3d0e276ba: jmp 0x7fd3d0e27d2b
inserted instruction
40ab0f
old instr: 0x40ab0f: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fd3d0e276bf: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab13: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fd3d0e276c3: cmp ax, word ptr [rbp-0xa]
old instr: 0x40ab17: setnbe al
    new instr:0x7fd3d0e276c7: setnbe al
old instr: 0x40ab1a: jmp 0x40abe6
    new instr:0x7fd3d0e276ca: jmp 0x7fd3d0e27796
inserted instruction
40a66b
old instr: 0x40a66b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e276cf: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a66f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e276d3: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a672: setnbe al
    new instr:0x7fd3d0e276d6: setnbe al
old instr: 0x40a675: jmp 0x40abe6
    new instr:0x7fd3d0e276d9: jmp 0x7fd3d0e27c4a
inserted instruction
40a6ab
old instr: 0x40a6ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e276de: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e276e2: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a6b2: setnbe al
    new instr:0x7fd3d0e276e5: setnbe al
old instr: 0x40a6b5: jmp 0x40abe6
    new instr:0x7fd3d0e276e8: jmp 0x7fd3d0e27c19
inserted instruction
40a8bc
old instr: 0x40a8bc: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e276ed: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a8c0: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e276f1: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a8c3: setnbe al
    new instr:0x7fd3d0e276f4: setnbe al
old instr: 0x40a8c6: jmp 0x40abe6
    new instr:0x7fd3d0e276f7: jmp 0x7fd3d0e27a17
inserted instruction
40a838
old instr: 0x40a838: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e276fc: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a83c: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27700: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a83f: setnbe al
    new instr:0x7fd3d0e27703: setnbe al
old instr: 0x40a842: jmp 0x40abe6
    new instr:0x7fd3d0e27706: jmp 0x7fd3d0e27aaa
inserted instruction
40a7b4
old instr: 0x40a7b4: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e2770b: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a7b8: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2770f: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a7bb: setnbe al
    new instr:0x7fd3d0e27712: setnbe al
old instr: 0x40a7be: jmp 0x40abe6
    new instr:0x7fd3d0e27715: jmp 0x7fd3d0e27b3d
inserted instruction
40a6eb
old instr: 0x40a6eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e2771a: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2771e: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a6f2: setnbe al
    new instr:0x7fd3d0e27721: setnbe al
old instr: 0x40a6f5: jmp 0x40abe6
    new instr:0x7fd3d0e27724: jmp 0x7fd3d0e27c15
inserted instruction
40a940
old instr: 0x40a940: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27729: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a944: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2772d: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a947: setnbe al
    new instr:0x7fd3d0e27730: setnbe al
old instr: 0x40a94a: jmp 0x40abe6
    new instr:0x7fd3d0e27733: jmp 0x7fd3d0e279cf
inserted instruction
40a72b
old instr: 0x40a72b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27738: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a72f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2773c: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a732: setnbe al
    new instr:0x7fd3d0e2773f: setnbe al
old instr: 0x40a735: jmp 0x40abe6
    new instr:0x7fd3d0e27742: jmp 0x7fd3d0e27bf3
inserted instruction
40a76b
old instr: 0x40a76b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27747: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a76f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2774b: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a772: setnbe al
    new instr:0x7fd3d0e2774e: setnbe al
old instr: 0x40a775: jmp 0x40abe6
    new instr:0x7fd3d0e27751: jmp 0x7fd3d0e27bc2
inserted instruction
40aacc
old instr: 0x40aacc: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27756: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aad0: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e2775a: cmp al, byte ptr [rbp-0x6]
old instr: 0x40aad3: setnbe al
    new instr:0x7fd3d0e2775d: setnbe al
old instr: 0x40aad6: jmp 0x40abe6
    new instr:0x7fd3d0e27760: jmp 0x7fd3d0e27870
inserted instruction
40aa48
old instr: 0x40aa48: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27765: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aa4c: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27769: cmp al, byte ptr [rbp-0x6]
old instr: 0x40aa4f: setnbe al
    new instr:0x7fd3d0e2776c: setnbe al
old instr: 0x40aa52: jmp 0x40abe6
    new instr:0x7fd3d0e2776f: jmp 0x7fd3d0e27903
inserted instruction
40a9c4
old instr: 0x40a9c4: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27774: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a9c8: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27778: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a9cb: setnbe al
    new instr:0x7fd3d0e2777b: setnbe al
old instr: 0x40a9ce: jmp 0x40abe6
    new instr:0x7fd3d0e2777e: jmp 0x7fd3d0e27996
inserted instruction
40ab50
old instr: 0x40ab50: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fd3d0e27783: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40ab54: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fd3d0e27787: cmp al, byte ptr [rbp-0x6]
old instr: 0x40ab57: setnbe al
    new instr:0x7fd3d0e2778a: setnbe al
old instr: 0x40ab5a: jmp 0x40abe6
    new instr:0x7fd3d0e2778d: jmp 0x7fd3d0e27819
inserted instruction
40abbe
old instr: 0x40abbe: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e27792: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40abc1: sub dword ptr [rbp-0x18], eax
    new instr:0x7fd3d0e27795: sub dword ptr [rbp-0x18], eax
old instr: 0x40abc4: sub dword ptr [rbp-0x4], 0x8
    new instr:0x7fd3d0e27798: sub dword ptr [rbp-0x4], 0x8
old instr: 0x40abc8: mov rax, qword ptr [rbp-0x38]
    new instr:0x7fd3d0e2779c: mov rax, qword ptr [rbp-0x38]
old instr: 0x40abcc: mov eax, dword ptr [rax]
    new instr:0x7fd3d0e277a0: mov eax, dword ptr [rax]
old instr: 0x40abce: lea edx, ptr [rax-0x1]
    new instr:0x7fd3d0e277a2: lea edx, ptr [rax-0x1]
old instr: 0x40abd1: mov rax, qword ptr [rbp-0x38]
    new instr:0x7fd3d0e277a5: mov rax, qword ptr [rbp-0x38]
old instr: 0x40abd5: mov dword ptr [rax], edx
    new instr:0x7fd3d0e277a9: mov dword ptr [rax], edx
old instr: 0x40abd7: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fd3d0e277ab: cmp dword ptr [rbp-0x4], 0x0
old instr: 0x40abdb: jns 0x40a78b
    new instr:0x7fd3d0e277af: jns 0x7fd3d0e2735f
inserted instruction
40abb0
old instr: 0x40abb0: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e277b5: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40abb3: sub dword ptr [rbp-0x14], eax
    new instr:0x7fd3d0e277b8: sub dword ptr [rbp-0x14], eax
old instr: 0x40abb6: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e277bb: mov eax, dword ptr [rbp-0x18]
old instr: 0x40abb9: cmp eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e277be: cmp eax, dword ptr [rbp-0x2c]
address is :40abbc


old instr: 0x40abbc: jb 0x40abc4
    new instr:0x7fd3d0e277c1: jb 0x7fd3d0e277c9
    new instr:0x7fd3d0e277c3: jmp 0x7fd3d0e277c7
rtn name: mainGtU : 0
22
40cb2c
old instr: 0x40cb2c: push rbp
    new instr:0x7fd3d0e277c8: push rbp
old instr: 0x40cb2d: mov rbp, rsp
    new instr:0x7fd3d0e277c9: mov rbp, rsp
old instr: 0x40cb30: push r14
    new instr:0x7fd3d0e277cc: push r14
old instr: 0x40cb32: push r13
    new instr:0x7fd3d0e277ce: push r13
old instr: 0x40cb34: push r12
    new instr:0x7fd3d0e277d0: push r12
old instr: 0x40cb36: push rbx
    new instr:0x7fd3d0e277d2: push rbx
old instr: 0x40cb37: sub rsp, 0x138
    new instr:0x7fd3d0e277d3: sub rsp, 0x138
old instr: 0x40cb3e: mov qword ptr [rbp-0x158], rdi
    new instr:0x7fd3d0e277da: mov qword ptr [rbp-0x158], rdi
old instr: 0x40cb45: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e277e1: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb4c: mov rax, qword ptr [rax+0x38]
    new instr:0x7fd3d0e277e8: mov rax, qword ptr [rax+0x38]
old instr: 0x40cb50: mov qword ptr [rbp-0x38], rax
    new instr:0x7fd3d0e277ec: mov qword ptr [rbp-0x38], rax
old instr: 0x40cb54: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e277f0: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb5b: mov rax, qword ptr [rax+0x40]
    new instr:0x7fd3d0e277f7: mov rax, qword ptr [rax+0x40]
old instr: 0x40cb5f: mov qword ptr [rbp-0x40], rax
    new instr:0x7fd3d0e277fb: mov qword ptr [rbp-0x40], rax
old instr: 0x40cb63: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e277ff: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb6a: mov rax, qword ptr [rax+0x48]
    new instr:0x7fd3d0e27806: mov rax, qword ptr [rax+0x48]
old instr: 0x40cb6e: mov qword ptr [rbp-0x48], rax
    new instr:0x7fd3d0e2780a: mov qword ptr [rbp-0x48], rax
old instr: 0x40cb72: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e2780e: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb79: mov rdi, rax
    new instr:0x7fd3d0e27815: mov rdi, rax
old instr: 0x40cb7c: call 0x40cac2
    new instr:0x7fd3d0e27818: call 0x7fd3d0e2775e
inserted instruction
40cb81
old instr: 0x40cb81: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e2781d: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb88: mov eax, dword ptr [rax+0x7c]
    new instr:0x7fd3d0e27824: mov eax, dword ptr [rax+0x7c]
old instr: 0x40cb8b: add eax, 0x1
    new instr:0x7fd3d0e27827: add eax, 0x1
old instr: 0x40cb8e: mov dword ptr [rbp-0x4c], eax
    new instr:0x7fd3d0e2782a: mov dword ptr [rbp-0x4c], eax
old instr: 0x40cb91: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7fd3d0e2782d: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40cbb9
old instr: 0x40cbb9: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27834: mov eax, dword ptr [rbp-0x24]
old instr: 0x40cbbc: cmp eax, dword ptr [rbp-0x4c]
    new instr:0x7fd3d0e27837: cmp eax, dword ptr [rbp-0x4c]
in revert 
removing jump and inserting a dummy entry 
40cb9a
old instr: 0x40cb9a: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e2783a: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cba1: mov edx, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27841: mov edx, dword ptr [rbp-0x24]
old instr: 0x40cba4: movsxd rdx, edx
    new instr:0x7fd3d0e27844: movsxd rdx, edx
old instr: 0x40cba7: add rdx, 0xa8
    new instr:0x7fd3d0e27847: add rdx, 0xa8
old instr: 0x40cbae: mov dword ptr [rax+rdx*4], 0x0
    new instr:0x7fd3d0e2784e: mov dword ptr [rax+rdx*4], 0x0
old instr: 0x40cbb5: add dword ptr [rbp-0x24], 0x1
    new instr:0x7fd3d0e27855: add dword ptr [rbp-0x24], 0x1
old instr: 0x40cbb9: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27859: mov eax, dword ptr [rbp-0x24]
old instr: 0x40cbbc: cmp eax, dword ptr [rbp-0x4c]
    new instr:0x7fd3d0e2785c: cmp eax, dword ptr [rbp-0x4c]
old instr: 0x40cbbf: jle 0x40cb9a
    new instr:0x7fd3d0e2785f: jle 0x7fd3d0e2783a
inserted instruction
40cbc1
old instr: 0x40cbc1: mov dword ptr [rbp-0x30], 0x0
    new instr:0x7fd3d0e27861: mov dword ptr [rbp-0x30], 0x0
old instr: 0x40cbc8: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fd3d0e27868: mov dword ptr [rbp-0x2c], 0x0
old instr: 0x40cbcf: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7fd3d0e2786f: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40cbed
old instr: 0x40cbed: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27876: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cbf4: mov eax, dword ptr [rax+0x7c]
    new instr:0x7fd3d0e2787d: mov eax, dword ptr [rax+0x7c]
old instr: 0x40cbf7: cmp eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27880: cmp eax, dword ptr [rbp-0x24]
in revert 
removing jump and inserting a dummy entry 
40cbd8
old instr: 0x40cbd8: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27883: mov eax, dword ptr [rbp-0x24]
old instr: 0x40cbdb: mov edx, eax
    new instr:0x7fd3d0e27886: mov edx, eax
old instr: 0x40cbdd: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27888: mov eax, dword ptr [rbp-0x24]
old instr: 0x40cbe0: cdqe 
    new instr:0x7fd3d0e2788b: cdqe 
old instr: 0x40cbe2: mov byte ptr [rbp+rax*1-0x150], dl
    new instr:0x7fd3d0e2788d: mov byte ptr [rbp+rax*1-0x150], dl
old instr: 0x40cbe9: add dword ptr [rbp-0x24], 0x1
    new instr:0x7fd3d0e27894: add dword ptr [rbp-0x24], 0x1
old instr: 0x40cbed: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27898: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cbf4: mov eax, dword ptr [rax+0x7c]
    new instr:0x7fd3d0e2789f: mov eax, dword ptr [rax+0x7c]
old instr: 0x40cbf7: cmp eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e278a2: cmp eax, dword ptr [rbp-0x24]
old instr: 0x40cbfa: jnle 0x40cbd8
    new instr:0x7fd3d0e278a5: jnle 0x7fd3d0e27883
inserted instruction
40cbfc
old instr: 0x40cbfc: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7fd3d0e278a7: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40cdc5
old instr: 0x40cdc5: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e278ae: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cdcc: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e278b5: mov eax, dword ptr [rax+0x6c]
old instr: 0x40cdcf: cmp eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e278b8: cmp eax, dword ptr [rbp-0x24]
in revert 
removing jump and inserting a dummy entry 
40cc08
old instr: 0x40cc08: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e278bb: mov eax, dword ptr [rbp-0x24]
old instr: 0x40cc0b: cdqe 
    new instr:0x7fd3d0e278be: cdqe 
old instr: 0x40cc0d: lea rdx, ptr [rax*4]
    new instr:0x7fd3d0e278c0: lea rdx, ptr [rax*4]
old instr: 0x40cc15: mov rax, qword ptr [rbp-0x38]
    new instr:0x7fd3d0e278c8: mov rax, qword ptr [rbp-0x38]
old instr: 0x40cc19: add rax, rdx
    new instr:0x7fd3d0e278cc: add rax, rdx
old instr: 0x40cc1c: mov eax, dword ptr [rax]
    new instr:0x7fd3d0e278cf: mov eax, dword ptr [rax]
old instr: 0x40cc1e: sub eax, 0x1
    new instr:0x7fd3d0e278d1: sub eax, 0x1
old instr: 0x40cc21: mov dword ptr [rbp-0x28], eax
    new instr:0x7fd3d0e278d4: mov dword ptr [rbp-0x28], eax
old instr: 0x40cc24: cmp dword ptr [rbp-0x28], 0x0
    new instr:0x7fd3d0e278d7: cmp dword ptr [rbp-0x28], 0x0
in revert 
    new instr:0x7fd3d0e278db: js 0x7fd3d0e278ea
40cc37
old instr: 0x40cc37: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fd3d0e278dd: mov eax, dword ptr [rbp-0x28]
old instr: 0x40cc3a: movsxd rdx, eax
    new instr:0x7fd3d0e278e0: movsxd rdx, eax
old instr: 0x40cc3d: mov rax, qword ptr [rbp-0x40]
    new instr:0x7fd3d0e278e3: mov rax, qword ptr [rbp-0x40]
old instr: 0x40cc41: add rax, rdx
    new instr:0x7fd3d0e278e7: add rax, rdx
old instr: 0x40cc44: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e278ea: movzx eax, byte ptr [rax]
old instr: 0x40cc47: movzx eax, al
    new instr:0x7fd3d0e278ed: movzx eax, al
old instr: 0x40cc4a: mov rdx, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e278f0: mov rdx, qword ptr [rbp-0x158]
old instr: 0x40cc51: cdqe 
    new instr:0x7fd3d0e278f7: cdqe 
old instr: 0x40cc53: movzx eax, byte ptr [rdx+rax*1+0x180]
    new instr:0x7fd3d0e278f9: movzx eax, byte ptr [rdx+rax*1+0x180]
old instr: 0x40cc5b: mov byte ptr [rbp-0x4d], al
    new instr:0x7fd3d0e27901: mov byte ptr [rbp-0x4d], al
old instr: 0x40cc5e: movzx eax, byte ptr [rbp-0x150]
    new instr:0x7fd3d0e27904: movzx eax, byte ptr [rbp-0x150]
old instr: 0x40cc65: cmp al, byte ptr [rbp-0x4d]
    new instr:0x7fd3d0e2790b: cmp al, byte ptr [rbp-0x4d]
old instr: 0x40cc68: jnz 0x40cc73
    new instr:0x7fd3d0e2790e: jnz 0x7fd3d0e27919
inserted instruction
40cc6a
old instr: 0x40cc6a: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7fd3d0e27910: add dword ptr [rbp-0x2c], 0x1
in revert 
removing jump and inserting a dummy entry 
40cdc1
old instr: 0x40cdc1: add dword ptr [rbp-0x24], 0x1
    new instr:0x7fd3d0e27914: add dword ptr [rbp-0x24], 0x1
old instr: 0x40cdc5: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27918: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cdcc: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e2791f: mov eax, dword ptr [rax+0x6c]
old instr: 0x40cdcf: cmp eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27922: cmp eax, dword ptr [rbp-0x24]
old instr: 0x40cdd2: jnle 0x40cc08
    new instr:0x7fd3d0e27925: jnle 0x7fd3d0e2775b
inserted instruction
add jump to 
    new instr:0x7fd3d0e2792b: jmp 0x7fd3d1234708
40cc73
old instr: 0x40cc73: cmp dword ptr [rbp-0x2c], 0x0
    new instr:0x7fd3d0e27930: cmp dword ptr [rbp-0x2c], 0x0
old instr: 0x40cc77: jle 0x40cd1e
    new instr:0x7fd3d0e27934: jle 0x7fd3d0e279db
inserted instruction
40cc7d
old instr: 0x40cc7d: sub dword ptr [rbp-0x2c], 0x1
    new instr:0x7fd3d0e2793a: sub dword ptr [rbp-0x2c], 0x1
old instr: 0x40cc81: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e2793e: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40cc84: and eax, 0x1
    new instr:0x7fd3d0e27941: and eax, 0x1
old instr: 0x40cc87: test eax, eax
    new instr:0x7fd3d0e27944: test eax, eax
old instr: 0x40cc89: jz 0x40ccc3
    new instr:0x7fd3d0e27946: jz 0x7fd3d0e27980
inserted instruction
40cc8b
old instr: 0x40cc8b: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fd3d0e27948: mov eax, dword ptr [rbp-0x30]
old instr: 0x40cc8e: cdqe 
    new instr:0x7fd3d0e2794b: cdqe 
old instr: 0x40cc90: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e2794d: lea rdx, ptr [rax+rax*1]
old instr: 0x40cc94: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27951: mov rax, qword ptr [rbp-0x48]
old instr: 0x40cc98: add rax, rdx
    new instr:0x7fd3d0e27955: add rax, rdx
old instr: 0x40cc9b: mov word ptr [rax], 0x1
    new instr:0x7fd3d0e27958: mov word ptr [rax], 0x1
old instr: 0x40cca0: add dword ptr [rbp-0x30], 0x1
    new instr:0x7fd3d0e2795d: add dword ptr [rbp-0x30], 0x1
old instr: 0x40cca4: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27961: mov rax, qword ptr [rbp-0x158]
old instr: 0x40ccab: mov eax, dword ptr [rax+0x2a4]
    new instr:0x7fd3d0e27968: mov eax, dword ptr [rax+0x2a4]
old instr: 0x40ccb1: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e2796e: lea edx, ptr [rax+0x1]
old instr: 0x40ccb4: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27971: mov rax, qword ptr [rbp-0x158]
old instr: 0x40ccbb: mov dword ptr [rax+0x2a4], edx
    new instr:0x7fd3d0e27978: mov dword ptr [rax+0x2a4], edx
in revert 
removing jump and inserting a dummy entry 
40ccf9
old instr: 0x40ccf9: cmp dword ptr [rbp-0x2c], 0x1
    new instr:0x7fd3d0e2797e: cmp dword ptr [rbp-0x2c], 0x1
old instr: 0x40ccfd: jle 0x40cd16
    new instr:0x7fd3d0e27982: jle 0x7fd3d0e2799b
inserted instruction
40ccff
old instr: 0x40ccff: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e27984: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40cd02: sub eax, 0x2
    new instr:0x7fd3d0e27987: sub eax, 0x2
old instr: 0x40cd05: mov edx, eax
    new instr:0x7fd3d0e2798a: mov edx, eax
old instr: 0x40cd07: shr edx, 0x1f
    new instr:0x7fd3d0e2798c: shr edx, 0x1f
old instr: 0x40cd0a: add eax, edx
    new instr:0x7fd3d0e2798f: add eax, edx
old instr: 0x40cd0c: sar eax, 0x1
    new instr:0x7fd3d0e27991: sar eax, 0x1
old instr: 0x40cd0e: mov dword ptr [rbp-0x2c], eax
    new instr:0x7fd3d0e27993: mov dword ptr [rbp-0x2c], eax
in revert 
removing jump and inserting a dummy entry 
40cc81
old instr: 0x40cc81: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e27996: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40cc84: and eax, 0x1
    new instr:0x7fd3d0e27999: and eax, 0x1
old instr: 0x40cc87: test eax, eax
    new instr:0x7fd3d0e2799c: test eax, eax
in revert 
    new instr:0x7fd3d0e2799e: jnz 0x7fd3d0e279d8
40ccc3
old instr: 0x40ccc3: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fd3d0e279a0: mov eax, dword ptr [rbp-0x30]
old instr: 0x40ccc6: cdqe 
    new instr:0x7fd3d0e279a3: cdqe 
old instr: 0x40ccc8: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e279a5: lea rdx, ptr [rax+rax*1]
old instr: 0x40cccc: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e279a9: mov rax, qword ptr [rbp-0x48]
old instr: 0x40ccd0: add rax, rdx
    new instr:0x7fd3d0e279ad: add rax, rdx
old instr: 0x40ccd3: mov word ptr [rax], 0x0
    new instr:0x7fd3d0e279b0: mov word ptr [rax], 0x0
old instr: 0x40ccd8: add dword ptr [rbp-0x30], 0x1
    new instr:0x7fd3d0e279b5: add dword ptr [rbp-0x30], 0x1
old instr: 0x40ccdc: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e279b9: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cce3: mov eax, dword ptr [rax+0x2a0]
    new instr:0x7fd3d0e279c0: mov eax, dword ptr [rax+0x2a0]
old instr: 0x40cce9: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e279c6: lea edx, ptr [rax+0x1]
old instr: 0x40ccec: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e279c9: mov rax, qword ptr [rbp-0x158]
old instr: 0x40ccf3: mov dword ptr [rax+0x2a0], edx
    new instr:0x7fd3d0e279d0: mov dword ptr [rax+0x2a0], edx
old instr: 0x40ccf9: cmp dword ptr [rbp-0x2c], 0x1
    new instr:0x7fd3d0e279d6: cmp dword ptr [rbp-0x2c], 0x1
in revert 
    new instr:0x7fd3d0e279da: jnle 0x7fd3d0e279f3
40cd16
old instr: 0x40cd16: nop
    new instr:0x7fd3d0e279dc: nop
old instr: 0x40cd17: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fd3d0e279dd: mov dword ptr [rbp-0x2c], 0x0
old instr: 0x40cd1e: movzx r12d, byte ptr [rbp-0x14f]
    new instr:0x7fd3d0e279e4: movzx r12d, byte ptr [rbp-0x14f]
old instr: 0x40cd26: movzx eax, byte ptr [rbp-0x150]
    new instr:0x7fd3d0e279ec: movzx eax, byte ptr [rbp-0x150]
old instr: 0x40cd2d: mov byte ptr [rbp-0x14f], al
    new instr:0x7fd3d0e279f3: mov byte ptr [rbp-0x14f], al
old instr: 0x40cd33: lea rax, ptr [rbp-0x150]
    new instr:0x7fd3d0e279f9: lea rax, ptr [rbp-0x150]
old instr: 0x40cd3a: lea rbx, ptr [rax+0x1]
    new instr:0x7fd3d0e27a00: lea rbx, ptr [rax+0x1]
old instr: 0x40cd3e: movzx r14d, byte ptr [rbp-0x4d]
    new instr:0x7fd3d0e27a04: movzx r14d, byte ptr [rbp-0x4d]
in revert 
removing jump and inserting a dummy entry 
40cd53
old instr: 0x40cd53: cmp r14b, r12b
    new instr:0x7fd3d0e27a09: cmp r14b, r12b
in revert 
    new instr:0x7fd3d0e27a0c: jz 0x7fd3d0e279fb
40cd45
old instr: 0x40cd45: add rbx, 0x1
    new instr:0x7fd3d0e27a0e: add rbx, 0x1
old instr: 0x40cd49: mov r13d, r12d
    new instr:0x7fd3d0e27a12: mov r13d, r12d
old instr: 0x40cd4c: movzx r12d, byte ptr [rbx]
    new instr:0x7fd3d0e27a15: movzx r12d, byte ptr [rbx]
old instr: 0x40cd50: mov byte ptr [rbx], r13b
    new instr:0x7fd3d0e27a19: mov byte ptr [rbx], r13b
old instr: 0x40cd53: cmp r14b, r12b
    new instr:0x7fd3d0e27a1c: cmp r14b, r12b
old instr: 0x40cd56: jnz 0x40cd45
    new instr:0x7fd3d0e27a1f: jnz 0x7fd3d0e27a0e
inserted instruction
40cd58
old instr: 0x40cd58: mov byte ptr [rbp-0x150], r12b
    new instr:0x7fd3d0e27a21: mov byte ptr [rbp-0x150], r12b
old instr: 0x40cd5f: mov rdx, rbx
    new instr:0x7fd3d0e27a28: mov rdx, rbx
old instr: 0x40cd62: lea rax, ptr [rbp-0x150]
    new instr:0x7fd3d0e27a2b: lea rax, ptr [rbp-0x150]
old instr: 0x40cd69: mov rcx, rdx
    new instr:0x7fd3d0e27a32: mov rcx, rdx
old instr: 0x40cd6c: sub rcx, rax
    new instr:0x7fd3d0e27a35: sub rcx, rax
old instr: 0x40cd6f: mov rax, rcx
    new instr:0x7fd3d0e27a38: mov rax, rcx
old instr: 0x40cd72: mov dword ptr [rbp-0x28], eax
    new instr:0x7fd3d0e27a3b: mov dword ptr [rbp-0x28], eax
old instr: 0x40cd75: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fd3d0e27a3e: mov eax, dword ptr [rbp-0x30]
old instr: 0x40cd78: cdqe 
    new instr:0x7fd3d0e27a41: cdqe 
old instr: 0x40cd7a: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27a43: lea rdx, ptr [rax+rax*1]
old instr: 0x40cd7e: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27a47: mov rax, qword ptr [rbp-0x48]
old instr: 0x40cd82: add rax, rdx
    new instr:0x7fd3d0e27a4b: add rax, rdx
old instr: 0x40cd85: mov edx, dword ptr [rbp-0x28]
    new instr:0x7fd3d0e27a4e: mov edx, dword ptr [rbp-0x28]
old instr: 0x40cd88: add edx, 0x1
    new instr:0x7fd3d0e27a51: add edx, 0x1
old instr: 0x40cd8b: mov word ptr [rax], dx
    new instr:0x7fd3d0e27a54: mov word ptr [rax], dx
old instr: 0x40cd8e: add dword ptr [rbp-0x30], 0x1
    new instr:0x7fd3d0e27a57: add dword ptr [rbp-0x30], 0x1
old instr: 0x40cd92: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fd3d0e27a5b: mov eax, dword ptr [rbp-0x28]
old instr: 0x40cd95: add eax, 0x1
    new instr:0x7fd3d0e27a5e: add eax, 0x1
old instr: 0x40cd98: mov rdx, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27a61: mov rdx, qword ptr [rbp-0x158]
old instr: 0x40cd9f: movsxd rcx, eax
    new instr:0x7fd3d0e27a68: movsxd rcx, eax
old instr: 0x40cda2: add rcx, 0xa8
    new instr:0x7fd3d0e27a6b: add rcx, 0xa8
old instr: 0x40cda9: mov edx, dword ptr [rdx+rcx*4]
    new instr:0x7fd3d0e27a72: mov edx, dword ptr [rdx+rcx*4]
old instr: 0x40cdac: lea ecx, ptr [rdx+0x1]
    new instr:0x7fd3d0e27a75: lea ecx, ptr [rdx+0x1]
old instr: 0x40cdaf: mov rdx, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27a78: mov rdx, qword ptr [rbp-0x158]
old instr: 0x40cdb6: cdqe 
    new instr:0x7fd3d0e27a7f: cdqe 
old instr: 0x40cdb8: add rax, 0xa8
    new instr:0x7fd3d0e27a81: add rax, 0xa8
old instr: 0x40cdbe: mov dword ptr [rdx+rax*4], ecx
    new instr:0x7fd3d0e27a87: mov dword ptr [rdx+rax*4], ecx
old instr: 0x40cdc1: add dword ptr [rbp-0x24], 0x1
    new instr:0x7fd3d0e27a8a: add dword ptr [rbp-0x24], 0x1
old instr: 0x40cdc5: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27a8e: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cdcc: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e27a95: mov eax, dword ptr [rax+0x6c]
old instr: 0x40cdcf: cmp eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27a98: cmp eax, dword ptr [rbp-0x24]
old instr: 0x40cdd2: jnle 0x40cc08
    new instr:0x7fd3d0e27a9b: jnle 0x7fd3d0e278d1
inserted instruction
40cd1e
old instr: 0x40cd1e: movzx r12d, byte ptr [rbp-0x14f]
    new instr:0x7fd3d0e27aa1: movzx r12d, byte ptr [rbp-0x14f]
old instr: 0x40cd26: movzx eax, byte ptr [rbp-0x150]
    new instr:0x7fd3d0e27aa9: movzx eax, byte ptr [rbp-0x150]
old instr: 0x40cd2d: mov byte ptr [rbp-0x14f], al
    new instr:0x7fd3d0e27ab0: mov byte ptr [rbp-0x14f], al
old instr: 0x40cd33: lea rax, ptr [rbp-0x150]
    new instr:0x7fd3d0e27ab6: lea rax, ptr [rbp-0x150]
old instr: 0x40cd3a: lea rbx, ptr [rax+0x1]
    new instr:0x7fd3d0e27abd: lea rbx, ptr [rax+0x1]
old instr: 0x40cd3e: movzx r14d, byte ptr [rbp-0x4d]
    new instr:0x7fd3d0e27ac1: movzx r14d, byte ptr [rbp-0x4d]
old instr: 0x40cd43: jmp 0x40cd53
    new instr:0x7fd3d0e27ac6: jmp 0x7fd3d0e27ad6
inserted instruction
40cc2a
old instr: 0x40cc2a: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27ac8: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cc31: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e27acf: mov eax, dword ptr [rax+0x6c]
old instr: 0x40cc34: add dword ptr [rbp-0x28], eax
    new instr:0x7fd3d0e27ad2: add dword ptr [rbp-0x28], eax
old instr: 0x40cc37: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fd3d0e27ad5: mov eax, dword ptr [rbp-0x28]
old instr: 0x40cc3a: movsxd rdx, eax
    new instr:0x7fd3d0e27ad8: movsxd rdx, eax
old instr: 0x40cc3d: mov rax, qword ptr [rbp-0x40]
    new instr:0x7fd3d0e27adb: mov rax, qword ptr [rbp-0x40]
old instr: 0x40cc41: add rax, rdx
    new instr:0x7fd3d0e27adf: add rax, rdx
old instr: 0x40cc44: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27ae2: movzx eax, byte ptr [rax]
old instr: 0x40cc47: movzx eax, al
    new instr:0x7fd3d0e27ae5: movzx eax, al
old instr: 0x40cc4a: mov rdx, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27ae8: mov rdx, qword ptr [rbp-0x158]
old instr: 0x40cc51: cdqe 
    new instr:0x7fd3d0e27aef: cdqe 
old instr: 0x40cc53: movzx eax, byte ptr [rdx+rax*1+0x180]
    new instr:0x7fd3d0e27af1: movzx eax, byte ptr [rdx+rax*1+0x180]
old instr: 0x40cc5b: mov byte ptr [rbp-0x4d], al
    new instr:0x7fd3d0e27af9: mov byte ptr [rbp-0x4d], al
old instr: 0x40cc5e: movzx eax, byte ptr [rbp-0x150]
    new instr:0x7fd3d0e27afc: movzx eax, byte ptr [rbp-0x150]
old instr: 0x40cc65: cmp al, byte ptr [rbp-0x4d]
    new instr:0x7fd3d0e27b03: cmp al, byte ptr [rbp-0x4d]
old instr: 0x40cc68: jnz 0x40cc73
    new instr:0x7fd3d0e27b06: jnz 0x7fd3d0e27b11
inserted instruction
40cdd8
old instr: 0x40cdd8: cmp dword ptr [rbp-0x2c], 0x0
    new instr:0x7fd3d0e27b08: cmp dword ptr [rbp-0x2c], 0x0
inserted instruction
40cde2
old instr: 0x40cde2: sub dword ptr [rbp-0x2c], 0x1
    new instr:0x7fd3d0e27b0c: sub dword ptr [rbp-0x2c], 0x1
old instr: 0x40cde6: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e27b10: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40cde9: and eax, 0x1
    new instr:0x7fd3d0e27b13: and eax, 0x1
old instr: 0x40cdec: test eax, eax
    new instr:0x7fd3d0e27b16: test eax, eax
old instr: 0x40cdee: jz 0x40ce28
    new instr:0x7fd3d0e27b18: jz 0x7fd3d0e27b52
inserted instruction
40cdf0
old instr: 0x40cdf0: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fd3d0e27b1a: mov eax, dword ptr [rbp-0x30]
old instr: 0x40cdf3: cdqe 
    new instr:0x7fd3d0e27b1d: cdqe 
old instr: 0x40cdf5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27b1f: lea rdx, ptr [rax+rax*1]
old instr: 0x40cdf9: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27b23: mov rax, qword ptr [rbp-0x48]
old instr: 0x40cdfd: add rax, rdx
    new instr:0x7fd3d0e27b27: add rax, rdx
old instr: 0x40ce00: mov word ptr [rax], 0x1
    new instr:0x7fd3d0e27b2a: mov word ptr [rax], 0x1
old instr: 0x40ce05: add dword ptr [rbp-0x30], 0x1
    new instr:0x7fd3d0e27b2f: add dword ptr [rbp-0x30], 0x1
old instr: 0x40ce09: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27b33: mov rax, qword ptr [rbp-0x158]
old instr: 0x40ce10: mov eax, dword ptr [rax+0x2a4]
    new instr:0x7fd3d0e27b3a: mov eax, dword ptr [rax+0x2a4]
old instr: 0x40ce16: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e27b40: lea edx, ptr [rax+0x1]
old instr: 0x40ce19: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27b43: mov rax, qword ptr [rbp-0x158]
old instr: 0x40ce20: mov dword ptr [rax+0x2a4], edx
    new instr:0x7fd3d0e27b4a: mov dword ptr [rax+0x2a4], edx
in revert 
removing jump and inserting a dummy entry 
40ce5e
old instr: 0x40ce5e: cmp dword ptr [rbp-0x2c], 0x1
    new instr:0x7fd3d0e27b50: cmp dword ptr [rbp-0x2c], 0x1
old instr: 0x40ce62: jle 0x40ce7b
    new instr:0x7fd3d0e27b54: jle 0x7fd3d0e27b6d
inserted instruction
40ce64
old instr: 0x40ce64: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e27b56: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40ce67: sub eax, 0x2
    new instr:0x7fd3d0e27b59: sub eax, 0x2
old instr: 0x40ce6a: mov edx, eax
    new instr:0x7fd3d0e27b5c: mov edx, eax
old instr: 0x40ce6c: shr edx, 0x1f
    new instr:0x7fd3d0e27b5e: shr edx, 0x1f
old instr: 0x40ce6f: add eax, edx
    new instr:0x7fd3d0e27b61: add eax, edx
old instr: 0x40ce71: sar eax, 0x1
    new instr:0x7fd3d0e27b63: sar eax, 0x1
old instr: 0x40ce73: mov dword ptr [rbp-0x2c], eax
    new instr:0x7fd3d0e27b65: mov dword ptr [rbp-0x2c], eax
in revert 
removing jump and inserting a dummy entry 
40cde6
old instr: 0x40cde6: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e27b68: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40cde9: and eax, 0x1
    new instr:0x7fd3d0e27b6b: and eax, 0x1
old instr: 0x40cdec: test eax, eax
    new instr:0x7fd3d0e27b6e: test eax, eax
in revert 
    new instr:0x7fd3d0e27b70: jnz 0x7fd3d0e27baa
40ce28
old instr: 0x40ce28: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fd3d0e27b72: mov eax, dword ptr [rbp-0x30]
old instr: 0x40ce2b: cdqe 
    new instr:0x7fd3d0e27b75: cdqe 
old instr: 0x40ce2d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27b77: lea rdx, ptr [rax+rax*1]
old instr: 0x40ce31: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27b7b: mov rax, qword ptr [rbp-0x48]
old instr: 0x40ce35: add rax, rdx
    new instr:0x7fd3d0e27b7f: add rax, rdx
old instr: 0x40ce38: mov word ptr [rax], 0x0
    new instr:0x7fd3d0e27b82: mov word ptr [rax], 0x0
old instr: 0x40ce3d: add dword ptr [rbp-0x30], 0x1
    new instr:0x7fd3d0e27b87: add dword ptr [rbp-0x30], 0x1
old instr: 0x40ce41: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27b8b: mov rax, qword ptr [rbp-0x158]
old instr: 0x40ce48: mov eax, dword ptr [rax+0x2a0]
    new instr:0x7fd3d0e27b92: mov eax, dword ptr [rax+0x2a0]
old instr: 0x40ce4e: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e27b98: lea edx, ptr [rax+0x1]
old instr: 0x40ce51: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27b9b: mov rax, qword ptr [rbp-0x158]
old instr: 0x40ce58: mov dword ptr [rax+0x2a0], edx
    new instr:0x7fd3d0e27ba2: mov dword ptr [rax+0x2a0], edx
old instr: 0x40ce5e: cmp dword ptr [rbp-0x2c], 0x1
    new instr:0x7fd3d0e27ba8: cmp dword ptr [rbp-0x2c], 0x1
in revert 
    new instr:0x7fd3d0e27bac: jnle 0x7fd3d0e27bc5
40ce7b
old instr: 0x40ce7b: nop
    new instr:0x7fd3d0e27bae: nop
old instr: 0x40ce7c: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fd3d0e27baf: mov dword ptr [rbp-0x2c], 0x0
old instr: 0x40ce83: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fd3d0e27bb6: mov eax, dword ptr [rbp-0x30]
old instr: 0x40ce86: cdqe 
    new instr:0x7fd3d0e27bb9: cdqe 
old instr: 0x40ce88: lea rdx, ptr [rax+rax*1]
    new instr:0x7fd3d0e27bbb: lea rdx, ptr [rax+rax*1]
old instr: 0x40ce8c: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27bbf: mov rax, qword ptr [rbp-0x48]
old instr: 0x40ce90: add rdx, rax
    new instr:0x7fd3d0e27bc3: add rdx, rax
old instr: 0x40ce93: mov eax, dword ptr [rbp-0x4c]
    new instr:0x7fd3d0e27bc6: mov eax, dword ptr [rbp-0x4c]
old instr: 0x40ce96: mov word ptr [rdx], ax
    new instr:0x7fd3d0e27bc9: mov word ptr [rdx], ax
old instr: 0x40ce99: add dword ptr [rbp-0x30], 0x1
    new instr:0x7fd3d0e27bcc: add dword ptr [rbp-0x30], 0x1
old instr: 0x40ce9d: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27bd0: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cea4: mov edx, dword ptr [rbp-0x4c]
    new instr:0x7fd3d0e27bd7: mov edx, dword ptr [rbp-0x4c]
old instr: 0x40cea7: movsxd rdx, edx
    new instr:0x7fd3d0e27bda: movsxd rdx, edx
old instr: 0x40ceaa: add rdx, 0xa8
    new instr:0x7fd3d0e27bdd: add rdx, 0xa8
old instr: 0x40ceb1: mov eax, dword ptr [rax+rdx*4]
    new instr:0x7fd3d0e27be4: mov eax, dword ptr [rax+rdx*4]
old instr: 0x40ceb4: lea ecx, ptr [rax+0x1]
    new instr:0x7fd3d0e27be7: lea ecx, ptr [rax+0x1]
old instr: 0x40ceb7: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27bea: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cebe: mov edx, dword ptr [rbp-0x4c]
    new instr:0x7fd3d0e27bf1: mov edx, dword ptr [rbp-0x4c]
old instr: 0x40cec1: movsxd rdx, edx
    new instr:0x7fd3d0e27bf4: movsxd rdx, edx
old instr: 0x40cec4: add rdx, 0xa8
    new instr:0x7fd3d0e27bf7: add rdx, 0xa8
old instr: 0x40cecb: mov dword ptr [rax+rdx*4], ecx
    new instr:0x7fd3d0e27bfe: mov dword ptr [rax+rdx*4], ecx
old instr: 0x40cece: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fd3d0e27c01: mov rax, qword ptr [rbp-0x158]
old instr: 0x40ced5: mov edx, dword ptr [rbp-0x30]
    new instr:0x7fd3d0e27c08: mov edx, dword ptr [rbp-0x30]
old instr: 0x40ced8: mov dword ptr [rax+0x29c], edx
    new instr:0x7fd3d0e27c0b: mov dword ptr [rax+0x29c], edx
old instr: 0x40cede: add rsp, 0x138
    new instr:0x7fd3d0e27c11: add rsp, 0x138
old instr: 0x40cee5: pop rbx
    new instr:0x7fd3d0e27c18: pop rbx
old instr: 0x40cee6: pop r12
    new instr:0x7fd3d0e27c19: pop r12
old instr: 0x40cee8: pop r13
    new instr:0x7fd3d0e27c1b: pop r13
old instr: 0x40ceea: pop r14
    new instr:0x7fd3d0e27c1d: pop r14
old instr: 0x40ceec: pop rbp
    new instr:0x7fd3d0e27c1f: pop rbp
address is :40ceed


old instr: 0x40ceed: ret 
    new instr:0x7fd3d0e27c20: ret 
old instr: 0x40ceed: ret 
    new instr:0x7fd3d0e27c21: ret 
inserted instruction
rtn name: generateMTFValues : 1
f
40c679
old instr: 0x40c679: push rbp
    new instr:0x7fd3d0e27c22: push rbp
old instr: 0x40c67a: mov rbp, rsp
    new instr:0x7fd3d0e27c23: mov rbp, rsp
old instr: 0x40c67d: sub rsp, 0x60
    new instr:0x7fd3d0e27c26: sub rsp, 0x60
old instr: 0x40c681: mov qword ptr [rbp-0x48], rdi
    new instr:0x7fd3d0e27c2a: mov qword ptr [rbp-0x48], rdi
old instr: 0x40c685: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27c2e: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c689: mov rax, qword ptr [rax+0x38]
    new instr:0x7fd3d0e27c32: mov rax, qword ptr [rax+0x38]
old instr: 0x40c68d: mov qword ptr [rbp-0x10], rax
    new instr:0x7fd3d0e27c36: mov qword ptr [rbp-0x10], rax
old instr: 0x40c691: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27c3a: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c695: mov rax, qword ptr [rax+0x40]
    new instr:0x7fd3d0e27c3e: mov rax, qword ptr [rax+0x40]
old instr: 0x40c699: mov qword ptr [rbp-0x18], rax
    new instr:0x7fd3d0e27c42: mov qword ptr [rbp-0x18], rax
old instr: 0x40c69d: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27c46: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6a1: mov rax, qword ptr [rax+0x28]
    new instr:0x7fd3d0e27c4a: mov rax, qword ptr [rax+0x28]
old instr: 0x40c6a5: mov qword ptr [rbp-0x20], rax
    new instr:0x7fd3d0e27c4e: mov qword ptr [rbp-0x20], rax
old instr: 0x40c6a9: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27c52: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6ad: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e27c56: mov eax, dword ptr [rax+0x6c]
old instr: 0x40c6b0: mov dword ptr [rbp-0x24], eax
    new instr:0x7fd3d0e27c59: mov dword ptr [rbp-0x24], eax
old instr: 0x40c6b3: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27c5c: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6b7: mov eax, dword ptr [rax+0x290]
    new instr:0x7fd3d0e27c60: mov eax, dword ptr [rax+0x290]
old instr: 0x40c6bd: mov dword ptr [rbp-0x28], eax
    new instr:0x7fd3d0e27c66: mov dword ptr [rbp-0x28], eax
old instr: 0x40c6c0: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27c69: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6c4: mov eax, dword ptr [rax+0x58]
    new instr:0x7fd3d0e27c6d: mov eax, dword ptr [rax+0x58]
old instr: 0x40c6c7: mov dword ptr [rbp-0x4], eax
    new instr:0x7fd3d0e27c70: mov dword ptr [rbp-0x4], eax
old instr: 0x40c6ca: cmp dword ptr [rbp-0x24], 0x270f
    new instr:0x7fd3d0e27c73: cmp dword ptr [rbp-0x24], 0x270f
in revert 
removing jump and inserting a dummy entry 
40c6fd
old instr: 0x40c6fd: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27c7a: mov eax, dword ptr [rbp-0x24]
old instr: 0x40c700: add eax, 0x22
    new instr:0x7fd3d0e27c7d: add eax, 0x22
old instr: 0x40c703: mov dword ptr [rbp-0x8], eax
    new instr:0x7fd3d0e27c80: mov dword ptr [rbp-0x8], eax
old instr: 0x40c706: mov eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27c83: mov eax, dword ptr [rbp-0x8]
old instr: 0x40c709: and eax, 0x1
    new instr:0x7fd3d0e27c86: and eax, 0x1
old instr: 0x40c70c: test eax, eax
    new instr:0x7fd3d0e27c89: test eax, eax
old instr: 0x40c70e: jz 0x40c714
    new instr:0x7fd3d0e27c8b: jz 0x7fd3d0e27c91
inserted instruction
40c710
old instr: 0x40c710: add dword ptr [rbp-0x8], 0x1
    new instr:0x7fd3d0e27c8d: add dword ptr [rbp-0x8], 0x1
old instr: 0x40c714: mov eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27c91: mov eax, dword ptr [rbp-0x8]
old instr: 0x40c717: movsxd rdx, eax
    new instr:0x7fd3d0e27c94: movsxd rdx, eax
old instr: 0x40c71a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e27c97: mov rax, qword ptr [rbp-0x18]
old instr: 0x40c71e: add rax, rdx
    new instr:0x7fd3d0e27c9b: add rax, rdx
old instr: 0x40c721: mov qword ptr [rbp-0x30], rax
    new instr:0x7fd3d0e27c9e: mov qword ptr [rbp-0x30], rax
old instr: 0x40c725: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fd3d0e27ca2: cmp dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
40c732
old instr: 0x40c732: cmp dword ptr [rbp-0x4], 0x64
    new instr:0x7fd3d0e27ca6: cmp dword ptr [rbp-0x4], 0x64
in revert 
removing jump and inserting a dummy entry 
40c73f
old instr: 0x40c73f: mov eax, dword ptr [rbp-0x4]
    new instr:0x7fd3d0e27caa: mov eax, dword ptr [rbp-0x4]
old instr: 0x40c742: lea ecx, ptr [rax-0x1]
    new instr:0x7fd3d0e27cad: lea ecx, ptr [rax-0x1]
old instr: 0x40c745: mov edx, 0x55555556
    new instr:0x7fd3d0e27cb0: mov edx, 0x55555556
old instr: 0x40c74a: mov eax, ecx
    new instr:0x7fd3d0e27cb5: mov eax, ecx
old instr: 0x40c74c: imul edx
    new instr:0x7fd3d0e27cb7: imul edx
old instr: 0x40c74e: mov eax, ecx
    new instr:0x7fd3d0e27cb9: mov eax, ecx
old instr: 0x40c750: sar eax, 0x1f
    new instr:0x7fd3d0e27cbb: sar eax, 0x1f
old instr: 0x40c753: mov ecx, edx
    new instr:0x7fd3d0e27cbe: mov ecx, edx
old instr: 0x40c755: sub ecx, eax
    new instr:0x7fd3d0e27cc0: sub ecx, eax
old instr: 0x40c757: mov eax, ecx
    new instr:0x7fd3d0e27cc2: mov eax, ecx
old instr: 0x40c759: imul eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27cc4: imul eax, dword ptr [rbp-0x24]
old instr: 0x40c75d: mov dword ptr [rbp-0x34], eax
    new instr:0x7fd3d0e27cc8: mov dword ptr [rbp-0x34], eax
old instr: 0x40c760: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fd3d0e27ccb: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c763: mov dword ptr [rbp-0x38], eax
    new instr:0x7fd3d0e27cce: mov dword ptr [rbp-0x38], eax
old instr: 0x40c766: mov r9d, dword ptr [rbp-0x28]
    new instr:0x7fd3d0e27cd1: mov r9d, dword ptr [rbp-0x28]
old instr: 0x40c76a: mov r8d, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e27cd5: mov r8d, dword ptr [rbp-0x24]
old instr: 0x40c76e: mov rcx, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e27cd9: mov rcx, qword ptr [rbp-0x20]
old instr: 0x40c772: mov rdx, qword ptr [rbp-0x30]
    new instr:0x7fd3d0e27cdd: mov rdx, qword ptr [rbp-0x30]
old instr: 0x40c776: mov rsi, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e27ce1: mov rsi, qword ptr [rbp-0x18]
old instr: 0x40c77a: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27ce5: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c77e: lea rdi, ptr [rbp-0x38]
    new instr:0x7fd3d0e27ce9: lea rdi, ptr [rbp-0x38]
old instr: 0x40c782: mov qword ptr [rsp], rdi
    new instr:0x7fd3d0e27ced: mov qword ptr [rsp], rdi
old instr: 0x40c786: mov rdi, rax
    new instr:0x7fd3d0e27cf1: mov rdi, rax
old instr: 0x40c789: call 0x40b826
    new instr:0x7fd3d0e27cf4: call 0x7fd3d0e26d91
inserted instruction
40c78e
old instr: 0x40c78e: cmp dword ptr [rbp-0x28], 0x2
    new instr:0x7fd3d0e27cf9: cmp dword ptr [rbp-0x28], 0x2
in revert 
removing jump and inserting a dummy entry 
40c7f3
old instr: 0x40c7f3: mov eax, dword ptr [rbp-0x38]
    new instr:0x7fd3d0e27cfd: mov eax, dword ptr [rbp-0x38]
old instr: 0x40c7f6: test eax, eax
    new instr:0x7fd3d0e27d00: test eax, eax
in revert 
removing jump and inserting a dummy entry 
40c843
old instr: 0x40c843: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27d02: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c847: mov dword ptr [rax+0x30], 0xffffffff
    new instr:0x7fd3d0e27d06: mov dword ptr [rax+0x30], 0xffffffff
old instr: 0x40c84e: mov dword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e27d0d: mov dword ptr [rbp-0x8], 0x0
in revert 
removing jump and inserting a dummy entry 
40c881
old instr: 0x40c881: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27d14: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c885: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e27d18: mov eax, dword ptr [rax+0x6c]
old instr: 0x40c888: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27d1b: cmp eax, dword ptr [rbp-0x8]
in revert 
removing jump and inserting a dummy entry 
40c857
old instr: 0x40c857: mov eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27d1e: mov eax, dword ptr [rbp-0x8]
old instr: 0x40c85a: cdqe 
    new instr:0x7fd3d0e27d21: cdqe 
old instr: 0x40c85c: lea rdx, ptr [rax*4]
    new instr:0x7fd3d0e27d23: lea rdx, ptr [rax*4]
old instr: 0x40c864: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27d2b: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c868: add rax, rdx
    new instr:0x7fd3d0e27d2f: add rax, rdx
old instr: 0x40c86b: mov eax, dword ptr [rax]
    new instr:0x7fd3d0e27d32: mov eax, dword ptr [rax]
old instr: 0x40c86d: test eax, eax
    new instr:0x7fd3d0e27d34: test eax, eax
in revert 
    new instr:0x7fd3d0e27d36: jz 0x7fd3d0e27d44
40c87d
old instr: 0x40c87d: add dword ptr [rbp-0x8], 0x1
    new instr:0x7fd3d0e27d38: add dword ptr [rbp-0x8], 0x1
old instr: 0x40c881: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27d3c: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c885: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e27d40: mov eax, dword ptr [rax+0x6c]
old instr: 0x40c888: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27d43: cmp eax, dword ptr [rbp-0x8]
old instr: 0x40c88b: jnle 0x40c857
    new instr:0x7fd3d0e27d46: jnle 0x7fd3d0e27d12
inserted instruction
40c871
old instr: 0x40c871: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27d48: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c875: mov edx, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27d4c: mov edx, dword ptr [rbp-0x8]
old instr: 0x40c878: mov dword ptr [rax+0x30], edx
    new instr:0x7fd3d0e27d4f: mov dword ptr [rax+0x30], edx
in revert 
removing jump and inserting a dummy entry 
40c88d
old instr: 0x40c88d: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e27d52: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c891: mov eax, dword ptr [rax+0x30]
    new instr:0x7fd3d0e27d56: mov eax, dword ptr [rax+0x30]
old instr: 0x40c894: cmp eax, 0xffffffff
    new instr:0x7fd3d0e27d59: cmp eax, 0xffffffff
in revert 
removing jump and inserting a dummy entry 
40c8a3
old instr: 0x40c8a3: leave 
    new instr:0x7fd3d0e27d5c: leave 
old instr: 0x40c8a4: ret 
    new instr:0x7fd3d0e27d5d: ret 
inserted instruction
40c714
old instr: 0x40c714: mov eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27d5e: mov eax, dword ptr [rbp-0x8]
old instr: 0x40c717: movsxd rdx, eax
    new instr:0x7fd3d0e27d61: movsxd rdx, eax
old instr: 0x40c71a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e27d64: mov rax, qword ptr [rbp-0x18]
old instr: 0x40c71e: add rax, rdx
    new instr:0x7fd3d0e27d68: add rax, rdx
old instr: 0x40c721: mov qword ptr [rbp-0x30], rax
    new instr:0x7fd3d0e27d6b: mov qword ptr [rbp-0x30], rax
old instr: 0x40c725: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fd3d0e27d6f: cmp dword ptr [rbp-0x4], 0x0
address is :40c729


old instr: 0x40c729: jnle 0x40c732
    new instr:0x7fd3d0e27d73: jnle 0x7fd3d0e27d7c
    new instr:0x7fd3d0e27d75: jmp 0x7fd3d0e27d79
rtn name: BZ2_blockSort : 2
4
40c94c
old instr: 0x40c94c: push rbp
    new instr:0x7fd3d0e27d7a: push rbp
old instr: 0x40c94d: mov rbp, rsp
    new instr:0x7fd3d0e27d7b: mov rbp, rsp
old instr: 0x40c950: push rbx
    new instr:0x7fd3d0e27d7e: push rbx
old instr: 0x40c951: mov qword ptr [rbp-0x10], rdi
    new instr:0x7fd3d0e27d7f: mov qword ptr [rbp-0x10], rdi
old instr: 0x40c955: mov dword ptr [rbp-0x14], esi
    new instr:0x7fd3d0e27d83: mov dword ptr [rbp-0x14], esi
old instr: 0x40c958: mov dword ptr [rbp-0x18], edx
    new instr:0x7fd3d0e27d86: mov dword ptr [rbp-0x18], edx
in revert 
removing jump and inserting a dummy entry 
40c9c1
old instr: 0x40c9c1: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27d89: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9c5: mov eax, dword ptr [rax+0x284]
    new instr:0x7fd3d0e27d8d: mov eax, dword ptr [rax+0x284]
old instr: 0x40c9cb: cmp eax, 0x7
    new instr:0x7fd3d0e27d93: cmp eax, 0x7
old instr: 0x40c9ce: jnle 0x40c95d
    new instr:0x7fd3d0e27d96: jnle 0x7fd3d0e27d25
inserted instruction
40c9d0
old instr: 0x40c9d0: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27d98: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9d4: mov edx, dword ptr [rax+0x280]
    new instr:0x7fd3d0e27d9c: mov edx, dword ptr [rax+0x280]
old instr: 0x40c9da: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27da2: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9de: mov eax, dword ptr [rax+0x284]
    new instr:0x7fd3d0e27da6: mov eax, dword ptr [rax+0x284]
old instr: 0x40c9e4: mov ecx, 0x20
    new instr:0x7fd3d0e27dac: mov ecx, 0x20
old instr: 0x40c9e9: mov ebx, ecx
    new instr:0x7fd3d0e27db1: mov ebx, ecx
old instr: 0x40c9eb: sub ebx, eax
    new instr:0x7fd3d0e27db3: sub ebx, eax
old instr: 0x40c9ed: mov eax, ebx
    new instr:0x7fd3d0e27db5: mov eax, ebx
old instr: 0x40c9ef: sub eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27db7: sub eax, dword ptr [rbp-0x14]
old instr: 0x40c9f2: mov esi, dword ptr [rbp-0x18]
    new instr:0x7fd3d0e27dba: mov esi, dword ptr [rbp-0x18]
old instr: 0x40c9f5: mov ebx, esi
    new instr:0x7fd3d0e27dbd: mov ebx, esi
old instr: 0x40c9f7: mov ecx, eax
    new instr:0x7fd3d0e27dbf: mov ecx, eax
old instr: 0x40c9f9: shl ebx, cl
    new instr:0x7fd3d0e27dc1: shl ebx, cl
old instr: 0x40c9fb: mov eax, ebx
    new instr:0x7fd3d0e27dc3: mov eax, ebx
old instr: 0x40c9fd: or edx, eax
    new instr:0x7fd3d0e27dc5: or edx, eax
old instr: 0x40c9ff: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27dc7: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca03: mov dword ptr [rax+0x280], edx
    new instr:0x7fd3d0e27dcb: mov dword ptr [rax+0x280], edx
old instr: 0x40ca09: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27dd1: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca0d: mov edx, dword ptr [rax+0x284]
    new instr:0x7fd3d0e27dd5: mov edx, dword ptr [rax+0x284]
old instr: 0x40ca13: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e27ddb: mov eax, dword ptr [rbp-0x14]
old instr: 0x40ca16: add edx, eax
    new instr:0x7fd3d0e27dde: add edx, eax
old instr: 0x40ca18: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27de0: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca1c: mov dword ptr [rax+0x284], edx
    new instr:0x7fd3d0e27de4: mov dword ptr [rax+0x284], edx
old instr: 0x40ca22: pop rbx
    new instr:0x7fd3d0e27dea: pop rbx
old instr: 0x40ca23: pop rbp
    new instr:0x7fd3d0e27deb: pop rbp
old instr: 0x40ca24: ret 
    new instr:0x7fd3d0e27dec: ret 
inserted instruction
40c95d
old instr: 0x40c95d: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27ded: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c961: mov rdx, qword ptr [rax+0x50]
    new instr:0x7fd3d0e27df1: mov rdx, qword ptr [rax+0x50]
old instr: 0x40c965: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27df5: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c969: mov eax, dword ptr [rax+0x74]
    new instr:0x7fd3d0e27df9: mov eax, dword ptr [rax+0x74]
old instr: 0x40c96c: cdqe 
    new instr:0x7fd3d0e27dfc: cdqe 
old instr: 0x40c96e: add rdx, rax
    new instr:0x7fd3d0e27dfe: add rdx, rax
old instr: 0x40c971: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e01: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c975: mov eax, dword ptr [rax+0x280]
    new instr:0x7fd3d0e27e05: mov eax, dword ptr [rax+0x280]
old instr: 0x40c97b: shr eax, 0x18
    new instr:0x7fd3d0e27e0b: shr eax, 0x18
old instr: 0x40c97e: mov byte ptr [rdx], al
    new instr:0x7fd3d0e27e0e: mov byte ptr [rdx], al
old instr: 0x40c980: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e10: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c984: mov eax, dword ptr [rax+0x74]
    new instr:0x7fd3d0e27e14: mov eax, dword ptr [rax+0x74]
old instr: 0x40c987: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e27e17: lea edx, ptr [rax+0x1]
old instr: 0x40c98a: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e1a: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c98e: mov dword ptr [rax+0x74], edx
    new instr:0x7fd3d0e27e1e: mov dword ptr [rax+0x74], edx
old instr: 0x40c991: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e21: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c995: mov eax, dword ptr [rax+0x280]
    new instr:0x7fd3d0e27e25: mov eax, dword ptr [rax+0x280]
old instr: 0x40c99b: mov edx, eax
    new instr:0x7fd3d0e27e2b: mov edx, eax
old instr: 0x40c99d: shl edx, 0x8
    new instr:0x7fd3d0e27e2d: shl edx, 0x8
old instr: 0x40c9a0: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e30: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9a4: mov dword ptr [rax+0x280], edx
    new instr:0x7fd3d0e27e34: mov dword ptr [rax+0x280], edx
old instr: 0x40c9aa: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e3a: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9ae: mov eax, dword ptr [rax+0x284]
    new instr:0x7fd3d0e27e3e: mov eax, dword ptr [rax+0x284]
old instr: 0x40c9b4: lea edx, ptr [rax-0x8]
    new instr:0x7fd3d0e27e44: lea edx, ptr [rax-0x8]
old instr: 0x40c9b7: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e47: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9bb: mov dword ptr [rax+0x284], edx
    new instr:0x7fd3d0e27e4b: mov dword ptr [rax+0x284], edx
old instr: 0x40c9c1: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e51: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9c5: mov eax, dword ptr [rax+0x284]
    new instr:0x7fd3d0e27e55: mov eax, dword ptr [rax+0x284]
old instr: 0x40c9cb: cmp eax, 0x7
    new instr:0x7fd3d0e27e5b: cmp eax, 0x7
address is :40c9ce


old instr: 0x40c9ce: jnle 0x40c95d
    new instr:0x7fd3d0e27e5e: jnle 0x7fd3d0e27ded
    new instr:0x7fd3d0e27e60: jmp 0x7fd3d1234835
rtn name: bsW : 3
1d
405ac7
old instr: 0x405ac7: push rbp
    new instr:0x7fd3d0e27e65: push rbp
old instr: 0x405ac8: mov rbp, rsp
    new instr:0x7fd3d0e27e66: mov rbp, rsp
old instr: 0x405acb: sub rsp, 0x20
    new instr:0x7fd3d0e27e69: sub rsp, 0x20
old instr: 0x405acf: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e27e6d: mov qword ptr [rbp-0x18], rdi
old instr: 0x405ad3: mov byte ptr [rbp-0x1], 0x0
    new instr:0x7fd3d0e27e71: mov byte ptr [rbp-0x1], 0x0
old instr: 0x405ad7: mov byte ptr [rbp-0x2], 0x0
    new instr:0x7fd3d0e27e75: mov byte ptr [rbp-0x2], 0x0
old instr: 0x405adb: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e27e79: mov rax, qword ptr [rbp-0x18]
old instr: 0x405adf: mov rax, qword ptr [rax+0x30]
    new instr:0x7fd3d0e27e7d: mov rax, qword ptr [rax+0x30]
old instr: 0x405ae3: mov qword ptr [rbp-0x10], rax
    new instr:0x7fd3d0e27e81: mov qword ptr [rbp-0x10], rax
in revert 
removing jump and inserting a dummy entry 
405aea
old instr: 0x405aea: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e85: mov rax, qword ptr [rbp-0x10]
old instr: 0x405aee: mov eax, dword ptr [rax+0xc]
    new instr:0x7fd3d0e27e89: mov eax, dword ptr [rax+0xc]
old instr: 0x405af1: cmp eax, 0x1
    new instr:0x7fd3d0e27e8c: cmp eax, 0x1
in revert 
    new instr:0x7fd3d0e27e8f: jz 0x7fd3d0e27f27
405b8c
old instr: 0x405b8c: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e95: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b90: mov eax, dword ptr [rax+0xc]
    new instr:0x7fd3d0e27e99: mov eax, dword ptr [rax+0xc]
old instr: 0x405b93: cmp eax, 0x2
    new instr:0x7fd3d0e27e9c: cmp eax, 0x2
inserted instruction
405b9c
old instr: 0x405b9c: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e27e9f: mov rax, qword ptr [rbp-0x10]
old instr: 0x405ba0: mov rdi, rax
    new instr:0x7fd3d0e27ea3: mov rdi, rax
    new instr:0x7fd3d0e27ea6: sub rsp, 0x8
old instr: 0x40565c: push rbp
    new instr:0x7fd3d0e27eaa: push rbp
old instr: 0x40565d: mov rbp, rsp
    new instr:0x7fd3d0e27eab: mov rbp, rsp
old instr: 0x405660: sub rsp, 0x28
    new instr:0x7fd3d0e27eae: sub rsp, 0x28
old instr: 0x405664: mov qword ptr [rbp-0x28], rdi
    new instr:0x7fd3d0e27eb2: mov qword ptr [rbp-0x28], rdi
old instr: 0x405668: mov byte ptr [rbp-0x1], 0x0
    new instr:0x7fd3d0e27eb6: mov byte ptr [rbp-0x1], 0x0
old instr: 0x40566c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27eba: mov rax, qword ptr [rbp-0x28]
old instr: 0x405670: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e27ebe: mov eax, dword ptr [rax+0x8]
old instr: 0x405673: cmp eax, 0x2
    new instr:0x7fd3d0e27ec1: cmp eax, 0x2
old instr: 0x405676: jnz 0x405821
    new instr:0x7fd3d0e27ec4: jnz 0x7fd3d0e2806f
old instr: 0x40567c: jmp 0x40567f
    new instr:0x7fd3d0e27eca: jmp 0x7fd3d0e27ecd
old instr: 0x40567e: nop
    new instr:0x7fd3d0e27ecc: nop
old instr: 0x40567f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27ecd: mov rax, qword ptr [rbp-0x28]
old instr: 0x405683: mov edx, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e27ed1: mov edx, dword ptr [rax+0x6c]
old instr: 0x405686: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27ed4: mov rax, qword ptr [rbp-0x28]
old instr: 0x40568a: mov eax, dword ptr [rax+0x70]
    new instr:0x7fd3d0e27ed8: mov eax, dword ptr [rax+0x70]
old instr: 0x40568d: cmp edx, eax
    new instr:0x7fd3d0e27edb: cmp edx, eax
old instr: 0x40568f: jnl 0x4059df
    new instr:0x7fd3d0e27edd: jnl 0x7fd3d0e2822d
old instr: 0x405695: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27ee3: mov rax, qword ptr [rbp-0x28]
old instr: 0x405699: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e27ee7: mov rax, qword ptr [rax]
old instr: 0x40569c: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e27eea: mov eax, dword ptr [rax+0x8]
old instr: 0x40569f: test eax, eax
    new instr:0x7fd3d0e27eed: test eax, eax
old instr: 0x4056a1: jz 0x4059e2
    new instr:0x7fd3d0e27eef: jz 0x7fd3d0e28230
old instr: 0x4056a7: mov byte ptr [rbp-0x1], 0x1
    new instr:0x7fd3d0e27ef5: mov byte ptr [rbp-0x1], 0x1
old instr: 0x4056ab: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27ef9: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056af: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e27efd: mov rax, qword ptr [rax]
old instr: 0x4056b2: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e27f00: mov rax, qword ptr [rax]
old instr: 0x4056b5: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e27f03: movzx eax, byte ptr [rax]
old instr: 0x4056b8: movzx eax, al
    new instr:0x7fd3d0e27f06: movzx eax, al
old instr: 0x4056bb: mov dword ptr [rbp-0x8], eax
    new instr:0x7fd3d0e27f09: mov dword ptr [rbp-0x8], eax
old instr: 0x4056be: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f0c: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056c2: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e27f10: mov eax, dword ptr [rax+0x5c]
old instr: 0x4056c5: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27f13: cmp eax, dword ptr [rbp-0x8]
old instr: 0x4056c8: jz 0x40576d
    new instr:0x7fd3d0e27f16: jz 0x7fd3d0e27fbb
old instr: 0x4056ce: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f1c: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056d2: mov eax, dword ptr [rax+0x60]
    new instr:0x7fd3d0e27f20: mov eax, dword ptr [rax+0x60]
old instr: 0x4056d5: cmp eax, 0x1
    new instr:0x7fd3d0e27f23: cmp eax, 0x1
old instr: 0x4056d8: jnz 0x40576d
    new instr:0x7fd3d0e27f26: jnz 0x7fd3d0e27fbb
old instr: 0x4056de: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f2c: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056e2: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e27f30: mov eax, dword ptr [rax+0x5c]
old instr: 0x4056e5: mov byte ptr [rbp-0x9], al
    new instr:0x7fd3d0e27f33: mov byte ptr [rbp-0x9], al
old instr: 0x4056e8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f36: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056ec: mov eax, dword ptr [rax+0x288]
    new instr:0x7fd3d0e27f3a: mov eax, dword ptr [rax+0x288]
old instr: 0x4056f2: mov edx, eax
    new instr:0x7fd3d0e27f40: mov edx, eax
old instr: 0x4056f4: shl edx, 0x8
    new instr:0x7fd3d0e27f42: shl edx, 0x8
old instr: 0x4056f7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f45: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056fb: mov eax, dword ptr [rax+0x288]
    new instr:0x7fd3d0e27f49: mov eax, dword ptr [rax+0x288]
old instr: 0x405701: mov ecx, eax
    new instr:0x7fd3d0e27f4f: mov ecx, eax
old instr: 0x405703: shr ecx, 0x18
    new instr:0x7fd3d0e27f51: shr ecx, 0x18
old instr: 0x405706: movzx eax, byte ptr [rbp-0x9]
    new instr:0x7fd3d0e27f54: movzx eax, byte ptr [rbp-0x9]
old instr: 0x40570a: xor eax, ecx
    new instr:0x7fd3d0e27f58: xor eax, ecx
old instr: 0x40570c: mov eax, eax
    new instr:0x7fd3d0e27f5a: mov eax, eax
old instr: 0x40570e: mov eax, dword ptr [rax*4+0x61c6a0]
    new instr:0x7fd3d0e27f5c: mov eax, dword ptr [rax*4+0x61c6a0]
old instr: 0x405715: xor edx, eax
    new instr:0x7fd3d0e27f63: xor edx, eax
old instr: 0x405717: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f65: mov rax, qword ptr [rbp-0x28]
old instr: 0x40571b: mov dword ptr [rax+0x288], edx
    new instr:0x7fd3d0e27f69: mov dword ptr [rax+0x288], edx
old instr: 0x405721: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f6f: mov rax, qword ptr [rbp-0x28]
old instr: 0x405725: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e27f73: mov eax, dword ptr [rax+0x5c]
old instr: 0x405728: mov rdx, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f76: mov rdx, qword ptr [rbp-0x28]
old instr: 0x40572c: mov eax, eax
    new instr:0x7fd3d0e27f7a: mov eax, eax
old instr: 0x40572e: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7fd3d0e27f7c: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x405736: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f84: mov rax, qword ptr [rbp-0x28]
old instr: 0x40573a: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fd3d0e27f88: mov rdx, qword ptr [rax+0x40]
old instr: 0x40573e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f8c: mov rax, qword ptr [rbp-0x28]
old instr: 0x405742: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e27f90: mov eax, dword ptr [rax+0x6c]
old instr: 0x405745: cdqe 
    new instr:0x7fd3d0e27f93: cdqe 
old instr: 0x405747: add rdx, rax
    new instr:0x7fd3d0e27f95: add rdx, rax
old instr: 0x40574a: movzx eax, byte ptr [rbp-0x9]
    new instr:0x7fd3d0e27f98: movzx eax, byte ptr [rbp-0x9]
old instr: 0x40574e: mov byte ptr [rdx], al
    new instr:0x7fd3d0e27f9c: mov byte ptr [rdx], al
old instr: 0x405750: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27f9e: mov rax, qword ptr [rbp-0x28]
old instr: 0x405754: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e27fa2: mov eax, dword ptr [rax+0x6c]
old instr: 0x405757: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e27fa5: lea edx, ptr [rax+0x1]
old instr: 0x40575a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27fa8: mov rax, qword ptr [rbp-0x28]
old instr: 0x40575e: mov dword ptr [rax+0x6c], edx
    new instr:0x7fd3d0e27fac: mov dword ptr [rax+0x6c], edx
old instr: 0x405761: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27faf: mov rax, qword ptr [rbp-0x28]
old instr: 0x405765: mov edx, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27fb3: mov edx, dword ptr [rbp-0x8]
old instr: 0x405768: mov dword ptr [rax+0x5c], edx
    new instr:0x7fd3d0e27fb6: mov dword ptr [rax+0x5c], edx
old instr: 0x40576b: jmp 0x4057c9
    new instr:0x7fd3d0e27fb9: jmp 0x7fd3d0e28017
old instr: 0x40576d: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27fbb: mov rax, qword ptr [rbp-0x28]
old instr: 0x405771: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e27fbf: mov eax, dword ptr [rax+0x5c]
old instr: 0x405774: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27fc2: cmp eax, dword ptr [rbp-0x8]
old instr: 0x405777: jnz 0x405787
    new instr:0x7fd3d0e27fc5: jnz 0x7fd3d0e27fd5
old instr: 0x405779: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27fc7: mov rax, qword ptr [rbp-0x28]
old instr: 0x40577d: mov eax, dword ptr [rax+0x60]
    new instr:0x7fd3d0e27fcb: mov eax, dword ptr [rax+0x60]
old instr: 0x405780: cmp eax, 0xff
    new instr:0x7fd3d0e27fce: cmp eax, 0xff
old instr: 0x405785: jnz 0x4057b8
    new instr:0x7fd3d0e27fd3: jnz 0x7fd3d0e28006
old instr: 0x405787: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27fd5: mov rax, qword ptr [rbp-0x28]
old instr: 0x40578b: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e27fd9: mov eax, dword ptr [rax+0x5c]
old instr: 0x40578e: cmp eax, 0xff
    new instr:0x7fd3d0e27fdc: cmp eax, 0xff
old instr: 0x405793: jnbe 0x4057a1
    new instr:0x7fd3d0e27fe1: jnbe 0x7fd3d0e27fef
old instr: 0x405795: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27fe3: mov rax, qword ptr [rbp-0x28]
old instr: 0x405799: mov rdi, rax
    new instr:0x7fd3d0e27fe7: mov rdi, rax
old instr: 0x40579c: call 0x405388
    new instr:0x7fd3d0e27fea: call 0x7fd3d0e27bd6
old instr: 0x4057a1: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27fef: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057a5: mov edx, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e27ff3: mov edx, dword ptr [rbp-0x8]
old instr: 0x4057a8: mov dword ptr [rax+0x5c], edx
    new instr:0x7fd3d0e27ff6: mov dword ptr [rax+0x5c], edx
old instr: 0x4057ab: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e27ff9: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057af: mov dword ptr [rax+0x60], 0x1
    new instr:0x7fd3d0e27ffd: mov dword ptr [rax+0x60], 0x1
old instr: 0x4057b6: jmp 0x4057c9
    new instr:0x7fd3d0e28004: jmp 0x7fd3d0e28017
old instr: 0x4057b8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28006: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057bc: mov eax, dword ptr [rax+0x60]
    new instr:0x7fd3d0e2800a: mov eax, dword ptr [rax+0x60]
old instr: 0x4057bf: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e2800d: lea edx, ptr [rax+0x1]
old instr: 0x4057c2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28010: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057c6: mov dword ptr [rax+0x60], edx
    new instr:0x7fd3d0e28014: mov dword ptr [rax+0x60], edx
old instr: 0x4057c9: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28017: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057cd: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e2801b: mov rax, qword ptr [rax]
old instr: 0x4057d0: mov rdx, qword ptr [rax]
    new instr:0x7fd3d0e2801e: mov rdx, qword ptr [rax]
old instr: 0x4057d3: add rdx, 0x1
    new instr:0x7fd3d0e28021: add rdx, 0x1
old instr: 0x4057d7: mov qword ptr [rax], rdx
    new instr:0x7fd3d0e28025: mov qword ptr [rax], rdx
old instr: 0x4057da: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28028: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057de: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e2802c: mov rax, qword ptr [rax]
old instr: 0x4057e1: mov edx, dword ptr [rax+0x8]
    new instr:0x7fd3d0e2802f: mov edx, dword ptr [rax+0x8]
old instr: 0x4057e4: sub edx, 0x1
    new instr:0x7fd3d0e28032: sub edx, 0x1
old instr: 0x4057e7: mov dword ptr [rax+0x8], edx
    new instr:0x7fd3d0e28035: mov dword ptr [rax+0x8], edx
old instr: 0x4057ea: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28038: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057ee: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e2803c: mov rax, qword ptr [rax]
old instr: 0x4057f1: mov edx, dword ptr [rax+0xc]
    new instr:0x7fd3d0e2803f: mov edx, dword ptr [rax+0xc]
old instr: 0x4057f4: add edx, 0x1
    new instr:0x7fd3d0e28042: add edx, 0x1
old instr: 0x4057f7: mov dword ptr [rax+0xc], edx
    new instr:0x7fd3d0e28045: mov dword ptr [rax+0xc], edx
old instr: 0x4057fa: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28048: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057fe: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e2804c: mov rax, qword ptr [rax]
old instr: 0x405801: mov eax, dword ptr [rax+0xc]
    new instr:0x7fd3d0e2804f: mov eax, dword ptr [rax+0xc]
old instr: 0x405804: test eax, eax
    new instr:0x7fd3d0e28052: test eax, eax
old instr: 0x405806: jnz 0x40567e
    new instr:0x7fd3d0e28054: jnz 0x7fd3d0e27ecc
old instr: 0x40580c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e2805a: mov rax, qword ptr [rbp-0x28]
old instr: 0x405810: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e2805e: mov rax, qword ptr [rax]
old instr: 0x405813: mov edx, dword ptr [rax+0x10]
    new instr:0x7fd3d0e28061: mov edx, dword ptr [rax+0x10]
old instr: 0x405816: add edx, 0x1
    new instr:0x7fd3d0e28064: add edx, 0x1
old instr: 0x405819: mov dword ptr [rax+0x10], edx
    new instr:0x7fd3d0e28067: mov dword ptr [rax+0x10], edx
old instr: 0x40581c: jmp 0x40567e
    new instr:0x7fd3d0e2806a: jmp 0x7fd3d0e27ecc
old instr: 0x405821: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e2806f: mov rax, qword ptr [rbp-0x28]
old instr: 0x405825: mov edx, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e28073: mov edx, dword ptr [rax+0x6c]
old instr: 0x405828: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28076: mov rax, qword ptr [rbp-0x28]
old instr: 0x40582c: mov eax, dword ptr [rax+0x70]
    new instr:0x7fd3d0e2807a: mov eax, dword ptr [rax+0x70]
old instr: 0x40582f: cmp edx, eax
    new instr:0x7fd3d0e2807d: cmp edx, eax
old instr: 0x405831: jnl 0x4059e5
    new instr:0x7fd3d0e2807f: jnl 0x7fd3d0e28233
old instr: 0x405837: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28085: mov rax, qword ptr [rbp-0x28]
old instr: 0x40583b: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e28089: mov rax, qword ptr [rax]
old instr: 0x40583e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e2808c: mov eax, dword ptr [rax+0x8]
old instr: 0x405841: test eax, eax
    new instr:0x7fd3d0e2808f: test eax, eax
old instr: 0x405843: jz 0x4059e8
    new instr:0x7fd3d0e28091: jz 0x7fd3d0e28236
old instr: 0x405849: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28097: mov rax, qword ptr [rbp-0x28]
old instr: 0x40584d: mov eax, dword ptr [rax+0x10]
    new instr:0x7fd3d0e2809b: mov eax, dword ptr [rax+0x10]
old instr: 0x405850: test eax, eax
    new instr:0x7fd3d0e2809e: test eax, eax
old instr: 0x405852: jz 0x4059eb
    new instr:0x7fd3d0e280a0: jz 0x7fd3d0e28239
old instr: 0x405858: mov byte ptr [rbp-0x1], 0x1
    new instr:0x7fd3d0e280a6: mov byte ptr [rbp-0x1], 0x1
old instr: 0x40585c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e280aa: mov rax, qword ptr [rbp-0x28]
old instr: 0x405860: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e280ae: mov rax, qword ptr [rax]
old instr: 0x405863: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e280b1: mov rax, qword ptr [rax]
old instr: 0x405866: movzx eax, byte ptr [rax]
    new instr:0x7fd3d0e280b4: movzx eax, byte ptr [rax]
old instr: 0x405869: movzx eax, al
    new instr:0x7fd3d0e280b7: movzx eax, al
old instr: 0x40586c: mov dword ptr [rbp-0x10], eax
    new instr:0x7fd3d0e280ba: mov dword ptr [rbp-0x10], eax
old instr: 0x40586f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e280bd: mov rax, qword ptr [rbp-0x28]
old instr: 0x405873: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e280c1: mov eax, dword ptr [rax+0x5c]
old instr: 0x405876: cmp eax, dword ptr [rbp-0x10]
    new instr:0x7fd3d0e280c4: cmp eax, dword ptr [rbp-0x10]
old instr: 0x405879: jz 0x40591e
    new instr:0x7fd3d0e280c7: jz 0x7fd3d0e2816c
old instr: 0x40587f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e280cd: mov rax, qword ptr [rbp-0x28]
old instr: 0x405883: mov eax, dword ptr [rax+0x60]
    new instr:0x7fd3d0e280d1: mov eax, dword ptr [rax+0x60]
old instr: 0x405886: cmp eax, 0x1
    new instr:0x7fd3d0e280d4: cmp eax, 0x1
old instr: 0x405889: jnz 0x40591e
    new instr:0x7fd3d0e280d7: jnz 0x7fd3d0e2816c
old instr: 0x40588f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e280dd: mov rax, qword ptr [rbp-0x28]
old instr: 0x405893: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e280e1: mov eax, dword ptr [rax+0x5c]
old instr: 0x405896: mov byte ptr [rbp-0x11], al
    new instr:0x7fd3d0e280e4: mov byte ptr [rbp-0x11], al
old instr: 0x405899: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e280e7: mov rax, qword ptr [rbp-0x28]
old instr: 0x40589d: mov eax, dword ptr [rax+0x288]
    new instr:0x7fd3d0e280eb: mov eax, dword ptr [rax+0x288]
old instr: 0x4058a3: mov edx, eax
    new instr:0x7fd3d0e280f1: mov edx, eax
old instr: 0x4058a5: shl edx, 0x8
    new instr:0x7fd3d0e280f3: shl edx, 0x8
old instr: 0x4058a8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e280f6: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058ac: mov eax, dword ptr [rax+0x288]
    new instr:0x7fd3d0e280fa: mov eax, dword ptr [rax+0x288]
old instr: 0x4058b2: mov ecx, eax
    new instr:0x7fd3d0e28100: mov ecx, eax
old instr: 0x4058b4: shr ecx, 0x18
    new instr:0x7fd3d0e28102: shr ecx, 0x18
old instr: 0x4058b7: movzx eax, byte ptr [rbp-0x11]
    new instr:0x7fd3d0e28105: movzx eax, byte ptr [rbp-0x11]
old instr: 0x4058bb: xor eax, ecx
    new instr:0x7fd3d0e28109: xor eax, ecx
old instr: 0x4058bd: mov eax, eax
    new instr:0x7fd3d0e2810b: mov eax, eax
old instr: 0x4058bf: mov eax, dword ptr [rax*4+0x61c6a0]
    new instr:0x7fd3d0e2810d: mov eax, dword ptr [rax*4+0x61c6a0]
old instr: 0x4058c6: xor edx, eax
    new instr:0x7fd3d0e28114: xor edx, eax
old instr: 0x4058c8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28116: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058cc: mov dword ptr [rax+0x288], edx
    new instr:0x7fd3d0e2811a: mov dword ptr [rax+0x288], edx
old instr: 0x4058d2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28120: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058d6: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e28124: mov eax, dword ptr [rax+0x5c]
old instr: 0x4058d9: mov rdx, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28127: mov rdx, qword ptr [rbp-0x28]
old instr: 0x4058dd: mov eax, eax
    new instr:0x7fd3d0e2812b: mov eax, eax
old instr: 0x4058df: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7fd3d0e2812d: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x4058e7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28135: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058eb: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fd3d0e28139: mov rdx, qword ptr [rax+0x40]
old instr: 0x4058ef: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e2813d: mov rax, qword ptr [rbp-0x28]
old instr: 0x4058f3: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e28141: mov eax, dword ptr [rax+0x6c]
old instr: 0x4058f6: cdqe 
    new instr:0x7fd3d0e28144: cdqe 
old instr: 0x4058f8: add rdx, rax
    new instr:0x7fd3d0e28146: add rdx, rax
old instr: 0x4058fb: movzx eax, byte ptr [rbp-0x11]
    new instr:0x7fd3d0e28149: movzx eax, byte ptr [rbp-0x11]
old instr: 0x4058ff: mov byte ptr [rdx], al
    new instr:0x7fd3d0e2814d: mov byte ptr [rdx], al
old instr: 0x405901: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e2814f: mov rax, qword ptr [rbp-0x28]
old instr: 0x405905: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e28153: mov eax, dword ptr [rax+0x6c]
old instr: 0x405908: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e28156: lea edx, ptr [rax+0x1]
old instr: 0x40590b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28159: mov rax, qword ptr [rbp-0x28]
old instr: 0x40590f: mov dword ptr [rax+0x6c], edx
    new instr:0x7fd3d0e2815d: mov dword ptr [rax+0x6c], edx
old instr: 0x405912: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28160: mov rax, qword ptr [rbp-0x28]
old instr: 0x405916: mov edx, dword ptr [rbp-0x10]
    new instr:0x7fd3d0e28164: mov edx, dword ptr [rbp-0x10]
old instr: 0x405919: mov dword ptr [rax+0x5c], edx
    new instr:0x7fd3d0e28167: mov dword ptr [rax+0x5c], edx
old instr: 0x40591c: jmp 0x40597a
    new instr:0x7fd3d0e2816a: jmp 0x7fd3d0e281c8
old instr: 0x40591e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e2816c: mov rax, qword ptr [rbp-0x28]
old instr: 0x405922: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e28170: mov eax, dword ptr [rax+0x5c]
old instr: 0x405925: cmp eax, dword ptr [rbp-0x10]
    new instr:0x7fd3d0e28173: cmp eax, dword ptr [rbp-0x10]
old instr: 0x405928: jnz 0x405938
    new instr:0x7fd3d0e28176: jnz 0x7fd3d0e28186
old instr: 0x40592a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28178: mov rax, qword ptr [rbp-0x28]
old instr: 0x40592e: mov eax, dword ptr [rax+0x60]
    new instr:0x7fd3d0e2817c: mov eax, dword ptr [rax+0x60]
old instr: 0x405931: cmp eax, 0xff
    new instr:0x7fd3d0e2817f: cmp eax, 0xff
old instr: 0x405936: jnz 0x405969
    new instr:0x7fd3d0e28184: jnz 0x7fd3d0e281b7
old instr: 0x405938: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28186: mov rax, qword ptr [rbp-0x28]
old instr: 0x40593c: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e2818a: mov eax, dword ptr [rax+0x5c]
old instr: 0x40593f: cmp eax, 0xff
    new instr:0x7fd3d0e2818d: cmp eax, 0xff
old instr: 0x405944: jnbe 0x405952
    new instr:0x7fd3d0e28192: jnbe 0x7fd3d0e281a0
old instr: 0x405946: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28194: mov rax, qword ptr [rbp-0x28]
old instr: 0x40594a: mov rdi, rax
    new instr:0x7fd3d0e28198: mov rdi, rax
old instr: 0x40594d: call 0x405388
    new instr:0x7fd3d0e2819b: call 0x7fd3d0e27bd6
old instr: 0x405952: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e281a0: mov rax, qword ptr [rbp-0x28]
old instr: 0x405956: mov edx, dword ptr [rbp-0x10]
    new instr:0x7fd3d0e281a4: mov edx, dword ptr [rbp-0x10]
old instr: 0x405959: mov dword ptr [rax+0x5c], edx
    new instr:0x7fd3d0e281a7: mov dword ptr [rax+0x5c], edx
old instr: 0x40595c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e281aa: mov rax, qword ptr [rbp-0x28]
old instr: 0x405960: mov dword ptr [rax+0x60], 0x1
    new instr:0x7fd3d0e281ae: mov dword ptr [rax+0x60], 0x1
old instr: 0x405967: jmp 0x40597a
    new instr:0x7fd3d0e281b5: jmp 0x7fd3d0e281c8
old instr: 0x405969: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e281b7: mov rax, qword ptr [rbp-0x28]
old instr: 0x40596d: mov eax, dword ptr [rax+0x60]
    new instr:0x7fd3d0e281bb: mov eax, dword ptr [rax+0x60]
old instr: 0x405970: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e281be: lea edx, ptr [rax+0x1]
old instr: 0x405973: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e281c1: mov rax, qword ptr [rbp-0x28]
old instr: 0x405977: mov dword ptr [rax+0x60], edx
    new instr:0x7fd3d0e281c5: mov dword ptr [rax+0x60], edx
old instr: 0x40597a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e281c8: mov rax, qword ptr [rbp-0x28]
old instr: 0x40597e: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e281cc: mov rax, qword ptr [rax]
old instr: 0x405981: mov rdx, qword ptr [rax]
    new instr:0x7fd3d0e281cf: mov rdx, qword ptr [rax]
old instr: 0x405984: add rdx, 0x1
    new instr:0x7fd3d0e281d2: add rdx, 0x1
old instr: 0x405988: mov qword ptr [rax], rdx
    new instr:0x7fd3d0e281d6: mov qword ptr [rax], rdx
old instr: 0x40598b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e281d9: mov rax, qword ptr [rbp-0x28]
old instr: 0x40598f: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e281dd: mov rax, qword ptr [rax]
old instr: 0x405992: mov edx, dword ptr [rax+0x8]
    new instr:0x7fd3d0e281e0: mov edx, dword ptr [rax+0x8]
old instr: 0x405995: sub edx, 0x1
    new instr:0x7fd3d0e281e3: sub edx, 0x1
old instr: 0x405998: mov dword ptr [rax+0x8], edx
    new instr:0x7fd3d0e281e6: mov dword ptr [rax+0x8], edx
old instr: 0x40599b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e281e9: mov rax, qword ptr [rbp-0x28]
old instr: 0x40599f: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e281ed: mov rax, qword ptr [rax]
old instr: 0x4059a2: mov edx, dword ptr [rax+0xc]
    new instr:0x7fd3d0e281f0: mov edx, dword ptr [rax+0xc]
old instr: 0x4059a5: add edx, 0x1
    new instr:0x7fd3d0e281f3: add edx, 0x1
old instr: 0x4059a8: mov dword ptr [rax+0xc], edx
    new instr:0x7fd3d0e281f6: mov dword ptr [rax+0xc], edx
old instr: 0x4059ab: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e281f9: mov rax, qword ptr [rbp-0x28]
old instr: 0x4059af: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e281fd: mov rax, qword ptr [rax]
old instr: 0x4059b2: mov eax, dword ptr [rax+0xc]
    new instr:0x7fd3d0e28200: mov eax, dword ptr [rax+0xc]
old instr: 0x4059b5: test eax, eax
    new instr:0x7fd3d0e28203: test eax, eax
old instr: 0x4059b7: jnz 0x4059c9
    new instr:0x7fd3d0e28205: jnz 0x7fd3d0e28217
old instr: 0x4059b9: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28207: mov rax, qword ptr [rbp-0x28]
old instr: 0x4059bd: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e2820b: mov rax, qword ptr [rax]
old instr: 0x4059c0: mov edx, dword ptr [rax+0x10]
    new instr:0x7fd3d0e2820e: mov edx, dword ptr [rax+0x10]
old instr: 0x4059c3: add edx, 0x1
    new instr:0x7fd3d0e28211: add edx, 0x1
old instr: 0x4059c6: mov dword ptr [rax+0x10], edx
    new instr:0x7fd3d0e28214: mov dword ptr [rax+0x10], edx
old instr: 0x4059c9: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28217: mov rax, qword ptr [rbp-0x28]
old instr: 0x4059cd: mov eax, dword ptr [rax+0x10]
    new instr:0x7fd3d0e2821b: mov eax, dword ptr [rax+0x10]
old instr: 0x4059d0: lea edx, ptr [rax-0x1]
    new instr:0x7fd3d0e2821e: lea edx, ptr [rax-0x1]
old instr: 0x4059d3: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28221: mov rax, qword ptr [rbp-0x28]
old instr: 0x4059d7: mov dword ptr [rax+0x10], edx
    new instr:0x7fd3d0e28225: mov dword ptr [rax+0x10], edx
old instr: 0x4059da: jmp 0x405821
    new instr:0x7fd3d0e28228: jmp 0x7fd3d0e2806f
old instr: 0x4059df: nop
    new instr:0x7fd3d0e2822d: nop
old instr: 0x4059e0: jmp 0x4059ec
    new instr:0x7fd3d0e2822e: jmp 0x7fd3d0e2823a
old instr: 0x4059e2: nop
    new instr:0x7fd3d0e28230: nop
old instr: 0x4059e3: jmp 0x4059ec
    new instr:0x7fd3d0e28231: jmp 0x7fd3d0e2823a
old instr: 0x4059e5: nop
    new instr:0x7fd3d0e28233: nop
old instr: 0x4059e6: jmp 0x4059ec
    new instr:0x7fd3d0e28234: jmp 0x7fd3d0e2823a
old instr: 0x4059e8: nop
    new instr:0x7fd3d0e28236: nop
old instr: 0x4059e9: jmp 0x4059ec
    new instr:0x7fd3d0e28237: jmp 0x7fd3d0e2823a
old instr: 0x4059eb: nop
    new instr:0x7fd3d0e28239: nop
old instr: 0x4059ec: movzx eax, byte ptr [rbp-0x1]
    new instr:0x7fd3d0e2823a: movzx eax, byte ptr [rbp-0x1]
old instr: 0x4059f0: leave 
    new instr:0x7fd3d0e2823e: leave 
old instr: 0x4059f1: ret 
    new instr:0x7fd3d0e2823f: add rsp, 0x8
old instr: 0x405ba3: call 0xfffffffffffffab9
    new instr:0x7fd3d0e28243: call 0x7fd3d0e27cfc
inserted instruction
405ba8
old instr: 0x405ba8: or byte ptr [rbp-0x1], al
    new instr:0x7fd3d0e28248: or byte ptr [rbp-0x1], al
old instr: 0x405bab: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e2824b: mov rax, qword ptr [rbp-0x10]
old instr: 0x405baf: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e2824f: mov eax, dword ptr [rax+0x8]
old instr: 0x405bb2: cmp eax, 0x2
    new instr:0x7fd3d0e28252: cmp eax, 0x2
in revert 
    new instr:0x7fd3d0e28255: jnz 0x7fd3d0e2829c
405bfc
old instr: 0x405bfc: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28257: mov rax, qword ptr [rbp-0x10]
old instr: 0x405c00: mov edx, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e2825b: mov edx, dword ptr [rax+0x6c]
old instr: 0x405c03: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e2825e: mov rax, qword ptr [rbp-0x10]
old instr: 0x405c07: mov eax, dword ptr [rax+0x70]
    new instr:0x7fd3d0e28262: mov eax, dword ptr [rax+0x70]
old instr: 0x405c0a: cmp edx, eax
    new instr:0x7fd3d0e28265: cmp edx, eax
in revert 
    new instr:0x7fd3d0e28267: jnl 0x7fd3d0e2828a
405c2f
old instr: 0x405c2f: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28269: mov rax, qword ptr [rbp-0x10]
old instr: 0x405c33: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e2826d: mov rax, qword ptr [rax]
old instr: 0x405c36: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e28270: mov eax, dword ptr [rax+0x8]
old instr: 0x405c39: test eax, eax
    new instr:0x7fd3d0e28273: test eax, eax
inserted instruction
405c41
in revert 
removing jump and inserting a dummy entry 
405c4a
old instr: 0x405c4a: cmp byte ptr [rbp-0x1], 0x0
    new instr:0x7fd3d0e28275: cmp byte ptr [rbp-0x1], 0x0
in revert 
    new instr:0x7fd3d0e28279: jz 0x7fd3d0e28281
405c56
old instr: 0x405c56: mov eax, 0x1
    new instr:0x7fd3d0e2827b: mov eax, 0x1
in revert 
removing jump and inserting a dummy entry 
405c62
old instr: 0x405c62: leave 
    new instr:0x7fd3d0e28280: leave 
old instr: 0x405c63: ret 
    new instr:0x7fd3d0e28281: ret 
inserted instruction
405afa
old instr: 0x405afa: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28282: mov rax, qword ptr [rbp-0x10]
old instr: 0x405afe: mov rdi, rax
    new instr:0x7fd3d0e28286: mov rdi, rax
old instr: 0x405b01: call 0x4059f2
    new instr:0x7fd3d0e28289: call 0x7fd3d0e2817a
inserted instruction
405b06
old instr: 0x405b06: or byte ptr [rbp-0x2], al
    new instr:0x7fd3d0e2828e: or byte ptr [rbp-0x2], al
old instr: 0x405b09: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28291: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b0d: mov edx, dword ptr [rax+0x78]
    new instr:0x7fd3d0e28295: mov edx, dword ptr [rax+0x78]
old instr: 0x405b10: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28298: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b14: mov eax, dword ptr [rax+0x74]
    new instr:0x7fd3d0e2829c: mov eax, dword ptr [rax+0x74]
old instr: 0x405b17: cmp edx, eax
    new instr:0x7fd3d0e2829f: cmp edx, eax
in revert 
    new instr:0x7fd3d0e282a1: jnl 0x7fd3d0e283cb
405c43
old instr: 0x405c43: nop
    new instr:0x7fd3d0e282a7: nop
old instr: 0x405c44: jmp 0x405c4a
    new instr:0x7fd3d0e282a8: jmp 0x7fd3d0e282ae
inserted instruction
405c50
old instr: 0x405c50: cmp byte ptr [rbp-0x2], 0x0
    new instr:0x7fd3d0e282aa: cmp byte ptr [rbp-0x2], 0x0
inserted instruction
add jump to 
    new instr:0x7fd3d0e282ae: jmp 0x7fd3d122df09
405b1f
old instr: 0x405b1f: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e282b3: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b23: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e282b7: mov eax, dword ptr [rax+0x8]
old instr: 0x405b26: cmp eax, 0x4
    new instr:0x7fd3d0e282ba: cmp eax, 0x4
in revert 
    new instr:0x7fd3d0e282bd: jz 0x7fd3d0e282de
405b4a
old instr: 0x405b4a: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e282bf: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b4e: mov rdi, rax
    new instr:0x7fd3d0e282c3: mov rdi, rax
old instr: 0x405b51: call 0x404f65
    new instr:0x7fd3d0e282c6: call 0x7fd3d0e276da
inserted instruction
405b56
old instr: 0x405b56: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e282cb: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b5a: mov dword ptr [rax+0xc], 0x2
    new instr:0x7fd3d0e282cf: mov dword ptr [rax+0xc], 0x2
old instr: 0x405b61: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e282d6: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b65: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e282da: mov eax, dword ptr [rax+0x8]
old instr: 0x405b68: cmp eax, 0x3
    new instr:0x7fd3d0e282dd: cmp eax, 0x3
old instr: 0x405b6b: jnz 0x405b8c
    new instr:0x7fd3d0e282e0: jnz 0x7fd3d0e28301
inserted instruction
405c0e
old instr: 0x405c0e: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e282e2: mov rax, qword ptr [rbp-0x10]
old instr: 0x405c12: mov esi, 0x0
    new instr:0x7fd3d0e282e6: mov esi, 0x0
old instr: 0x405c17: mov rdi, rax
    new instr:0x7fd3d0e282eb: mov rdi, rax
old instr: 0x405c1a: call 0x41216d
    new instr:0x7fd3d0e282ee: call 0x7fd3d0e34841
inserted instruction
405c1f
old instr: 0x405c1f: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e282f3: mov rax, qword ptr [rbp-0x10]
old instr: 0x405c23: mov dword ptr [rax+0xc], 0x1
    new instr:0x7fd3d0e282f7: mov dword ptr [rax+0xc], 0x1
in revert 
removing jump and inserting a dummy entry 
405ae9
old instr: 0x405ae9: nop
    new instr:0x7fd3d0e282fe: nop
old instr: 0x405aea: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e282ff: mov rax, qword ptr [rbp-0x10]
old instr: 0x405aee: mov eax, dword ptr [rax+0xc]
    new instr:0x7fd3d0e28303: mov eax, dword ptr [rax+0xc]
old instr: 0x405af1: cmp eax, 0x1
    new instr:0x7fd3d0e28306: cmp eax, 0x1
inserted instruction
add jump to 
    new instr:0x7fd3d0e28309: jmp 0x7fd3d122de08
405bb7
old instr: 0x405bb7: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e2830e: mov rax, qword ptr [rbp-0x10]
old instr: 0x405bbb: mov eax, dword ptr [rax+0x10]
    new instr:0x7fd3d0e28312: mov eax, dword ptr [rax+0x10]
old instr: 0x405bbe: test eax, eax
    new instr:0x7fd3d0e28315: test eax, eax
inserted instruction
405bc2
old instr: 0x405bc2: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28317: mov rax, qword ptr [rbp-0x10]
old instr: 0x405bc6: mov rdi, rax
    new instr:0x7fd3d0e2831b: mov rdi, rax
old instr: 0x405bc9: call 0x405628
    new instr:0x7fd3d0e2831e: call 0x7fd3d0e27d7d
inserted instruction
405bce
old instr: 0x405bce: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28323: mov rax, qword ptr [rbp-0x10]
old instr: 0x405bd2: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e28327: mov eax, dword ptr [rax+0x8]
old instr: 0x405bd5: cmp eax, 0x4
    new instr:0x7fd3d0e2832a: cmp eax, 0x4
old instr: 0x405bd8: setz al
    new instr:0x7fd3d0e2832d: setz al
old instr: 0x405bdb: movzx edx, al
    new instr:0x7fd3d0e28330: movzx edx, al
old instr: 0x405bde: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28333: mov rax, qword ptr [rbp-0x10]
old instr: 0x405be2: mov esi, edx
    new instr:0x7fd3d0e28337: mov esi, edx
old instr: 0x405be4: mov rdi, rax
    new instr:0x7fd3d0e28339: mov rdi, rax
old instr: 0x405be7: call 0x41216d
    new instr:0x7fd3d0e2833c: call 0x7fd3d0e348c2
inserted instruction
405bec
old instr: 0x405bec: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28341: mov rax, qword ptr [rbp-0x10]
old instr: 0x405bf0: mov dword ptr [rax+0xc], 0x1
    new instr:0x7fd3d0e28345: mov dword ptr [rax+0xc], 0x1
old instr: 0x405bf7: jmp 0x405ae9
    new instr:0x7fd3d0e2834c: jmp 0x7fd3d0e2823e
inserted instruction
405b2b
old instr: 0x405b2b: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28351: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b2f: mov eax, dword ptr [rax+0x10]
    new instr:0x7fd3d0e28355: mov eax, dword ptr [rax+0x10]
old instr: 0x405b32: test eax, eax
    new instr:0x7fd3d0e28358: test eax, eax
inserted instruction
405b36
old instr: 0x405b36: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e2835a: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b3a: mov rdi, rax
    new instr:0x7fd3d0e2835e: mov rdi, rax
old instr: 0x405b3d: call 0x404ffc
    new instr:0x7fd3d0e28361: call 0x7fd3d0e27820
inserted instruction
405b42
old instr: 0x405b42: test al, al
    new instr:0x7fd3d0e28366: test al, al
in revert 
removing jump and inserting a dummy entry 
405c46
old instr: 0x405c46: nop
    new instr:0x7fd3d0e28368: nop
address is :405c47


old instr: 0x405c47: jmp 0x405c4a
    new instr:0x7fd3d0e28369: jmp 0x7fd3d0e2836c
old instr: 0x405c47: jmp 0x405c4a
    new instr:0x7fd3d0e2836b: jmp 0x7fd3d0e2836e
inserted instruction
rtn name: handle_compress : 4
1a
405c64
old instr: 0x405c64: push rbp
    new instr:0x7fd3d0e2836d: push rbp
old instr: 0x405c65: mov rbp, rsp
    new instr:0x7fd3d0e2836e: mov rbp, rsp
old instr: 0x405c68: sub rsp, 0x20
    new instr:0x7fd3d0e28371: sub rsp, 0x20
old instr: 0x405c6c: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e28375: mov qword ptr [rbp-0x18], rdi
old instr: 0x405c70: mov dword ptr [rbp-0x1c], esi
    new instr:0x7fd3d0e28379: mov dword ptr [rbp-0x1c], esi
old instr: 0x405c73: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7fd3d0e2837c: cmp qword ptr [rbp-0x18], 0x0
in revert 
removing jump and inserting a dummy entry 
405c84
old instr: 0x405c84: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28381: mov rax, qword ptr [rbp-0x18]
old instr: 0x405c88: mov rax, qword ptr [rax+0x30]
    new instr:0x7fd3d0e28385: mov rax, qword ptr [rax+0x30]
old instr: 0x405c8c: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e28389: mov qword ptr [rbp-0x8], rax
old instr: 0x405c90: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e2838d: cmp qword ptr [rbp-0x8], 0x0
in revert 
removing jump and inserting a dummy entry 
405ca1
old instr: 0x405ca1: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28392: mov rax, qword ptr [rbp-0x8]
old instr: 0x405ca5: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e28396: mov rax, qword ptr [rax]
old instr: 0x405ca8: cmp rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28399: cmp rax, qword ptr [rbp-0x18]
in revert 
removing jump and inserting a dummy entry 
405cb8
old instr: 0x405cb8: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2839d: mov rax, qword ptr [rbp-0x8]
old instr: 0x405cbc: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e283a1: mov eax, dword ptr [rax+0x8]
old instr: 0x405cbf: cmp eax, 0x2
    new instr:0x7fd3d0e283a4: cmp eax, 0x2
in revert 
    new instr:0x7fd3d0e283a7: jnz 0x7fd3d0e283d9
405cf4
old instr: 0x405cf4: cmp dword ptr [rbp-0x1c], 0x0
    new instr:0x7fd3d0e283a9: cmp dword ptr [rbp-0x1c], 0x0
old instr: 0x405cf8: jnz 0x405d20
    new instr:0x7fd3d0e283ad: jnz 0x7fd3d0e283d5
inserted instruction
405cfa
old instr: 0x405cfa: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e283af: mov rax, qword ptr [rbp-0x18]
old instr: 0x405cfe: mov rdi, rax
    new instr:0x7fd3d0e283b3: mov rdi, rax
old instr: 0x405d01: call 0x405ac7
    new instr:0x7fd3d0e283b6: call 0x7fd3d0e2817c
inserted instruction
405d06
old instr: 0x405d06: mov byte ptr [rbp-0x9], al
    new instr:0x7fd3d0e283bb: mov byte ptr [rbp-0x9], al
old instr: 0x405d09: cmp byte ptr [rbp-0x9], 0x0
    new instr:0x7fd3d0e283be: cmp byte ptr [rbp-0x9], 0x0
inserted instruction
405d0f
old instr: 0x405d0f: mov eax, 0x1
    new instr:0x7fd3d0e283c2: mov eax, 0x1
in revert 
removing jump and inserting a dummy entry 
405d1b
in revert 
removing jump and inserting a dummy entry 
405e8f
old instr: 0x405e8f: leave 
    new instr:0x7fd3d0e283c7: leave 
old instr: 0x405e90: ret 
    new instr:0x7fd3d0e283c8: ret 
inserted instruction
405cc4
old instr: 0x405cc4: cmp eax, 0x2
    new instr:0x7fd3d0e283c9: cmp eax, 0x2
in revert 
removing jump and inserting a dummy entry 
405cd3
old instr: 0x405cd3: cmp eax, 0x3
    new instr:0x7fd3d0e283cc: cmp eax, 0x3
inserted instruction
405cdc
old instr: 0x405cdc: cmp eax, 0x4
    new instr:0x7fd3d0e283cf: cmp eax, 0x4
in revert 
removing jump and inserting a dummy entry 
405dfc
old instr: 0x405dfc: cmp dword ptr [rbp-0x1c], 0x2
    new instr:0x7fd3d0e283d2: cmp dword ptr [rbp-0x1c], 0x2
in revert 
removing jump and inserting a dummy entry 
405e0c
old instr: 0x405e0c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e283d6: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e10: mov edx, dword ptr [rax+0x10]
    new instr:0x7fd3d0e283da: mov edx, dword ptr [rax+0x10]
old instr: 0x405e13: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e283dd: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e17: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e283e1: mov rax, qword ptr [rax]
old instr: 0x405e1a: mov eax, dword ptr [rax+0x8]
    new instr:0x7fd3d0e283e4: mov eax, dword ptr [rax+0x8]
old instr: 0x405e1d: cmp edx, eax
    new instr:0x7fd3d0e283e7: cmp edx, eax
in revert 
removing jump and inserting a dummy entry 
405e28
old instr: 0x405e28: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e283e9: mov rax, qword ptr [rbp-0x18]
old instr: 0x405e2c: mov rdi, rax
    new instr:0x7fd3d0e283ed: mov rdi, rax
old instr: 0x405e2f: call 0x405ac7
    new instr:0x7fd3d0e283f0: call 0x7fd3d0e28088
inserted instruction
405e34
old instr: 0x405e34: mov byte ptr [rbp-0x9], al
    new instr:0x7fd3d0e283f5: mov byte ptr [rbp-0x9], al
old instr: 0x405e37: cmp byte ptr [rbp-0x9], 0x0
    new instr:0x7fd3d0e283f8: cmp byte ptr [rbp-0x9], 0x0
in revert 
removing jump and inserting a dummy entry 
405e44
old instr: 0x405e44: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e283fc: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e48: mov eax, dword ptr [rax+0x10]
    new instr:0x7fd3d0e28400: mov eax, dword ptr [rax+0x10]
old instr: 0x405e4b: test eax, eax
    new instr:0x7fd3d0e28403: test eax, eax
inserted instruction
405e4f
old instr: 0x405e4f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28405: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e53: mov rdi, rax
    new instr:0x7fd3d0e28409: mov rdi, rax
old instr: 0x405e56: call 0x404ffc
    new instr:0x7fd3d0e2840c: call 0x7fd3d0e275b2
inserted instruction
405e5b
old instr: 0x405e5b: test al, al
    new instr:0x7fd3d0e28411: test al, al
inserted instruction
405e5f
old instr: 0x405e5f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28413: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e63: mov edx, dword ptr [rax+0x78]
    new instr:0x7fd3d0e28417: mov edx, dword ptr [rax+0x78]
old instr: 0x405e66: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2841a: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e6a: mov eax, dword ptr [rax+0x74]
    new instr:0x7fd3d0e2841e: mov eax, dword ptr [rax+0x74]
old instr: 0x405e6d: cmp edx, eax
    new instr:0x7fd3d0e28421: cmp edx, eax
old instr: 0x405e6f: jnl 0x405e78
    new instr:0x7fd3d0e28423: jnl 0x7fd3d0e2842c
inserted instruction
405e71
old instr: 0x405e71: mov eax, 0x3
    new instr:0x7fd3d0e28425: mov eax, 0x3
old instr: 0x405e76: jmp 0x405e8f
    new instr:0x7fd3d0e2842a: jmp 0x7fd3d0e28443
inserted instruction
405e78
old instr: 0x405e78: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2842c: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e7c: mov dword ptr [rax+0x8], 0x1
    new instr:0x7fd3d0e28430: mov dword ptr [rax+0x8], 0x1
old instr: 0x405e83: mov eax, 0x4
    new instr:0x7fd3d0e28437: mov eax, 0x4
old instr: 0x405e88: jmp 0x405e8f
    new instr:0x7fd3d0e2843c: jmp 0x7fd3d0e28443
inserted instruction
405d20
old instr: 0x405d20: cmp dword ptr [rbp-0x1c], 0x1
    new instr:0x7fd3d0e2843e: cmp dword ptr [rbp-0x1c], 0x1
in revert 
removing jump and inserting a dummy entry 
405d44
old instr: 0x405d44: cmp dword ptr [rbp-0x1c], 0x2
    new instr:0x7fd3d0e28442: cmp dword ptr [rbp-0x1c], 0x2
inserted instruction
405d4a
old instr: 0x405d4a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28446: mov rax, qword ptr [rbp-0x18]
old instr: 0x405d4e: mov edx, dword ptr [rax+0x8]
    new instr:0x7fd3d0e2844a: mov edx, dword ptr [rax+0x8]
old instr: 0x405d51: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2844d: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d55: mov dword ptr [rax+0x10], edx
    new instr:0x7fd3d0e28451: mov dword ptr [rax+0x10], edx
old instr: 0x405d58: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28454: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d5c: mov dword ptr [rax+0x8], 0x4
    new instr:0x7fd3d0e28458: mov dword ptr [rax+0x8], 0x4
address is :405d63


old instr: 0x405d63: jmp 0x405cb8
    new instr:0x7fd3d0e2845f: jmp 0x7fd3d0e283b4
old instr: 0x405d63: jmp 0x405cb8
    new instr:0x7fd3d0e28464: jmp 0x7fd3d0e283b9
inserted instruction
rtn name: BZ2_bzCompress : 5
4
404f65
old instr: 0x404f65: push rbp
    new instr:0x7fd3d0e28469: push rbp
old instr: 0x404f66: mov rbp, rsp
    new instr:0x7fd3d0e2846a: mov rbp, rsp
old instr: 0x404f69: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e2846d: mov qword ptr [rbp-0x18], rdi
old instr: 0x404f6d: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28471: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f71: mov dword ptr [rax+0x6c], 0x0
    new instr:0x7fd3d0e28475: mov dword ptr [rax+0x6c], 0x0
old instr: 0x404f78: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e2847c: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f7c: mov dword ptr [rax+0x74], 0x0
    new instr:0x7fd3d0e28480: mov dword ptr [rax+0x74], 0x0
old instr: 0x404f83: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28487: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f87: mov dword ptr [rax+0x78], 0x0
    new instr:0x7fd3d0e2848b: mov dword ptr [rax+0x78], 0x0
old instr: 0x404f8e: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28492: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f92: mov dword ptr [rax+0x288], 0xffffffff
    new instr:0x7fd3d0e28496: mov dword ptr [rax+0x288], 0xffffffff
old instr: 0x404f9c: mov dword ptr [rbp-0x4], 0x0
    new instr:0x7fd3d0e284a0: mov dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
404fba
old instr: 0x404fba: cmp dword ptr [rbp-0x4], 0xff
    new instr:0x7fd3d0e284a7: cmp dword ptr [rbp-0x4], 0xff
in revert 
removing jump and inserting a dummy entry 
404fa5
old instr: 0x404fa5: mov rdx, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e284ae: mov rdx, qword ptr [rbp-0x18]
old instr: 0x404fa9: mov eax, dword ptr [rbp-0x4]
    new instr:0x7fd3d0e284b2: mov eax, dword ptr [rbp-0x4]
old instr: 0x404fac: cdqe 
    new instr:0x7fd3d0e284b5: cdqe 
old instr: 0x404fae: mov byte ptr [rdx+rax*1+0x80], 0x0
    new instr:0x7fd3d0e284b7: mov byte ptr [rdx+rax*1+0x80], 0x0
old instr: 0x404fb6: add dword ptr [rbp-0x4], 0x1
    new instr:0x7fd3d0e284bf: add dword ptr [rbp-0x4], 0x1
old instr: 0x404fba: cmp dword ptr [rbp-0x4], 0xff
    new instr:0x7fd3d0e284c3: cmp dword ptr [rbp-0x4], 0xff
old instr: 0x404fc1: jle 0x404fa5
    new instr:0x7fd3d0e284ca: jle 0x7fd3d0e284ae
inserted instruction
404fc3
old instr: 0x404fc3: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e284cc: mov rax, qword ptr [rbp-0x18]
old instr: 0x404fc7: mov eax, dword ptr [rax+0x294]
    new instr:0x7fd3d0e284d0: mov eax, dword ptr [rax+0x294]
old instr: 0x404fcd: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e284d6: lea edx, ptr [rax+0x1]
old instr: 0x404fd0: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e284d9: mov rax, qword ptr [rbp-0x18]
old instr: 0x404fd4: mov dword ptr [rax+0x294], edx
    new instr:0x7fd3d0e284dd: mov dword ptr [rax+0x294], edx
old instr: 0x404fda: pop rbp
    new instr:0x7fd3d0e284e3: pop rbp
address is :404fdb


old instr: 0x404fdb: ret 
    new instr:0x7fd3d0e284e4: ret 
old instr: 0x404fdb: ret 
    new instr:0x7fd3d0e284e5: ret 
inserted instruction
rtn name: prepare_new_block : 6
22
41216d
old instr: 0x41216d: push rbp
    new instr:0x7fd3d0e284e6: push rbp
old instr: 0x41216e: mov rbp, rsp
    new instr:0x7fd3d0e284e7: mov rbp, rsp
old instr: 0x412171: sub rsp, 0x10
    new instr:0x7fd3d0e284ea: sub rsp, 0x10
old instr: 0x412175: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e284ee: mov qword ptr [rbp-0x8], rdi
old instr: 0x412179: mov eax, esi
    new instr:0x7fd3d0e284f2: mov eax, esi
old instr: 0x41217b: mov byte ptr [rbp-0xc], al
    new instr:0x7fd3d0e284f4: mov byte ptr [rbp-0xc], al
old instr: 0x41217e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e284f7: mov rax, qword ptr [rbp-0x8]
old instr: 0x412182: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e284fb: mov eax, dword ptr [rax+0x6c]
old instr: 0x412185: test eax, eax
    new instr:0x7fd3d0e284fe: test eax, eax
inserted instruction
41218d
old instr: 0x41218d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28500: mov rax, qword ptr [rbp-0x8]
old instr: 0x412191: mov eax, dword ptr [rax+0x288]
    new instr:0x7fd3d0e28504: mov eax, dword ptr [rax+0x288]
old instr: 0x412197: mov edx, eax
    new instr:0x7fd3d0e2850a: mov edx, eax
old instr: 0x412199: not edx
    new instr:0x7fd3d0e2850c: not edx
old instr: 0x41219b: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2850e: mov rax, qword ptr [rbp-0x8]
old instr: 0x41219f: mov dword ptr [rax+0x288], edx
    new instr:0x7fd3d0e28512: mov dword ptr [rax+0x288], edx
old instr: 0x4121a5: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28518: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121a9: mov eax, dword ptr [rax+0x28c]
    new instr:0x7fd3d0e2851c: mov eax, dword ptr [rax+0x28c]
old instr: 0x4121af: mov edx, eax
    new instr:0x7fd3d0e28522: mov edx, eax
old instr: 0x4121b1: rol edx, 0x1
    new instr:0x7fd3d0e28524: rol edx, 0x1
old instr: 0x4121b3: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28526: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121b7: mov dword ptr [rax+0x28c], edx
    new instr:0x7fd3d0e2852a: mov dword ptr [rax+0x28c], edx
old instr: 0x4121bd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28530: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121c1: mov edx, dword ptr [rax+0x28c]
    new instr:0x7fd3d0e28534: mov edx, dword ptr [rax+0x28c]
old instr: 0x4121c7: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2853a: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121cb: mov eax, dword ptr [rax+0x288]
    new instr:0x7fd3d0e2853e: mov eax, dword ptr [rax+0x288]
old instr: 0x4121d1: xor edx, eax
    new instr:0x7fd3d0e28544: xor edx, eax
old instr: 0x4121d3: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28546: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121d7: mov dword ptr [rax+0x28c], edx
    new instr:0x7fd3d0e2854a: mov dword ptr [rax+0x28c], edx
old instr: 0x4121dd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28550: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121e1: mov eax, dword ptr [rax+0x294]
    new instr:0x7fd3d0e28554: mov eax, dword ptr [rax+0x294]
old instr: 0x4121e7: cmp eax, 0x1
    new instr:0x7fd3d0e2855a: cmp eax, 0x1
old instr: 0x4121ea: jle 0x4121f7
    new instr:0x7fd3d0e2855d: jle 0x7fd3d0e2856a
inserted instruction
4121ec
old instr: 0x4121ec: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2855f: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121f0: mov dword ptr [rax+0x74], 0x0
    new instr:0x7fd3d0e28563: mov dword ptr [rax+0x74], 0x0
old instr: 0x4121f7: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2856a: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121fb: mov eax, dword ptr [rax+0x290]
    new instr:0x7fd3d0e2856e: mov eax, dword ptr [rax+0x290]
old instr: 0x412201: cmp eax, 0x1
    new instr:0x7fd3d0e28574: cmp eax, 0x1
in revert 
removing jump and inserting a dummy entry 
41224a
old instr: 0x41224a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28577: mov rax, qword ptr [rbp-0x8]
old instr: 0x41224e: mov rdi, rax
    new instr:0x7fd3d0e2857b: mov rdi, rax
old instr: 0x412251: call 0x40c679
    new instr:0x7fd3d0e2857e: call 0x7fd3d0e229a6
inserted instruction
412256
old instr: 0x412256: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28583: mov rax, qword ptr [rbp-0x8]
old instr: 0x41225a: mov rdx, qword ptr [rax+0x20]
    new instr:0x7fd3d0e28587: mov rdx, qword ptr [rax+0x20]
old instr: 0x41225e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2858b: mov rax, qword ptr [rbp-0x8]
old instr: 0x412262: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e2858f: mov eax, dword ptr [rax+0x6c]
old instr: 0x412265: cdqe 
    new instr:0x7fd3d0e28592: cdqe 
old instr: 0x412267: add rdx, rax
    new instr:0x7fd3d0e28594: add rdx, rax
old instr: 0x41226a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28597: mov rax, qword ptr [rbp-0x8]
old instr: 0x41226e: mov qword ptr [rax+0x50], rdx
    new instr:0x7fd3d0e2859b: mov qword ptr [rax+0x50], rdx
old instr: 0x412272: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2859f: mov rax, qword ptr [rbp-0x8]
old instr: 0x412276: mov eax, dword ptr [rax+0x294]
    new instr:0x7fd3d0e285a3: mov eax, dword ptr [rax+0x294]
old instr: 0x41227c: cmp eax, 0x1
    new instr:0x7fd3d0e285a9: cmp eax, 0x1
in revert 
    new instr:0x7fd3d0e285ac: jz 0x7fd3d0e2860b
4122de
old instr: 0x4122de: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e285ae: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122e2: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fd3d0e285b2: mov eax, dword ptr [rax+0x6c]
old instr: 0x4122e5: test eax, eax
    new instr:0x7fd3d0e285b5: test eax, eax
inserted instruction
4122ed
old instr: 0x4122ed: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e285b7: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122f1: mov esi, 0x31
    new instr:0x7fd3d0e285bb: mov esi, 0x31
old instr: 0x4122f6: mov rdi, rax
    new instr:0x7fd3d0e285c0: mov rdi, rax
old instr: 0x4122f9: call 0x40ca9a
    new instr:0x7fd3d0e285c3: call 0x7fd3d0e22d64
inserted instruction
4122fe
old instr: 0x4122fe: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e285c8: mov rax, qword ptr [rbp-0x8]
old instr: 0x412302: mov esi, 0x41
    new instr:0x7fd3d0e285cc: mov esi, 0x41
old instr: 0x412307: mov rdi, rax
    new instr:0x7fd3d0e285d1: mov rdi, rax
old instr: 0x41230a: call 0x40ca9a
    new instr:0x7fd3d0e285d4: call 0x7fd3d0e22d64
inserted instruction
41230f
old instr: 0x41230f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e285d9: mov rax, qword ptr [rbp-0x8]
old instr: 0x412313: mov esi, 0x59
    new instr:0x7fd3d0e285dd: mov esi, 0x59
old instr: 0x412318: mov rdi, rax
    new instr:0x7fd3d0e285e2: mov rdi, rax
old instr: 0x41231b: call 0x40ca9a
    new instr:0x7fd3d0e285e5: call 0x7fd3d0e22d64
inserted instruction
412320
old instr: 0x412320: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e285ea: mov rax, qword ptr [rbp-0x8]
old instr: 0x412324: mov esi, 0x26
    new instr:0x7fd3d0e285ee: mov esi, 0x26
old instr: 0x412329: mov rdi, rax
    new instr:0x7fd3d0e285f3: mov rdi, rax
old instr: 0x41232c: call 0x40ca9a
    new instr:0x7fd3d0e285f6: call 0x7fd3d0e22d64
inserted instruction
412331
old instr: 0x412331: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e285fb: mov rax, qword ptr [rbp-0x8]
old instr: 0x412335: mov esi, 0x53
    new instr:0x7fd3d0e285ff: mov esi, 0x53
old instr: 0x41233a: mov rdi, rax
    new instr:0x7fd3d0e28604: mov rdi, rax
old instr: 0x41233d: call 0x40ca9a
    new instr:0x7fd3d0e28607: call 0x7fd3d0e22d64
inserted instruction
412342
old instr: 0x412342: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2860c: mov rax, qword ptr [rbp-0x8]
old instr: 0x412346: mov esi, 0x59
    new instr:0x7fd3d0e28610: mov esi, 0x59
old instr: 0x41234b: mov rdi, rax
    new instr:0x7fd3d0e28615: mov rdi, rax
old instr: 0x41234e: call 0x40ca9a
    new instr:0x7fd3d0e28618: call 0x7fd3d0e22d64
inserted instruction
412353
old instr: 0x412353: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2861d: mov rax, qword ptr [rbp-0x8]
old instr: 0x412357: mov edx, dword ptr [rax+0x288]
    new instr:0x7fd3d0e28621: mov edx, dword ptr [rax+0x288]
old instr: 0x41235d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28627: mov rax, qword ptr [rbp-0x8]
old instr: 0x412361: mov esi, edx
    new instr:0x7fd3d0e2862b: mov esi, edx
old instr: 0x412363: mov rdi, rax
    new instr:0x7fd3d0e2862d: mov rdi, rax
old instr: 0x412366: call 0x40ca25
    new instr:0x7fd3d0e28630: call 0x7fd3d0e22cef
inserted instruction
41236b
old instr: 0x41236b: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28635: mov rax, qword ptr [rbp-0x8]
old instr: 0x41236f: mov edx, 0x0
    new instr:0x7fd3d0e28639: mov edx, 0x0
old instr: 0x412374: mov esi, 0x1
    new instr:0x7fd3d0e2863e: mov esi, 0x1
old instr: 0x412379: mov rdi, rax
    new instr:0x7fd3d0e28643: mov rdi, rax
old instr: 0x41237c: call 0x40c94c
    new instr:0x7fd3d0e28646: call 0x7fd3d0e22c16
inserted instruction
412381
old instr: 0x412381: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2864b: mov rax, qword ptr [rbp-0x8]
old instr: 0x412385: mov eax, dword ptr [rax+0x30]
    new instr:0x7fd3d0e2864f: mov eax, dword ptr [rax+0x30]
old instr: 0x412388: mov edx, eax
    new instr:0x7fd3d0e28652: mov edx, eax
old instr: 0x41238a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28654: mov rax, qword ptr [rbp-0x8]
old instr: 0x41238e: mov esi, 0x18
    new instr:0x7fd3d0e28658: mov esi, 0x18
old instr: 0x412393: mov rdi, rax
    new instr:0x7fd3d0e2865d: mov rdi, rax
old instr: 0x412396: call 0x40c94c
    new instr:0x7fd3d0e28660: call 0x7fd3d0e22c16
inserted instruction
41239b
old instr: 0x41239b: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28665: mov rax, qword ptr [rbp-0x8]
old instr: 0x41239f: mov rdi, rax
    new instr:0x7fd3d0e28669: mov rdi, rax
old instr: 0x4123a2: call 0x40cb2c
    new instr:0x7fd3d0e2866c: call 0x7fd3d0e22df6
inserted instruction
4123a7
old instr: 0x4123a7: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28671: mov rax, qword ptr [rbp-0x8]
old instr: 0x4123ab: mov rdi, rax
    new instr:0x7fd3d0e28675: mov rdi, rax
old instr: 0x4123ae: call 0x40ceee
    new instr:0x7fd3d0e28678: call 0x7fd3d0e231b8
inserted instruction
4123b3
old instr: 0x4123b3: cmp byte ptr [rbp-0xc], 0x0
    new instr:0x7fd3d0e2867d: cmp byte ptr [rbp-0xc], 0x0
in revert 
    new instr:0x7fd3d0e28681: jnz 0x7fd3d0e28743
412479
old instr: 0x412479: leave 
    new instr:0x7fd3d0e28687: leave 
old instr: 0x41247a: ret 
    new instr:0x7fd3d0e28688: ret 
inserted instruction
4121f7
old instr: 0x4121f7: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28689: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121fb: mov eax, dword ptr [rax+0x290]
    new instr:0x7fd3d0e2868d: mov eax, dword ptr [rax+0x290]
old instr: 0x412201: cmp eax, 0x1
    new instr:0x7fd3d0e28693: cmp eax, 0x1
old instr: 0x412204: jle 0x41224a
    new instr:0x7fd3d0e28696: jle 0x7fd3d0e286dc
inserted instruction
412281
old instr: 0x412281: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28698: mov rax, qword ptr [rbp-0x8]
old instr: 0x412285: mov rdi, rax
    new instr:0x7fd3d0e2869c: mov rdi, rax
old instr: 0x412288: call 0x40c8a8
    new instr:0x7fd3d0e2869f: call 0x7fd3d0e22cbf
inserted instruction
41228d
old instr: 0x41228d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e286a4: mov rax, qword ptr [rbp-0x8]
old instr: 0x412291: mov esi, 0x42
    new instr:0x7fd3d0e286a8: mov esi, 0x42
old instr: 0x412296: mov rdi, rax
    new instr:0x7fd3d0e286ad: mov rdi, rax
old instr: 0x412299: call 0x40ca9a
    new instr:0x7fd3d0e286b0: call 0x7fd3d0e22eb1
inserted instruction
41229e
old instr: 0x41229e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e286b5: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122a2: mov esi, 0x5a
    new instr:0x7fd3d0e286b9: mov esi, 0x5a
old instr: 0x4122a7: mov rdi, rax
    new instr:0x7fd3d0e286be: mov rdi, rax
old instr: 0x4122aa: call 0x40ca9a
    new instr:0x7fd3d0e286c1: call 0x7fd3d0e22eb1
inserted instruction
4122af
old instr: 0x4122af: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e286c6: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122b3: mov esi, 0x68
    new instr:0x7fd3d0e286ca: mov esi, 0x68
old instr: 0x4122b8: mov rdi, rax
    new instr:0x7fd3d0e286cf: mov rdi, rax
old instr: 0x4122bb: call 0x40ca9a
    new instr:0x7fd3d0e286d2: call 0x7fd3d0e22eb1
inserted instruction
4122c0
old instr: 0x4122c0: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e286d7: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122c4: mov eax, dword ptr [rax+0x298]
    new instr:0x7fd3d0e286db: mov eax, dword ptr [rax+0x298]
old instr: 0x4122ca: add eax, 0x30
    new instr:0x7fd3d0e286e1: add eax, 0x30
old instr: 0x4122cd: movzx edx, al
    new instr:0x7fd3d0e286e4: movzx edx, al
old instr: 0x4122d0: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e286e7: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122d4: mov esi, edx
    new instr:0x7fd3d0e286eb: mov esi, edx
old instr: 0x4122d6: mov rdi, rax
    new instr:0x7fd3d0e286ed: mov rdi, rax
old instr: 0x4122d9: call 0x40ca9a
    new instr:0x7fd3d0e286f0: call 0x7fd3d0e22eb1
inserted instruction
add jump to 
    new instr:0x7fd3d0e286f5: jmp 0x7fd3d123a9d8
4123bd
old instr: 0x4123bd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e286fa: mov rax, qword ptr [rbp-0x8]
old instr: 0x4123c1: mov esi, 0x17
    new instr:0x7fd3d0e286fe: mov esi, 0x17
old instr: 0x4123c6: mov rdi, rax
    new instr:0x7fd3d0e28703: mov rdi, rax
old instr: 0x4123c9: call 0x40ca9a
    new instr:0x7fd3d0e28706: call 0x7fd3d0e22dd7
inserted instruction
4123ce
old instr: 0x4123ce: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2870b: mov rax, qword ptr [rbp-0x8]
old instr: 0x4123d2: mov esi, 0x72
    new instr:0x7fd3d0e2870f: mov esi, 0x72
old instr: 0x4123d7: mov rdi, rax
    new instr:0x7fd3d0e28714: mov rdi, rax
old instr: 0x4123da: call 0x40ca9a
    new instr:0x7fd3d0e28717: call 0x7fd3d0e22dd7
inserted instruction
4123df
old instr: 0x4123df: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2871c: mov rax, qword ptr [rbp-0x8]
old instr: 0x4123e3: mov esi, 0x45
    new instr:0x7fd3d0e28720: mov esi, 0x45
old instr: 0x4123e8: mov rdi, rax
    new instr:0x7fd3d0e28725: mov rdi, rax
old instr: 0x4123eb: call 0x40ca9a
    new instr:0x7fd3d0e28728: call 0x7fd3d0e22dd7
inserted instruction
4123f0
old instr: 0x4123f0: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2872d: mov rax, qword ptr [rbp-0x8]
old instr: 0x4123f4: mov esi, 0x38
    new instr:0x7fd3d0e28731: mov esi, 0x38
old instr: 0x4123f9: mov rdi, rax
    new instr:0x7fd3d0e28736: mov rdi, rax
old instr: 0x4123fc: call 0x40ca9a
    new instr:0x7fd3d0e28739: call 0x7fd3d0e22dd7
inserted instruction
412401
old instr: 0x412401: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2873e: mov rax, qword ptr [rbp-0x8]
old instr: 0x412405: mov esi, 0x50
    new instr:0x7fd3d0e28742: mov esi, 0x50
old instr: 0x41240a: mov rdi, rax
    new instr:0x7fd3d0e28747: mov rdi, rax
old instr: 0x41240d: call 0x40ca9a
    new instr:0x7fd3d0e2874a: call 0x7fd3d0e22dd7
inserted instruction
412412
old instr: 0x412412: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2874f: mov rax, qword ptr [rbp-0x8]
old instr: 0x412416: mov esi, 0x90
    new instr:0x7fd3d0e28753: mov esi, 0x90
old instr: 0x41241b: mov rdi, rax
    new instr:0x7fd3d0e28758: mov rdi, rax
old instr: 0x41241e: call 0x40ca9a
    new instr:0x7fd3d0e2875b: call 0x7fd3d0e22dd7
inserted instruction
412423
old instr: 0x412423: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28760: mov rax, qword ptr [rbp-0x8]
old instr: 0x412427: mov edx, dword ptr [rax+0x28c]
    new instr:0x7fd3d0e28764: mov edx, dword ptr [rax+0x28c]
old instr: 0x41242d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2876a: mov rax, qword ptr [rbp-0x8]
old instr: 0x412431: mov esi, edx
    new instr:0x7fd3d0e2876e: mov esi, edx
old instr: 0x412433: mov rdi, rax
    new instr:0x7fd3d0e28770: mov rdi, rax
old instr: 0x412436: call 0x40ca25
    new instr:0x7fd3d0e28773: call 0x7fd3d0e22d62
inserted instruction
41243b
old instr: 0x41243b: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28778: mov rax, qword ptr [rbp-0x8]
old instr: 0x41243f: mov eax, dword ptr [rax+0x290]
    new instr:0x7fd3d0e2877c: mov eax, dword ptr [rax+0x290]
old instr: 0x412445: cmp eax, 0x1
    new instr:0x7fd3d0e28782: cmp eax, 0x1
in revert 
removing jump and inserting a dummy entry 
41246d
old instr: 0x41246d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28785: mov rax, qword ptr [rbp-0x8]
old instr: 0x412471: mov rdi, rax
    new instr:0x7fd3d0e28789: mov rdi, rax
address is :412474


old instr: 0x412474: call 0x40c8ce
    new instr:0x7fd3d0e2878c: call 0x7fd3d0e22be6
old instr: 0x412474: call 0x40c8ce
    new instr:0x7fd3d0e28791: call 0x7fd3d0e22beb
inserted instruction
add jump to 
    new instr:0x7fd3d0e28796: jmp 0x7fd3d123ac14
rtn name: BZ2_compressBlock : 7
2
40ca9a
old instr: 0x40ca9a: push rbp
    new instr:0x7fd3d0e2879b: push rbp
old instr: 0x40ca9b: mov rbp, rsp
    new instr:0x7fd3d0e2879c: mov rbp, rsp
old instr: 0x40ca9e: sub rsp, 0x10
    new instr:0x7fd3d0e2879f: sub rsp, 0x10
old instr: 0x40caa2: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e287a3: mov qword ptr [rbp-0x8], rdi
old instr: 0x40caa6: mov eax, esi
    new instr:0x7fd3d0e287a7: mov eax, esi
old instr: 0x40caa8: mov byte ptr [rbp-0xc], al
    new instr:0x7fd3d0e287a9: mov byte ptr [rbp-0xc], al
old instr: 0x40caab: movzx edx, byte ptr [rbp-0xc]
    new instr:0x7fd3d0e287ac: movzx edx, byte ptr [rbp-0xc]
old instr: 0x40caaf: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e287b0: mov rax, qword ptr [rbp-0x8]
old instr: 0x40cab3: mov esi, 0x8
    new instr:0x7fd3d0e287b4: mov esi, 0x8
old instr: 0x40cab8: mov rdi, rax
    new instr:0x7fd3d0e287b9: mov rdi, rax
old instr: 0x40cabb: call 0x40c94c
    new instr:0x7fd3d0e287bc: call 0x7fd3d0e2864d
inserted instruction
40cac0
old instr: 0x40cac0: leave 
    new instr:0x7fd3d0e287c1: leave 
address is :40cac1


old instr: 0x40cac1: ret 
    new instr:0x7fd3d0e287c2: ret 
old instr: 0x40cac1: ret 
    new instr:0x7fd3d0e287c3: ret 
inserted instruction
rtn name: bsPutUChar : 8
5
40ca25
old instr: 0x40ca25: push rbp
    new instr:0x7fd3d0e287c4: push rbp
old instr: 0x40ca26: mov rbp, rsp
    new instr:0x7fd3d0e287c5: mov rbp, rsp
old instr: 0x40ca29: sub rsp, 0x10
    new instr:0x7fd3d0e287c8: sub rsp, 0x10
old instr: 0x40ca2d: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e287cc: mov qword ptr [rbp-0x8], rdi
old instr: 0x40ca31: mov dword ptr [rbp-0xc], esi
    new instr:0x7fd3d0e287d0: mov dword ptr [rbp-0xc], esi
old instr: 0x40ca34: mov eax, dword ptr [rbp-0xc]
    new instr:0x7fd3d0e287d3: mov eax, dword ptr [rbp-0xc]
old instr: 0x40ca37: mov edx, eax
    new instr:0x7fd3d0e287d6: mov edx, eax
old instr: 0x40ca39: shr edx, 0x18
    new instr:0x7fd3d0e287d8: shr edx, 0x18
old instr: 0x40ca3c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e287db: mov rax, qword ptr [rbp-0x8]
old instr: 0x40ca40: mov esi, 0x8
    new instr:0x7fd3d0e287df: mov esi, 0x8
old instr: 0x40ca45: mov rdi, rax
    new instr:0x7fd3d0e287e4: mov rdi, rax
old instr: 0x40ca48: call 0x40c94c
    new instr:0x7fd3d0e287e7: call 0x7fd3d0e286eb
inserted instruction
40ca4d
old instr: 0x40ca4d: mov eax, dword ptr [rbp-0xc]
    new instr:0x7fd3d0e287ec: mov eax, dword ptr [rbp-0xc]
old instr: 0x40ca50: shr eax, 0x10
    new instr:0x7fd3d0e287ef: shr eax, 0x10
old instr: 0x40ca53: movzx edx, al
    new instr:0x7fd3d0e287f2: movzx edx, al
old instr: 0x40ca56: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e287f5: mov rax, qword ptr [rbp-0x8]
old instr: 0x40ca5a: mov esi, 0x8
    new instr:0x7fd3d0e287f9: mov esi, 0x8
old instr: 0x40ca5f: mov rdi, rax
    new instr:0x7fd3d0e287fe: mov rdi, rax
old instr: 0x40ca62: call 0x40c94c
    new instr:0x7fd3d0e28801: call 0x7fd3d0e286eb
inserted instruction
40ca67
old instr: 0x40ca67: mov eax, dword ptr [rbp-0xc]
    new instr:0x7fd3d0e28806: mov eax, dword ptr [rbp-0xc]
old instr: 0x40ca6a: shr eax, 0x8
    new instr:0x7fd3d0e28809: shr eax, 0x8
old instr: 0x40ca6d: movzx edx, al
    new instr:0x7fd3d0e2880c: movzx edx, al
old instr: 0x40ca70: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2880f: mov rax, qword ptr [rbp-0x8]
old instr: 0x40ca74: mov esi, 0x8
    new instr:0x7fd3d0e28813: mov esi, 0x8
old instr: 0x40ca79: mov rdi, rax
    new instr:0x7fd3d0e28818: mov rdi, rax
old instr: 0x40ca7c: call 0x40c94c
    new instr:0x7fd3d0e2881b: call 0x7fd3d0e286eb
inserted instruction
40ca81
old instr: 0x40ca81: mov eax, dword ptr [rbp-0xc]
    new instr:0x7fd3d0e28820: mov eax, dword ptr [rbp-0xc]
old instr: 0x40ca84: movzx edx, al
    new instr:0x7fd3d0e28823: movzx edx, al
old instr: 0x40ca87: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28826: mov rax, qword ptr [rbp-0x8]
old instr: 0x40ca8b: mov esi, 0x8
    new instr:0x7fd3d0e2882a: mov esi, 0x8
old instr: 0x40ca90: mov rdi, rax
    new instr:0x7fd3d0e2882f: mov rdi, rax
old instr: 0x40ca93: call 0x40c94c
    new instr:0x7fd3d0e28832: call 0x7fd3d0e286eb
inserted instruction
40ca98
old instr: 0x40ca98: leave 
    new instr:0x7fd3d0e28837: leave 
address is :40ca99


old instr: 0x40ca99: ret 
    new instr:0x7fd3d0e28838: ret 
old instr: 0x40ca99: ret 
    new instr:0x7fd3d0e28839: ret 
inserted instruction
rtn name: bsPutUInt32 : 9
25
408127
old instr: 0x408127: push rbp
    new instr:0x7fd3d0e2883a: push rbp
old instr: 0x408128: mov rbp, rsp
    new instr:0x7fd3d0e2883b: mov rbp, rsp
old instr: 0x40812b: sub rsp, 0x50
    new instr:0x7fd3d0e2883e: sub rsp, 0x50
old instr: 0x40812f: mov qword ptr [rbp-0x28], rdi
    new instr:0x7fd3d0e28842: mov qword ptr [rbp-0x28], rdi
old instr: 0x408133: mov qword ptr [rbp-0x30], rsi
    new instr:0x7fd3d0e28846: mov qword ptr [rbp-0x30], rsi
old instr: 0x408137: mov dword ptr [rbp-0x34], edx
    new instr:0x7fd3d0e2884a: mov dword ptr [rbp-0x34], edx
old instr: 0x40813a: mov qword ptr [rbp-0x40], rcx
    new instr:0x7fd3d0e2884d: mov qword ptr [rbp-0x40], rcx
old instr: 0x40813e: mov qword ptr [rbp-0x48], r8
    new instr:0x7fd3d0e28851: mov qword ptr [rbp-0x48], r8
old instr: 0x408142: mov qword ptr [rbp-0x50], r9
    new instr:0x7fd3d0e28855: mov qword ptr [rbp-0x50], r9
old instr: 0x408146: mov rax, qword ptr [rbp-0x30]
    new instr:0x7fd3d0e28859: mov rax, qword ptr [rbp-0x30]
old instr: 0x40814a: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e2885d: mov qword ptr [rbp-0x8], rax
old instr: 0x40814e: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28861: cmp qword ptr [rbp-0x8], 0x0
in revert 
removing jump and inserting a dummy entry 
408184
old instr: 0x408184: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28866: mov rax, qword ptr [rbp-0x8]
old instr: 0x408188: movzx eax, byte ptr [rax+0x1394]
    new instr:0x7fd3d0e2886a: movzx eax, byte ptr [rax+0x1394]
old instr: 0x40818f: test al, al
    new instr:0x7fd3d0e28871: test al, al
in revert 
removing jump and inserting a dummy entry 
4081c2
old instr: 0x4081c2: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28873: mov rax, qword ptr [rbp-0x8]
old instr: 0x4081c6: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e28877: mov rax, qword ptr [rax]
old instr: 0x4081c9: mov rdi, rax
    new instr:0x7fd3d0e2887a: mov rdi, rax
old instr: 0x4081cc: call 0x4010f0
    new instr:0x7fd3d0e2887d: call 0x7fd3d0e217a1
inserted instruction
4081d1
old instr: 0x4081d1: test eax, eax
    new instr:0x7fd3d0e28882: test eax, eax
in revert 
removing jump and inserting a dummy entry 
408204
old instr: 0x408204: cmp qword ptr [rbp-0x40], 0x0
    new instr:0x7fd3d0e28884: cmp qword ptr [rbp-0x40], 0x0
inserted instruction
40820b
old instr: 0x40820b: mov rax, qword ptr [rbp-0x40]
    new instr:0x7fd3d0e28889: mov rax, qword ptr [rbp-0x40]
old instr: 0x40820f: mov dword ptr [rax], 0x0
    new instr:0x7fd3d0e2888d: mov dword ptr [rax], 0x0
old instr: 0x408215: cmp qword ptr [rbp-0x48], 0x0
    new instr:0x7fd3d0e28893: cmp qword ptr [rbp-0x48], 0x0
inserted instruction
40821c
old instr: 0x40821c: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e28898: mov rax, qword ptr [rbp-0x48]
old instr: 0x408220: mov dword ptr [rax], 0x0
    new instr:0x7fd3d0e2889c: mov dword ptr [rax], 0x0
old instr: 0x408226: cmp qword ptr [rbp-0x50], 0x0
    new instr:0x7fd3d0e288a2: cmp qword ptr [rbp-0x50], 0x0
inserted instruction
40822d
old instr: 0x40822d: mov rax, qword ptr [rbp-0x50]
    new instr:0x7fd3d0e288a7: mov rax, qword ptr [rbp-0x50]
old instr: 0x408231: mov dword ptr [rax], 0x0
    new instr:0x7fd3d0e288ab: mov dword ptr [rax], 0x0
old instr: 0x408237: cmp qword ptr [rbp+0x10], 0x0
    new instr:0x7fd3d0e288b1: cmp qword ptr [rbp+0x10], 0x0
inserted instruction
40823e
old instr: 0x40823e: mov rax, qword ptr [rbp+0x10]
    new instr:0x7fd3d0e288b6: mov rax, qword ptr [rbp+0x10]
old instr: 0x408242: mov dword ptr [rax], 0x0
    new instr:0x7fd3d0e288ba: mov dword ptr [rax], 0x0
old instr: 0x408248: cmp dword ptr [rbp-0x34], 0x0
    new instr:0x7fd3d0e288c0: cmp dword ptr [rbp-0x34], 0x0
inserted instruction
408252
old instr: 0x408252: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e288c4: mov rax, qword ptr [rbp-0x8]
old instr: 0x408256: mov eax, dword ptr [rax+0x13e8]
    new instr:0x7fd3d0e288c8: mov eax, dword ptr [rax+0x13e8]
old instr: 0x40825c: test eax, eax
    new instr:0x7fd3d0e288ce: test eax, eax
inserted instruction
408264
in revert 
removing jump and inserting a dummy entry 
408267
old instr: 0x408267: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e288d0: mov rax, qword ptr [rbp-0x8]
old instr: 0x40826b: mov dword ptr [rax+0x13b8], 0x1388
    new instr:0x7fd3d0e288d4: mov dword ptr [rax+0x13b8], 0x1388
old instr: 0x408275: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e288de: mov rax, qword ptr [rbp-0x8]
old instr: 0x408279: lea rdx, ptr [rax+0x8]
    new instr:0x7fd3d0e288e2: lea rdx, ptr [rax+0x8]
old instr: 0x40827d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e288e6: mov rax, qword ptr [rbp-0x8]
old instr: 0x408281: mov qword ptr [rax+0x13b0], rdx
    new instr:0x7fd3d0e288ea: mov qword ptr [rax+0x13b0], rdx
old instr: 0x408288: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e288f1: mov rax, qword ptr [rbp-0x8]
old instr: 0x40828c: add rax, 0x1398
    new instr:0x7fd3d0e288f5: add rax, 0x1398
old instr: 0x408292: mov esi, 0x2
    new instr:0x7fd3d0e288fb: mov esi, 0x2
old instr: 0x408297: mov rdi, rax
    new instr:0x7fd3d0e28900: mov rdi, rax
old instr: 0x40829a: call 0x405c64
    new instr:0x7fd3d0e28903: call 0x7fd3d0e262cd
inserted instruction
40829f
old instr: 0x40829f: mov dword ptr [rbp-0xc], eax
    new instr:0x7fd3d0e28908: mov dword ptr [rbp-0xc], eax
old instr: 0x4082a2: cmp dword ptr [rbp-0xc], 0x3
    new instr:0x7fd3d0e2890b: cmp dword ptr [rbp-0xc], 0x3
in revert 
    new instr:0x7fd3d0e2890f: jnz 0x7fd3d0e28944
4082db
old instr: 0x4082db: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28911: mov rax, qword ptr [rbp-0x8]
old instr: 0x4082df: mov eax, dword ptr [rax+0x13b8]
    new instr:0x7fd3d0e28915: mov eax, dword ptr [rax+0x13b8]
old instr: 0x4082e5: cmp eax, 0x1387
    new instr:0x7fd3d0e2891b: cmp eax, 0x1387
inserted instruction
4082f0
old instr: 0x4082f0: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28920: mov rax, qword ptr [rbp-0x8]
old instr: 0x4082f4: mov eax, dword ptr [rax+0x13b8]
    new instr:0x7fd3d0e28924: mov eax, dword ptr [rax+0x13b8]
old instr: 0x4082fa: mov edx, 0x1388
    new instr:0x7fd3d0e2892a: mov edx, 0x1388
old instr: 0x4082ff: mov ecx, edx
    new instr:0x7fd3d0e2892f: mov ecx, edx
old instr: 0x408301: sub ecx, eax
    new instr:0x7fd3d0e28931: sub ecx, eax
old instr: 0x408303: mov eax, ecx
    new instr:0x7fd3d0e28933: mov eax, ecx
old instr: 0x408305: mov dword ptr [rbp-0x10], eax
    new instr:0x7fd3d0e28935: mov dword ptr [rbp-0x10], eax
old instr: 0x408308: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28938: mov rax, qword ptr [rbp-0x8]
old instr: 0x40830c: mov rdx, qword ptr [rax]
    new instr:0x7fd3d0e2893c: mov rdx, qword ptr [rax]
old instr: 0x40830f: mov eax, dword ptr [rbp-0x10]
    new instr:0x7fd3d0e2893f: mov eax, dword ptr [rbp-0x10]
old instr: 0x408312: cdqe 
    new instr:0x7fd3d0e28942: cdqe 
old instr: 0x408314: mov rcx, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28944: mov rcx, qword ptr [rbp-0x8]
old instr: 0x408318: lea rdi, ptr [rcx+0x8]
    new instr:0x7fd3d0e28948: lea rdi, ptr [rcx+0x8]
old instr: 0x40831c: mov rcx, rdx
    new instr:0x7fd3d0e2894c: mov rcx, rdx
old instr: 0x40831f: mov rdx, rax
    new instr:0x7fd3d0e2894f: mov rdx, rax
old instr: 0x408322: mov esi, 0x1
    new instr:0x7fd3d0e28952: mov esi, 0x1
old instr: 0x408327: call 0x4012d0
    new instr:0x7fd3d0e28957: call 0x7fd3d0e21900
inserted instruction
40832c
old instr: 0x40832c: mov dword ptr [rbp-0x14], eax
    new instr:0x7fd3d0e2895c: mov dword ptr [rbp-0x14], eax
old instr: 0x40832f: mov eax, dword ptr [rbp-0x10]
    new instr:0x7fd3d0e2895f: mov eax, dword ptr [rbp-0x10]
old instr: 0x408332: cmp eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e28962: cmp eax, dword ptr [rbp-0x14]
inserted instruction
408337
old instr: 0x408337: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28965: mov rax, qword ptr [rbp-0x8]
old instr: 0x40833b: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e28969: mov rax, qword ptr [rax]
old instr: 0x40833e: mov rdi, rax
    new instr:0x7fd3d0e2896c: mov rdi, rax
old instr: 0x408341: call 0x4010f0
    new instr:0x7fd3d0e2896f: call 0x7fd3d0e2171e
inserted instruction
408346
old instr: 0x408346: test eax, eax
    new instr:0x7fd3d0e28974: test eax, eax
in revert 
removing jump and inserting a dummy entry 
408379
old instr: 0x408379: cmp dword ptr [rbp-0xc], 0x4
    new instr:0x7fd3d0e28976: cmp dword ptr [rbp-0xc], 0x4
in revert 
    new instr:0x7fd3d0e2897a: jz 0x7fd3d0e28863
408266
old instr: 0x408266: nop
    new instr:0x7fd3d0e28980: nop
old instr: 0x408267: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28981: mov rax, qword ptr [rbp-0x8]
old instr: 0x40826b: mov dword ptr [rax+0x13b8], 0x1388
    new instr:0x7fd3d0e28985: mov dword ptr [rax+0x13b8], 0x1388
old instr: 0x408275: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e2898f: mov rax, qword ptr [rbp-0x8]
old instr: 0x408279: lea rdx, ptr [rax+0x8]
    new instr:0x7fd3d0e28993: lea rdx, ptr [rax+0x8]
old instr: 0x40827d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28997: mov rax, qword ptr [rbp-0x8]
old instr: 0x408281: mov qword ptr [rax+0x13b0], rdx
    new instr:0x7fd3d0e2899b: mov qword ptr [rax+0x13b0], rdx
old instr: 0x408288: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e289a2: mov rax, qword ptr [rbp-0x8]
old instr: 0x40828c: add rax, 0x1398
    new instr:0x7fd3d0e289a6: add rax, 0x1398
old instr: 0x408292: mov esi, 0x2
    new instr:0x7fd3d0e289ac: mov esi, 0x2
old instr: 0x408297: mov rdi, rax
    new instr:0x7fd3d0e289b1: mov rdi, rax
old instr: 0x40829a: call 0x405c64
    new instr:0x7fd3d0e289b4: call 0x7fd3d0e2637e
inserted instruction
add jump to 
    new instr:0x7fd3d0e289b9: jmp 0x7fd3d1230c5d
408383
old instr: 0x408383: nop
    new instr:0x7fd3d0e289be: nop
old instr: 0x408384: cmp dword ptr [rbp-0x34], 0x0
    new instr:0x7fd3d0e289bf: cmp dword ptr [rbp-0x34], 0x0
inserted instruction
40838a
old instr: 0x40838a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e289c3: mov rax, qword ptr [rbp-0x8]
old instr: 0x40838e: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e289c7: mov rax, qword ptr [rax]
old instr: 0x408391: mov rdi, rax
    new instr:0x7fd3d0e289ca: mov rdi, rax
old instr: 0x408394: call 0x4010f0
    new instr:0x7fd3d0e289cd: call 0x7fd3d0e21729
inserted instruction
408399
old instr: 0x408399: test eax, eax
    new instr:0x7fd3d0e289d2: test eax, eax
inserted instruction
40839d
old instr: 0x40839d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e289d4: mov rax, qword ptr [rbp-0x8]
old instr: 0x4083a1: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e289d8: mov rax, qword ptr [rax]
old instr: 0x4083a4: mov rdi, rax
    new instr:0x7fd3d0e289db: mov rdi, rax
old instr: 0x4083a7: call 0x401230
    new instr:0x7fd3d0e289de: call 0x7fd3d0e21867
inserted instruction
4083ac
old instr: 0x4083ac: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e289e3: mov rax, qword ptr [rbp-0x8]
old instr: 0x4083b0: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e289e7: mov rax, qword ptr [rax]
old instr: 0x4083b3: mov rdi, rax
    new instr:0x7fd3d0e289ea: mov rdi, rax
old instr: 0x4083b6: call 0x4010f0
    new instr:0x7fd3d0e289ed: call 0x7fd3d0e21727
inserted instruction
4083bb
old instr: 0x4083bb: test eax, eax
    new instr:0x7fd3d0e289f2: test eax, eax
in revert 
removing jump and inserting a dummy entry 
4083ee
old instr: 0x4083ee: cmp qword ptr [rbp-0x40], 0x0
    new instr:0x7fd3d0e289f4: cmp qword ptr [rbp-0x40], 0x0
inserted instruction
4083f5
old instr: 0x4083f5: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e289f9: mov rax, qword ptr [rbp-0x8]
old instr: 0x4083f9: mov edx, dword ptr [rax+0x13a4]
    new instr:0x7fd3d0e289fd: mov edx, dword ptr [rax+0x13a4]
old instr: 0x4083ff: mov rax, qword ptr [rbp-0x40]
    new instr:0x7fd3d0e28a03: mov rax, qword ptr [rbp-0x40]
old instr: 0x408403: mov dword ptr [rax], edx
    new instr:0x7fd3d0e28a07: mov dword ptr [rax], edx
old instr: 0x408405: cmp qword ptr [rbp-0x48], 0x0
    new instr:0x7fd3d0e28a09: cmp qword ptr [rbp-0x48], 0x0
inserted instruction
40840c
old instr: 0x40840c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28a0e: mov rax, qword ptr [rbp-0x8]
old instr: 0x408410: mov edx, dword ptr [rax+0x13a8]
    new instr:0x7fd3d0e28a12: mov edx, dword ptr [rax+0x13a8]
old instr: 0x408416: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fd3d0e28a18: mov rax, qword ptr [rbp-0x48]
old instr: 0x40841a: mov dword ptr [rax], edx
    new instr:0x7fd3d0e28a1c: mov dword ptr [rax], edx
old instr: 0x40841c: cmp qword ptr [rbp-0x50], 0x0
    new instr:0x7fd3d0e28a1e: cmp qword ptr [rbp-0x50], 0x0
inserted instruction
408423
old instr: 0x408423: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28a23: mov rax, qword ptr [rbp-0x8]
old instr: 0x408427: mov edx, dword ptr [rax+0x13bc]
    new instr:0x7fd3d0e28a27: mov edx, dword ptr [rax+0x13bc]
old instr: 0x40842d: mov rax, qword ptr [rbp-0x50]
    new instr:0x7fd3d0e28a2d: mov rax, qword ptr [rbp-0x50]
old instr: 0x408431: mov dword ptr [rax], edx
    new instr:0x7fd3d0e28a31: mov dword ptr [rax], edx
old instr: 0x408433: cmp qword ptr [rbp+0x10], 0x0
    new instr:0x7fd3d0e28a33: cmp qword ptr [rbp+0x10], 0x0
inserted instruction
40843a
old instr: 0x40843a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28a38: mov rax, qword ptr [rbp-0x8]
old instr: 0x40843e: mov edx, dword ptr [rax+0x13c0]
    new instr:0x7fd3d0e28a3c: mov edx, dword ptr [rax+0x13c0]
old instr: 0x408444: mov rax, qword ptr [rbp+0x10]
    new instr:0x7fd3d0e28a42: mov rax, qword ptr [rbp+0x10]
old instr: 0x408448: mov dword ptr [rax], edx
    new instr:0x7fd3d0e28a46: mov dword ptr [rax], edx
old instr: 0x40844a: cmp qword ptr [rbp-0x28], 0x0
    new instr:0x7fd3d0e28a48: cmp qword ptr [rbp-0x28], 0x0
inserted instruction
408451
old instr: 0x408451: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28a4d: mov rax, qword ptr [rbp-0x28]
old instr: 0x408455: mov dword ptr [rax], 0x0
    new instr:0x7fd3d0e28a51: mov dword ptr [rax], 0x0
old instr: 0x40845b: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28a57: cmp qword ptr [rbp-0x8], 0x0
inserted instruction
408462
old instr: 0x408462: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28a5c: mov rax, qword ptr [rbp-0x8]
old instr: 0x408466: mov dword ptr [rax+0x13e8], 0x0
    new instr:0x7fd3d0e28a60: mov dword ptr [rax+0x13e8], 0x0
old instr: 0x408470: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28a6a: mov rax, qword ptr [rbp-0x8]
old instr: 0x408474: add rax, 0x1398
    new instr:0x7fd3d0e28a6e: add rax, 0x1398
old instr: 0x40847a: mov rdi, rax
    new instr:0x7fd3d0e28a74: mov rdi, rax
old instr: 0x40847d: call 0x405e91
    new instr:0x7fd3d0e28a77: call 0x7fd3d0e2648b
inserted instruction
408482
old instr: 0x408482: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28a7c: mov rax, qword ptr [rbp-0x8]
old instr: 0x408486: mov rdi, rax
    new instr:0x7fd3d0e28a80: mov rdi, rax
old instr: 0x408489: call 0x401080
    new instr:0x7fd3d0e28a83: call 0x7fd3d0e2167a
inserted instruction
40848e
in revert 
removing jump and inserting a dummy entry 
4084a0
old instr: 0x4084a0: leave 
    new instr:0x7fd3d0e28a88: leave 
old instr: 0x4084a1: ret 
    new instr:0x7fd3d0e28a89: ret 
inserted instruction
4082a8
old instr: 0x4082a8: cmp dword ptr [rbp-0xc], 0x4
    new instr:0x7fd3d0e28a8a: cmp dword ptr [rbp-0xc], 0x4
address is :4082ac


old instr: 0x4082ac: jz 0x4082db
    new instr:0x7fd3d0e28a8e: jz 0x7fd3d0e28abd
    new instr:0x7fd3d0e28a90: jmp 0x7fd3d0e28a94
rtn name: BZ2_bzWriteClose64 : 10
c
403eb0
old instr: 0x403eb0: push rbp
    new instr:0x7fd3d0e28a95: push rbp
old instr: 0x403eb1: mov rbp, rsp
    new instr:0x7fd3d0e28a96: mov rbp, rsp
old instr: 0x403eb4: sub rsp, 0x20
    new instr:0x7fd3d0e28a99: sub rsp, 0x20
old instr: 0x403eb8: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e28a9d: mov qword ptr [rbp-0x18], rdi
old instr: 0x403ebc: mov qword ptr [rbp-0x20], rsi
    new instr:0x7fd3d0e28aa1: mov qword ptr [rbp-0x20], rsi
old instr: 0x403ec0: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7fd3d0e28aa5: cmp qword ptr [rbp-0x18], 0x0
old instr: 0x403ec5: jnz 0x403f09
    new instr:0x7fd3d0e28aaa: jnz 0x7fd3d0e28aee
inserted instruction
403ec7
old instr: 0x403ec7: call 0x403e7d
    new instr:0x7fd3d0e28aac: call 0x7fd3d0e28a62
inserted instruction
403ecc
old instr: 0x403ecc: mov qword ptr [rbp-0x10], rax
    new instr:0x7fd3d0e28ab1: mov qword ptr [rbp-0x10], rax
old instr: 0x403ed0: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e28ab5: mov rax, qword ptr [rbp-0x20]
old instr: 0x403ed4: mov rdi, rax
    new instr:0x7fd3d0e28ab9: mov rdi, rax
old instr: 0x403ed7: call 0x401150
    new instr:0x7fd3d0e28abc: call 0x7fd3d0e25d35
inserted instruction
403edc
old instr: 0x403edc: add eax, 0x5
    new instr:0x7fd3d0e28ac1: add eax, 0x5
old instr: 0x403edf: mov edi, eax
    new instr:0x7fd3d0e28ac4: mov edi, eax
old instr: 0x403ee1: call 0x403e4f
    new instr:0x7fd3d0e28ac6: call 0x7fd3d0e28a34
inserted instruction
403ee6
old instr: 0x403ee6: mov rdx, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28acb: mov rdx, qword ptr [rbp-0x10]
old instr: 0x403eea: mov qword ptr [rdx], rax
    new instr:0x7fd3d0e28acf: mov qword ptr [rdx], rax
old instr: 0x403eed: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28ad2: mov rax, qword ptr [rbp-0x10]
old instr: 0x403ef1: mov rax, qword ptr [rax]
    new instr:0x7fd3d0e28ad6: mov rax, qword ptr [rax]
old instr: 0x403ef4: mov rdx, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e28ad9: mov rdx, qword ptr [rbp-0x20]
old instr: 0x403ef8: mov rsi, rdx
    new instr:0x7fd3d0e28add: mov rsi, rdx
old instr: 0x403efb: mov rdi, rax
    new instr:0x7fd3d0e28ae0: mov rdi, rax
old instr: 0x403efe: call 0x4010d0
    new instr:0x7fd3d0e28ae3: call 0x7fd3d0e25cb5
inserted instruction
403f03
old instr: 0x403f03: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28ae8: mov rax, qword ptr [rbp-0x10]
in revert 
removing jump and inserting a dummy entry 
403f4f
old instr: 0x403f4f: leave 
    new instr:0x7fd3d0e28aec: leave 
old instr: 0x403f50: ret 
    new instr:0x7fd3d0e28aed: ret 
inserted instruction
403f09
old instr: 0x403f09: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28aee: mov rax, qword ptr [rbp-0x18]
old instr: 0x403f0d: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e28af2: mov qword ptr [rbp-0x8], rax
in revert 
removing jump and inserting a dummy entry 
403f1f
old instr: 0x403f1f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28af6: mov rax, qword ptr [rbp-0x8]
old instr: 0x403f23: mov rax, qword ptr [rax+0x8]
    new instr:0x7fd3d0e28afa: mov rax, qword ptr [rax+0x8]
old instr: 0x403f27: test rax, rax
    new instr:0x7fd3d0e28afe: test rax, rax
old instr: 0x403f2a: jnz 0x403f13
    new instr:0x7fd3d0e28b01: jnz 0x7fd3d0e28aea
inserted instruction
403f2c
old instr: 0x403f2c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28b03: mov rax, qword ptr [rbp-0x8]
old instr: 0x403f30: mov rax, qword ptr [rax+0x8]
    new instr:0x7fd3d0e28b07: mov rax, qword ptr [rax+0x8]
old instr: 0x403f34: mov rdx, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e28b0b: mov rdx, qword ptr [rbp-0x20]
old instr: 0x403f38: mov rsi, rdx
    new instr:0x7fd3d0e28b0f: mov rsi, rdx
old instr: 0x403f3b: mov rdi, rax
    new instr:0x7fd3d0e28b12: mov rdi, rax
old instr: 0x403f3e: call 0x403eb0
    new instr:0x7fd3d0e28b15: call 0x7fd3d0e28a87
inserted instruction
403f43
old instr: 0x403f43: mov rdx, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28b1a: mov rdx, qword ptr [rbp-0x8]
old instr: 0x403f47: mov qword ptr [rdx+0x8], rax
    new instr:0x7fd3d0e28b1e: mov qword ptr [rdx+0x8], rax
old instr: 0x403f4b: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28b22: mov rax, qword ptr [rbp-0x18]
old instr: 0x403f4f: leave 
    new instr:0x7fd3d0e28b26: leave 
old instr: 0x403f50: ret 
    new instr:0x7fd3d0e28b27: ret 
inserted instruction
403f13
old instr: 0x403f13: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28b28: mov rax, qword ptr [rbp-0x8]
old instr: 0x403f17: mov rax, qword ptr [rax+0x8]
    new instr:0x7fd3d0e28b2c: mov rax, qword ptr [rax+0x8]
old instr: 0x403f1b: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e28b30: mov qword ptr [rbp-0x8], rax
old instr: 0x403f1f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28b34: mov rax, qword ptr [rbp-0x8]
old instr: 0x403f23: mov rax, qword ptr [rax+0x8]
    new instr:0x7fd3d0e28b38: mov rax, qword ptr [rax+0x8]
old instr: 0x403f27: test rax, rax
    new instr:0x7fd3d0e28b3c: test rax, rax
address is :403f2a


old instr: 0x403f2a: jnz 0x403f13
    new instr:0x7fd3d0e28b3f: jnz 0x7fd3d0e28b28
    new instr:0x7fd3d0e28b41: jmp 0x7fd3d122ca72
rtn name: snocString : 11
6
402a83
old instr: 0x402a83: push rbp
    new instr:0x7fd3d0e28b46: push rbp
old instr: 0x402a84: mov rbp, rsp
    new instr:0x7fd3d0e28b47: mov rbp, rsp
old instr: 0x402a87: sub rsp, 0x20
    new instr:0x7fd3d0e28b4a: sub rsp, 0x20
old instr: 0x402a8b: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e28b4e: mov qword ptr [rbp-0x18], rdi
old instr: 0x402a8f: mov qword ptr [rbp-0x20], rsi
    new instr:0x7fd3d0e28b52: mov qword ptr [rbp-0x20], rsi
old instr: 0x402a93: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28b56: mov rax, qword ptr [rbp-0x18]
old instr: 0x402a97: mov rdi, rax
    new instr:0x7fd3d0e28b5a: mov rdi, rax
old instr: 0x402a9a: call 0x401150
    new instr:0x7fd3d0e28b5d: call 0x7fd3d0e27213
inserted instruction
402a9f
old instr: 0x402a9f: mov dword ptr [rbp-0x4], eax
    new instr:0x7fd3d0e28b62: mov dword ptr [rbp-0x4], eax
old instr: 0x402aa2: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e28b65: mov rax, qword ptr [rbp-0x20]
old instr: 0x402aa6: mov rdi, rax
    new instr:0x7fd3d0e28b69: mov rdi, rax
old instr: 0x402aa9: call 0x401150
    new instr:0x7fd3d0e28b6c: call 0x7fd3d0e27213
inserted instruction
402aae
old instr: 0x402aae: mov dword ptr [rbp-0x8], eax
    new instr:0x7fd3d0e28b71: mov dword ptr [rbp-0x8], eax
old instr: 0x402ab1: mov eax, dword ptr [rbp-0x4]
    new instr:0x7fd3d0e28b74: mov eax, dword ptr [rbp-0x4]
old instr: 0x402ab4: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e28b77: cmp eax, dword ptr [rbp-0x8]
in revert 
removing jump and inserting a dummy entry 
402ac0
old instr: 0x402ac0: mov eax, dword ptr [rbp-0x4]
    new instr:0x7fd3d0e28b7a: mov eax, dword ptr [rbp-0x4]
old instr: 0x402ac3: movsxd rdx, eax
    new instr:0x7fd3d0e28b7d: movsxd rdx, eax
old instr: 0x402ac6: mov eax, dword ptr [rbp-0x8]
    new instr:0x7fd3d0e28b80: mov eax, dword ptr [rbp-0x8]
old instr: 0x402ac9: cdqe 
    new instr:0x7fd3d0e28b83: cdqe 
old instr: 0x402acb: sub rdx, rax
    new instr:0x7fd3d0e28b85: sub rdx, rax
old instr: 0x402ace: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28b88: mov rax, qword ptr [rbp-0x18]
old instr: 0x402ad2: add rdx, rax
    new instr:0x7fd3d0e28b8c: add rdx, rax
old instr: 0x402ad5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e28b8f: mov rax, qword ptr [rbp-0x20]
old instr: 0x402ad9: mov rsi, rax
    new instr:0x7fd3d0e28b93: mov rsi, rax
old instr: 0x402adc: mov rdi, rdx
    new instr:0x7fd3d0e28b96: mov rdi, rdx
old instr: 0x402adf: call 0x4011c0
    new instr:0x7fd3d0e28b99: call 0x7fd3d0e2727a
inserted instruction
402ae4
old instr: 0x402ae4: test eax, eax
    new instr:0x7fd3d0e28b9e: test eax, eax
in revert 
removing jump and inserting a dummy entry 
402aef
old instr: 0x402aef: mov eax, 0x0
    new instr:0x7fd3d0e28ba0: mov eax, 0x0
old instr: 0x402af4: leave 
    new instr:0x7fd3d0e28ba5: leave 
address is :402af5


old instr: 0x402af5: ret 
    new instr:0x7fd3d0e28ba6: ret 
old instr: 0x402af5: ret 
    new instr:0x7fd3d0e28ba7: ret 
inserted instruction
rtn name: hasSuffix : 12
4
4027f1
old instr: 0x4027f1: push rbp
    new instr:0x7fd3d0e28ba8: push rbp
old instr: 0x4027f2: mov rbp, rsp
    new instr:0x7fd3d0e28ba9: mov rbp, rsp
old instr: 0x4027f5: sub rsp, 0x10
    new instr:0x7fd3d0e28bac: sub rsp, 0x10
old instr: 0x4027f9: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e28bb0: mov qword ptr [rbp-0x8], rdi
old instr: 0x4027fd: mov qword ptr [rbp-0x10], rsi
    new instr:0x7fd3d0e28bb4: mov qword ptr [rbp-0x10], rsi
old instr: 0x402801: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28bb8: mov rax, qword ptr [rbp-0x10]
old instr: 0x402805: mov rdi, rax
    new instr:0x7fd3d0e28bbc: mov rdi, rax
old instr: 0x402808: call 0x401150
    new instr:0x7fd3d0e28bbf: call 0x7fd3d0e27507
inserted instruction
40280d
old instr: 0x40280d: cmp rax, 0x400
    new instr:0x7fd3d0e28bc4: cmp rax, 0x400
in revert 
removing jump and inserting a dummy entry 
40284e
old instr: 0x40284e: mov rcx, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28bca: mov rcx, qword ptr [rbp-0x10]
old instr: 0x402852: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28bce: mov rax, qword ptr [rbp-0x8]
old instr: 0x402856: mov edx, 0x400
    new instr:0x7fd3d0e28bd2: mov edx, 0x400
old instr: 0x40285b: mov rsi, rcx
    new instr:0x7fd3d0e28bd7: mov rsi, rcx
old instr: 0x40285e: mov rdi, rax
    new instr:0x7fd3d0e28bda: mov rdi, rax
old instr: 0x402861: call 0x4010a0
    new instr:0x7fd3d0e28bdd: call 0x7fd3d0e2741c
inserted instruction
402866
old instr: 0x402866: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28be2: mov rax, qword ptr [rbp-0x8]
old instr: 0x40286a: add rax, 0x400
    new instr:0x7fd3d0e28be6: add rax, 0x400
old instr: 0x402870: mov byte ptr [rax], 0x0
    new instr:0x7fd3d0e28bec: mov byte ptr [rax], 0x0
old instr: 0x402873: leave 
    new instr:0x7fd3d0e28bef: leave 
address is :402874


old instr: 0x402874: ret 
    new instr:0x7fd3d0e28bf0: ret 
old instr: 0x402874: ret 
    new instr:0x7fd3d0e28bf1: ret 
inserted instruction
rtn name: copyFileName : 13
3
403e4f
old instr: 0x403e4f: push rbp
    new instr:0x7fd3d0e28bf2: push rbp
old instr: 0x403e50: mov rbp, rsp
    new instr:0x7fd3d0e28bf3: mov rbp, rsp
old instr: 0x403e53: sub rsp, 0x20
    new instr:0x7fd3d0e28bf6: sub rsp, 0x20
old instr: 0x403e57: mov dword ptr [rbp-0x14], edi
    new instr:0x7fd3d0e28bfa: mov dword ptr [rbp-0x14], edi
old instr: 0x403e5a: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fd3d0e28bfd: mov eax, dword ptr [rbp-0x14]
old instr: 0x403e5d: cdqe 
    new instr:0x7fd3d0e28c00: cdqe 
old instr: 0x403e5f: mov rdi, rax
    new instr:0x7fd3d0e28c02: mov rdi, rax
old instr: 0x403e62: call 0x401220
    new instr:0x7fd3d0e28c05: call 0x7fd3d0e25fc3
inserted instruction
403e67
old instr: 0x403e67: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e28c0a: mov qword ptr [rbp-0x8], rax
old instr: 0x403e6b: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28c0e: cmp qword ptr [rbp-0x8], 0x0
in revert 
removing jump and inserting a dummy entry 
403e77
old instr: 0x403e77: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28c13: mov rax, qword ptr [rbp-0x8]
old instr: 0x403e7b: leave 
    new instr:0x7fd3d0e28c17: leave 
address is :403e7c


old instr: 0x403e7c: ret 
    new instr:0x7fd3d0e28c18: ret 
old instr: 0x403e7c: ret 
    new instr:0x7fd3d0e28c19: ret 
inserted instruction
rtn name: myMalloc : 14
13
407bfa
old instr: 0x407bfa: push rbp
    new instr:0x7fd3d0e28c1a: push rbp
old instr: 0x407bfb: mov rbp, rsp
    new instr:0x7fd3d0e28c1b: mov rbp, rsp
old instr: 0x407bfe: sub rsp, 0x30
    new instr:0x7fd3d0e28c1e: sub rsp, 0x30
old instr: 0x407c02: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e28c22: mov qword ptr [rbp-0x18], rdi
old instr: 0x407c06: mov qword ptr [rbp-0x20], rsi
    new instr:0x7fd3d0e28c26: mov qword ptr [rbp-0x20], rsi
old instr: 0x407c0a: mov dword ptr [rbp-0x24], edx
    new instr:0x7fd3d0e28c2a: mov dword ptr [rbp-0x24], edx
old instr: 0x407c0d: mov dword ptr [rbp-0x28], ecx
    new instr:0x7fd3d0e28c2d: mov dword ptr [rbp-0x28], ecx
old instr: 0x407c10: mov dword ptr [rbp-0x2c], r8d
    new instr:0x7fd3d0e28c30: mov dword ptr [rbp-0x2c], r8d
old instr: 0x407c14: mov qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28c34: mov qword ptr [rbp-0x8], 0x0
old instr: 0x407c1c: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7fd3d0e28c3c: cmp qword ptr [rbp-0x18], 0x0
inserted instruction
407c23
old instr: 0x407c23: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28c41: mov rax, qword ptr [rbp-0x18]
old instr: 0x407c27: mov dword ptr [rax], 0x0
    new instr:0x7fd3d0e28c45: mov dword ptr [rax], 0x0
old instr: 0x407c2d: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28c4b: cmp qword ptr [rbp-0x8], 0x0
in revert 
removing jump and inserting a dummy entry 
407c42
old instr: 0x407c42: cmp qword ptr [rbp-0x20], 0x0
    new instr:0x7fd3d0e28c50: cmp qword ptr [rbp-0x20], 0x0
inserted instruction
407c49
old instr: 0x407c49: cmp dword ptr [rbp-0x24], 0x0
    new instr:0x7fd3d0e28c55: cmp dword ptr [rbp-0x24], 0x0
inserted instruction
407c4f
old instr: 0x407c4f: cmp dword ptr [rbp-0x24], 0x9
    new instr:0x7fd3d0e28c59: cmp dword ptr [rbp-0x24], 0x9
inserted instruction
407c55
old instr: 0x407c55: cmp dword ptr [rbp-0x2c], 0x0
    new instr:0x7fd3d0e28c5d: cmp dword ptr [rbp-0x2c], 0x0
inserted instruction
407c5b
old instr: 0x407c5b: cmp dword ptr [rbp-0x2c], 0xfa
    new instr:0x7fd3d0e28c61: cmp dword ptr [rbp-0x2c], 0xfa
inserted instruction
407c64
old instr: 0x407c64: cmp dword ptr [rbp-0x28], 0x0
    new instr:0x7fd3d0e28c68: cmp dword ptr [rbp-0x28], 0x0
inserted instruction
407c6a
old instr: 0x407c6a: cmp dword ptr [rbp-0x28], 0x4
    new instr:0x7fd3d0e28c6c: cmp dword ptr [rbp-0x28], 0x4
in revert 
removing jump and inserting a dummy entry 
407ca0
old instr: 0x407ca0: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e28c70: mov rax, qword ptr [rbp-0x20]
old instr: 0x407ca4: mov rdi, rax
    new instr:0x7fd3d0e28c74: mov rdi, rax
old instr: 0x407ca7: call 0x4010f0
    new instr:0x7fd3d0e28c77: call 0x7fd3d0e220c0
inserted instruction
407cac
old instr: 0x407cac: test eax, eax
    new instr:0x7fd3d0e28c7c: test eax, eax
in revert 
removing jump and inserting a dummy entry 
407ce0
old instr: 0x407ce0: mov edi, 0x13f0
    new instr:0x7fd3d0e28c7e: mov edi, 0x13f0
old instr: 0x407ce5: call 0x401220
    new instr:0x7fd3d0e28c83: call 0x7fd3d0e221be
inserted instruction
407cea
old instr: 0x407cea: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e28c88: mov qword ptr [rbp-0x8], rax
old instr: 0x407cee: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28c8c: cmp qword ptr [rbp-0x8], 0x0
in revert 
removing jump and inserting a dummy entry 
407d25
old instr: 0x407d25: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7fd3d0e28c91: cmp qword ptr [rbp-0x18], 0x0
inserted instruction
407d2c
old instr: 0x407d2c: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28c96: mov rax, qword ptr [rbp-0x18]
old instr: 0x407d30: mov dword ptr [rax], 0x0
    new instr:0x7fd3d0e28c9a: mov dword ptr [rax], 0x0
old instr: 0x407d36: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28ca0: cmp qword ptr [rbp-0x8], 0x0
inserted instruction
407d3d
old instr: 0x407d3d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28ca5: mov rax, qword ptr [rbp-0x8]
old instr: 0x407d41: mov dword ptr [rax+0x13e8], 0x0
    new instr:0x7fd3d0e28ca9: mov dword ptr [rax+0x13e8], 0x0
old instr: 0x407d4b: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28cb3: mov rax, qword ptr [rbp-0x8]
old instr: 0x407d4f: mov byte ptr [rax+0x13ec], 0x0
    new instr:0x7fd3d0e28cb7: mov byte ptr [rax+0x13ec], 0x0
old instr: 0x407d56: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28cbe: mov rax, qword ptr [rbp-0x8]
old instr: 0x407d5a: mov dword ptr [rax+0x1390], 0x0
    new instr:0x7fd3d0e28cc2: mov dword ptr [rax+0x1390], 0x0
old instr: 0x407d64: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28ccc: mov rax, qword ptr [rbp-0x8]
old instr: 0x407d68: mov rdx, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e28cd0: mov rdx, qword ptr [rbp-0x20]
old instr: 0x407d6c: mov qword ptr [rax], rdx
    new instr:0x7fd3d0e28cd4: mov qword ptr [rax], rdx
old instr: 0x407d6f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28cd7: mov rax, qword ptr [rbp-0x8]
old instr: 0x407d73: mov byte ptr [rax+0x1394], 0x1
    new instr:0x7fd3d0e28cdb: mov byte ptr [rax+0x1394], 0x1
old instr: 0x407d7a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28ce2: mov rax, qword ptr [rbp-0x8]
old instr: 0x407d7e: mov qword ptr [rax+0x13d0], 0x0
    new instr:0x7fd3d0e28ce6: mov qword ptr [rax+0x13d0], 0x0
old instr: 0x407d89: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28cf1: mov rax, qword ptr [rbp-0x8]
old instr: 0x407d8d: mov qword ptr [rax+0x13d8], 0x0
    new instr:0x7fd3d0e28cf5: mov qword ptr [rax+0x13d8], 0x0
old instr: 0x407d98: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d00: mov rax, qword ptr [rbp-0x8]
old instr: 0x407d9c: mov qword ptr [rax+0x13e0], 0x0
    new instr:0x7fd3d0e28d04: mov qword ptr [rax+0x13e0], 0x0
old instr: 0x407da7: cmp dword ptr [rbp-0x2c], 0x0
    new instr:0x7fd3d0e28d0f: cmp dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
407db4
old instr: 0x407db4: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d13: mov rax, qword ptr [rbp-0x8]
old instr: 0x407db8: lea rdi, ptr [rax+0x1398]
    new instr:0x7fd3d0e28d17: lea rdi, ptr [rax+0x1398]
old instr: 0x407dbf: mov ecx, dword ptr [rbp-0x2c]
    new instr:0x7fd3d0e28d1e: mov ecx, dword ptr [rbp-0x2c]
old instr: 0x407dc2: mov edx, dword ptr [rbp-0x28]
    new instr:0x7fd3d0e28d21: mov edx, dword ptr [rbp-0x28]
old instr: 0x407dc5: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fd3d0e28d24: mov eax, dword ptr [rbp-0x24]
old instr: 0x407dc8: mov esi, eax
    new instr:0x7fd3d0e28d27: mov esi, eax
old instr: 0x407dca: call 0x40502b
    new instr:0x7fd3d0e28d29: call 0x7fd3d0e25f8a
inserted instruction
407dcf
old instr: 0x407dcf: mov dword ptr [rbp-0xc], eax
    new instr:0x7fd3d0e28d2e: mov dword ptr [rbp-0xc], eax
old instr: 0x407dd2: cmp dword ptr [rbp-0xc], 0x0
    new instr:0x7fd3d0e28d31: cmp dword ptr [rbp-0xc], 0x0
in revert 
removing jump and inserting a dummy entry 
407e0f
old instr: 0x407e0f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d35: mov rax, qword ptr [rbp-0x8]
old instr: 0x407e13: mov dword ptr [rax+0x13a0], 0x0
    new instr:0x7fd3d0e28d39: mov dword ptr [rax+0x13a0], 0x0
old instr: 0x407e1d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d43: mov rax, qword ptr [rbp-0x8]
old instr: 0x407e21: mov byte ptr [rax+0x13ec], 0x1
    new instr:0x7fd3d0e28d47: mov byte ptr [rax+0x13ec], 0x1
old instr: 0x407e28: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d4e: mov rax, qword ptr [rbp-0x8]
old instr: 0x407e2c: leave 
    new instr:0x7fd3d0e28d52: leave 
address is :407e2d


old instr: 0x407e2d: ret 
    new instr:0x7fd3d0e28d53: ret 
old instr: 0x407e2d: ret 
    new instr:0x7fd3d0e28d54: ret 
inserted instruction
rtn name: BZ2_bzWriteOpen : 15
4
40c8ce
old instr: 0x40c8ce: push rbp
    new instr:0x7fd3d0e28d55: push rbp
old instr: 0x40c8cf: mov rbp, rsp
    new instr:0x7fd3d0e28d56: mov rbp, rsp
old instr: 0x40c8d2: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e28d59: mov qword ptr [rbp-0x8], rdi
in revert 
removing jump and inserting a dummy entry 
40c93c
old instr: 0x40c93c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d5d: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c940: mov eax, dword ptr [rax+0x284]
    new instr:0x7fd3d0e28d61: mov eax, dword ptr [rax+0x284]
old instr: 0x40c946: test eax, eax
    new instr:0x7fd3d0e28d67: test eax, eax
in revert 
removing jump and inserting a dummy entry 
40c8d8
old instr: 0x40c8d8: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d69: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8dc: mov rdx, qword ptr [rax+0x50]
    new instr:0x7fd3d0e28d6d: mov rdx, qword ptr [rax+0x50]
old instr: 0x40c8e0: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d71: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8e4: mov eax, dword ptr [rax+0x74]
    new instr:0x7fd3d0e28d75: mov eax, dword ptr [rax+0x74]
old instr: 0x40c8e7: cdqe 
    new instr:0x7fd3d0e28d78: cdqe 
old instr: 0x40c8e9: add rdx, rax
    new instr:0x7fd3d0e28d7a: add rdx, rax
old instr: 0x40c8ec: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d7d: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8f0: mov eax, dword ptr [rax+0x280]
    new instr:0x7fd3d0e28d81: mov eax, dword ptr [rax+0x280]
old instr: 0x40c8f6: shr eax, 0x18
    new instr:0x7fd3d0e28d87: shr eax, 0x18
old instr: 0x40c8f9: mov byte ptr [rdx], al
    new instr:0x7fd3d0e28d8a: mov byte ptr [rdx], al
old instr: 0x40c8fb: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d8c: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8ff: mov eax, dword ptr [rax+0x74]
    new instr:0x7fd3d0e28d90: mov eax, dword ptr [rax+0x74]
old instr: 0x40c902: lea edx, ptr [rax+0x1]
    new instr:0x7fd3d0e28d93: lea edx, ptr [rax+0x1]
old instr: 0x40c905: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d96: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c909: mov dword ptr [rax+0x74], edx
    new instr:0x7fd3d0e28d9a: mov dword ptr [rax+0x74], edx
old instr: 0x40c90c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28d9d: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c910: mov eax, dword ptr [rax+0x280]
    new instr:0x7fd3d0e28da1: mov eax, dword ptr [rax+0x280]
old instr: 0x40c916: mov edx, eax
    new instr:0x7fd3d0e28da7: mov edx, eax
old instr: 0x40c918: shl edx, 0x8
    new instr:0x7fd3d0e28da9: shl edx, 0x8
old instr: 0x40c91b: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28dac: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c91f: mov dword ptr [rax+0x280], edx
    new instr:0x7fd3d0e28db0: mov dword ptr [rax+0x280], edx
old instr: 0x40c925: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28db6: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c929: mov eax, dword ptr [rax+0x284]
    new instr:0x7fd3d0e28dba: mov eax, dword ptr [rax+0x284]
old instr: 0x40c92f: lea edx, ptr [rax-0x8]
    new instr:0x7fd3d0e28dc0: lea edx, ptr [rax-0x8]
old instr: 0x40c932: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28dc3: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c936: mov dword ptr [rax+0x284], edx
    new instr:0x7fd3d0e28dc7: mov dword ptr [rax+0x284], edx
old instr: 0x40c93c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28dcd: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c940: mov eax, dword ptr [rax+0x284]
    new instr:0x7fd3d0e28dd1: mov eax, dword ptr [rax+0x284]
old instr: 0x40c946: test eax, eax
    new instr:0x7fd3d0e28dd7: test eax, eax
old instr: 0x40c948: jnle 0x40c8d8
    new instr:0x7fd3d0e28dd9: jnle 0x7fd3d0e28d69
inserted instruction
40c94a
old instr: 0x40c94a: pop rbp
    new instr:0x7fd3d0e28ddb: pop rbp
address is :40c94b


old instr: 0x40c94b: ret 
    new instr:0x7fd3d0e28ddc: ret 
old instr: 0x40c94b: ret 
    new instr:0x7fd3d0e28ddd: ret 
inserted instruction
rtn name: bsFinishWrite : 16
2
404f13
old instr: 0x404f13: push rbp
    new instr:0x7fd3d0e28dde: push rbp
old instr: 0x404f14: mov rbp, rsp
    new instr:0x7fd3d0e28ddf: mov rbp, rsp
old instr: 0x404f17: sub rsp, 0x20
    new instr:0x7fd3d0e28de2: sub rsp, 0x20
old instr: 0x404f1b: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e28de6: mov qword ptr [rbp-0x18], rdi
old instr: 0x404f1f: mov dword ptr [rbp-0x1c], esi
    new instr:0x7fd3d0e28dea: mov dword ptr [rbp-0x1c], esi
old instr: 0x404f22: mov dword ptr [rbp-0x20], edx
    new instr:0x7fd3d0e28ded: mov dword ptr [rbp-0x20], edx
old instr: 0x404f25: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7fd3d0e28df0: mov eax, dword ptr [rbp-0x1c]
old instr: 0x404f28: imul eax, dword ptr [rbp-0x20]
    new instr:0x7fd3d0e28df3: imul eax, dword ptr [rbp-0x20]
old instr: 0x404f2c: cdqe 
    new instr:0x7fd3d0e28df7: cdqe 
old instr: 0x404f2e: mov rdi, rax
    new instr:0x7fd3d0e28df9: mov rdi, rax
old instr: 0x404f31: call 0x401220
    new instr:0x7fd3d0e28dfc: call 0x7fd3d0e250eb
inserted instruction
404f36
old instr: 0x404f36: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e28e01: mov qword ptr [rbp-0x8], rax
old instr: 0x404f3a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28e05: mov rax, qword ptr [rbp-0x8]
old instr: 0x404f3e: leave 
    new instr:0x7fd3d0e28e09: leave 
address is :404f3f


old instr: 0x404f3f: ret 
    new instr:0x7fd3d0e28e0a: ret 
old instr: 0x404f3f: ret 
    new instr:0x7fd3d0e28e0b: ret 
inserted instruction
rtn name: default_bzalloc : 17
2
404ffc
old instr: 0x404ffc: push rbp
    new instr:0x7fd3d0e28e0c: push rbp
old instr: 0x404ffd: mov rbp, rsp
    new instr:0x7fd3d0e28e0d: mov rbp, rsp
old instr: 0x405000: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e28e10: mov qword ptr [rbp-0x8], rdi
old instr: 0x405004: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28e14: mov rax, qword ptr [rbp-0x8]
old instr: 0x405008: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e28e18: mov eax, dword ptr [rax+0x5c]
old instr: 0x40500b: cmp eax, 0xff
    new instr:0x7fd3d0e28e1b: cmp eax, 0xff
in revert 
removing jump and inserting a dummy entry 
405024
old instr: 0x405024: mov eax, 0x1
    new instr:0x7fd3d0e28e20: mov eax, 0x1
old instr: 0x405029: pop rbp
    new instr:0x7fd3d0e28e25: pop rbp
address is :40502a


old instr: 0x40502a: ret 
    new instr:0x7fd3d0e28e26: ret 
old instr: 0x40502a: ret 
    new instr:0x7fd3d0e28e27: ret 
inserted instruction
rtn name: isempty_RL : 18
3
404f40
old instr: 0x404f40: push rbp
    new instr:0x7fd3d0e28e28: push rbp
old instr: 0x404f41: mov rbp, rsp
    new instr:0x7fd3d0e28e29: mov rbp, rsp
old instr: 0x404f44: sub rsp, 0x10
    new instr:0x7fd3d0e28e2c: sub rsp, 0x10
old instr: 0x404f48: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e28e30: mov qword ptr [rbp-0x8], rdi
old instr: 0x404f4c: mov qword ptr [rbp-0x10], rsi
    new instr:0x7fd3d0e28e34: mov qword ptr [rbp-0x10], rsi
old instr: 0x404f50: cmp qword ptr [rbp-0x10], 0x0
    new instr:0x7fd3d0e28e38: cmp qword ptr [rbp-0x10], 0x0
inserted instruction
404f57
old instr: 0x404f57: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28e3d: mov rax, qword ptr [rbp-0x10]
old instr: 0x404f5b: mov rdi, rax
    new instr:0x7fd3d0e28e41: mov rdi, rax
old instr: 0x404f5e: call 0x401080
    new instr:0x7fd3d0e28e44: call 0x7fd3d0e24f66
inserted instruction
404f63
old instr: 0x404f63: leave 
    new instr:0x7fd3d0e28e49: leave 
address is :404f64


old instr: 0x404f64: ret 
    new instr:0x7fd3d0e28e4a: ret 
old instr: 0x404f64: ret 
    new instr:0x7fd3d0e28e4b: ret 
inserted instruction
rtn name: default_bzfree : 19
4
402875
old instr: 0x402875: push rbp
    new instr:0x7fd3d0e28e4c: push rbp
old instr: 0x402876: mov rbp, rsp
    new instr:0x7fd3d0e28e4d: mov rbp, rsp
old instr: 0x402879: sub rsp, 0x20
    new instr:0x7fd3d0e28e50: sub rsp, 0x20
old instr: 0x40287d: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e28e54: mov qword ptr [rbp-0x18], rdi
old instr: 0x402881: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28e58: mov rax, qword ptr [rbp-0x18]
old instr: 0x402885: mov esi, 0x419598
    new instr:0x7fd3d0e28e5c: mov esi, 0x419598
old instr: 0x40288a: mov rdi, rax
    new instr:0x7fd3d0e28e61: mov rdi, rax
old instr: 0x40288d: call 0x401290
    new instr:0x7fd3d0e28e64: call 0x7fd3d0e27867
inserted instruction
402892
old instr: 0x402892: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e28e69: mov qword ptr [rbp-0x8], rax
old instr: 0x402896: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28e6d: cmp qword ptr [rbp-0x8], 0x0
old instr: 0x40289b: setnz al
    new instr:0x7fd3d0e28e72: setnz al
old instr: 0x40289e: mov byte ptr [rbp-0x9], al
    new instr:0x7fd3d0e28e75: mov byte ptr [rbp-0x9], al
old instr: 0x4028a1: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fd3d0e28e78: cmp qword ptr [rbp-0x8], 0x0
old instr: 0x4028a6: jz 0x4028b4
    new instr:0x7fd3d0e28e7d: jz 0x7fd3d0e28e8b
inserted instruction
4028a8
old instr: 0x4028a8: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28e7f: mov rax, qword ptr [rbp-0x8]
old instr: 0x4028ac: mov rdi, rax
    new instr:0x7fd3d0e28e83: mov rdi, rax
old instr: 0x4028af: call 0x401120
    new instr:0x7fd3d0e28e86: call 0x7fd3d0e276f7
inserted instruction
4028b4
old instr: 0x4028b4: movzx eax, byte ptr [rbp-0x9]
    new instr:0x7fd3d0e28e8b: movzx eax, byte ptr [rbp-0x9]
old instr: 0x4028b8: leave 
    new instr:0x7fd3d0e28e8f: leave 
address is :4028b9


old instr: 0x4028b9: ret 
    new instr:0x7fd3d0e28e90: ret 
old instr: 0x4028b9: ret 
    new instr:0x7fd3d0e28e91: ret 
inserted instruction
rtn name: fileExists : 20
2
403e7d
old instr: 0x403e7d: push rbp
    new instr:0x7fd3d0e28e92: push rbp
old instr: 0x403e7e: mov rbp, rsp
    new instr:0x7fd3d0e28e93: mov rbp, rsp
old instr: 0x403e81: sub rsp, 0x10
    new instr:0x7fd3d0e28e96: sub rsp, 0x10
old instr: 0x403e85: mov edi, 0x10
    new instr:0x7fd3d0e28e9a: mov edi, 0x10
old instr: 0x403e8a: call 0x403e4f
    new instr:0x7fd3d0e28e9f: call 0x7fd3d0e28e64
inserted instruction
403e8f
old instr: 0x403e8f: mov qword ptr [rbp-0x8], rax
    new instr:0x7fd3d0e28ea4: mov qword ptr [rbp-0x8], rax
old instr: 0x403e93: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28ea8: mov rax, qword ptr [rbp-0x8]
old instr: 0x403e97: mov qword ptr [rax], 0x0
    new instr:0x7fd3d0e28eac: mov qword ptr [rax], 0x0
old instr: 0x403e9e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28eb3: mov rax, qword ptr [rbp-0x8]
old instr: 0x403ea2: mov qword ptr [rax+0x8], 0x0
    new instr:0x7fd3d0e28eb7: mov qword ptr [rax+0x8], 0x0
old instr: 0x403eaa: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28ebf: mov rax, qword ptr [rbp-0x8]
old instr: 0x403eae: leave 
    new instr:0x7fd3d0e28ec3: leave 
address is :403eaf


old instr: 0x403eaf: ret 
    new instr:0x7fd3d0e28ec4: ret 
old instr: 0x403eaf: ret 
    new instr:0x7fd3d0e28ec5: ret 
inserted instruction
rtn name: mkCell : 21
6
4029f0
old instr: 0x4029f0: push rbp
    new instr:0x7fd3d0e28ec6: push rbp
old instr: 0x4029f1: mov rbp, rsp
    new instr:0x7fd3d0e28ec7: mov rbp, rsp
old instr: 0x4029f4: sub rsp, 0x30
    new instr:0x7fd3d0e28eca: sub rsp, 0x30
old instr: 0x4029f8: mov qword ptr [rbp-0x28], rdi
    new instr:0x7fd3d0e28ece: mov qword ptr [rbp-0x28], rdi
old instr: 0x4029fc: mov rax, qword ptr [rip+0x21a905]
    new instr:0x7fd3d0e28ed2: mov rax, qword ptr [rip+0x21a905]
old instr: 0x402a03: mov qword ptr [rbp-0x20], rax
    new instr:0x7fd3d0e28ed9: mov qword ptr [rbp-0x20], rax
old instr: 0x402a07: mov rax, qword ptr [rip+0x21a90a]
    new instr:0x7fd3d0e28edd: mov rax, qword ptr [rip+0x21a90a]
old instr: 0x402a0e: mov qword ptr [rbp-0x18], rax
    new instr:0x7fd3d0e28ee4: mov qword ptr [rbp-0x18], rax
old instr: 0x402a12: mov edx, dword ptr [rip+0x21a8c0]
    new instr:0x7fd3d0e28ee8: mov edx, dword ptr [rip+0x21a8c0]
old instr: 0x402a18: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28eee: mov rax, qword ptr [rbp-0x28]
old instr: 0x402a1c: mov esi, edx
    new instr:0x7fd3d0e28ef2: mov esi, edx
old instr: 0x402a1e: mov rdi, rax
    new instr:0x7fd3d0e28ef4: mov rdi, rax
old instr: 0x402a21: call 0x401270
    new instr:0x7fd3d0e28ef7: call 0x7fd3d0e27746
inserted instruction
402a26
old instr: 0x402a26: mov dword ptr [rbp-0x4], eax
    new instr:0x7fd3d0e28efc: mov dword ptr [rbp-0x4], eax
old instr: 0x402a29: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fd3d0e28eff: cmp dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
402a34
old instr: 0x402a34: lea rdx, ptr [rbp-0x20]
    new instr:0x7fd3d0e28f03: lea rdx, ptr [rbp-0x20]
old instr: 0x402a38: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28f07: mov rax, qword ptr [rbp-0x28]
old instr: 0x402a3c: mov rsi, rdx
    new instr:0x7fd3d0e28f0b: mov rsi, rdx
old instr: 0x402a3f: mov rdi, rax
    new instr:0x7fd3d0e28f0e: mov rdi, rax
old instr: 0x402a42: call 0x401070
    new instr:0x7fd3d0e28f11: call 0x7fd3d0e2753f
inserted instruction
402a47
old instr: 0x402a47: mov dword ptr [rbp-0x4], eax
    new instr:0x7fd3d0e28f16: mov dword ptr [rbp-0x4], eax
old instr: 0x402a4a: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fd3d0e28f19: cmp dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
402a55
old instr: 0x402a55: mov edx, dword ptr [rip+0x21a885]
    new instr:0x7fd3d0e28f1d: mov edx, dword ptr [rip+0x21a885]
old instr: 0x402a5b: mov ecx, dword ptr [rip+0x21a87b]
    new instr:0x7fd3d0e28f23: mov ecx, dword ptr [rip+0x21a87b]
old instr: 0x402a61: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fd3d0e28f29: mov rax, qword ptr [rbp-0x28]
old instr: 0x402a65: mov esi, ecx
    new instr:0x7fd3d0e28f2d: mov esi, ecx
old instr: 0x402a67: mov rdi, rax
    new instr:0x7fd3d0e28f2f: mov rdi, rax
old instr: 0x402a6a: call 0x401250
    new instr:0x7fd3d0e28f32: call 0x7fd3d0e27718
inserted instruction
402a6f
old instr: 0x402a6f: mov dword ptr [rbp-0x4], eax
    new instr:0x7fd3d0e28f37: mov dword ptr [rbp-0x4], eax
old instr: 0x402a72: leave 
    new instr:0x7fd3d0e28f3a: leave 
address is :402a73


old instr: 0x402a73: ret 
    new instr:0x7fd3d0e28f3b: ret 
old instr: 0x402a73: ret 
    new instr:0x7fd3d0e28f3c: ret 
inserted instruction
rtn name: applySavedMetaInfoToOutputFile : 22
3
403f51
old instr: 0x403f51: push rbp
    new instr:0x7fd3d0e28f3d: push rbp
old instr: 0x403f52: mov rbp, rsp
    new instr:0x7fd3d0e28f3e: mov rbp, rsp
old instr: 0x403f55: sub rsp, 0x30
    new instr:0x7fd3d0e28f41: sub rsp, 0x30
old instr: 0x403f59: mov qword ptr [rbp-0x28], rdi
    new instr:0x7fd3d0e28f45: mov qword ptr [rbp-0x28], rdi
old instr: 0x403f5d: mov qword ptr [rbp-0x30], rsi
    new instr:0x7fd3d0e28f49: mov qword ptr [rbp-0x30], rsi
old instr: 0x403f61: mov rax, qword ptr [rbp-0x30]
    new instr:0x7fd3d0e28f4d: mov rax, qword ptr [rbp-0x30]
old instr: 0x403f65: mov rdi, rax
    new instr:0x7fd3d0e28f51: mov rdi, rax
old instr: 0x403f68: call 0x401060
    new instr:0x7fd3d0e28f54: call 0x7fd3d0e2604c
inserted instruction
403f6d
old instr: 0x403f6d: mov qword ptr [rbp-0x20], rax
    new instr:0x7fd3d0e28f59: mov qword ptr [rbp-0x20], rax
old instr: 0x403f71: cmp qword ptr [rbp-0x20], 0x0
    new instr:0x7fd3d0e28f5d: cmp qword ptr [rbp-0x20], 0x0
in revert 
removing jump and inserting a dummy entry 
4040ad
old instr: 0x4040ad: leave 
    new instr:0x7fd3d0e28f62: leave 
address is :4040ae


old instr: 0x4040ae: ret 
    new instr:0x7fd3d0e28f63: ret 
old instr: 0x4040ae: ret 
    new instr:0x7fd3d0e28f64: ret 
inserted instruction
rtn name: addFlagsFromEnvVar : 23
5
4028ba
old instr: 0x4028ba: push rbp
    new instr:0x7fd3d0e28f65: push rbp
old instr: 0x4028bb: mov rbp, rsp
    new instr:0x7fd3d0e28f66: mov rbp, rsp
old instr: 0x4028be: sub rsp, 0x20
    new instr:0x7fd3d0e28f69: sub rsp, 0x20
old instr: 0x4028c2: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e28f6d: mov qword ptr [rbp-0x18], rdi
old instr: 0x4028c6: mov qword ptr [rbp-0x20], rsi
    new instr:0x7fd3d0e28f71: mov qword ptr [rbp-0x20], rsi
old instr: 0x4028ca: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e28f75: mov rax, qword ptr [rbp-0x18]
old instr: 0x4028ce: mov edx, 0x180
    new instr:0x7fd3d0e28f79: mov edx, 0x180
old instr: 0x4028d3: mov esi, 0xc1
    new instr:0x7fd3d0e28f7e: mov esi, 0xc1
old instr: 0x4028d8: mov rdi, rax
    new instr:0x7fd3d0e28f83: mov rdi, rax
old instr: 0x4028db: mov eax, 0x0
    new instr:0x7fd3d0e28f86: mov eax, 0x0
old instr: 0x4028e0: call 0x401280
    new instr:0x7fd3d0e28f8b: call 0x7fd3d0e2792b
inserted instruction
4028e5
old instr: 0x4028e5: mov dword ptr [rbp-0x4], eax
    new instr:0x7fd3d0e28f90: mov dword ptr [rbp-0x4], eax
old instr: 0x4028e8: cmp dword ptr [rbp-0x4], 0xffffffff
    new instr:0x7fd3d0e28f93: cmp dword ptr [rbp-0x4], 0xffffffff
in revert 
removing jump and inserting a dummy entry 
4028f5
old instr: 0x4028f5: mov rdx, qword ptr [rbp-0x20]
    new instr:0x7fd3d0e28f97: mov rdx, qword ptr [rbp-0x20]
old instr: 0x4028f9: mov eax, dword ptr [rbp-0x4]
    new instr:0x7fd3d0e28f9b: mov eax, dword ptr [rbp-0x4]
old instr: 0x4028fc: mov rsi, rdx
    new instr:0x7fd3d0e28f9e: mov rsi, rdx
old instr: 0x4028ff: mov edi, eax
    new instr:0x7fd3d0e28fa1: mov edi, eax
old instr: 0x402901: call 0x401260
    new instr:0x7fd3d0e28fa3: call 0x7fd3d0e27902
inserted instruction
402906
old instr: 0x402906: mov qword ptr [rbp-0x10], rax
    new instr:0x7fd3d0e28fa8: mov qword ptr [rbp-0x10], rax
old instr: 0x40290a: cmp qword ptr [rbp-0x10], 0x0
    new instr:0x7fd3d0e28fac: cmp qword ptr [rbp-0x10], 0x0
in revert 
removing jump and inserting a dummy entry 
40291b
old instr: 0x40291b: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fd3d0e28fb1: mov rax, qword ptr [rbp-0x10]
old instr: 0x40291f: leave 
    new instr:0x7fd3d0e28fb5: leave 
address is :402920


old instr: 0x402920: ret 
    new instr:0x7fd3d0e28fb6: ret 
old instr: 0x402920: ret 
    new instr:0x7fd3d0e28fb7: ret 
inserted instruction
rtn name: fopen_output_safely : 24
1
404fdc
old instr: 0x404fdc: push rbp
    new instr:0x7fd3d0e28fb8: push rbp
old instr: 0x404fdd: mov rbp, rsp
    new instr:0x7fd3d0e28fb9: mov rbp, rsp
old instr: 0x404fe0: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e28fbc: mov qword ptr [rbp-0x8], rdi
old instr: 0x404fe4: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28fc0: mov rax, qword ptr [rbp-0x8]
old instr: 0x404fe8: mov dword ptr [rax+0x5c], 0x100
    new instr:0x7fd3d0e28fc4: mov dword ptr [rax+0x5c], 0x100
old instr: 0x404fef: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28fcb: mov rax, qword ptr [rbp-0x8]
old instr: 0x404ff3: mov dword ptr [rax+0x60], 0x0
    new instr:0x7fd3d0e28fcf: mov dword ptr [rax+0x60], 0x0
old instr: 0x404ffa: pop rbp
    new instr:0x7fd3d0e28fd6: pop rbp
address is :404ffb


old instr: 0x404ffb: ret 
    new instr:0x7fd3d0e28fd7: ret 
old instr: 0x404ffb: ret 
    new instr:0x7fd3d0e28fd8: ret 
inserted instruction
rtn name: init_RL : 25
4
405628
old instr: 0x405628: push rbp
    new instr:0x7fd3d0e28fd9: push rbp
old instr: 0x405629: mov rbp, rsp
    new instr:0x7fd3d0e28fda: mov rbp, rsp
old instr: 0x40562c: sub rsp, 0x8
    new instr:0x7fd3d0e28fdd: sub rsp, 0x8
old instr: 0x405630: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e28fe1: mov qword ptr [rbp-0x8], rdi
old instr: 0x405634: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28fe5: mov rax, qword ptr [rbp-0x8]
old instr: 0x405638: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fd3d0e28fe9: mov eax, dword ptr [rax+0x5c]
old instr: 0x40563b: cmp eax, 0xff
    new instr:0x7fd3d0e28fec: cmp eax, 0xff
inserted instruction
405642
old instr: 0x405642: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28ff1: mov rax, qword ptr [rbp-0x8]
old instr: 0x405646: mov rdi, rax
    new instr:0x7fd3d0e28ff5: mov rdi, rax
old instr: 0x405649: call 0x405388
    new instr:0x7fd3d0e28ff8: call 0x7fd3d0e28d37
inserted instruction
40564e
old instr: 0x40564e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e28ffd: mov rax, qword ptr [rbp-0x8]
old instr: 0x405652: mov rdi, rax
    new instr:0x7fd3d0e29001: mov rdi, rax
old instr: 0x405655: call 0x404fdc
    new instr:0x7fd3d0e29004: call 0x7fd3d0e2898b
inserted instruction
40565a
old instr: 0x40565a: leave 
    new instr:0x7fd3d0e29009: leave 
address is :40565b


old instr: 0x40565b: ret 
    new instr:0x7fd3d0e2900a: ret 
old instr: 0x40565b: ret 
    new instr:0x7fd3d0e2900b: ret 
inserted instruction
rtn name: flush_RL : 26
3
4029c3
old instr: 0x4029c3: push rbp
    new instr:0x7fd3d0e2900c: push rbp
old instr: 0x4029c4: mov rbp, rsp
    new instr:0x7fd3d0e2900d: mov rbp, rsp
old instr: 0x4029c7: sub rsp, 0x20
    new instr:0x7fd3d0e29010: sub rsp, 0x20
old instr: 0x4029cb: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fd3d0e29014: mov qword ptr [rbp-0x18], rdi
old instr: 0x4029cf: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fd3d0e29018: mov rax, qword ptr [rbp-0x18]
old instr: 0x4029d3: mov esi, 0x61d2c0
    new instr:0x7fd3d0e2901c: mov esi, 0x61d2c0
old instr: 0x4029d8: mov rdi, rax
    new instr:0x7fd3d0e29021: mov rdi, rax
old instr: 0x4029db: call 0x418610
    new instr:0x7fd3d0e29024: call 0x7fd3d0e3ec59
inserted instruction
4029e0
old instr: 0x4029e0: mov dword ptr [rbp-0x4], eax
    new instr:0x7fd3d0e29029: mov dword ptr [rbp-0x4], eax
old instr: 0x4029e3: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fd3d0e2902c: cmp dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
4029ee
old instr: 0x4029ee: leave 
    new instr:0x7fd3d0e29030: leave 
address is :4029ef


old instr: 0x4029ef: ret 
    new instr:0x7fd3d0e29031: ret 
old instr: 0x4029ef: ret 
    new instr:0x7fd3d0e29032: ret 
inserted instruction
rtn name: saveInputFileMetaInfo : 27
2
401390
old instr: 0x401390: mov eax, 0x61d2a0
    new instr:0x7fd3d0e29033: mov eax, 0x61d2a0
old instr: 0x401395: push rbp
    new instr:0x7fd3d0e29038: push rbp
old instr: 0x401396: sub rax, 0x61d2a0
    new instr:0x7fd3d0e29039: sub rax, 0x61d2a0
old instr: 0x40139c: sar rax, 0x3
    new instr:0x7fd3d0e2903f: sar rax, 0x3
old instr: 0x4013a0: mov rbp, rsp
    new instr:0x7fd3d0e29043: mov rbp, rsp
old instr: 0x4013a3: mov rdx, rax
    new instr:0x7fd3d0e29046: mov rdx, rax
old instr: 0x4013a6: shr rdx, 0x3f
    new instr:0x7fd3d0e29049: shr rdx, 0x3f
old instr: 0x4013aa: add rax, rdx
    new instr:0x7fd3d0e2904d: add rax, rdx
old instr: 0x4013ad: mov rsi, rax
    new instr:0x7fd3d0e29050: mov rsi, rax
old instr: 0x4013b0: sar rsi, 0x1
    new instr:0x7fd3d0e29053: sar rsi, 0x1
inserted instruction
4013b5
old instr: 0x4013b5: pop rbp
    new instr:0x7fd3d0e29056: pop rbp
address is :4013b6


old instr: 0x4013b6: ret 
    new instr:0x7fd3d0e29057: ret 
old instr: 0x4013b6: ret 
    new instr:0x7fd3d0e29058: ret 
inserted instruction
rtn name: register_tm_clones : 28
1
401310
old instr: 0x401310: xor ebp, ebp
    new instr:0x7fd3d0e29059: xor ebp, ebp
old instr: 0x401312: mov r9, rdx
    new instr:0x7fd3d0e2905b: mov r9, rdx
old instr: 0x401315: pop rsi
    new instr:0x7fd3d0e2905e: pop rsi
old instr: 0x401316: mov rdx, rsp
    new instr:0x7fd3d0e2905f: mov rdx, rsp
old instr: 0x401319: and rsp, 0xfffffffffffffff0
    new instr:0x7fd3d0e29062: and rsp, 0xfffffffffffffff0
old instr: 0x40131d: push rax
    new instr:0x7fd3d0e29066: push rax
old instr: 0x40131e: push rsp
    new instr:0x7fd3d0e29067: push rsp
old instr: 0x40131f: mov r8, 0x418570
    new instr:0x7fd3d0e29068: mov r8, 0x418570
old instr: 0x401326: mov rcx, 0x418580
    new instr:0x7fd3d0e2906f: mov rcx, 0x418580
old instr: 0x40132d: mov rdi, 0x4040af
    new instr:0x7fd3d0e29076: mov rdi, 0x4040af
address is :401334


old instr: 0x401334: call 0x4011b0
    new instr:0x7fd3d0e2907d: call 0x7fd3d0e28ef9
old instr: 0x401334: call 0x4011b0
    new instr:0x7fd3d0e29082: call 0x7fd3d0e28efe
inserted instruction
add jump to 
    new instr:0x7fd3d0e29087: jmp 0x7fd3d122a3c5
rtn name: _start : 29
1
40c8a8
old instr: 0x40c8a8: push rbp
    new instr:0x7fd3d0e2908c: push rbp
old instr: 0x40c8a9: mov rbp, rsp
    new instr:0x7fd3d0e2908d: mov rbp, rsp
old instr: 0x40c8ac: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e29090: mov qword ptr [rbp-0x8], rdi
old instr: 0x40c8b0: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e29094: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8b4: mov dword ptr [rax+0x284], 0x0
    new instr:0x7fd3d0e29098: mov dword ptr [rax+0x284], 0x0
old instr: 0x40c8be: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fd3d0e290a2: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8c2: mov dword ptr [rax+0x280], 0x0
    new instr:0x7fd3d0e290a6: mov dword ptr [rax+0x280], 0x0
old instr: 0x40c8cc: pop rbp
    new instr:0x7fd3d0e290b0: pop rbp
address is :40c8cd


old instr: 0x40c8cd: ret 
    new instr:0x7fd3d0e290b1: ret 
old instr: 0x40c8cd: ret 
    new instr:0x7fd3d0e290b2: ret 
inserted instruction
rtn name: BZ2_bsInitWrite : 30
2
401360
old instr: 0x401360: mov eax, 0x61d2a7
    new instr:0x7fd3d0e290b3: mov eax, 0x61d2a7
old instr: 0x401365: push rbp
    new instr:0x7fd3d0e290b8: push rbp
old instr: 0x401366: sub rax, 0x61d2a0
    new instr:0x7fd3d0e290b9: sub rax, 0x61d2a0
old instr: 0x40136c: cmp rax, 0xe
    new instr:0x7fd3d0e290bf: cmp rax, 0xe
old instr: 0x401370: mov rbp, rsp
    new instr:0x7fd3d0e290c3: mov rbp, rsp
inserted instruction
401375
old instr: 0x401375: pop rbp
    new instr:0x7fd3d0e290c6: pop rbp
address is :401376


old instr: 0x401376: ret 
    new instr:0x7fd3d0e290c7: ret 
old instr: 0x401376: ret 
    new instr:0x7fd3d0e290c8: ret 
inserted instruction
rtn name: deregister_tm_clones : 31
3
418630
old instr: 0x418630: push rbp
    new instr:0x7fd3d0e290c9: push rbp
old instr: 0x418631: sub rsp, 0x8
    new instr:0x7fd3d0e290ca: sub rsp, 0x8
in revert 
entered revert with no jump
418640
old instr: 0x418630: push rbp
    new instr:0x7fd3d0e290ce: push rbp
old instr: 0x418631: sub rsp, 0x8
    new instr:0x7fd3d0e290cf: sub rsp, 0x8
Branch instruction in the middle of a bbl 418635 in bbl: 418640
old instr: 0x41863a: add rsp, 0x8
    new instr:0x7fd3d0e290d3: add rsp, 0x8
old instr: 0x41863e: pop rbp
    new instr:0x7fd3d0e290d7: pop rbp
old instr: 0x41863f: ret 
    new instr:0x7fd3d0e290d8: ret 
inserted instruction
41863a
old instr: 0x41863a: add rsp, 0x8
    new instr:0x7fd3d0e290d9: add rsp, 0x8
old instr: 0x41863e: pop rbp
    new instr:0x7fd3d0e290dd: pop rbp
address is :41863f


old instr: 0x41863f: ret 
    new instr:0x7fd3d0e290de: ret 
old instr: 0x41863f: ret 
    new instr:0x7fd3d0e290df: ret 
inserted instruction
rtn name: _fini : 32
1
402a74
old instr: 0x402a74: push rbp
    new instr:0x7fd3d0e290e0: push rbp
old instr: 0x402a75: mov rbp, rsp
    new instr:0x7fd3d0e290e1: mov rbp, rsp
old instr: 0x402a78: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fd3d0e290e4: mov qword ptr [rbp-0x8], rdi
old instr: 0x402a7c: mov eax, 0x0
    new instr:0x7fd3d0e290e8: mov eax, 0x0
old instr: 0x402a81: pop rbp
    new instr:0x7fd3d0e290ed: pop rbp
address is :402a82


old instr: 0x402a82: ret 
    new instr:0x7fd3d0e290ee: ret 
old instr: 0x402a82: ret 
    new instr:0x7fd3d0e290ef: ret 
inserted instruction
rtn name: containsDubiousChars : 33
1
404f08
old instr: 0x404f08: push rbp
    new instr:0x7fd3d0e290f0: push rbp
old instr: 0x404f09: mov rbp, rsp
    new instr:0x7fd3d0e290f1: mov rbp, rsp
old instr: 0x404f0c: mov eax, 0x1
    new instr:0x7fd3d0e290f4: mov eax, 0x1
old instr: 0x404f11: pop rbp
    new instr:0x7fd3d0e290f9: pop rbp
address is :404f12


old instr: 0x404f12: ret 
    new instr:0x7fd3d0e290fa: ret 
old instr: 0x404f12: ret 
    new instr:0x7fd3d0e290fb: ret 
inserted instruction
rtn name: bz_config_ok : 34
2
401038
old instr: 0x401038: sub rsp, 0x8
    new instr:0x7fd3d0e290fc: sub rsp, 0x8
old instr: 0x40103c: call 0x40133c
    new instr:0x7fd3d0e29100: call 0x7fd3d0e29400
inserted instruction
401041
old instr: 0x401041: add rsp, 0x8
    new instr:0x7fd3d0e29105: add rsp, 0x8
address is :401045


old instr: 0x401045: ret 
    new instr:0x7fd3d0e29109: ret 
old instr: 0x401045: ret 
    new instr:0x7fd3d0e2910a: ret 
inserted instruction
rtn name: _init : 35
after identifying candidate routines
after calculate direct br targets
starting a pass of fixing instructions displacements: 
20:  orig_ins_addr: 40a4a9 new_ins_addr: 7fd3d0e27041 orig_targ_addr: 40a4ab new_targ_addr: 7fd3d0e27619    new instr:0x7fd3d0e27041: jnz 0x7fd3d0e27619
35:  orig_ins_addr: 40a4e9 new_ins_addr: 7fd3d0e27076 orig_targ_addr: 40a4eb new_targ_addr: 7fd3d0e27638    new instr:0x7fd3d0e27076: jnz 0x7fd3d0e27638
50:  orig_ins_addr: 40a529 new_ins_addr: 7fd3d0e270ab orig_targ_addr: 40a52b new_targ_addr: 7fd3d0e27684    new instr:0x7fd3d0e270ab: jnz 0x7fd3d0e27684
65:  orig_ins_addr: 40a569 new_ins_addr: 7fd3d0e270e0 orig_targ_addr: 40a56b new_targ_addr: 7fd3d0e276b0    new instr:0x7fd3d0e270e0: jnz 0x7fd3d0e276b0
80:  orig_ins_addr: 40a5a9 new_ins_addr: 7fd3d0e27115 orig_targ_addr: 40a5ab new_targ_addr: 7fd3d0e27647    new instr:0x7fd3d0e27115: jnz 0x7fd3d0e27647
95:  orig_ins_addr: 40a5e9 new_ins_addr: 7fd3d0e2714a orig_targ_addr: 40a5eb new_targ_addr: 7fd3d0e27656    new instr:0x7fd3d0e2714a: jnz 0x7fd3d0e27656
110:  orig_ins_addr: 40a629 new_ins_addr: 7fd3d0e2717f orig_targ_addr: 40a62b new_targ_addr: 7fd3d0e27675    new instr:0x7fd3d0e2717f: jnz 0x7fd3d0e27675
125:  orig_ins_addr: 40a669 new_ins_addr: 7fd3d0e271b4 orig_targ_addr: 40a66b new_targ_addr: 7fd3d0e276cf    new instr:0x7fd3d0e271b4: jnz 0x7fd3d0e276cf
140:  orig_ins_addr: 40a6a9 new_ins_addr: 7fd3d0e271e9 orig_targ_addr: 40a6ab new_targ_addr: 7fd3d0e276de    new instr:0x7fd3d0e271e9: jnz 0x7fd3d0e276de
155:  orig_ins_addr: 40a6e9 new_ins_addr: 7fd3d0e2721e orig_targ_addr: 40a6eb new_targ_addr: 7fd3d0e2771a    new instr:0x7fd3d0e2721e: jnz 0x7fd3d0e2771a
170:  orig_ins_addr: 40a729 new_ins_addr: 7fd3d0e27253 orig_targ_addr: 40a72b new_targ_addr: 7fd3d0e27738    new instr:0x7fd3d0e27253: jnz 0x7fd3d0e27738
185:  orig_ins_addr: 40a769 new_ins_addr: 7fd3d0e27288 orig_targ_addr: 40a76b new_targ_addr: 7fd3d0e27747    new instr:0x7fd3d0e27288: jnz 0x7fd3d0e27747
203:  orig_ins_addr: 40a7b2 new_ins_addr: 7fd3d0e272c6 orig_targ_addr: 40a7b4 new_targ_addr: 7fd3d0e2770b    new instr:0x7fd3d0e272c6: jnz 0x7fd3d0e2770b
218:  orig_ins_addr: 40a7f5 new_ins_addr: 7fd3d0e272fe orig_targ_addr: 40a7f7 new_targ_addr: 7fd3d0e275ec    new instr:0x7fd3d0e272fe: jnz 0x7fd3d0e275ec
233:  orig_ins_addr: 40a836 new_ins_addr: 7fd3d0e27333 orig_targ_addr: 40a838 new_targ_addr: 7fd3d0e276fc    new instr:0x7fd3d0e27333: jnz 0x7fd3d0e276fc
248:  orig_ins_addr: 40a879 new_ins_addr: 7fd3d0e2736b orig_targ_addr: 40a87b new_targ_addr: 7fd3d0e275f9    new instr:0x7fd3d0e2736b: jnz 0x7fd3d0e275f9
263:  orig_ins_addr: 40a8ba new_ins_addr: 7fd3d0e273a0 orig_targ_addr: 40a8bc new_targ_addr: 7fd3d0e276ed    new instr:0x7fd3d0e273a0: jnz 0x7fd3d0e276ed
278:  orig_ins_addr: 40a8fd new_ins_addr: 7fd3d0e273d8 orig_targ_addr: 40a8ff new_targ_addr: 7fd3d0e27609    new instr:0x7fd3d0e273d8: jnz 0x7fd3d0e27609
293:  orig_ins_addr: 40a93e new_ins_addr: 7fd3d0e2740d orig_targ_addr: 40a940 new_targ_addr: 7fd3d0e27729    new instr:0x7fd3d0e2740d: jnz 0x7fd3d0e27729
308:  orig_ins_addr: 40a981 new_ins_addr: 7fd3d0e27445 orig_targ_addr: 40a983 new_targ_addr: 7fd3d0e27628    new instr:0x7fd3d0e27445: jnz 0x7fd3d0e27628
323:  orig_ins_addr: 40a9c2 new_ins_addr: 7fd3d0e2747a orig_targ_addr: 40a9c4 new_targ_addr: 7fd3d0e27774    new instr:0x7fd3d0e2747a: jnz 0x7fd3d0e27774
338:  orig_ins_addr: 40aa05 new_ins_addr: 7fd3d0e274b2 orig_targ_addr: 40aa07 new_targ_addr: 7fd3d0e27665    new instr:0x7fd3d0e274b2: jnz 0x7fd3d0e27665
353:  orig_ins_addr: 40aa46 new_ins_addr: 7fd3d0e274e7 orig_targ_addr: 40aa48 new_targ_addr: 7fd3d0e27765    new instr:0x7fd3d0e274e7: jnz 0x7fd3d0e27765
368:  orig_ins_addr: 40aa89 new_ins_addr: 7fd3d0e2751f orig_targ_addr: 40aa8b new_targ_addr: 7fd3d0e276a0    new instr:0x7fd3d0e2751f: jnz 0x7fd3d0e276a0
383:  orig_ins_addr: 40aaca new_ins_addr: 7fd3d0e27554 orig_targ_addr: 40aacc new_targ_addr: 7fd3d0e27756    new instr:0x7fd3d0e27554: jnz 0x7fd3d0e27756
398:  orig_ins_addr: 40ab0d new_ins_addr: 7fd3d0e2758c orig_targ_addr: 40ab0f new_targ_addr: 7fd3d0e276bf    new instr:0x7fd3d0e2758c: jnz 0x7fd3d0e276bf
413:  orig_ins_addr: 40ab4e new_ins_addr: 7fd3d0e275c1 orig_targ_addr: 40ab50 new_targ_addr: 7fd3d0e27783    new instr:0x7fd3d0e275c1: jnz 0x7fd3d0e27783
428:  orig_ins_addr: 40ab91 new_ins_addr: 7fd3d0e275f9 orig_targ_addr: 40ab93 new_targ_addr: 7fd3d0e27693    new instr:0x7fd3d0e275f9: jnz 0x7fd3d0e27693
433:  orig_ins_addr: 40abae new_ins_addr: 7fd3d0e2760d orig_targ_addr: 40abb0 new_targ_addr: 7fd3d0e277b5    new instr:0x7fd3d0e2760d: jnb 0x7fd3d0e277b5
436:  orig_ins_addr: 40abbc new_ins_addr: 7fd3d0e27619 orig_targ_addr: 40abbe new_targ_addr: 7fd3d0e27792    new instr:0x7fd3d0e27619: jnb 0x7fd3d0e27792
457:  orig_ins_addr: 40a7b2 new_ins_addr: 7fd3d0e2765d orig_targ_addr: 40a7c3 new_targ_addr: 7fd3d0e272cc    new instr:0x7fd3d0e2765d: jz 0x7fd3d0e272cc
458:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e27663 orig_targ_addr: 40a7b4 new_targ_addr: 7fd3d0e2770b    new instr:0x7fd3d0e27663: jmp 0x7fd3d0e2770b
468:  orig_ins_addr: 40a886 new_ins_addr: 7fd3d0e27680 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27680: jmp 0x7fd3d0e27673
472:  orig_ins_addr: 40a90a new_ins_addr: 7fd3d0e27690 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27690: jmp 0x7fd3d0e27673
476:  orig_ins_addr: 40a4b5 new_ins_addr: 7fd3d0e2769f orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2769f: jmp 0x7fd3d0e27673
480:  orig_ins_addr: 40a98e new_ins_addr: 7fd3d0e276af orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276af: jmp 0x7fd3d0e27673
484:  orig_ins_addr: 40a4f5 new_ins_addr: 7fd3d0e276be orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276be: jmp 0x7fd3d0e27673
488:  orig_ins_addr: 40a5b5 new_ins_addr: 7fd3d0e276cd orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276cd: jmp 0x7fd3d0e27673
492:  orig_ins_addr: 40a5f5 new_ins_addr: 7fd3d0e276dc orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276dc: jmp 0x7fd3d0e27673
496:  orig_ins_addr: 40aa12 new_ins_addr: 7fd3d0e276ec orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276ec: jmp 0x7fd3d0e27673
500:  orig_ins_addr: 40a635 new_ins_addr: 7fd3d0e276fb orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276fb: jmp 0x7fd3d0e27673
504:  orig_ins_addr: 40a535 new_ins_addr: 7fd3d0e2770a orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2770a: jmp 0x7fd3d0e27673
508:  orig_ins_addr: 40ab9e new_ins_addr: 7fd3d0e2771a orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2771a: jmp 0x7fd3d0e27673
512:  orig_ins_addr: 40aa96 new_ins_addr: 7fd3d0e2772a orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2772a: jmp 0x7fd3d0e27673
516:  orig_ins_addr: 40a575 new_ins_addr: 7fd3d0e27739 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27739: jmp 0x7fd3d0e27673
520:  orig_ins_addr: 40ab1a new_ins_addr: 7fd3d0e27749 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27749: jmp 0x7fd3d0e27673
524:  orig_ins_addr: 40a675 new_ins_addr: 7fd3d0e27758 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27758: jmp 0x7fd3d0e27673
528:  orig_ins_addr: 40a6b5 new_ins_addr: 7fd3d0e27767 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27767: jmp 0x7fd3d0e27673
532:  orig_ins_addr: 40a8c6 new_ins_addr: 7fd3d0e27776 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27776: jmp 0x7fd3d0e27673
536:  orig_ins_addr: 40a842 new_ins_addr: 7fd3d0e27785 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27785: jmp 0x7fd3d0e27673
540:  orig_ins_addr: 40a7be new_ins_addr: 7fd3d0e27794 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27794: jmp 0x7fd3d0e27673
544:  orig_ins_addr: 40a6f5 new_ins_addr: 7fd3d0e277a3 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277a3: jmp 0x7fd3d0e27673
548:  orig_ins_addr: 40a94a new_ins_addr: 7fd3d0e277b2 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277b2: jmp 0x7fd3d0e27673
552:  orig_ins_addr: 40a735 new_ins_addr: 7fd3d0e277c1 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277c1: jmp 0x7fd3d0e27673
556:  orig_ins_addr: 40a775 new_ins_addr: 7fd3d0e277d0 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277d0: jmp 0x7fd3d0e27673
560:  orig_ins_addr: 40aad6 new_ins_addr: 7fd3d0e277df orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277df: jmp 0x7fd3d0e27673
564:  orig_ins_addr: 40aa52 new_ins_addr: 7fd3d0e277ee orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277ee: jmp 0x7fd3d0e27673
568:  orig_ins_addr: 40a9ce new_ins_addr: 7fd3d0e277fd orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277fd: jmp 0x7fd3d0e27673
572:  orig_ins_addr: 40ab5a new_ins_addr: 7fd3d0e2780c orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2780c: jmp 0x7fd3d0e27673
582:  orig_ins_addr: 40abdb new_ins_addr: 7fd3d0e2782e orig_targ_addr: 40a78b new_targ_addr: 7fd3d0e2729f    new instr:0x7fd3d0e2782e: jns 0x7fd3d0e2729f
587:  orig_ins_addr: 40abbc new_ins_addr: 7fd3d0e27840 orig_targ_addr: 40abc4 new_targ_addr: 7fd3d0e2761f    new instr:0x7fd3d0e27840: jb 0x7fd3d0e2761f
588:  orig_ins_addr: 40abbe new_ins_addr: 7fd3d0e27846 orig_targ_addr: ffffffff new_targ_addr: ffffffff    new instr:0x7fd3d0e27846: jmp qword ptr [rip-0x2b4e52c]
608:  orig_ins_addr: 40cb7c new_ins_addr: 7fd3d0e2789c orig_targ_addr: 40cac2 new_targ_addr: 40cac2    new instr:0x7fd3d0e2789c: call qword ptr [rip-0x2b4e082]
626:  orig_ins_addr: 40cbbf new_ins_addr: 7fd3d0e278e4 orig_targ_addr: 40cb9a new_targ_addr: 7fd3d0e278bf    new instr:0x7fd3d0e278e4: jle 0x7fd3d0e278bf
644:  orig_ins_addr: 40cbfa new_ins_addr: 7fd3d0e2792e orig_targ_addr: 40cbd8 new_targ_addr: 7fd3d0e2790c    new instr:0x7fd3d0e2792e: jnle 0x7fd3d0e2790c
660:  orig_ins_addr: 40cc28 new_ins_addr: 7fd3d0e27968 orig_targ_addr: 40cc2a new_targ_addr: 7fd3d0e27ac8    new instr:0x7fd3d0e27968: js 0x7fd3d0e27ac8
673:  orig_ins_addr: 40cc68 new_ins_addr: 7fd3d0e2799f orig_targ_addr: 40cc73 new_targ_addr: 7fd3d0e27930    new instr:0x7fd3d0e2799f: jnz 0x7fd3d0e27930
680:  orig_ins_addr: 40cdd2 new_ins_addr: 7fd3d0e279ba orig_targ_addr: 40cc08 new_targ_addr: 7fd3d0e27948    new instr:0x7fd3d0e279ba: jnle 0x7fd3d0e27948
681:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e279c0 orig_targ_addr: 40cdd8 new_targ_addr: 7fd3d0e27b08    new instr:0x7fd3d0e279c0: jmp 0x7fd3d0e27b08
683:  orig_ins_addr: 40cc77 new_ins_addr: 7fd3d0e279c9 orig_targ_addr: 40cd1e new_targ_addr: 7fd3d0e279e4    new instr:0x7fd3d0e279c9: jle 0x7fd3d0e279e4
688:  orig_ins_addr: 40cc89 new_ins_addr: 7fd3d0e279db orig_targ_addr: 40ccc3 new_targ_addr: 7fd3d0e279a0    new instr:0x7fd3d0e279db: jz 0x7fd3d0e279a0
703:  orig_ins_addr: 40ccfd new_ins_addr: 7fd3d0e27a1b orig_targ_addr: 40cd16 new_targ_addr: 7fd3d0e279dc    new instr:0x7fd3d0e27a1b: jle 0x7fd3d0e279dc
715:  orig_ins_addr: 40cc89 new_ins_addr: 7fd3d0e27a3b orig_targ_addr: 40cc8b new_targ_addr: 7fd3d0e279e1    new instr:0x7fd3d0e27a3b: jnz 0x7fd3d0e279e1
729:  orig_ins_addr: 40ccfd new_ins_addr: 7fd3d0e27a7b orig_targ_addr: 40ccff new_targ_addr: 7fd3d0e27a21    new instr:0x7fd3d0e27a7b: jnle 0x7fd3d0e27a21
740:  orig_ins_addr: 40cd56 new_ins_addr: 7fd3d0e27ab1 orig_targ_addr: 40cd58 new_targ_addr: 7fd3d0e27a21    new instr:0x7fd3d0e27ab1: jz 0x7fd3d0e27a21
746:  orig_ins_addr: 40cd56 new_ins_addr: 7fd3d0e27ac8 orig_targ_addr: 40cd45 new_targ_addr: 7fd3d0e27ab7    new instr:0x7fd3d0e27ac8: jnz 0x7fd3d0e27ab7
778:  orig_ins_addr: 40cdd2 new_ins_addr: 7fd3d0e27b48 orig_targ_addr: 40cc08 new_targ_addr: 7fd3d0e27948    new instr:0x7fd3d0e27b48: jnle 0x7fd3d0e27948
785:  orig_ins_addr: 40cd43 new_ins_addr: 7fd3d0e27b73 orig_targ_addr: 40cd53 new_targ_addr: 7fd3d0e27aae    new instr:0x7fd3d0e27b73: jmp 0x7fd3d0e27aae
801:  orig_ins_addr: 40cc68 new_ins_addr: 7fd3d0e27bb6 orig_targ_addr: 40cc73 new_targ_addr: 7fd3d0e279c5    new instr:0x7fd3d0e27bb6: jnz 0x7fd3d0e279c5
807:  orig_ins_addr: 40cdee new_ins_addr: 7fd3d0e27bcc orig_targ_addr: 40ce28 new_targ_addr: 7fd3d0e27b72    new instr:0x7fd3d0e27bcc: jz 0x7fd3d0e27b72
822:  orig_ins_addr: 40ce62 new_ins_addr: 7fd3d0e27c0c orig_targ_addr: 40ce7b new_targ_addr: 7fd3d0e27bae    new instr:0x7fd3d0e27c0c: jle 0x7fd3d0e27bae
834:  orig_ins_addr: 40cdee new_ins_addr: 7fd3d0e27c2c orig_targ_addr: 40cdf0 new_targ_addr: 7fd3d0e27bd2    new instr:0x7fd3d0e27c2c: jnz 0x7fd3d0e27bd2
848:  orig_ins_addr: 40ce62 new_ins_addr: 7fd3d0e27c6c orig_targ_addr: 40ce64 new_targ_addr: 7fd3d0e27c12    new instr:0x7fd3d0e27c6c: jnle 0x7fd3d0e27c12
911:  orig_ins_addr: 40c70e new_ins_addr: 7fd3d0e27d4f orig_targ_addr: 40c714 new_targ_addr: 7fd3d0e27c91    new instr:0x7fd3d0e27d4f: jz 0x7fd3d0e27c91
945:  orig_ins_addr: 40c789 new_ins_addr: 7fd3d0e27dbc orig_targ_addr: 40b826 new_targ_addr: 40b826    new instr:0x7fd3d0e27dbc: call qword ptr [rip-0x2b49162]
966:  orig_ins_addr: 40c86f new_ins_addr: 7fd3d0e27dff orig_targ_addr: 40c871 new_targ_addr: 7fd3d0e27d48    new instr:0x7fd3d0e27dff: jz 0x7fd3d0e27d48
971:  orig_ins_addr: 40c88b new_ins_addr: 7fd3d0e27e13 orig_targ_addr: 40c857 new_targ_addr: 7fd3d0e27de7    new instr:0x7fd3d0e27e13: jnle 0x7fd3d0e27de7
988:  orig_ins_addr: 40c729 new_ins_addr: 7fd3d0e27e44 orig_targ_addr: 40c732 new_targ_addr: 7fd3d0e27d6e    new instr:0x7fd3d0e27e44: jnle 0x7fd3d0e27d6e
989:  orig_ins_addr: 40c72b new_ins_addr: 7fd3d0e27e4a orig_targ_addr: ffffffff new_targ_addr: ffffffff    new instr:0x7fd3d0e27e4a: jmp qword ptr [rip-0x2b486f0]
1000:  orig_ins_addr: 40c9ce new_ins_addr: 7fd3d0e27e6c orig_targ_addr: 40c95d new_targ_addr: 7fd3d0e27ded    new instr:0x7fd3d0e27e6c: jnle 0x7fd3d0e27ded
1056:  orig_ins_addr: 40c9ce new_ins_addr: 7fd3d0e27f38 orig_targ_addr: 40c95d new_targ_addr: 7fd3d0e27ec7    new instr:0x7fd3d0e27f38: jnle 0x7fd3d0e27ec7
1057:  orig_ins_addr: 40c9d0 new_ins_addr: 7fd3d0e27f3e orig_targ_addr: 40c9d0 new_targ_addr: 7fd3d0e27e72    new instr:0x7fd3d0e27f3e: jmp 0x7fd3d0e27e72
1071:  orig_ins_addr: 405af4 new_ins_addr: 7fd3d0e27f6d orig_targ_addr: 405afa new_targ_addr: 7fd3d0e28282    new instr:0x7fd3d0e27f6d: jz 0x7fd3d0e28282
1086:  orig_ins_addr: 405676 new_ins_addr: 7fd3d0e27fa2 orig_targ_addr: 405821 new_targ_addr: 7fd3d0e2806f    new instr:0x7fd3d0e27fa2: jnz 0x7fd3d0e2806f
1087:  orig_ins_addr: 40567c new_ins_addr: 7fd3d0e27fa8 orig_targ_addr: 40567f new_targ_addr: 7fd3d0e27ecd    new instr:0x7fd3d0e27fa8: jmp 0x7fd3d0e27ecd
1094:  orig_ins_addr: 40568f new_ins_addr: 7fd3d0e27fbe orig_targ_addr: 4059df new_targ_addr: 7fd3d0e2822d    new instr:0x7fd3d0e27fbe: jnl 0x7fd3d0e2822d
1099:  orig_ins_addr: 4056a1 new_ins_addr: 7fd3d0e27fd0 orig_targ_addr: 4059e2 new_targ_addr: 7fd3d0e28230    new instr:0x7fd3d0e27fd0: jz 0x7fd3d0e28230
1110:  orig_ins_addr: 4056c8 new_ins_addr: 7fd3d0e27ff7 orig_targ_addr: 40576d new_targ_addr: 7fd3d0e27fbb    new instr:0x7fd3d0e27ff7: jz 0x7fd3d0e27fbb
1114:  orig_ins_addr: 4056d8 new_ins_addr: 7fd3d0e28007 orig_targ_addr: 40576d new_targ_addr: 7fd3d0e27fbb    new instr:0x7fd3d0e28007: jnz 0x7fd3d0e27fbb
1154:  orig_ins_addr: 40576b new_ins_addr: 7fd3d0e2809a orig_targ_addr: 4057c9 new_targ_addr: 7fd3d0e28017    new instr:0x7fd3d0e2809a: jmp 0x7fd3d0e28017
1158:  orig_ins_addr: 405777 new_ins_addr: 7fd3d0e280a9 orig_targ_addr: 405787 new_targ_addr: 7fd3d0e27fd5    new instr:0x7fd3d0e280a9: jnz 0x7fd3d0e27fd5
1162:  orig_ins_addr: 405785 new_ins_addr: 7fd3d0e280bb orig_targ_addr: 4057b8 new_targ_addr: 7fd3d0e28006    new instr:0x7fd3d0e280bb: jnz 0x7fd3d0e28006
1166:  orig_ins_addr: 405793 new_ins_addr: 7fd3d0e280cd orig_targ_addr: 4057a1 new_targ_addr: 7fd3d0e27fef    new instr:0x7fd3d0e280cd: jnbe 0x7fd3d0e27fef
1169:  orig_ins_addr: 40579c new_ins_addr: 7fd3d0e280da orig_targ_addr: 405388 new_targ_addr: 405388    new instr:0x7fd3d0e280da: call qword ptr [rip-0x2b45c80]
1175:  orig_ins_addr: 4057b6 new_ins_addr: 7fd3d0e280f5 orig_targ_addr: 4057c9 new_targ_addr: 7fd3d0e28017    new instr:0x7fd3d0e280f5: jmp 0x7fd3d0e28017
1200:  orig_ins_addr: 405806 new_ins_addr: 7fd3d0e28148 orig_targ_addr: 40567e new_targ_addr: 7fd3d0e27fad    new instr:0x7fd3d0e28148: jnz 0x7fd3d0e27fad
1206:  orig_ins_addr: 40581c new_ins_addr: 7fd3d0e2815e orig_targ_addr: 40567e new_targ_addr: 7fd3d0e27fad    new instr:0x7fd3d0e2815e: jmp 0x7fd3d0e27fad
1212:  orig_ins_addr: 405831 new_ins_addr: 7fd3d0e28173 orig_targ_addr: 4059e5 new_targ_addr: 7fd3d0e28233    new instr:0x7fd3d0e28173: jnl 0x7fd3d0e28233
1217:  orig_ins_addr: 405843 new_ins_addr: 7fd3d0e28185 orig_targ_addr: 4059e8 new_targ_addr: 7fd3d0e28236    new instr:0x7fd3d0e28185: jz 0x7fd3d0e28236
1221:  orig_ins_addr: 405852 new_ins_addr: 7fd3d0e28194 orig_targ_addr: 4059eb new_targ_addr: 7fd3d0e28239    new instr:0x7fd3d0e28194: jz 0x7fd3d0e28239
1232:  orig_ins_addr: 405879 new_ins_addr: 7fd3d0e281bb orig_targ_addr: 40591e new_targ_addr: 7fd3d0e2816c    new instr:0x7fd3d0e281bb: jz 0x7fd3d0e2816c
1236:  orig_ins_addr: 405889 new_ins_addr: 7fd3d0e281cb orig_targ_addr: 40591e new_targ_addr: 7fd3d0e2816c    new instr:0x7fd3d0e281cb: jnz 0x7fd3d0e2816c
1276:  orig_ins_addr: 40591c new_ins_addr: 7fd3d0e2825e orig_targ_addr: 40597a new_targ_addr: 7fd3d0e281c8    new instr:0x7fd3d0e2825e: jmp 0x7fd3d0e281c8
1280:  orig_ins_addr: 405928 new_ins_addr: 7fd3d0e2826d orig_targ_addr: 405938 new_targ_addr: 7fd3d0e28186    new instr:0x7fd3d0e2826d: jnz 0x7fd3d0e28186
1284:  orig_ins_addr: 405936 new_ins_addr: 7fd3d0e2827f orig_targ_addr: 405969 new_targ_addr: 7fd3d0e281b7    new instr:0x7fd3d0e2827f: jnz 0x7fd3d0e281b7
1288:  orig_ins_addr: 405944 new_ins_addr: 7fd3d0e28291 orig_targ_addr: 405952 new_targ_addr: 7fd3d0e281a0    new instr:0x7fd3d0e28291: jnbe 0x7fd3d0e281a0
1291:  orig_ins_addr: 40594d new_ins_addr: 7fd3d0e2829e orig_targ_addr: 405388 new_targ_addr: 405388    new instr:0x7fd3d0e2829e: call qword ptr [rip-0x2b43fc4]
1297:  orig_ins_addr: 405967 new_ins_addr: 7fd3d0e282b9 orig_targ_addr: 40597a new_targ_addr: 7fd3d0e281c8    new instr:0x7fd3d0e282b9: jmp 0x7fd3d0e281c8
1322:  orig_ins_addr: 4059b7 new_ins_addr: 7fd3d0e2830c orig_targ_addr: 4059c9 new_targ_addr: 7fd3d0e28217    new instr:0x7fd3d0e2830c: jnz 0x7fd3d0e28217
1333:  orig_ins_addr: 4059da new_ins_addr: 7fd3d0e28333 orig_targ_addr: 405821 new_targ_addr: 7fd3d0e28163    new instr:0x7fd3d0e28333: jmp 0x7fd3d0e28163
1335:  orig_ins_addr: 4059e0 new_ins_addr: 7fd3d0e28339 orig_targ_addr: 4059ec new_targ_addr: 7fd3d0e2823a    new instr:0x7fd3d0e28339: jmp 0x7fd3d0e2823a
1337:  orig_ins_addr: 4059e3 new_ins_addr: 7fd3d0e2833f orig_targ_addr: 4059ec new_targ_addr: 7fd3d0e2823a    new instr:0x7fd3d0e2833f: jmp 0x7fd3d0e2823a
1339:  orig_ins_addr: 4059e6 new_ins_addr: 7fd3d0e28345 orig_targ_addr: 4059ec new_targ_addr: 7fd3d0e2823a    new instr:0x7fd3d0e28345: jmp 0x7fd3d0e2823a
1341:  orig_ins_addr: 4059e9 new_ins_addr: 7fd3d0e2834b orig_targ_addr: 4059ec new_targ_addr: 7fd3d0e2823a    new instr:0x7fd3d0e2834b: jmp 0x7fd3d0e2823a
1346:  orig_ins_addr: 405ba3 new_ins_addr: 7fd3d0e2835a orig_targ_addr: 40565c new_targ_addr: 40565c    new instr:0x7fd3d0e2835a: call qword ptr [rip-0x2b432c0]
1351:  orig_ins_addr: 405bb5 new_ins_addr: 7fd3d0e2836d orig_targ_addr: 405bb7 new_targ_addr: 7fd3d0e2830e    new instr:0x7fd3d0e2836d: jnz 0x7fd3d0e2830e
1357:  orig_ins_addr: 405c0c new_ins_addr: 7fd3d0e28383 orig_targ_addr: 405c0e new_targ_addr: 7fd3d0e282e2    new instr:0x7fd3d0e28383: jnl 0x7fd3d0e282e2
1364:  orig_ins_addr: 405c4e new_ins_addr: 7fd3d0e28399 orig_targ_addr: 405c50 new_targ_addr: 7fd3d0e282aa    new instr:0x7fd3d0e28399: jz 0x7fd3d0e282aa
1371:  orig_ins_addr: 405b01 new_ins_addr: 7fd3d0e283ad orig_targ_addr: 4059f2 new_targ_addr: 4059f2    new instr:0x7fd3d0e283ad: call qword ptr [rip-0x2b42cd3]
1378:  orig_ins_addr: 405b19 new_ins_addr: 7fd3d0e283c6 orig_targ_addr: 405b1f new_targ_addr: 7fd3d0e282b3    new instr:0x7fd3d0e283c6: jnl 0x7fd3d0e282b3
1380:  orig_ins_addr: 405c44 new_ins_addr: 7fd3d0e283cd orig_targ_addr: 405c4a new_targ_addr: 7fd3d0e28395    new instr:0x7fd3d0e283cd: jmp 0x7fd3d0e28395
1382:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e283d6 orig_targ_addr: 405c56 new_targ_addr: 7fd3d0e2839f    new instr:0x7fd3d0e283d6: jmp 0x7fd3d0e2839f
1386:  orig_ins_addr: 405b29 new_ins_addr: 7fd3d0e283e5 orig_targ_addr: 405b2b new_targ_addr: 7fd3d0e28351    new instr:0x7fd3d0e283e5: jz 0x7fd3d0e28351
1389:  orig_ins_addr: 405b51 new_ins_addr: 7fd3d0e283f2 orig_targ_addr: 404f65 new_targ_addr: 7fd3d0e28469    new instr:0x7fd3d0e283f2: call 0x7fd3d0e28469
1395:  orig_ins_addr: 405b6b new_ins_addr: 7fd3d0e2840c orig_targ_addr: 405b8c new_targ_addr: 7fd3d0e27f73    new instr:0x7fd3d0e2840c: jnz 0x7fd3d0e27f73
1399:  orig_ins_addr: 405c1a new_ins_addr: 7fd3d0e2841e orig_targ_addr: 41216d new_targ_addr: 7fd3d0e284e6    new instr:0x7fd3d0e2841e: call 0x7fd3d0e284e6
1407:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e28439 orig_targ_addr: 405afa new_targ_addr: 7fd3d0e283a6    new instr:0x7fd3d0e28439: jmp 0x7fd3d0e283a6
1413:  orig_ins_addr: 405bc9 new_ins_addr: 7fd3d0e2844e orig_targ_addr: 405628 new_targ_addr: 7fd3d0e28fd9    new instr:0x7fd3d0e2844e: call 0x7fd3d0e28fd9
1422:  orig_ins_addr: 405be7 new_ins_addr: 7fd3d0e2846c orig_targ_addr: 41216d new_targ_addr: 7fd3d0e284e6    new instr:0x7fd3d0e2846c: call 0x7fd3d0e284e6
1425:  orig_ins_addr: 405bf7 new_ins_addr: 7fd3d0e2847c orig_targ_addr: 405ae9 new_targ_addr: 7fd3d0e2842e    new instr:0x7fd3d0e2847c: jmp 0x7fd3d0e2842e
1431:  orig_ins_addr: 405b3d new_ins_addr: 7fd3d0e28491 orig_targ_addr: 404ffc new_targ_addr: 7fd3d0e28e0c    new instr:0x7fd3d0e28491: call 0x7fd3d0e28e0c
1435:  orig_ins_addr: 405c47 new_ins_addr: 7fd3d0e28499 orig_targ_addr: 405c4a new_targ_addr: 7fd3d0e28395    new instr:0x7fd3d0e28499: jmp 0x7fd3d0e28395
1436:  orig_ins_addr: 405c47 new_ins_addr: 7fd3d0e2849e orig_targ_addr: 405c4a new_targ_addr: 7fd3d0e28395    new instr:0x7fd3d0e2849e: jmp 0x7fd3d0e28395
1456:  orig_ins_addr: 405cc2 new_ins_addr: 7fd3d0e284dd orig_targ_addr: 405cc4 new_targ_addr: 7fd3d0e283c9    new instr:0x7fd3d0e284dd: jnz 0x7fd3d0e283c9
1458:  orig_ins_addr: 405cf8 new_ins_addr: 7fd3d0e284e7 orig_targ_addr: 405d20 new_targ_addr: 7fd3d0e2843e    new instr:0x7fd3d0e284e7: jnz 0x7fd3d0e2843e
1461:  orig_ins_addr: 405d01 new_ins_addr: 7fd3d0e284f4 orig_targ_addr: 405ac7 new_targ_addr: 7fd3d0e27f43    new instr:0x7fd3d0e284f4: call 0x7fd3d0e27f43
1485:  orig_ins_addr: 405e2f new_ins_addr: 7fd3d0e2852e orig_targ_addr: 405ac7 new_targ_addr: 7fd3d0e27f43    new instr:0x7fd3d0e2852e: call 0x7fd3d0e27f43
1494:  orig_ins_addr: 405e56 new_ins_addr: 7fd3d0e2854a orig_targ_addr: 404ffc new_targ_addr: 7fd3d0e28e0c    new instr:0x7fd3d0e2854a: call 0x7fd3d0e28e0c
1501:  orig_ins_addr: 405e6f new_ins_addr: 7fd3d0e28561 orig_targ_addr: 405e78 new_targ_addr: 7fd3d0e2842c    new instr:0x7fd3d0e28561: jnl 0x7fd3d0e2842c
1503:  orig_ins_addr: 405e76 new_ins_addr: 7fd3d0e2856c orig_targ_addr: 405e8f new_targ_addr: 7fd3d0e28505    new instr:0x7fd3d0e2856c: jmp 0x7fd3d0e28505
1507:  orig_ins_addr: 405e88 new_ins_addr: 7fd3d0e28581 orig_targ_addr: 405e8f new_targ_addr: 7fd3d0e28505    new instr:0x7fd3d0e28581: jmp 0x7fd3d0e28505
1517:  orig_ins_addr: 405d63 new_ins_addr: 7fd3d0e285a7 orig_targ_addr: 405cb8 new_targ_addr: 7fd3d0e284d3    new instr:0x7fd3d0e285a7: jmp 0x7fd3d0e284d3
1518:  orig_ins_addr: 405d63 new_ins_addr: 7fd3d0e285ac orig_targ_addr: 405cb8 new_targ_addr: 7fd3d0e284d3    new instr:0x7fd3d0e285ac: jmp 0x7fd3d0e284d3
1540:  orig_ins_addr: 404fc1 new_ins_addr: 7fd3d0e28612 orig_targ_addr: 404fa5 new_targ_addr: 7fd3d0e285f6    new instr:0x7fd3d0e28612: jle 0x7fd3d0e285f6
1580:  orig_ins_addr: 4121ea new_ins_addr: 7fd3d0e286a9 orig_targ_addr: 4121f7 new_targ_addr: 7fd3d0e2856a    new instr:0x7fd3d0e286a9: jle 0x7fd3d0e2856a
1589:  orig_ins_addr: 412251 new_ins_addr: 7fd3d0e286ce orig_targ_addr: 40c679 new_targ_addr: 7fd3d0e27ce6    new instr:0x7fd3d0e286ce: call 0x7fd3d0e27ce6
1601:  orig_ins_addr: 41227f new_ins_addr: 7fd3d0e286fc orig_targ_addr: 412281 new_targ_addr: 7fd3d0e28698    new instr:0x7fd3d0e286fc: jz 0x7fd3d0e28698
1608:  orig_ins_addr: 4122f9 new_ins_addr: 7fd3d0e28717 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e28717: call 0x7fd3d0e2879b
1612:  orig_ins_addr: 41230a new_ins_addr: 7fd3d0e28728 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e28728: call 0x7fd3d0e2879b
1616:  orig_ins_addr: 41231b new_ins_addr: 7fd3d0e28739 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e28739: call 0x7fd3d0e2879b
1620:  orig_ins_addr: 41232c new_ins_addr: 7fd3d0e2874a orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e2874a: call 0x7fd3d0e2879b
1624:  orig_ins_addr: 41233d new_ins_addr: 7fd3d0e2875b orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e2875b: call 0x7fd3d0e2879b
1628:  orig_ins_addr: 41234e new_ins_addr: 7fd3d0e2876c orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e2876c: call 0x7fd3d0e2879b
1634:  orig_ins_addr: 412366 new_ins_addr: 7fd3d0e28784 orig_targ_addr: 40ca25 new_targ_addr: 7fd3d0e287c4    new instr:0x7fd3d0e28784: call 0x7fd3d0e287c4
1639:  orig_ins_addr: 41237c new_ins_addr: 7fd3d0e2879a orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e2879a: call 0x7fd3d0e27e50
1646:  orig_ins_addr: 412396 new_ins_addr: 7fd3d0e287b4 orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e287b4: call 0x7fd3d0e27e50
1649:  orig_ins_addr: 4123a2 new_ins_addr: 7fd3d0e287c0 orig_targ_addr: 40cb2c new_targ_addr: 7fd3d0e2784c    new instr:0x7fd3d0e287c0: call 0x7fd3d0e2784c
1652:  orig_ins_addr: 4123ae new_ins_addr: 7fd3d0e287cc orig_targ_addr: 40ceee new_targ_addr: 40ceee    new instr:0x7fd3d0e287cc: call qword ptr [rip-0x2b3eab2]
1654:  orig_ins_addr: 4123b7 new_ins_addr: 7fd3d0e287d6 orig_targ_addr: 4123bd new_targ_addr: 7fd3d0e286fa    new instr:0x7fd3d0e287d6: jnz 0x7fd3d0e286fa
1660:  orig_ins_addr: 412204 new_ins_addr: 7fd3d0e287eb orig_targ_addr: 41224a new_targ_addr: 7fd3d0e286c7    new instr:0x7fd3d0e287eb: jle 0x7fd3d0e286c7
1663:  orig_ins_addr: 412288 new_ins_addr: 7fd3d0e287f8 orig_targ_addr: 40c8a8 new_targ_addr: 7fd3d0e2908c    new instr:0x7fd3d0e287f8: call 0x7fd3d0e2908c
1667:  orig_ins_addr: 412299 new_ins_addr: 7fd3d0e28809 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e28809: call 0x7fd3d0e2879b
1671:  orig_ins_addr: 4122aa new_ins_addr: 7fd3d0e2881a orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e2881a: call 0x7fd3d0e2879b
1675:  orig_ins_addr: 4122bb new_ins_addr: 7fd3d0e2882b orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e2882b: call 0x7fd3d0e2879b
1683:  orig_ins_addr: 4122d9 new_ins_addr: 7fd3d0e28849 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e28849: call 0x7fd3d0e2879b
1684:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e2884e orig_targ_addr: 4122de new_targ_addr: 7fd3d0e28702    new instr:0x7fd3d0e2884e: jmp 0x7fd3d0e28702
1688:  orig_ins_addr: 4123c9 new_ins_addr: 7fd3d0e2885f orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e2885f: call 0x7fd3d0e2879b
1692:  orig_ins_addr: 4123da new_ins_addr: 7fd3d0e28870 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e28870: call 0x7fd3d0e2879b
1696:  orig_ins_addr: 4123eb new_ins_addr: 7fd3d0e28881 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e28881: call 0x7fd3d0e2879b
1700:  orig_ins_addr: 4123fc new_ins_addr: 7fd3d0e28892 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e28892: call 0x7fd3d0e2879b
1704:  orig_ins_addr: 41240d new_ins_addr: 7fd3d0e288a3 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e288a3: call 0x7fd3d0e2879b
1708:  orig_ins_addr: 41241e new_ins_addr: 7fd3d0e288b4 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e2879b    new instr:0x7fd3d0e288b4: call 0x7fd3d0e2879b
1714:  orig_ins_addr: 412436 new_ins_addr: 7fd3d0e288cc orig_targ_addr: 40ca25 new_targ_addr: 7fd3d0e287c4    new instr:0x7fd3d0e288cc: call 0x7fd3d0e287c4
1721:  orig_ins_addr: 412474 new_ins_addr: 7fd3d0e288e5 orig_targ_addr: 40c8ce new_targ_addr: 7fd3d0e28d55    new instr:0x7fd3d0e288e5: call 0x7fd3d0e28d55
1722:  orig_ins_addr: 412474 new_ins_addr: 7fd3d0e288ea orig_targ_addr: 40c8ce new_targ_addr: 7fd3d0e28d55    new instr:0x7fd3d0e288ea: call 0x7fd3d0e28d55
1723:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e288ef orig_targ_addr: 412479 new_targ_addr: 7fd3d0e287dc    new instr:0x7fd3d0e288ef: jmp 0x7fd3d0e287dc
1734:  orig_ins_addr: 40cabb new_ins_addr: 7fd3d0e28915 orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e28915: call 0x7fd3d0e27e50
1749:  orig_ins_addr: 40ca48 new_ins_addr: 7fd3d0e28940 orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e28940: call 0x7fd3d0e27e50
1756:  orig_ins_addr: 40ca62 new_ins_addr: 7fd3d0e2895a orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e2895a: call 0x7fd3d0e27e50
1763:  orig_ins_addr: 40ca7c new_ins_addr: 7fd3d0e28974 orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e28974: call 0x7fd3d0e27e50
1769:  orig_ins_addr: 40ca93 new_ins_addr: 7fd3d0e2898b orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e2898b: call 0x7fd3d0e27e50
1793:  orig_ins_addr: 4081cc new_ins_addr: 7fd3d0e289d6 orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e289d6: call qword ptr [rip-0x2b3c97c]
1823:  orig_ins_addr: 40829a new_ins_addr: 7fd3d0e28a5d orig_targ_addr: 405c64 new_targ_addr: 7fd3d0e284a3    new instr:0x7fd3d0e28a5d: call 0x7fd3d0e284a3
1826:  orig_ins_addr: 4082a6 new_ins_addr: 7fd3d0e28a69 orig_targ_addr: 4082a8 new_targ_addr: 7fd3d0e28a8a    new instr:0x7fd3d0e28a69: jnz 0x7fd3d0e28a8a
1846:  orig_ins_addr: 408327 new_ins_addr: 7fd3d0e28ab5 orig_targ_addr: 4012d0 new_targ_addr: 4012d0    new instr:0x7fd3d0e28ab5: call qword ptr [rip-0x2b3bd1b]
1853:  orig_ins_addr: 408341 new_ins_addr: 7fd3d0e28ace orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e28ace: call qword ptr [rip-0x2b3bb74]
1857:  orig_ins_addr: 40837d new_ins_addr: 7fd3d0e28ada orig_targ_addr: 408383 new_targ_addr: 7fd3d0e289be    new instr:0x7fd3d0e28ada: jz 0x7fd3d0e289be
1869:  orig_ins_addr: 40829a new_ins_addr: 7fd3d0e28b14 orig_targ_addr: 405c64 new_targ_addr: 7fd3d0e284a3    new instr:0x7fd3d0e28b14: call 0x7fd3d0e284a3
1870:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e28b19 orig_targ_addr: 40829f new_targ_addr: 7fd3d0e28a62    new instr:0x7fd3d0e28b19: jmp 0x7fd3d0e28a62
1876:  orig_ins_addr: 408394 new_ins_addr: 7fd3d0e28b2d orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e28b2d: call qword ptr [rip-0x2b3b613]
1881:  orig_ins_addr: 4083a7 new_ins_addr: 7fd3d0e28b3f orig_targ_addr: 401230 new_targ_addr: 401230    new instr:0x7fd3d0e28b3f: call qword ptr [rip-0x2b3b4e5]
1885:  orig_ins_addr: 4083b6 new_ins_addr: 7fd3d0e28b4f orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e28b4f: call qword ptr [rip-0x2b3b3f5]
1917:  orig_ins_addr: 40847d new_ins_addr: 7fd3d0e28bda orig_targ_addr: 405e91 new_targ_addr: 405e91    new instr:0x7fd3d0e28bda: call qword ptr [rip-0x2b3ac80]
1920:  orig_ins_addr: 408489 new_ins_addr: 7fd3d0e28be7 orig_targ_addr: 401080 new_targ_addr: 401080    new instr:0x7fd3d0e28be7: call qword ptr [rip-0x2b3abcd]
1925:  orig_ins_addr: 4082ac new_ins_addr: 7fd3d0e28bf3 orig_targ_addr: 4082db new_targ_addr: 7fd3d0e28a6f    new instr:0x7fd3d0e28bf3: jz 0x7fd3d0e28a6f
1926:  orig_ins_addr: 4082ae new_ins_addr: 7fd3d0e28bf9 orig_targ_addr: ffffffff new_targ_addr: ffffffff    new instr:0x7fd3d0e28bf9: jmp qword ptr [rip-0x2b3aa5f]
1933:  orig_ins_addr: 403ec5 new_ins_addr: 7fd3d0e28c14 orig_targ_addr: 403f09 new_targ_addr: 7fd3d0e28aee    new instr:0x7fd3d0e28c14: jnz 0x7fd3d0e28aee
1934:  orig_ins_addr: 403ec7 new_ins_addr: 7fd3d0e28c1a orig_targ_addr: 403e7d new_targ_addr: 7fd3d0e28e92    new instr:0x7fd3d0e28c1a: call 0x7fd3d0e28e92
1938:  orig_ins_addr: 403ed7 new_ins_addr: 7fd3d0e28c2a orig_targ_addr: 401150 new_targ_addr: 401150    new instr:0x7fd3d0e28c2a: call qword ptr [rip-0x2b3a790]
1941:  orig_ins_addr: 403ee1 new_ins_addr: 7fd3d0e28c35 orig_targ_addr: 403e4f new_targ_addr: 7fd3d0e28bf2    new instr:0x7fd3d0e28c35: call 0x7fd3d0e28bf2
1949:  orig_ins_addr: 403efe new_ins_addr: 7fd3d0e28c52 orig_targ_addr: 4010d0 new_targ_addr: 4010d0    new instr:0x7fd3d0e28c52: call qword ptr [rip-0x2b3a4f8]
1960:  orig_ins_addr: 403f2a new_ins_addr: 7fd3d0e28c71 orig_targ_addr: 403f13 new_targ_addr: 7fd3d0e28b28    new instr:0x7fd3d0e28c71: jnz 0x7fd3d0e28b28
1966:  orig_ins_addr: 403f3e new_ins_addr: 7fd3d0e28c89 orig_targ_addr: 403eb0 new_targ_addr: 7fd3d0e28bff    new instr:0x7fd3d0e28c89: call 0x7fd3d0e28bff
1978:  orig_ins_addr: 403f2a new_ins_addr: 7fd3d0e28cb3 orig_targ_addr: 403f13 new_targ_addr: 7fd3d0e28c9c    new instr:0x7fd3d0e28cb3: jnz 0x7fd3d0e28c9c
1979:  orig_ins_addr: 403f2c new_ins_addr: 7fd3d0e28cb9 orig_targ_addr: 403f2c new_targ_addr: 7fd3d0e28c77    new instr:0x7fd3d0e28cb9: jmp 0x7fd3d0e28c77
1987:  orig_ins_addr: 402a9a new_ins_addr: 7fd3d0e28cd5 orig_targ_addr: 401150 new_targ_addr: 401150    new instr:0x7fd3d0e28cd5: call qword ptr [rip-0x2b39bfb]
1991:  orig_ins_addr: 402aa9 new_ins_addr: 7fd3d0e28ce5 orig_targ_addr: 401150 new_targ_addr: 401150    new instr:0x7fd3d0e28ce5: call qword ptr [rip-0x2b39b0b]
2006:  orig_ins_addr: 402adf new_ins_addr: 7fd3d0e28d13 orig_targ_addr: 4011c0 new_targ_addr: 4011c0    new instr:0x7fd3d0e28d13: call qword ptr [rip-0x2b39779]
2020:  orig_ins_addr: 402808 new_ins_addr: 7fd3d0e28d3a orig_targ_addr: 401150 new_targ_addr: 401150    new instr:0x7fd3d0e28d3a: call qword ptr [rip-0x2b39420]
2028:  orig_ins_addr: 402861 new_ins_addr: 7fd3d0e28d59 orig_targ_addr: 4010a0 new_targ_addr: 4010a0    new instr:0x7fd3d0e28d59: call qword ptr [rip-0x2b3923f]
2042:  orig_ins_addr: 403e62 new_ins_addr: 7fd3d0e28d82 orig_targ_addr: 401220 new_targ_addr: 401220    new instr:0x7fd3d0e28d82: call qword ptr [rip-0x2b38ee8]
2074:  orig_ins_addr: 407ca7 new_ins_addr: 7fd3d0e28df5 orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e28df5: call qword ptr [rip-0x2b3875b]
2078:  orig_ins_addr: 407ce5 new_ins_addr: 7fd3d0e28e02 orig_targ_addr: 401220 new_targ_addr: 401220    new instr:0x7fd3d0e28e02: call qword ptr [rip-0x2b38668]
2111:  orig_ins_addr: 407dca new_ins_addr: 7fd3d0e28ea9 orig_targ_addr: 40502b new_targ_addr: 40502b    new instr:0x7fd3d0e28ea9: call qword ptr [rip-0x2b37ecf]
2160:  orig_ins_addr: 40c948 new_ins_addr: 7fd3d0e28f5a orig_targ_addr: 40c8d8 new_targ_addr: 7fd3d0e28eea    new instr:0x7fd3d0e28f5a: jnle 0x7fd3d0e28eea
2174:  orig_ins_addr: 404f31 new_ins_addr: 7fd3d0e28f81 orig_targ_addr: 401220 new_targ_addr: 401220    new instr:0x7fd3d0e28f81: call qword ptr [rip-0x2b36fe7]
2199:  orig_ins_addr: 404f5e new_ins_addr: 7fd3d0e28fca orig_targ_addr: 401080 new_targ_addr: 401080    new instr:0x7fd3d0e28fca: call qword ptr [rip-0x2b369f0]
2210:  orig_ins_addr: 40288d new_ins_addr: 7fd3d0e28feb orig_targ_addr: 401290 new_targ_addr: 401290    new instr:0x7fd3d0e28feb: call qword ptr [rip-0x2b36751]
2216:  orig_ins_addr: 4028a6 new_ins_addr: 7fd3d0e29005 orig_targ_addr: 4028b4 new_targ_addr: 7fd3d0e28e8b    new instr:0x7fd3d0e29005: jz 0x7fd3d0e28e8b
2219:  orig_ins_addr: 4028af new_ins_addr: 7fd3d0e29012 orig_targ_addr: 401120 new_targ_addr: 401120    new instr:0x7fd3d0e29012: call qword ptr [rip-0x2b36538]
2228:  orig_ins_addr: 403e8a new_ins_addr: 7fd3d0e2902c orig_targ_addr: 403e4f new_targ_addr: 7fd3d0e28d6f    new instr:0x7fd3d0e2902c: call 0x7fd3d0e28d6f
2242:  orig_ins_addr: 4029fc new_ins_addr: 7fd3d0e2905f orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7fd3d0e2905f: mov rax, qword ptr [0x61d308]
2244:  orig_ins_addr: 402a07 new_ins_addr: 7fd3d0e2906b orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7fd3d0e2906b: mov rax, qword ptr [0x61d318]
2246:  orig_ins_addr: 402a12 new_ins_addr: 7fd3d0e29077 orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7fd3d0e29077: mov edx, dword ptr [0x61d2d8]
2250:  orig_ins_addr: 402a21 new_ins_addr: 7fd3d0e29087 orig_targ_addr: 401270 new_targ_addr: 401270    new instr:0x7fd3d0e29087: call qword ptr [rip-0x2b35ded]
2258:  orig_ins_addr: 402a42 new_ins_addr: 7fd3d0e290a2 orig_targ_addr: 401070 new_targ_addr: 401070    new instr:0x7fd3d0e290a2: call qword ptr [rip-0x2b35c08]
2262:  orig_ins_addr: 402a55 new_ins_addr: 7fd3d0e290af orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7fd3d0e290af: mov edx, dword ptr [0x61d2e0]
2263:  orig_ins_addr: 402a5b new_ins_addr: 7fd3d0e290b6 orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7fd3d0e290b6: mov ecx, dword ptr [0x61d2dc]
2267:  orig_ins_addr: 402a6a new_ins_addr: 7fd3d0e290c6 orig_targ_addr: 401250 new_targ_addr: 401250    new instr:0x7fd3d0e290c6: call qword ptr [rip-0x2b359ec]
2279:  orig_ins_addr: 403f68 new_ins_addr: 7fd3d0e290e9 orig_targ_addr: 401060 new_targ_addr: 401060    new instr:0x7fd3d0e290e9: call qword ptr [rip-0x2b3570f]
2296:  orig_ins_addr: 4028e0 new_ins_addr: 7fd3d0e29121 orig_targ_addr: 401280 new_targ_addr: 401280    new instr:0x7fd3d0e29121: call qword ptr [rip-0x2b35307]
2304:  orig_ins_addr: 402901 new_ins_addr: 7fd3d0e2913a orig_targ_addr: 401260 new_targ_addr: 401260    new instr:0x7fd3d0e2913a: call qword ptr [rip-0x2b35120]
2331:  orig_ins_addr: 405649 new_ins_addr: 7fd3d0e29190 orig_targ_addr: 405388 new_targ_addr: 405388    new instr:0x7fd3d0e29190: call qword ptr [rip-0x2b34ab6]
2334:  orig_ins_addr: 405655 new_ins_addr: 7fd3d0e2919d orig_targ_addr: 404fdc new_targ_addr: 7fd3d0e29150    new instr:0x7fd3d0e2919d: call 0x7fd3d0e29150
2345:  orig_ins_addr: 4029db new_ins_addr: 7fd3d0e291bd orig_targ_addr: 418610 new_targ_addr: 418610    new instr:0x7fd3d0e291bd: call qword ptr [rip-0x2b34763]
2375:  orig_ins_addr: 401334 new_ins_addr: 7fd3d0e29217 orig_targ_addr: 4011b0 new_targ_addr: 4011b0    new instr:0x7fd3d0e29217: call qword ptr [rip-0x2b3403d]
2376:  orig_ins_addr: 401334 new_ins_addr: 7fd3d0e2921d orig_targ_addr: 4011b0 new_targ_addr: 4011b0    new instr:0x7fd3d0e2921d: call qword ptr [rip-0x2b34003]
2377:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e29223 orig_targ_addr: 401339 new_targ_addr: 401339    new instr:0x7fd3d0e29223: jmp qword ptr [rip-0x2b33fc9]
2421:  orig_ins_addr: 40103c new_ins_addr: 7fd3d0e2929d orig_targ_addr: 40133c new_targ_addr: 40133c    new instr:0x7fd3d0e2929d: call qword ptr [rip-0x2b33543]
starting a pass of fixing instructions displacements: 
20:  orig_ins_addr: 40a4a9 new_ins_addr: 7fd3d0e27041 orig_targ_addr: 40a4ab new_targ_addr: 7fd3d0e27695    new instr:0x7fd3d0e27041: jnz 0x7fd3d0e27695
35:  orig_ins_addr: 40a4e9 new_ins_addr: 7fd3d0e27076 orig_targ_addr: 40a4eb new_targ_addr: 7fd3d0e276b4    new instr:0x7fd3d0e27076: jnz 0x7fd3d0e276b4
50:  orig_ins_addr: 40a529 new_ins_addr: 7fd3d0e270ab orig_targ_addr: 40a52b new_targ_addr: 7fd3d0e27700    new instr:0x7fd3d0e270ab: jnz 0x7fd3d0e27700
65:  orig_ins_addr: 40a569 new_ins_addr: 7fd3d0e270e0 orig_targ_addr: 40a56b new_targ_addr: 7fd3d0e2772f    new instr:0x7fd3d0e270e0: jnz 0x7fd3d0e2772f
80:  orig_ins_addr: 40a5a9 new_ins_addr: 7fd3d0e27115 orig_targ_addr: 40a5ab new_targ_addr: 7fd3d0e276c3    new instr:0x7fd3d0e27115: jnz 0x7fd3d0e276c3
95:  orig_ins_addr: 40a5e9 new_ins_addr: 7fd3d0e2714a orig_targ_addr: 40a5eb new_targ_addr: 7fd3d0e276d2    new instr:0x7fd3d0e2714a: jnz 0x7fd3d0e276d2
110:  orig_ins_addr: 40a629 new_ins_addr: 7fd3d0e2717f orig_targ_addr: 40a62b new_targ_addr: 7fd3d0e276f1    new instr:0x7fd3d0e2717f: jnz 0x7fd3d0e276f1
125:  orig_ins_addr: 40a669 new_ins_addr: 7fd3d0e271b4 orig_targ_addr: 40a66b new_targ_addr: 7fd3d0e2774e    new instr:0x7fd3d0e271b4: jnz 0x7fd3d0e2774e
140:  orig_ins_addr: 40a6a9 new_ins_addr: 7fd3d0e271e9 orig_targ_addr: 40a6ab new_targ_addr: 7fd3d0e2775d    new instr:0x7fd3d0e271e9: jnz 0x7fd3d0e2775d
155:  orig_ins_addr: 40a6e9 new_ins_addr: 7fd3d0e2721e orig_targ_addr: 40a6eb new_targ_addr: 7fd3d0e27799    new instr:0x7fd3d0e2721e: jnz 0x7fd3d0e27799
170:  orig_ins_addr: 40a729 new_ins_addr: 7fd3d0e27253 orig_targ_addr: 40a72b new_targ_addr: 7fd3d0e277b7    new instr:0x7fd3d0e27253: jnz 0x7fd3d0e277b7
185:  orig_ins_addr: 40a769 new_ins_addr: 7fd3d0e27288 orig_targ_addr: 40a76b new_targ_addr: 7fd3d0e277c6    new instr:0x7fd3d0e27288: jnz 0x7fd3d0e277c6
203:  orig_ins_addr: 40a7b2 new_ins_addr: 7fd3d0e272c6 orig_targ_addr: 40a7b4 new_targ_addr: 7fd3d0e2778a    new instr:0x7fd3d0e272c6: jnz 0x7fd3d0e2778a
218:  orig_ins_addr: 40a7f5 new_ins_addr: 7fd3d0e272fe orig_targ_addr: 40a7f7 new_targ_addr: 7fd3d0e27668    new instr:0x7fd3d0e272fe: jnz 0x7fd3d0e27668
233:  orig_ins_addr: 40a836 new_ins_addr: 7fd3d0e27333 orig_targ_addr: 40a838 new_targ_addr: 7fd3d0e2777b    new instr:0x7fd3d0e27333: jnz 0x7fd3d0e2777b
248:  orig_ins_addr: 40a879 new_ins_addr: 7fd3d0e2736b orig_targ_addr: 40a87b new_targ_addr: 7fd3d0e27675    new instr:0x7fd3d0e2736b: jnz 0x7fd3d0e27675
263:  orig_ins_addr: 40a8ba new_ins_addr: 7fd3d0e273a0 orig_targ_addr: 40a8bc new_targ_addr: 7fd3d0e2776c    new instr:0x7fd3d0e273a0: jnz 0x7fd3d0e2776c
278:  orig_ins_addr: 40a8fd new_ins_addr: 7fd3d0e273d8 orig_targ_addr: 40a8ff new_targ_addr: 7fd3d0e27685    new instr:0x7fd3d0e273d8: jnz 0x7fd3d0e27685
293:  orig_ins_addr: 40a93e new_ins_addr: 7fd3d0e2740d orig_targ_addr: 40a940 new_targ_addr: 7fd3d0e277a8    new instr:0x7fd3d0e2740d: jnz 0x7fd3d0e277a8
308:  orig_ins_addr: 40a981 new_ins_addr: 7fd3d0e27445 orig_targ_addr: 40a983 new_targ_addr: 7fd3d0e276a4    new instr:0x7fd3d0e27445: jnz 0x7fd3d0e276a4
323:  orig_ins_addr: 40a9c2 new_ins_addr: 7fd3d0e2747a orig_targ_addr: 40a9c4 new_targ_addr: 7fd3d0e277f3    new instr:0x7fd3d0e2747a: jnz 0x7fd3d0e277f3
338:  orig_ins_addr: 40aa05 new_ins_addr: 7fd3d0e274b2 orig_targ_addr: 40aa07 new_targ_addr: 7fd3d0e276e1    new instr:0x7fd3d0e274b2: jnz 0x7fd3d0e276e1
353:  orig_ins_addr: 40aa46 new_ins_addr: 7fd3d0e274e7 orig_targ_addr: 40aa48 new_targ_addr: 7fd3d0e277e4    new instr:0x7fd3d0e274e7: jnz 0x7fd3d0e277e4
368:  orig_ins_addr: 40aa89 new_ins_addr: 7fd3d0e2751f orig_targ_addr: 40aa8b new_targ_addr: 7fd3d0e2771f    new instr:0x7fd3d0e2751f: jnz 0x7fd3d0e2771f
383:  orig_ins_addr: 40aaca new_ins_addr: 7fd3d0e27554 orig_targ_addr: 40aacc new_targ_addr: 7fd3d0e277d5    new instr:0x7fd3d0e27554: jnz 0x7fd3d0e277d5
398:  orig_ins_addr: 40ab0d new_ins_addr: 7fd3d0e2758c orig_targ_addr: 40ab0f new_targ_addr: 7fd3d0e2773e    new instr:0x7fd3d0e2758c: jnz 0x7fd3d0e2773e
413:  orig_ins_addr: 40ab4e new_ins_addr: 7fd3d0e275c1 orig_targ_addr: 40ab50 new_targ_addr: 7fd3d0e27802    new instr:0x7fd3d0e275c1: jnz 0x7fd3d0e27802
428:  orig_ins_addr: 40ab91 new_ins_addr: 7fd3d0e275f9 orig_targ_addr: 40ab93 new_targ_addr: 7fd3d0e2770f    new instr:0x7fd3d0e275f9: jnz 0x7fd3d0e2770f
433:  orig_ins_addr: 40abae new_ins_addr: 7fd3d0e2760d orig_targ_addr: 40abb0 new_targ_addr: 7fd3d0e27834    new instr:0x7fd3d0e2760d: jnb 0x7fd3d0e27834
436:  orig_ins_addr: 40abbc new_ins_addr: 7fd3d0e27619 orig_targ_addr: 40abbe new_targ_addr: 7fd3d0e27811    new instr:0x7fd3d0e27619: jnb 0x7fd3d0e27811
457:  orig_ins_addr: 40a7b2 new_ins_addr: 7fd3d0e2765d orig_targ_addr: 40a7c3 new_targ_addr: 7fd3d0e272cc    new instr:0x7fd3d0e2765d: jz 0x7fd3d0e272cc
458:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e27663 orig_targ_addr: 40a7b4 new_targ_addr: 7fd3d0e2778a    new instr:0x7fd3d0e27663: jmp 0x7fd3d0e2778a
468:  orig_ins_addr: 40a886 new_ins_addr: 7fd3d0e27680 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27680: jmp 0x7fd3d0e27673
472:  orig_ins_addr: 40a90a new_ins_addr: 7fd3d0e27690 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27690: jmp 0x7fd3d0e27673
476:  orig_ins_addr: 40a4b5 new_ins_addr: 7fd3d0e2769f orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2769f: jmp 0x7fd3d0e27673
480:  orig_ins_addr: 40a98e new_ins_addr: 7fd3d0e276af orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276af: jmp 0x7fd3d0e27673
484:  orig_ins_addr: 40a4f5 new_ins_addr: 7fd3d0e276be orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276be: jmp 0x7fd3d0e27673
488:  orig_ins_addr: 40a5b5 new_ins_addr: 7fd3d0e276cd orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276cd: jmp 0x7fd3d0e27673
492:  orig_ins_addr: 40a5f5 new_ins_addr: 7fd3d0e276dc orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276dc: jmp 0x7fd3d0e27673
496:  orig_ins_addr: 40aa12 new_ins_addr: 7fd3d0e276ec orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276ec: jmp 0x7fd3d0e27673
500:  orig_ins_addr: 40a635 new_ins_addr: 7fd3d0e276fb orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e276fb: jmp 0x7fd3d0e27673
504:  orig_ins_addr: 40a535 new_ins_addr: 7fd3d0e2770a orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2770a: jmp 0x7fd3d0e27673
508:  orig_ins_addr: 40ab9e new_ins_addr: 7fd3d0e2771a orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2771a: jmp 0x7fd3d0e27673
512:  orig_ins_addr: 40aa96 new_ins_addr: 7fd3d0e2772a orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2772a: jmp 0x7fd3d0e27673
516:  orig_ins_addr: 40a575 new_ins_addr: 7fd3d0e27739 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27739: jmp 0x7fd3d0e27673
520:  orig_ins_addr: 40ab1a new_ins_addr: 7fd3d0e27749 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27749: jmp 0x7fd3d0e27673
524:  orig_ins_addr: 40a675 new_ins_addr: 7fd3d0e27758 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27758: jmp 0x7fd3d0e27673
528:  orig_ins_addr: 40a6b5 new_ins_addr: 7fd3d0e27767 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27767: jmp 0x7fd3d0e27673
532:  orig_ins_addr: 40a8c6 new_ins_addr: 7fd3d0e27776 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27776: jmp 0x7fd3d0e27673
536:  orig_ins_addr: 40a842 new_ins_addr: 7fd3d0e27785 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27785: jmp 0x7fd3d0e27673
540:  orig_ins_addr: 40a7be new_ins_addr: 7fd3d0e27794 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e27794: jmp 0x7fd3d0e27673
544:  orig_ins_addr: 40a6f5 new_ins_addr: 7fd3d0e277a3 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277a3: jmp 0x7fd3d0e27673
548:  orig_ins_addr: 40a94a new_ins_addr: 7fd3d0e277b2 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277b2: jmp 0x7fd3d0e27673
552:  orig_ins_addr: 40a735 new_ins_addr: 7fd3d0e277c1 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277c1: jmp 0x7fd3d0e27673
556:  orig_ins_addr: 40a775 new_ins_addr: 7fd3d0e277d0 orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277d0: jmp 0x7fd3d0e27673
560:  orig_ins_addr: 40aad6 new_ins_addr: 7fd3d0e277df orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277df: jmp 0x7fd3d0e27673
564:  orig_ins_addr: 40aa52 new_ins_addr: 7fd3d0e277ee orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277ee: jmp 0x7fd3d0e27673
568:  orig_ins_addr: 40a9ce new_ins_addr: 7fd3d0e277fd orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e277fd: jmp 0x7fd3d0e27673
572:  orig_ins_addr: 40ab5a new_ins_addr: 7fd3d0e2780c orig_targ_addr: 40abe6 new_targ_addr: 7fd3d0e27673    new instr:0x7fd3d0e2780c: jmp 0x7fd3d0e27673
582:  orig_ins_addr: 40abdb new_ins_addr: 7fd3d0e2782e orig_targ_addr: 40a78b new_targ_addr: 7fd3d0e2729f    new instr:0x7fd3d0e2782e: jns 0x7fd3d0e2729f
587:  orig_ins_addr: 40abbc new_ins_addr: 7fd3d0e27840 orig_targ_addr: 40abc4 new_targ_addr: 7fd3d0e2761f    new instr:0x7fd3d0e27840: jb 0x7fd3d0e2761f
588:  orig_ins_addr: 40abbe new_ins_addr: 7fd3d0e27846 orig_targ_addr: ffffffff new_targ_addr: ffffffff    new instr:0x7fd3d0e27846: jmp qword ptr [rip-0x2b4e52c]
608:  orig_ins_addr: 40cb7c new_ins_addr: 7fd3d0e2789c orig_targ_addr: 40cac2 new_targ_addr: 40cac2    new instr:0x7fd3d0e2789c: call qword ptr [rip-0x2b4e082]
626:  orig_ins_addr: 40cbbf new_ins_addr: 7fd3d0e278e4 orig_targ_addr: 40cb9a new_targ_addr: 7fd3d0e278bf    new instr:0x7fd3d0e278e4: jle 0x7fd3d0e278bf
644:  orig_ins_addr: 40cbfa new_ins_addr: 7fd3d0e2792e orig_targ_addr: 40cbd8 new_targ_addr: 7fd3d0e2790c    new instr:0x7fd3d0e2792e: jnle 0x7fd3d0e2790c
660:  orig_ins_addr: 40cc28 new_ins_addr: 7fd3d0e27968 orig_targ_addr: 40cc2a new_targ_addr: 7fd3d0e27b78    new instr:0x7fd3d0e27968: js 0x7fd3d0e27b78
673:  orig_ins_addr: 40cc68 new_ins_addr: 7fd3d0e2799f orig_targ_addr: 40cc73 new_targ_addr: 7fd3d0e279c5    new instr:0x7fd3d0e2799f: jnz 0x7fd3d0e279c5
680:  orig_ins_addr: 40cdd2 new_ins_addr: 7fd3d0e279ba orig_targ_addr: 40cc08 new_targ_addr: 7fd3d0e27948    new instr:0x7fd3d0e279ba: jnle 0x7fd3d0e27948
681:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e279c0 orig_targ_addr: 40cdd8 new_targ_addr: 7fd3d0e27bbc    new instr:0x7fd3d0e279c0: jmp 0x7fd3d0e27bbc
683:  orig_ins_addr: 40cc77 new_ins_addr: 7fd3d0e279c9 orig_targ_addr: 40cd1e new_targ_addr: 7fd3d0e27a89    new instr:0x7fd3d0e279c9: jle 0x7fd3d0e27a89
688:  orig_ins_addr: 40cc89 new_ins_addr: 7fd3d0e279db orig_targ_addr: 40ccc3 new_targ_addr: 7fd3d0e27a41    new instr:0x7fd3d0e279db: jz 0x7fd3d0e27a41
703:  orig_ins_addr: 40ccfd new_ins_addr: 7fd3d0e27a1b orig_targ_addr: 40cd16 new_targ_addr: 7fd3d0e27a81    new instr:0x7fd3d0e27a1b: jle 0x7fd3d0e27a81
715:  orig_ins_addr: 40cc89 new_ins_addr: 7fd3d0e27a3b orig_targ_addr: 40cc8b new_targ_addr: 7fd3d0e279e1    new instr:0x7fd3d0e27a3b: jnz 0x7fd3d0e279e1
729:  orig_ins_addr: 40ccfd new_ins_addr: 7fd3d0e27a7b orig_targ_addr: 40ccff new_targ_addr: 7fd3d0e27a21    new instr:0x7fd3d0e27a7b: jnle 0x7fd3d0e27a21
740:  orig_ins_addr: 40cd56 new_ins_addr: 7fd3d0e27ab1 orig_targ_addr: 40cd58 new_targ_addr: 7fd3d0e27ace    new instr:0x7fd3d0e27ab1: jz 0x7fd3d0e27ace
746:  orig_ins_addr: 40cd56 new_ins_addr: 7fd3d0e27ac8 orig_targ_addr: 40cd45 new_targ_addr: 7fd3d0e27ab7    new instr:0x7fd3d0e27ac8: jnz 0x7fd3d0e27ab7
778:  orig_ins_addr: 40cdd2 new_ins_addr: 7fd3d0e27b48 orig_targ_addr: 40cc08 new_targ_addr: 7fd3d0e27948    new instr:0x7fd3d0e27b48: jnle 0x7fd3d0e27948
785:  orig_ins_addr: 40cd43 new_ins_addr: 7fd3d0e27b73 orig_targ_addr: 40cd53 new_targ_addr: 7fd3d0e27aae    new instr:0x7fd3d0e27b73: jmp 0x7fd3d0e27aae
801:  orig_ins_addr: 40cc68 new_ins_addr: 7fd3d0e27bb6 orig_targ_addr: 40cc73 new_targ_addr: 7fd3d0e279c5    new instr:0x7fd3d0e27bb6: jnz 0x7fd3d0e279c5
807:  orig_ins_addr: 40cdee new_ins_addr: 7fd3d0e27bcc orig_targ_addr: 40ce28 new_targ_addr: 7fd3d0e27c32    new instr:0x7fd3d0e27bcc: jz 0x7fd3d0e27c32
822:  orig_ins_addr: 40ce62 new_ins_addr: 7fd3d0e27c0c orig_targ_addr: 40ce7b new_targ_addr: 7fd3d0e27c72    new instr:0x7fd3d0e27c0c: jle 0x7fd3d0e27c72
834:  orig_ins_addr: 40cdee new_ins_addr: 7fd3d0e27c2c orig_targ_addr: 40cdf0 new_targ_addr: 7fd3d0e27bd2    new instr:0x7fd3d0e27c2c: jnz 0x7fd3d0e27bd2
848:  orig_ins_addr: 40ce62 new_ins_addr: 7fd3d0e27c6c orig_targ_addr: 40ce64 new_targ_addr: 7fd3d0e27c12    new instr:0x7fd3d0e27c6c: jnle 0x7fd3d0e27c12
911:  orig_ins_addr: 40c70e new_ins_addr: 7fd3d0e27d4f orig_targ_addr: 40c714 new_targ_addr: 7fd3d0e27d59    new instr:0x7fd3d0e27d4f: jz 0x7fd3d0e27d59
945:  orig_ins_addr: 40c789 new_ins_addr: 7fd3d0e27dbc orig_targ_addr: 40b826 new_targ_addr: 40b826    new instr:0x7fd3d0e27dbc: call qword ptr [rip-0x2b49162]
966:  orig_ins_addr: 40c86f new_ins_addr: 7fd3d0e27dff orig_targ_addr: 40c871 new_targ_addr: 7fd3d0e27e19    new instr:0x7fd3d0e27dff: jz 0x7fd3d0e27e19
971:  orig_ins_addr: 40c88b new_ins_addr: 7fd3d0e27e13 orig_targ_addr: 40c857 new_targ_addr: 7fd3d0e27de7    new instr:0x7fd3d0e27e13: jnle 0x7fd3d0e27de7
988:  orig_ins_addr: 40c729 new_ins_addr: 7fd3d0e27e44 orig_targ_addr: 40c732 new_targ_addr: 7fd3d0e27d6e    new instr:0x7fd3d0e27e44: jnle 0x7fd3d0e27d6e
989:  orig_ins_addr: 40c72b new_ins_addr: 7fd3d0e27e4a orig_targ_addr: ffffffff new_targ_addr: ffffffff    new instr:0x7fd3d0e27e4a: jmp qword ptr [rip-0x2b486f0]
1000:  orig_ins_addr: 40c9ce new_ins_addr: 7fd3d0e27e6c orig_targ_addr: 40c95d new_targ_addr: 7fd3d0e27ec7    new instr:0x7fd3d0e27e6c: jnle 0x7fd3d0e27ec7
1056:  orig_ins_addr: 40c9ce new_ins_addr: 7fd3d0e27f38 orig_targ_addr: 40c95d new_targ_addr: 7fd3d0e27ec7    new instr:0x7fd3d0e27f38: jnle 0x7fd3d0e27ec7
1057:  orig_ins_addr: 40c9d0 new_ins_addr: 7fd3d0e27f3e orig_targ_addr: 40c9d0 new_targ_addr: 7fd3d0e27e72    new instr:0x7fd3d0e27f3e: jmp 0x7fd3d0e27e72
1071:  orig_ins_addr: 405af4 new_ins_addr: 7fd3d0e27f6d orig_targ_addr: 405afa new_targ_addr: 7fd3d0e283a6    new instr:0x7fd3d0e27f6d: jz 0x7fd3d0e283a6
1086:  orig_ins_addr: 405676 new_ins_addr: 7fd3d0e27fa2 orig_targ_addr: 405821 new_targ_addr: 7fd3d0e28163    new instr:0x7fd3d0e27fa2: jnz 0x7fd3d0e28163
1087:  orig_ins_addr: 40567c new_ins_addr: 7fd3d0e27fa8 orig_targ_addr: 40567f new_targ_addr: 7fd3d0e27fae    new instr:0x7fd3d0e27fa8: jmp 0x7fd3d0e27fae
1094:  orig_ins_addr: 40568f new_ins_addr: 7fd3d0e27fbe orig_targ_addr: 4059df new_targ_addr: 7fd3d0e28338    new instr:0x7fd3d0e27fbe: jnl 0x7fd3d0e28338
1099:  orig_ins_addr: 4056a1 new_ins_addr: 7fd3d0e27fd0 orig_targ_addr: 4059e2 new_targ_addr: 7fd3d0e2833e    new instr:0x7fd3d0e27fd0: jz 0x7fd3d0e2833e
1110:  orig_ins_addr: 4056c8 new_ins_addr: 7fd3d0e27ff7 orig_targ_addr: 40576d new_targ_addr: 7fd3d0e2809f    new instr:0x7fd3d0e27ff7: jz 0x7fd3d0e2809f
1114:  orig_ins_addr: 4056d8 new_ins_addr: 7fd3d0e28007 orig_targ_addr: 40576d new_targ_addr: 7fd3d0e2809f    new instr:0x7fd3d0e28007: jnz 0x7fd3d0e2809f
1154:  orig_ins_addr: 40576b new_ins_addr: 7fd3d0e2809a orig_targ_addr: 4057c9 new_targ_addr: 7fd3d0e2810b    new instr:0x7fd3d0e2809a: jmp 0x7fd3d0e2810b
1158:  orig_ins_addr: 405777 new_ins_addr: 7fd3d0e280a9 orig_targ_addr: 405787 new_targ_addr: 7fd3d0e280c1    new instr:0x7fd3d0e280a9: jnz 0x7fd3d0e280c1
1162:  orig_ins_addr: 405785 new_ins_addr: 7fd3d0e280bb orig_targ_addr: 4057b8 new_targ_addr: 7fd3d0e280fa    new instr:0x7fd3d0e280bb: jnz 0x7fd3d0e280fa
1166:  orig_ins_addr: 405793 new_ins_addr: 7fd3d0e280cd orig_targ_addr: 4057a1 new_targ_addr: 7fd3d0e280e0    new instr:0x7fd3d0e280cd: jnbe 0x7fd3d0e280e0
1169:  orig_ins_addr: 40579c new_ins_addr: 7fd3d0e280da orig_targ_addr: 405388 new_targ_addr: 405388    new instr:0x7fd3d0e280da: call qword ptr [rip-0x2b45c80]
1175:  orig_ins_addr: 4057b6 new_ins_addr: 7fd3d0e280f5 orig_targ_addr: 4057c9 new_targ_addr: 7fd3d0e2810b    new instr:0x7fd3d0e280f5: jmp 0x7fd3d0e2810b
1200:  orig_ins_addr: 405806 new_ins_addr: 7fd3d0e28148 orig_targ_addr: 40567e new_targ_addr: 7fd3d0e27fad    new instr:0x7fd3d0e28148: jnz 0x7fd3d0e27fad
1206:  orig_ins_addr: 40581c new_ins_addr: 7fd3d0e2815e orig_targ_addr: 40567e new_targ_addr: 7fd3d0e27fad    new instr:0x7fd3d0e2815e: jmp 0x7fd3d0e27fad
1212:  orig_ins_addr: 405831 new_ins_addr: 7fd3d0e28173 orig_targ_addr: 4059e5 new_targ_addr: 7fd3d0e28344    new instr:0x7fd3d0e28173: jnl 0x7fd3d0e28344
1217:  orig_ins_addr: 405843 new_ins_addr: 7fd3d0e28185 orig_targ_addr: 4059e8 new_targ_addr: 7fd3d0e2834a    new instr:0x7fd3d0e28185: jz 0x7fd3d0e2834a
1221:  orig_ins_addr: 405852 new_ins_addr: 7fd3d0e28194 orig_targ_addr: 4059eb new_targ_addr: 7fd3d0e28350    new instr:0x7fd3d0e28194: jz 0x7fd3d0e28350
1232:  orig_ins_addr: 405879 new_ins_addr: 7fd3d0e281bb orig_targ_addr: 40591e new_targ_addr: 7fd3d0e28263    new instr:0x7fd3d0e281bb: jz 0x7fd3d0e28263
1236:  orig_ins_addr: 405889 new_ins_addr: 7fd3d0e281cb orig_targ_addr: 40591e new_targ_addr: 7fd3d0e28263    new instr:0x7fd3d0e281cb: jnz 0x7fd3d0e28263
1276:  orig_ins_addr: 40591c new_ins_addr: 7fd3d0e2825e orig_targ_addr: 40597a new_targ_addr: 7fd3d0e282cf    new instr:0x7fd3d0e2825e: jmp 0x7fd3d0e282cf
1280:  orig_ins_addr: 405928 new_ins_addr: 7fd3d0e2826d orig_targ_addr: 405938 new_targ_addr: 7fd3d0e28285    new instr:0x7fd3d0e2826d: jnz 0x7fd3d0e28285
1284:  orig_ins_addr: 405936 new_ins_addr: 7fd3d0e2827f orig_targ_addr: 405969 new_targ_addr: 7fd3d0e282be    new instr:0x7fd3d0e2827f: jnz 0x7fd3d0e282be
1288:  orig_ins_addr: 405944 new_ins_addr: 7fd3d0e28291 orig_targ_addr: 405952 new_targ_addr: 7fd3d0e282a4    new instr:0x7fd3d0e28291: jnbe 0x7fd3d0e282a4
1291:  orig_ins_addr: 40594d new_ins_addr: 7fd3d0e2829e orig_targ_addr: 405388 new_targ_addr: 405388    new instr:0x7fd3d0e2829e: call qword ptr [rip-0x2b43fc4]
1297:  orig_ins_addr: 405967 new_ins_addr: 7fd3d0e282b9 orig_targ_addr: 40597a new_targ_addr: 7fd3d0e282cf    new instr:0x7fd3d0e282b9: jmp 0x7fd3d0e282cf
1322:  orig_ins_addr: 4059b7 new_ins_addr: 7fd3d0e2830c orig_targ_addr: 4059c9 new_targ_addr: 7fd3d0e28322    new instr:0x7fd3d0e2830c: jnz 0x7fd3d0e28322
1333:  orig_ins_addr: 4059da new_ins_addr: 7fd3d0e28333 orig_targ_addr: 405821 new_targ_addr: 7fd3d0e28163    new instr:0x7fd3d0e28333: jmp 0x7fd3d0e28163
1335:  orig_ins_addr: 4059e0 new_ins_addr: 7fd3d0e28339 orig_targ_addr: 4059ec new_targ_addr: 7fd3d0e28351    new instr:0x7fd3d0e28339: jmp 0x7fd3d0e28351
1337:  orig_ins_addr: 4059e3 new_ins_addr: 7fd3d0e2833f orig_targ_addr: 4059ec new_targ_addr: 7fd3d0e28351    new instr:0x7fd3d0e2833f: jmp 0x7fd3d0e28351
1339:  orig_ins_addr: 4059e6 new_ins_addr: 7fd3d0e28345 orig_targ_addr: 4059ec new_targ_addr: 7fd3d0e28351    new instr:0x7fd3d0e28345: jmp 0x7fd3d0e28351
1341:  orig_ins_addr: 4059e9 new_ins_addr: 7fd3d0e2834b orig_targ_addr: 4059ec new_targ_addr: 7fd3d0e28351    new instr:0x7fd3d0e2834b: jmp 0x7fd3d0e28351
1346:  orig_ins_addr: 405ba3 new_ins_addr: 7fd3d0e2835a orig_targ_addr: 40565c new_targ_addr: 40565c    new instr:0x7fd3d0e2835a: call qword ptr [rip-0x2b432c0]
1351:  orig_ins_addr: 405bb5 new_ins_addr: 7fd3d0e2836d orig_targ_addr: 405bb7 new_targ_addr: 7fd3d0e2843e    new instr:0x7fd3d0e2836d: jnz 0x7fd3d0e2843e
1357:  orig_ins_addr: 405c0c new_ins_addr: 7fd3d0e28383 orig_targ_addr: 405c0e new_targ_addr: 7fd3d0e28412    new instr:0x7fd3d0e28383: jnl 0x7fd3d0e28412
1364:  orig_ins_addr: 405c4e new_ins_addr: 7fd3d0e28399 orig_targ_addr: 405c50 new_targ_addr: 7fd3d0e283d2    new instr:0x7fd3d0e28399: jz 0x7fd3d0e283d2
1371:  orig_ins_addr: 405b01 new_ins_addr: 7fd3d0e283ad orig_targ_addr: 4059f2 new_targ_addr: 4059f2    new instr:0x7fd3d0e283ad: call qword ptr [rip-0x2b42cd3]
1378:  orig_ins_addr: 405b19 new_ins_addr: 7fd3d0e283c6 orig_targ_addr: 405b1f new_targ_addr: 7fd3d0e283db    new instr:0x7fd3d0e283c6: jnl 0x7fd3d0e283db
1380:  orig_ins_addr: 405c44 new_ins_addr: 7fd3d0e283cd orig_targ_addr: 405c4a new_targ_addr: 7fd3d0e28395    new instr:0x7fd3d0e283cd: jmp 0x7fd3d0e28395
1382:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e283d6 orig_targ_addr: 405c56 new_targ_addr: 7fd3d0e2839f    new instr:0x7fd3d0e283d6: jmp 0x7fd3d0e2839f
1386:  orig_ins_addr: 405b29 new_ins_addr: 7fd3d0e283e5 orig_targ_addr: 405b2b new_targ_addr: 7fd3d0e28481    new instr:0x7fd3d0e283e5: jz 0x7fd3d0e28481
1389:  orig_ins_addr: 405b51 new_ins_addr: 7fd3d0e283f2 orig_targ_addr: 404f65 new_targ_addr: 7fd3d0e285b1    new instr:0x7fd3d0e283f2: call 0x7fd3d0e285b1
1395:  orig_ins_addr: 405b6b new_ins_addr: 7fd3d0e2840c orig_targ_addr: 405b8c new_targ_addr: 7fd3d0e27f73    new instr:0x7fd3d0e2840c: jnz 0x7fd3d0e27f73
1399:  orig_ins_addr: 405c1a new_ins_addr: 7fd3d0e2841e orig_targ_addr: 41216d new_targ_addr: 7fd3d0e28632    new instr:0x7fd3d0e2841e: call 0x7fd3d0e28632
1407:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e28439 orig_targ_addr: 405afa new_targ_addr: 7fd3d0e283a6    new instr:0x7fd3d0e28439: jmp 0x7fd3d0e283a6
1413:  orig_ins_addr: 405bc9 new_ins_addr: 7fd3d0e2844e orig_targ_addr: 405628 new_targ_addr: 7fd3d0e29171    new instr:0x7fd3d0e2844e: call 0x7fd3d0e29171
1422:  orig_ins_addr: 405be7 new_ins_addr: 7fd3d0e2846c orig_targ_addr: 41216d new_targ_addr: 7fd3d0e28632    new instr:0x7fd3d0e2846c: call 0x7fd3d0e28632
1425:  orig_ins_addr: 405bf7 new_ins_addr: 7fd3d0e2847c orig_targ_addr: 405ae9 new_targ_addr: 7fd3d0e2842e    new instr:0x7fd3d0e2847c: jmp 0x7fd3d0e2842e
1431:  orig_ins_addr: 405b3d new_ins_addr: 7fd3d0e28491 orig_targ_addr: 404ffc new_targ_addr: 7fd3d0e28f92    new instr:0x7fd3d0e28491: call 0x7fd3d0e28f92
1435:  orig_ins_addr: 405c47 new_ins_addr: 7fd3d0e28499 orig_targ_addr: 405c4a new_targ_addr: 7fd3d0e28395    new instr:0x7fd3d0e28499: jmp 0x7fd3d0e28395
1436:  orig_ins_addr: 405c47 new_ins_addr: 7fd3d0e2849e orig_targ_addr: 405c4a new_targ_addr: 7fd3d0e28395    new instr:0x7fd3d0e2849e: jmp 0x7fd3d0e28395
1456:  orig_ins_addr: 405cc2 new_ins_addr: 7fd3d0e284dd orig_targ_addr: 405cc4 new_targ_addr: 7fd3d0e28507    new instr:0x7fd3d0e284dd: jnz 0x7fd3d0e28507
1458:  orig_ins_addr: 405cf8 new_ins_addr: 7fd3d0e284e7 orig_targ_addr: 405d20 new_targ_addr: 7fd3d0e28586    new instr:0x7fd3d0e284e7: jnz 0x7fd3d0e28586
1461:  orig_ins_addr: 405d01 new_ins_addr: 7fd3d0e284f4 orig_targ_addr: 405ac7 new_targ_addr: 7fd3d0e27f43    new instr:0x7fd3d0e284f4: call 0x7fd3d0e27f43
1485:  orig_ins_addr: 405e2f new_ins_addr: 7fd3d0e2852e orig_targ_addr: 405ac7 new_targ_addr: 7fd3d0e27f43    new instr:0x7fd3d0e2852e: call 0x7fd3d0e27f43
1494:  orig_ins_addr: 405e56 new_ins_addr: 7fd3d0e2854a orig_targ_addr: 404ffc new_targ_addr: 7fd3d0e28f92    new instr:0x7fd3d0e2854a: call 0x7fd3d0e28f92
1501:  orig_ins_addr: 405e6f new_ins_addr: 7fd3d0e28561 orig_targ_addr: 405e78 new_targ_addr: 7fd3d0e28571    new instr:0x7fd3d0e28561: jnl 0x7fd3d0e28571
1503:  orig_ins_addr: 405e76 new_ins_addr: 7fd3d0e2856c orig_targ_addr: 405e8f new_targ_addr: 7fd3d0e28505    new instr:0x7fd3d0e2856c: jmp 0x7fd3d0e28505
1507:  orig_ins_addr: 405e88 new_ins_addr: 7fd3d0e28581 orig_targ_addr: 405e8f new_targ_addr: 7fd3d0e28505    new instr:0x7fd3d0e28581: jmp 0x7fd3d0e28505
1517:  orig_ins_addr: 405d63 new_ins_addr: 7fd3d0e285a7 orig_targ_addr: 405cb8 new_targ_addr: 7fd3d0e284d3    new instr:0x7fd3d0e285a7: jmp 0x7fd3d0e284d3
1518:  orig_ins_addr: 405d63 new_ins_addr: 7fd3d0e285ac orig_targ_addr: 405cb8 new_targ_addr: 7fd3d0e284d3    new instr:0x7fd3d0e285ac: jmp 0x7fd3d0e284d3
1540:  orig_ins_addr: 404fc1 new_ins_addr: 7fd3d0e28612 orig_targ_addr: 404fa5 new_targ_addr: 7fd3d0e285f6    new instr:0x7fd3d0e28612: jle 0x7fd3d0e285f6
1580:  orig_ins_addr: 4121ea new_ins_addr: 7fd3d0e286a9 orig_targ_addr: 4121f7 new_targ_addr: 7fd3d0e286ba    new instr:0x7fd3d0e286a9: jle 0x7fd3d0e286ba
1589:  orig_ins_addr: 412251 new_ins_addr: 7fd3d0e286ce orig_targ_addr: 40c679 new_targ_addr: 7fd3d0e27ce6    new instr:0x7fd3d0e286ce: call 0x7fd3d0e27ce6
1601:  orig_ins_addr: 41227f new_ins_addr: 7fd3d0e286fc orig_targ_addr: 412281 new_targ_addr: 7fd3d0e287f1    new instr:0x7fd3d0e286fc: jz 0x7fd3d0e287f1
1608:  orig_ins_addr: 4122f9 new_ins_addr: 7fd3d0e28717 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e28717: call 0x7fd3d0e288f4
1612:  orig_ins_addr: 41230a new_ins_addr: 7fd3d0e28728 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e28728: call 0x7fd3d0e288f4
1616:  orig_ins_addr: 41231b new_ins_addr: 7fd3d0e28739 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e28739: call 0x7fd3d0e288f4
1620:  orig_ins_addr: 41232c new_ins_addr: 7fd3d0e2874a orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e2874a: call 0x7fd3d0e288f4
1624:  orig_ins_addr: 41233d new_ins_addr: 7fd3d0e2875b orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e2875b: call 0x7fd3d0e288f4
1628:  orig_ins_addr: 41234e new_ins_addr: 7fd3d0e2876c orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e2876c: call 0x7fd3d0e288f4
1634:  orig_ins_addr: 412366 new_ins_addr: 7fd3d0e28784 orig_targ_addr: 40ca25 new_targ_addr: 7fd3d0e2891d    new instr:0x7fd3d0e28784: call 0x7fd3d0e2891d
1639:  orig_ins_addr: 41237c new_ins_addr: 7fd3d0e2879a orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e2879a: call 0x7fd3d0e27e50
1646:  orig_ins_addr: 412396 new_ins_addr: 7fd3d0e287b4 orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e287b4: call 0x7fd3d0e27e50
1649:  orig_ins_addr: 4123a2 new_ins_addr: 7fd3d0e287c0 orig_targ_addr: 40cb2c new_targ_addr: 7fd3d0e2784c    new instr:0x7fd3d0e287c0: call 0x7fd3d0e2784c
1652:  orig_ins_addr: 4123ae new_ins_addr: 7fd3d0e287cc orig_targ_addr: 40ceee new_targ_addr: 40ceee    new instr:0x7fd3d0e287cc: call qword ptr [rip-0x2b3eab2]
1654:  orig_ins_addr: 4123b7 new_ins_addr: 7fd3d0e287d6 orig_targ_addr: 4123bd new_targ_addr: 7fd3d0e28853    new instr:0x7fd3d0e287d6: jnz 0x7fd3d0e28853
1660:  orig_ins_addr: 412204 new_ins_addr: 7fd3d0e287eb orig_targ_addr: 41224a new_targ_addr: 7fd3d0e286c7    new instr:0x7fd3d0e287eb: jle 0x7fd3d0e286c7
1663:  orig_ins_addr: 412288 new_ins_addr: 7fd3d0e287f8 orig_targ_addr: 40c8a8 new_targ_addr: 7fd3d0e29229    new instr:0x7fd3d0e287f8: call 0x7fd3d0e29229
1667:  orig_ins_addr: 412299 new_ins_addr: 7fd3d0e28809 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e28809: call 0x7fd3d0e288f4
1671:  orig_ins_addr: 4122aa new_ins_addr: 7fd3d0e2881a orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e2881a: call 0x7fd3d0e288f4
1675:  orig_ins_addr: 4122bb new_ins_addr: 7fd3d0e2882b orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e2882b: call 0x7fd3d0e288f4
1683:  orig_ins_addr: 4122d9 new_ins_addr: 7fd3d0e28849 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e28849: call 0x7fd3d0e288f4
1684:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e2884e orig_targ_addr: 4122de new_targ_addr: 7fd3d0e28702    new instr:0x7fd3d0e2884e: jmp 0x7fd3d0e28702
1688:  orig_ins_addr: 4123c9 new_ins_addr: 7fd3d0e2885f orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e2885f: call 0x7fd3d0e288f4
1692:  orig_ins_addr: 4123da new_ins_addr: 7fd3d0e28870 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e28870: call 0x7fd3d0e288f4
1696:  orig_ins_addr: 4123eb new_ins_addr: 7fd3d0e28881 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e28881: call 0x7fd3d0e288f4
1700:  orig_ins_addr: 4123fc new_ins_addr: 7fd3d0e28892 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e28892: call 0x7fd3d0e288f4
1704:  orig_ins_addr: 41240d new_ins_addr: 7fd3d0e288a3 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e288a3: call 0x7fd3d0e288f4
1708:  orig_ins_addr: 41241e new_ins_addr: 7fd3d0e288b4 orig_targ_addr: 40ca9a new_targ_addr: 7fd3d0e288f4    new instr:0x7fd3d0e288b4: call 0x7fd3d0e288f4
1714:  orig_ins_addr: 412436 new_ins_addr: 7fd3d0e288cc orig_targ_addr: 40ca25 new_targ_addr: 7fd3d0e2891d    new instr:0x7fd3d0e288cc: call 0x7fd3d0e2891d
1721:  orig_ins_addr: 412474 new_ins_addr: 7fd3d0e288e5 orig_targ_addr: 40c8ce new_targ_addr: 7fd3d0e28ed6    new instr:0x7fd3d0e288e5: call 0x7fd3d0e28ed6
1722:  orig_ins_addr: 412474 new_ins_addr: 7fd3d0e288ea orig_targ_addr: 40c8ce new_targ_addr: 7fd3d0e28ed6    new instr:0x7fd3d0e288ea: call 0x7fd3d0e28ed6
1723:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e288ef orig_targ_addr: 412479 new_targ_addr: 7fd3d0e287dc    new instr:0x7fd3d0e288ef: jmp 0x7fd3d0e287dc
1734:  orig_ins_addr: 40cabb new_ins_addr: 7fd3d0e28915 orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e28915: call 0x7fd3d0e27e50
1749:  orig_ins_addr: 40ca48 new_ins_addr: 7fd3d0e28940 orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e28940: call 0x7fd3d0e27e50
1756:  orig_ins_addr: 40ca62 new_ins_addr: 7fd3d0e2895a orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e2895a: call 0x7fd3d0e27e50
1763:  orig_ins_addr: 40ca7c new_ins_addr: 7fd3d0e28974 orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e28974: call 0x7fd3d0e27e50
1769:  orig_ins_addr: 40ca93 new_ins_addr: 7fd3d0e2898b orig_targ_addr: 40c94c new_targ_addr: 7fd3d0e27e50    new instr:0x7fd3d0e2898b: call 0x7fd3d0e27e50
1793:  orig_ins_addr: 4081cc new_ins_addr: 7fd3d0e289d6 orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e289d6: call qword ptr [rip-0x2b3c97c]
1823:  orig_ins_addr: 40829a new_ins_addr: 7fd3d0e28a5d orig_targ_addr: 405c64 new_targ_addr: 7fd3d0e284a3    new instr:0x7fd3d0e28a5d: call 0x7fd3d0e284a3
1826:  orig_ins_addr: 4082a6 new_ins_addr: 7fd3d0e28a69 orig_targ_addr: 4082a8 new_targ_addr: 7fd3d0e28bef    new instr:0x7fd3d0e28a69: jnz 0x7fd3d0e28bef
1846:  orig_ins_addr: 408327 new_ins_addr: 7fd3d0e28ab5 orig_targ_addr: 4012d0 new_targ_addr: 4012d0    new instr:0x7fd3d0e28ab5: call qword ptr [rip-0x2b3bd1b]
1853:  orig_ins_addr: 408341 new_ins_addr: 7fd3d0e28ace orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e28ace: call qword ptr [rip-0x2b3bb74]
1857:  orig_ins_addr: 40837d new_ins_addr: 7fd3d0e28ada orig_targ_addr: 408383 new_targ_addr: 7fd3d0e28b1e    new instr:0x7fd3d0e28ada: jz 0x7fd3d0e28b1e
1869:  orig_ins_addr: 40829a new_ins_addr: 7fd3d0e28b14 orig_targ_addr: 405c64 new_targ_addr: 7fd3d0e284a3    new instr:0x7fd3d0e28b14: call 0x7fd3d0e284a3
1870:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e28b19 orig_targ_addr: 40829f new_targ_addr: 7fd3d0e28a62    new instr:0x7fd3d0e28b19: jmp 0x7fd3d0e28a62
1876:  orig_ins_addr: 408394 new_ins_addr: 7fd3d0e28b2d orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e28b2d: call qword ptr [rip-0x2b3b613]
1881:  orig_ins_addr: 4083a7 new_ins_addr: 7fd3d0e28b3f orig_targ_addr: 401230 new_targ_addr: 401230    new instr:0x7fd3d0e28b3f: call qword ptr [rip-0x2b3b4e5]
1885:  orig_ins_addr: 4083b6 new_ins_addr: 7fd3d0e28b4f orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e28b4f: call qword ptr [rip-0x2b3b3f5]
1917:  orig_ins_addr: 40847d new_ins_addr: 7fd3d0e28bda orig_targ_addr: 405e91 new_targ_addr: 405e91    new instr:0x7fd3d0e28bda: call qword ptr [rip-0x2b3ac80]
1920:  orig_ins_addr: 408489 new_ins_addr: 7fd3d0e28be7 orig_targ_addr: 401080 new_targ_addr: 401080    new instr:0x7fd3d0e28be7: call qword ptr [rip-0x2b3abcd]
1925:  orig_ins_addr: 4082ac new_ins_addr: 7fd3d0e28bf3 orig_targ_addr: 4082db new_targ_addr: 7fd3d0e28a6f    new instr:0x7fd3d0e28bf3: jz 0x7fd3d0e28a6f
1926:  orig_ins_addr: 4082ae new_ins_addr: 7fd3d0e28bf9 orig_targ_addr: ffffffff new_targ_addr: ffffffff    new instr:0x7fd3d0e28bf9: jmp qword ptr [rip-0x2b3aa5f]
1933:  orig_ins_addr: 403ec5 new_ins_addr: 7fd3d0e28c14 orig_targ_addr: 403f09 new_targ_addr: 7fd3d0e28c5e    new instr:0x7fd3d0e28c14: jnz 0x7fd3d0e28c5e
1934:  orig_ins_addr: 403ec7 new_ins_addr: 7fd3d0e28c1a orig_targ_addr: 403e7d new_targ_addr: 7fd3d0e2901f    new instr:0x7fd3d0e28c1a: call 0x7fd3d0e2901f
1938:  orig_ins_addr: 403ed7 new_ins_addr: 7fd3d0e28c2a orig_targ_addr: 401150 new_targ_addr: 401150    new instr:0x7fd3d0e28c2a: call qword ptr [rip-0x2b3a790]
1941:  orig_ins_addr: 403ee1 new_ins_addr: 7fd3d0e28c35 orig_targ_addr: 403e4f new_targ_addr: 7fd3d0e28d6f    new instr:0x7fd3d0e28c35: call 0x7fd3d0e28d6f
1949:  orig_ins_addr: 403efe new_ins_addr: 7fd3d0e28c52 orig_targ_addr: 4010d0 new_targ_addr: 4010d0    new instr:0x7fd3d0e28c52: call qword ptr [rip-0x2b3a4f8]
1960:  orig_ins_addr: 403f2a new_ins_addr: 7fd3d0e28c71 orig_targ_addr: 403f13 new_targ_addr: 7fd3d0e28c9c    new instr:0x7fd3d0e28c71: jnz 0x7fd3d0e28c9c
1966:  orig_ins_addr: 403f3e new_ins_addr: 7fd3d0e28c89 orig_targ_addr: 403eb0 new_targ_addr: 7fd3d0e28bff    new instr:0x7fd3d0e28c89: call 0x7fd3d0e28bff
1978:  orig_ins_addr: 403f2a new_ins_addr: 7fd3d0e28cb3 orig_targ_addr: 403f13 new_targ_addr: 7fd3d0e28c9c    new instr:0x7fd3d0e28cb3: jnz 0x7fd3d0e28c9c
1979:  orig_ins_addr: 403f2c new_ins_addr: 7fd3d0e28cb9 orig_targ_addr: 403f2c new_targ_addr: 7fd3d0e28c77    new instr:0x7fd3d0e28cb9: jmp 0x7fd3d0e28c77
1987:  orig_ins_addr: 402a9a new_ins_addr: 7fd3d0e28cd5 orig_targ_addr: 401150 new_targ_addr: 401150    new instr:0x7fd3d0e28cd5: call qword ptr [rip-0x2b39bfb]
1991:  orig_ins_addr: 402aa9 new_ins_addr: 7fd3d0e28ce5 orig_targ_addr: 401150 new_targ_addr: 401150    new instr:0x7fd3d0e28ce5: call qword ptr [rip-0x2b39b0b]
2006:  orig_ins_addr: 402adf new_ins_addr: 7fd3d0e28d13 orig_targ_addr: 4011c0 new_targ_addr: 4011c0    new instr:0x7fd3d0e28d13: call qword ptr [rip-0x2b39779]
2020:  orig_ins_addr: 402808 new_ins_addr: 7fd3d0e28d3a orig_targ_addr: 401150 new_targ_addr: 401150    new instr:0x7fd3d0e28d3a: call qword ptr [rip-0x2b39420]
2028:  orig_ins_addr: 402861 new_ins_addr: 7fd3d0e28d59 orig_targ_addr: 4010a0 new_targ_addr: 4010a0    new instr:0x7fd3d0e28d59: call qword ptr [rip-0x2b3923f]
2042:  orig_ins_addr: 403e62 new_ins_addr: 7fd3d0e28d82 orig_targ_addr: 401220 new_targ_addr: 401220    new instr:0x7fd3d0e28d82: call qword ptr [rip-0x2b38ee8]
2074:  orig_ins_addr: 407ca7 new_ins_addr: 7fd3d0e28df5 orig_targ_addr: 4010f0 new_targ_addr: 4010f0    new instr:0x7fd3d0e28df5: call qword ptr [rip-0x2b3875b]
2078:  orig_ins_addr: 407ce5 new_ins_addr: 7fd3d0e28e02 orig_targ_addr: 401220 new_targ_addr: 401220    new instr:0x7fd3d0e28e02: call qword ptr [rip-0x2b38668]
2111:  orig_ins_addr: 407dca new_ins_addr: 7fd3d0e28ea9 orig_targ_addr: 40502b new_targ_addr: 40502b    new instr:0x7fd3d0e28ea9: call qword ptr [rip-0x2b37ecf]
2160:  orig_ins_addr: 40c948 new_ins_addr: 7fd3d0e28f5a orig_targ_addr: 40c8d8 new_targ_addr: 7fd3d0e28eea    new instr:0x7fd3d0e28f5a: jnle 0x7fd3d0e28eea
2174:  orig_ins_addr: 404f31 new_ins_addr: 7fd3d0e28f81 orig_targ_addr: 401220 new_targ_addr: 401220    new instr:0x7fd3d0e28f81: call qword ptr [rip-0x2b36fe7]
2199:  orig_ins_addr: 404f5e new_ins_addr: 7fd3d0e28fca orig_targ_addr: 401080 new_targ_addr: 401080    new instr:0x7fd3d0e28fca: call qword ptr [rip-0x2b369f0]
2210:  orig_ins_addr: 40288d new_ins_addr: 7fd3d0e28feb orig_targ_addr: 401290 new_targ_addr: 401290    new instr:0x7fd3d0e28feb: call qword ptr [rip-0x2b36751]
2216:  orig_ins_addr: 4028a6 new_ins_addr: 7fd3d0e29005 orig_targ_addr: 4028b4 new_targ_addr: 7fd3d0e29018    new instr:0x7fd3d0e29005: jz 0x7fd3d0e29018
2219:  orig_ins_addr: 4028af new_ins_addr: 7fd3d0e29012 orig_targ_addr: 401120 new_targ_addr: 401120    new instr:0x7fd3d0e29012: call qword ptr [rip-0x2b36538]
2228:  orig_ins_addr: 403e8a new_ins_addr: 7fd3d0e2902c orig_targ_addr: 403e4f new_targ_addr: 7fd3d0e28d6f    new instr:0x7fd3d0e2902c: call 0x7fd3d0e28d6f
2250:  orig_ins_addr: 402a21 new_ins_addr: 7fd3d0e29087 orig_targ_addr: 401270 new_targ_addr: 401270    new instr:0x7fd3d0e29087: call qword ptr [rip-0x2b35ded]
2258:  orig_ins_addr: 402a42 new_ins_addr: 7fd3d0e290a2 orig_targ_addr: 401070 new_targ_addr: 401070    new instr:0x7fd3d0e290a2: call qword ptr [rip-0x2b35c08]
2267:  orig_ins_addr: 402a6a new_ins_addr: 7fd3d0e290c6 orig_targ_addr: 401250 new_targ_addr: 401250    new instr:0x7fd3d0e290c6: call qword ptr [rip-0x2b359ec]
2279:  orig_ins_addr: 403f68 new_ins_addr: 7fd3d0e290e9 orig_targ_addr: 401060 new_targ_addr: 401060    new instr:0x7fd3d0e290e9: call qword ptr [rip-0x2b3570f]
2296:  orig_ins_addr: 4028e0 new_ins_addr: 7fd3d0e29121 orig_targ_addr: 401280 new_targ_addr: 401280    new instr:0x7fd3d0e29121: call qword ptr [rip-0x2b35307]
2304:  orig_ins_addr: 402901 new_ins_addr: 7fd3d0e2913a orig_targ_addr: 401260 new_targ_addr: 401260    new instr:0x7fd3d0e2913a: call qword ptr [rip-0x2b35120]
2331:  orig_ins_addr: 405649 new_ins_addr: 7fd3d0e29190 orig_targ_addr: 405388 new_targ_addr: 405388    new instr:0x7fd3d0e29190: call qword ptr [rip-0x2b34ab6]
2334:  orig_ins_addr: 405655 new_ins_addr: 7fd3d0e2919d orig_targ_addr: 404fdc new_targ_addr: 7fd3d0e29150    new instr:0x7fd3d0e2919d: call 0x7fd3d0e29150
2345:  orig_ins_addr: 4029db new_ins_addr: 7fd3d0e291bd orig_targ_addr: 418610 new_targ_addr: 418610    new instr:0x7fd3d0e291bd: call qword ptr [rip-0x2b34763]
2375:  orig_ins_addr: 401334 new_ins_addr: 7fd3d0e29217 orig_targ_addr: 4011b0 new_targ_addr: 4011b0    new instr:0x7fd3d0e29217: call qword ptr [rip-0x2b3403d]
2376:  orig_ins_addr: 401334 new_ins_addr: 7fd3d0e2921d orig_targ_addr: 4011b0 new_targ_addr: 4011b0    new instr:0x7fd3d0e2921d: call qword ptr [rip-0x2b34003]
2377:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fd3d0e29223 orig_targ_addr: 401339 new_targ_addr: 401339    new instr:0x7fd3d0e29223: jmp qword ptr [rip-0x2b33fc9]
2421:  orig_ins_addr: 40103c new_ins_addr: 7fd3d0e2929d orig_targ_addr: 40133c new_targ_addr: 40133c    new instr:0x7fd3d0e2929d: call qword ptr [rip-0x2b33543]
after fix instructions displacements
after write all new instructions to memory tc
Translation Cache dump:
0x7fd3d0e27000: push rbp
0x7fd3d0e27001: mov rbp, rsp
0x7fd3d0e27004: mov dword ptr [rbp-0x14], edi
0x7fd3d0e27007: mov dword ptr [rbp-0x18], esi
0x7fd3d0e2700a: mov qword ptr [rbp-0x20], rdx
0x7fd3d0e2700e: mov qword ptr [rbp-0x28], rcx
0x7fd3d0e27012: mov dword ptr [rbp-0x2c], r8d
0x7fd3d0e27016: mov qword ptr [rbp-0x38], r9
0x7fd3d0e2701a: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2701d: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27021: add rax, rdx
0x7fd3d0e27024: movzx eax, byte ptr [rax]
0x7fd3d0e27027: mov byte ptr [rbp-0x5], al
0x7fd3d0e2702a: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2702d: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27031: add rax, rdx
0x7fd3d0e27034: movzx eax, byte ptr [rax]
0x7fd3d0e27037: mov byte ptr [rbp-0x6], al
0x7fd3d0e2703a: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2703e: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27041: jnz 0x7fd3d0e27695
0x7fd3d0e27047: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e2704b: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2704f: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27052: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27056: add rax, rdx
0x7fd3d0e27059: movzx eax, byte ptr [rax]
0x7fd3d0e2705c: mov byte ptr [rbp-0x5], al
0x7fd3d0e2705f: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27062: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27066: add rax, rdx
0x7fd3d0e27069: movzx eax, byte ptr [rax]
0x7fd3d0e2706c: mov byte ptr [rbp-0x6], al
0x7fd3d0e2706f: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27073: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27076: jnz 0x7fd3d0e276b4
0x7fd3d0e2707c: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27080: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27084: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27087: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2708b: add rax, rdx
0x7fd3d0e2708e: movzx eax, byte ptr [rax]
0x7fd3d0e27091: mov byte ptr [rbp-0x5], al
0x7fd3d0e27094: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27097: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2709b: add rax, rdx
0x7fd3d0e2709e: movzx eax, byte ptr [rax]
0x7fd3d0e270a1: mov byte ptr [rbp-0x6], al
0x7fd3d0e270a4: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e270a8: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e270ab: jnz 0x7fd3d0e27700
0x7fd3d0e270b1: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e270b5: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e270b9: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e270bc: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e270c0: add rax, rdx
0x7fd3d0e270c3: movzx eax, byte ptr [rax]
0x7fd3d0e270c6: mov byte ptr [rbp-0x5], al
0x7fd3d0e270c9: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e270cc: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e270d0: add rax, rdx
0x7fd3d0e270d3: movzx eax, byte ptr [rax]
0x7fd3d0e270d6: mov byte ptr [rbp-0x6], al
0x7fd3d0e270d9: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e270dd: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e270e0: jnz 0x7fd3d0e2772f
0x7fd3d0e270e6: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e270ea: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e270ee: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e270f1: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e270f5: add rax, rdx
0x7fd3d0e270f8: movzx eax, byte ptr [rax]
0x7fd3d0e270fb: mov byte ptr [rbp-0x5], al
0x7fd3d0e270fe: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27101: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27105: add rax, rdx
0x7fd3d0e27108: movzx eax, byte ptr [rax]
0x7fd3d0e2710b: mov byte ptr [rbp-0x6], al
0x7fd3d0e2710e: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27112: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27115: jnz 0x7fd3d0e276c3
0x7fd3d0e2711b: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e2711f: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27123: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27126: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2712a: add rax, rdx
0x7fd3d0e2712d: movzx eax, byte ptr [rax]
0x7fd3d0e27130: mov byte ptr [rbp-0x5], al
0x7fd3d0e27133: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27136: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2713a: add rax, rdx
0x7fd3d0e2713d: movzx eax, byte ptr [rax]
0x7fd3d0e27140: mov byte ptr [rbp-0x6], al
0x7fd3d0e27143: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27147: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2714a: jnz 0x7fd3d0e276d2
0x7fd3d0e27150: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27154: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27158: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2715b: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2715f: add rax, rdx
0x7fd3d0e27162: movzx eax, byte ptr [rax]
0x7fd3d0e27165: mov byte ptr [rbp-0x5], al
0x7fd3d0e27168: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2716b: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2716f: add rax, rdx
0x7fd3d0e27172: movzx eax, byte ptr [rax]
0x7fd3d0e27175: mov byte ptr [rbp-0x6], al
0x7fd3d0e27178: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2717c: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2717f: jnz 0x7fd3d0e276f1
0x7fd3d0e27185: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27189: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2718d: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27190: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27194: add rax, rdx
0x7fd3d0e27197: movzx eax, byte ptr [rax]
0x7fd3d0e2719a: mov byte ptr [rbp-0x5], al
0x7fd3d0e2719d: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e271a0: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e271a4: add rax, rdx
0x7fd3d0e271a7: movzx eax, byte ptr [rax]
0x7fd3d0e271aa: mov byte ptr [rbp-0x6], al
0x7fd3d0e271ad: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e271b1: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e271b4: jnz 0x7fd3d0e2774e
0x7fd3d0e271ba: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e271be: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e271c2: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e271c5: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e271c9: add rax, rdx
0x7fd3d0e271cc: movzx eax, byte ptr [rax]
0x7fd3d0e271cf: mov byte ptr [rbp-0x5], al
0x7fd3d0e271d2: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e271d5: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e271d9: add rax, rdx
0x7fd3d0e271dc: movzx eax, byte ptr [rax]
0x7fd3d0e271df: mov byte ptr [rbp-0x6], al
0x7fd3d0e271e2: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e271e6: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e271e9: jnz 0x7fd3d0e2775d
0x7fd3d0e271ef: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e271f3: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e271f7: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e271fa: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e271fe: add rax, rdx
0x7fd3d0e27201: movzx eax, byte ptr [rax]
0x7fd3d0e27204: mov byte ptr [rbp-0x5], al
0x7fd3d0e27207: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2720a: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2720e: add rax, rdx
0x7fd3d0e27211: movzx eax, byte ptr [rax]
0x7fd3d0e27214: mov byte ptr [rbp-0x6], al
0x7fd3d0e27217: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2721b: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2721e: jnz 0x7fd3d0e27799
0x7fd3d0e27224: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27228: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2722c: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2722f: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27233: add rax, rdx
0x7fd3d0e27236: movzx eax, byte ptr [rax]
0x7fd3d0e27239: mov byte ptr [rbp-0x5], al
0x7fd3d0e2723c: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2723f: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27243: add rax, rdx
0x7fd3d0e27246: movzx eax, byte ptr [rax]
0x7fd3d0e27249: mov byte ptr [rbp-0x6], al
0x7fd3d0e2724c: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27250: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27253: jnz 0x7fd3d0e277b7
0x7fd3d0e27259: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e2725d: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27261: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27264: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27268: add rax, rdx
0x7fd3d0e2726b: movzx eax, byte ptr [rax]
0x7fd3d0e2726e: mov byte ptr [rbp-0x5], al
0x7fd3d0e27271: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27274: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27278: add rax, rdx
0x7fd3d0e2727b: movzx eax, byte ptr [rax]
0x7fd3d0e2727e: mov byte ptr [rbp-0x6], al
0x7fd3d0e27281: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27285: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27288: jnz 0x7fd3d0e277c6
0x7fd3d0e2728e: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27292: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27296: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27299: add eax, 0x8
0x7fd3d0e2729c: mov dword ptr [rbp-0x4], eax
0x7fd3d0e2729f: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e272a2: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e272a6: add rax, rdx
0x7fd3d0e272a9: movzx eax, byte ptr [rax]
0x7fd3d0e272ac: mov byte ptr [rbp-0x5], al
0x7fd3d0e272af: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e272b2: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e272b6: add rax, rdx
0x7fd3d0e272b9: movzx eax, byte ptr [rax]
0x7fd3d0e272bc: mov byte ptr [rbp-0x6], al
0x7fd3d0e272bf: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e272c3: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e272c6: jnz 0x7fd3d0e2778a
0x7fd3d0e272cc: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e272cf: lea rdx, ptr [rax+rax*1]
0x7fd3d0e272d3: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e272d7: add rax, rdx
0x7fd3d0e272da: movzx eax, word ptr [rax]
0x7fd3d0e272dd: mov word ptr [rbp-0x8], ax
0x7fd3d0e272e1: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e272e4: lea rdx, ptr [rax+rax*1]
0x7fd3d0e272e8: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e272ec: add rax, rdx
0x7fd3d0e272ef: movzx eax, word ptr [rax]
0x7fd3d0e272f2: mov word ptr [rbp-0xa], ax
0x7fd3d0e272f6: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e272fa: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e272fe: jnz 0x7fd3d0e27668
0x7fd3d0e27304: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27308: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2730c: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2730f: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27313: add rax, rdx
0x7fd3d0e27316: movzx eax, byte ptr [rax]
0x7fd3d0e27319: mov byte ptr [rbp-0x5], al
0x7fd3d0e2731c: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2731f: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27323: add rax, rdx
0x7fd3d0e27326: movzx eax, byte ptr [rax]
0x7fd3d0e27329: mov byte ptr [rbp-0x6], al
0x7fd3d0e2732c: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27330: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27333: jnz 0x7fd3d0e2777b
0x7fd3d0e27339: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e2733c: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27340: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27344: add rax, rdx
0x7fd3d0e27347: movzx eax, word ptr [rax]
0x7fd3d0e2734a: mov word ptr [rbp-0x8], ax
0x7fd3d0e2734e: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27351: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27355: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27359: add rax, rdx
0x7fd3d0e2735c: movzx eax, word ptr [rax]
0x7fd3d0e2735f: mov word ptr [rbp-0xa], ax
0x7fd3d0e27363: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27367: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2736b: jnz 0x7fd3d0e27675
0x7fd3d0e27371: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27375: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27379: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2737c: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27380: add rax, rdx
0x7fd3d0e27383: movzx eax, byte ptr [rax]
0x7fd3d0e27386: mov byte ptr [rbp-0x5], al
0x7fd3d0e27389: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2738c: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27390: add rax, rdx
0x7fd3d0e27393: movzx eax, byte ptr [rax]
0x7fd3d0e27396: mov byte ptr [rbp-0x6], al
0x7fd3d0e27399: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2739d: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e273a0: jnz 0x7fd3d0e2776c
0x7fd3d0e273a6: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e273a9: lea rdx, ptr [rax+rax*1]
0x7fd3d0e273ad: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e273b1: add rax, rdx
0x7fd3d0e273b4: movzx eax, word ptr [rax]
0x7fd3d0e273b7: mov word ptr [rbp-0x8], ax
0x7fd3d0e273bb: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e273be: lea rdx, ptr [rax+rax*1]
0x7fd3d0e273c2: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e273c6: add rax, rdx
0x7fd3d0e273c9: movzx eax, word ptr [rax]
0x7fd3d0e273cc: mov word ptr [rbp-0xa], ax
0x7fd3d0e273d0: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e273d4: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e273d8: jnz 0x7fd3d0e27685
0x7fd3d0e273de: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e273e2: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e273e6: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e273e9: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e273ed: add rax, rdx
0x7fd3d0e273f0: movzx eax, byte ptr [rax]
0x7fd3d0e273f3: mov byte ptr [rbp-0x5], al
0x7fd3d0e273f6: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e273f9: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e273fd: add rax, rdx
0x7fd3d0e27400: movzx eax, byte ptr [rax]
0x7fd3d0e27403: mov byte ptr [rbp-0x6], al
0x7fd3d0e27406: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2740a: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2740d: jnz 0x7fd3d0e277a8
0x7fd3d0e27413: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e27416: lea rdx, ptr [rax+rax*1]
0x7fd3d0e2741a: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2741e: add rax, rdx
0x7fd3d0e27421: movzx eax, word ptr [rax]
0x7fd3d0e27424: mov word ptr [rbp-0x8], ax
0x7fd3d0e27428: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e2742b: lea rdx, ptr [rax+rax*1]
0x7fd3d0e2742f: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27433: add rax, rdx
0x7fd3d0e27436: movzx eax, word ptr [rax]
0x7fd3d0e27439: mov word ptr [rbp-0xa], ax
0x7fd3d0e2743d: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27441: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27445: jnz 0x7fd3d0e276a4
0x7fd3d0e2744b: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e2744f: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27453: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27456: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2745a: add rax, rdx
0x7fd3d0e2745d: movzx eax, byte ptr [rax]
0x7fd3d0e27460: mov byte ptr [rbp-0x5], al
0x7fd3d0e27463: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27466: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2746a: add rax, rdx
0x7fd3d0e2746d: movzx eax, byte ptr [rax]
0x7fd3d0e27470: mov byte ptr [rbp-0x6], al
0x7fd3d0e27473: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27477: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2747a: jnz 0x7fd3d0e277f3
0x7fd3d0e27480: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e27483: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27487: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2748b: add rax, rdx
0x7fd3d0e2748e: movzx eax, word ptr [rax]
0x7fd3d0e27491: mov word ptr [rbp-0x8], ax
0x7fd3d0e27495: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27498: lea rdx, ptr [rax+rax*1]
0x7fd3d0e2749c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e274a0: add rax, rdx
0x7fd3d0e274a3: movzx eax, word ptr [rax]
0x7fd3d0e274a6: mov word ptr [rbp-0xa], ax
0x7fd3d0e274aa: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e274ae: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e274b2: jnz 0x7fd3d0e276e1
0x7fd3d0e274b8: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e274bc: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e274c0: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e274c3: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e274c7: add rax, rdx
0x7fd3d0e274ca: movzx eax, byte ptr [rax]
0x7fd3d0e274cd: mov byte ptr [rbp-0x5], al
0x7fd3d0e274d0: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e274d3: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e274d7: add rax, rdx
0x7fd3d0e274da: movzx eax, byte ptr [rax]
0x7fd3d0e274dd: mov byte ptr [rbp-0x6], al
0x7fd3d0e274e0: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e274e4: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e274e7: jnz 0x7fd3d0e277e4
0x7fd3d0e274ed: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e274f0: lea rdx, ptr [rax+rax*1]
0x7fd3d0e274f4: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e274f8: add rax, rdx
0x7fd3d0e274fb: movzx eax, word ptr [rax]
0x7fd3d0e274fe: mov word ptr [rbp-0x8], ax
0x7fd3d0e27502: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27505: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27509: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2750d: add rax, rdx
0x7fd3d0e27510: movzx eax, word ptr [rax]
0x7fd3d0e27513: mov word ptr [rbp-0xa], ax
0x7fd3d0e27517: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e2751b: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2751f: jnz 0x7fd3d0e2771f
0x7fd3d0e27525: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27529: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2752d: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27530: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27534: add rax, rdx
0x7fd3d0e27537: movzx eax, byte ptr [rax]
0x7fd3d0e2753a: mov byte ptr [rbp-0x5], al
0x7fd3d0e2753d: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27540: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27544: add rax, rdx
0x7fd3d0e27547: movzx eax, byte ptr [rax]
0x7fd3d0e2754a: mov byte ptr [rbp-0x6], al
0x7fd3d0e2754d: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27551: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27554: jnz 0x7fd3d0e277d5
0x7fd3d0e2755a: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e2755d: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27561: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27565: add rax, rdx
0x7fd3d0e27568: movzx eax, word ptr [rax]
0x7fd3d0e2756b: mov word ptr [rbp-0x8], ax
0x7fd3d0e2756f: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27572: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27576: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2757a: add rax, rdx
0x7fd3d0e2757d: movzx eax, word ptr [rax]
0x7fd3d0e27580: mov word ptr [rbp-0xa], ax
0x7fd3d0e27584: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27588: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2758c: jnz 0x7fd3d0e2773e
0x7fd3d0e27592: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27596: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2759a: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2759d: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e275a1: add rax, rdx
0x7fd3d0e275a4: movzx eax, byte ptr [rax]
0x7fd3d0e275a7: mov byte ptr [rbp-0x5], al
0x7fd3d0e275aa: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e275ad: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e275b1: add rax, rdx
0x7fd3d0e275b4: movzx eax, byte ptr [rax]
0x7fd3d0e275b7: mov byte ptr [rbp-0x6], al
0x7fd3d0e275ba: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e275be: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e275c1: jnz 0x7fd3d0e27802
0x7fd3d0e275c7: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e275ca: lea rdx, ptr [rax+rax*1]
0x7fd3d0e275ce: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e275d2: add rax, rdx
0x7fd3d0e275d5: movzx eax, word ptr [rax]
0x7fd3d0e275d8: mov word ptr [rbp-0x8], ax
0x7fd3d0e275dc: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e275df: lea rdx, ptr [rax+rax*1]
0x7fd3d0e275e3: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e275e7: add rax, rdx
0x7fd3d0e275ea: movzx eax, word ptr [rax]
0x7fd3d0e275ed: mov word ptr [rbp-0xa], ax
0x7fd3d0e275f1: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e275f5: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e275f9: jnz 0x7fd3d0e2770f
0x7fd3d0e275ff: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27603: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27607: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e2760a: cmp eax, dword ptr [rbp-0x2c]
0x7fd3d0e2760d: jnb 0x7fd3d0e27834
0x7fd3d0e27613: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27616: cmp eax, dword ptr [rbp-0x2c]
0x7fd3d0e27619: jnb 0x7fd3d0e27811
0x7fd3d0e2761f: sub dword ptr [rbp-0x4], 0x8
0x7fd3d0e27623: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e27627: mov eax, dword ptr [rax]
0x7fd3d0e27629: lea edx, ptr [rax-0x1]
0x7fd3d0e2762c: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e27630: mov dword ptr [rax], edx
0x7fd3d0e27632: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e27636: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27639: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2763d: add rax, rdx
0x7fd3d0e27640: movzx eax, byte ptr [rax]
0x7fd3d0e27643: mov byte ptr [rbp-0x5], al
0x7fd3d0e27646: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27649: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2764d: add rax, rdx
0x7fd3d0e27650: movzx eax, byte ptr [rax]
0x7fd3d0e27653: mov byte ptr [rbp-0x6], al
0x7fd3d0e27656: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2765a: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2765d: jz 0x7fd3d0e272cc
0x7fd3d0e27663: jmp 0x7fd3d0e2778a
0x7fd3d0e27668: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e2766c: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27670: setnbe al
0x7fd3d0e27673: pop rbp
0x7fd3d0e27674: ret 
0x7fd3d0e27675: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27679: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2767d: setnbe al
0x7fd3d0e27680: jmp 0x7fd3d0e27673
0x7fd3d0e27685: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27689: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2768d: setnbe al
0x7fd3d0e27690: jmp 0x7fd3d0e27673
0x7fd3d0e27695: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27699: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2769c: setnbe al
0x7fd3d0e2769f: jmp 0x7fd3d0e27673
0x7fd3d0e276a4: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e276a8: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e276ac: setnbe al
0x7fd3d0e276af: jmp 0x7fd3d0e27673
0x7fd3d0e276b4: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e276b8: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e276bb: setnbe al
0x7fd3d0e276be: jmp 0x7fd3d0e27673
0x7fd3d0e276c3: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e276c7: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e276ca: setnbe al
0x7fd3d0e276cd: jmp 0x7fd3d0e27673
0x7fd3d0e276d2: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e276d6: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e276d9: setnbe al
0x7fd3d0e276dc: jmp 0x7fd3d0e27673
0x7fd3d0e276e1: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e276e5: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e276e9: setnbe al
0x7fd3d0e276ec: jmp 0x7fd3d0e27673
0x7fd3d0e276f1: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e276f5: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e276f8: setnbe al
0x7fd3d0e276fb: jmp 0x7fd3d0e27673
0x7fd3d0e27700: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27704: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27707: setnbe al
0x7fd3d0e2770a: jmp 0x7fd3d0e27673
0x7fd3d0e2770f: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27713: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27717: setnbe al
0x7fd3d0e2771a: jmp 0x7fd3d0e27673
0x7fd3d0e2771f: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27723: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27727: setnbe al
0x7fd3d0e2772a: jmp 0x7fd3d0e27673
0x7fd3d0e2772f: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27733: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27736: setnbe al
0x7fd3d0e27739: jmp 0x7fd3d0e27673
0x7fd3d0e2773e: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27742: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27746: setnbe al
0x7fd3d0e27749: jmp 0x7fd3d0e27673
0x7fd3d0e2774e: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27752: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27755: setnbe al
0x7fd3d0e27758: jmp 0x7fd3d0e27673
0x7fd3d0e2775d: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27761: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27764: setnbe al
0x7fd3d0e27767: jmp 0x7fd3d0e27673
0x7fd3d0e2776c: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27770: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27773: setnbe al
0x7fd3d0e27776: jmp 0x7fd3d0e27673
0x7fd3d0e2777b: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2777f: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27782: setnbe al
0x7fd3d0e27785: jmp 0x7fd3d0e27673
0x7fd3d0e2778a: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2778e: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27791: setnbe al
0x7fd3d0e27794: jmp 0x7fd3d0e27673
0x7fd3d0e27799: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2779d: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277a0: setnbe al
0x7fd3d0e277a3: jmp 0x7fd3d0e27673
0x7fd3d0e277a8: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277ac: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277af: setnbe al
0x7fd3d0e277b2: jmp 0x7fd3d0e27673
0x7fd3d0e277b7: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277bb: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277be: setnbe al
0x7fd3d0e277c1: jmp 0x7fd3d0e27673
0x7fd3d0e277c6: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277ca: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277cd: setnbe al
0x7fd3d0e277d0: jmp 0x7fd3d0e27673
0x7fd3d0e277d5: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277d9: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277dc: setnbe al
0x7fd3d0e277df: jmp 0x7fd3d0e27673
0x7fd3d0e277e4: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277e8: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277eb: setnbe al
0x7fd3d0e277ee: jmp 0x7fd3d0e27673
0x7fd3d0e277f3: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277f7: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277fa: setnbe al
0x7fd3d0e277fd: jmp 0x7fd3d0e27673
0x7fd3d0e27802: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27806: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27809: setnbe al
0x7fd3d0e2780c: jmp 0x7fd3d0e27673
0x7fd3d0e27811: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27814: sub dword ptr [rbp-0x18], eax
0x7fd3d0e27817: sub dword ptr [rbp-0x4], 0x8
0x7fd3d0e2781b: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e2781f: mov eax, dword ptr [rax]
0x7fd3d0e27821: lea edx, ptr [rax-0x1]
0x7fd3d0e27824: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e27828: mov dword ptr [rax], edx
0x7fd3d0e2782a: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e2782e: jns 0x7fd3d0e2729f
0x7fd3d0e27834: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27837: sub dword ptr [rbp-0x14], eax
0x7fd3d0e2783a: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e2783d: cmp eax, dword ptr [rbp-0x2c]
0x7fd3d0e27840: jb 0x7fd3d0e2761f
0x7fd3d0e27846: jmp qword ptr [rip-0x2b4e52c]
0x7fd3d0e2784c: push rbp
0x7fd3d0e2784d: mov rbp, rsp
0x7fd3d0e27850: push r14
0x7fd3d0e27852: push r13
0x7fd3d0e27854: push r12
0x7fd3d0e27856: push rbx
0x7fd3d0e27857: sub rsp, 0x138
0x7fd3d0e2785e: mov qword ptr [rbp-0x158], rdi
0x7fd3d0e27865: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e2786c: mov rax, qword ptr [rax+0x38]
0x7fd3d0e27870: mov qword ptr [rbp-0x38], rax
0x7fd3d0e27874: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e2787b: mov rax, qword ptr [rax+0x40]
0x7fd3d0e2787f: mov qword ptr [rbp-0x40], rax
0x7fd3d0e27883: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e2788a: mov rax, qword ptr [rax+0x48]
0x7fd3d0e2788e: mov qword ptr [rbp-0x48], rax
0x7fd3d0e27892: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27899: mov rdi, rax
0x7fd3d0e2789c: call qword ptr [rip-0x2b4e082]
0x7fd3d0e278a2: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e278a9: mov eax, dword ptr [rax+0x7c]
0x7fd3d0e278ac: add eax, 0x1
0x7fd3d0e278af: mov dword ptr [rbp-0x4c], eax
0x7fd3d0e278b2: mov dword ptr [rbp-0x24], 0x0
0x7fd3d0e278b9: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e278bc: cmp eax, dword ptr [rbp-0x4c]
0x7fd3d0e278bf: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e278c6: mov edx, dword ptr [rbp-0x24]
0x7fd3d0e278c9: movsxd rdx, edx
0x7fd3d0e278cc: add rdx, 0xa8
0x7fd3d0e278d3: mov dword ptr [rax+rdx*4], 0x0
0x7fd3d0e278da: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e278de: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e278e1: cmp eax, dword ptr [rbp-0x4c]
0x7fd3d0e278e4: jle 0x7fd3d0e278bf
0x7fd3d0e278ea: mov dword ptr [rbp-0x30], 0x0
0x7fd3d0e278f1: mov dword ptr [rbp-0x2c], 0x0
0x7fd3d0e278f8: mov dword ptr [rbp-0x24], 0x0
0x7fd3d0e278ff: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27906: mov eax, dword ptr [rax+0x7c]
0x7fd3d0e27909: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e2790c: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e2790f: mov edx, eax
0x7fd3d0e27911: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e27914: cdqe 
0x7fd3d0e27916: mov byte ptr [rbp+rax*1-0x150], dl
0x7fd3d0e2791d: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e27921: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27928: mov eax, dword ptr [rax+0x7c]
0x7fd3d0e2792b: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e2792e: jnle 0x7fd3d0e2790c
0x7fd3d0e27934: mov dword ptr [rbp-0x24], 0x0
0x7fd3d0e2793b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27942: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27945: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e27948: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e2794b: cdqe 
0x7fd3d0e2794d: lea rdx, ptr [rax*4]
0x7fd3d0e27955: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e27959: add rax, rdx
0x7fd3d0e2795c: mov eax, dword ptr [rax]
0x7fd3d0e2795e: sub eax, 0x1
0x7fd3d0e27961: mov dword ptr [rbp-0x28], eax
0x7fd3d0e27964: cmp dword ptr [rbp-0x28], 0x0
0x7fd3d0e27968: js 0x7fd3d0e27b78
0x7fd3d0e2796e: mov eax, dword ptr [rbp-0x28]
0x7fd3d0e27971: movsxd rdx, eax
0x7fd3d0e27974: mov rax, qword ptr [rbp-0x40]
0x7fd3d0e27978: add rax, rdx
0x7fd3d0e2797b: movzx eax, byte ptr [rax]
0x7fd3d0e2797e: movzx eax, al
0x7fd3d0e27981: mov rdx, qword ptr [rbp-0x158]
0x7fd3d0e27988: cdqe 
0x7fd3d0e2798a: movzx eax, byte ptr [rdx+rax*1+0x180]
0x7fd3d0e27992: mov byte ptr [rbp-0x4d], al
0x7fd3d0e27995: movzx eax, byte ptr [rbp-0x150]
0x7fd3d0e2799c: cmp al, byte ptr [rbp-0x4d]
0x7fd3d0e2799f: jnz 0x7fd3d0e279c5
0x7fd3d0e279a5: add dword ptr [rbp-0x2c], 0x1
0x7fd3d0e279a9: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e279ad: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e279b4: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e279b7: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e279ba: jnle 0x7fd3d0e27948
0x7fd3d0e279c0: jmp 0x7fd3d0e27bbc
0x7fd3d0e279c5: cmp dword ptr [rbp-0x2c], 0x0
0x7fd3d0e279c9: jle 0x7fd3d0e27a89
0x7fd3d0e279cf: sub dword ptr [rbp-0x2c], 0x1
0x7fd3d0e279d3: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e279d6: and eax, 0x1
0x7fd3d0e279d9: test eax, eax
0x7fd3d0e279db: jz 0x7fd3d0e27a41
0x7fd3d0e279e1: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e279e4: cdqe 
0x7fd3d0e279e6: lea rdx, ptr [rax+rax*1]
0x7fd3d0e279ea: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e279ee: add rax, rdx
0x7fd3d0e279f1: mov word ptr [rax], 0x1
0x7fd3d0e279f6: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e279fa: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27a01: mov eax, dword ptr [rax+0x2a4]
0x7fd3d0e27a07: lea edx, ptr [rax+0x1]
0x7fd3d0e27a0a: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27a11: mov dword ptr [rax+0x2a4], edx
0x7fd3d0e27a17: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27a1b: jle 0x7fd3d0e27a81
0x7fd3d0e27a21: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27a24: sub eax, 0x2
0x7fd3d0e27a27: mov edx, eax
0x7fd3d0e27a29: shr edx, 0x1f
0x7fd3d0e27a2c: add eax, edx
0x7fd3d0e27a2e: sar eax, 0x1
0x7fd3d0e27a30: mov dword ptr [rbp-0x2c], eax
0x7fd3d0e27a33: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27a36: and eax, 0x1
0x7fd3d0e27a39: test eax, eax
0x7fd3d0e27a3b: jnz 0x7fd3d0e279e1
0x7fd3d0e27a41: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27a44: cdqe 
0x7fd3d0e27a46: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27a4a: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27a4e: add rax, rdx
0x7fd3d0e27a51: mov word ptr [rax], 0x0
0x7fd3d0e27a56: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27a5a: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27a61: mov eax, dword ptr [rax+0x2a0]
0x7fd3d0e27a67: lea edx, ptr [rax+0x1]
0x7fd3d0e27a6a: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27a71: mov dword ptr [rax+0x2a0], edx
0x7fd3d0e27a77: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27a7b: jnle 0x7fd3d0e27a21
0x7fd3d0e27a81: nop
0x7fd3d0e27a82: mov dword ptr [rbp-0x2c], 0x0
0x7fd3d0e27a89: movzx r12d, byte ptr [rbp-0x14f]
0x7fd3d0e27a91: movzx eax, byte ptr [rbp-0x150]
0x7fd3d0e27a98: mov byte ptr [rbp-0x14f], al
0x7fd3d0e27a9e: lea rax, ptr [rbp-0x150]
0x7fd3d0e27aa5: lea rbx, ptr [rax+0x1]
0x7fd3d0e27aa9: movzx r14d, byte ptr [rbp-0x4d]
0x7fd3d0e27aae: cmp r14b, r12b
0x7fd3d0e27ab1: jz 0x7fd3d0e27ace
0x7fd3d0e27ab7: add rbx, 0x1
0x7fd3d0e27abb: mov r13d, r12d
0x7fd3d0e27abe: movzx r12d, byte ptr [rbx]
0x7fd3d0e27ac2: mov byte ptr [rbx], r13b
0x7fd3d0e27ac5: cmp r14b, r12b
0x7fd3d0e27ac8: jnz 0x7fd3d0e27ab7
0x7fd3d0e27ace: mov byte ptr [rbp-0x150], r12b
0x7fd3d0e27ad5: mov rdx, rbx
0x7fd3d0e27ad8: lea rax, ptr [rbp-0x150]
0x7fd3d0e27adf: mov rcx, rdx
0x7fd3d0e27ae2: sub rcx, rax
0x7fd3d0e27ae5: mov rax, rcx
0x7fd3d0e27ae8: mov dword ptr [rbp-0x28], eax
0x7fd3d0e27aeb: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27aee: cdqe 
0x7fd3d0e27af0: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27af4: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27af8: add rax, rdx
0x7fd3d0e27afb: mov edx, dword ptr [rbp-0x28]
0x7fd3d0e27afe: add edx, 0x1
0x7fd3d0e27b01: mov word ptr [rax], dx
0x7fd3d0e27b04: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27b08: mov eax, dword ptr [rbp-0x28]
0x7fd3d0e27b0b: add eax, 0x1
0x7fd3d0e27b0e: mov rdx, qword ptr [rbp-0x158]
0x7fd3d0e27b15: movsxd rcx, eax
0x7fd3d0e27b18: add rcx, 0xa8
0x7fd3d0e27b1f: mov edx, dword ptr [rdx+rcx*4]
0x7fd3d0e27b22: lea ecx, ptr [rdx+0x1]
0x7fd3d0e27b25: mov rdx, qword ptr [rbp-0x158]
0x7fd3d0e27b2c: cdqe 
0x7fd3d0e27b2e: add rax, 0xa8
0x7fd3d0e27b34: mov dword ptr [rdx+rax*4], ecx
0x7fd3d0e27b37: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e27b3b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27b42: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27b45: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e27b48: jnle 0x7fd3d0e27948
0x7fd3d0e27b4e: movzx r12d, byte ptr [rbp-0x14f]
0x7fd3d0e27b56: movzx eax, byte ptr [rbp-0x150]
0x7fd3d0e27b5d: mov byte ptr [rbp-0x14f], al
0x7fd3d0e27b63: lea rax, ptr [rbp-0x150]
0x7fd3d0e27b6a: lea rbx, ptr [rax+0x1]
0x7fd3d0e27b6e: movzx r14d, byte ptr [rbp-0x4d]
0x7fd3d0e27b73: jmp 0x7fd3d0e27aae
0x7fd3d0e27b78: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27b7f: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27b82: add dword ptr [rbp-0x28], eax
0x7fd3d0e27b85: mov eax, dword ptr [rbp-0x28]
0x7fd3d0e27b88: movsxd rdx, eax
0x7fd3d0e27b8b: mov rax, qword ptr [rbp-0x40]
0x7fd3d0e27b8f: add rax, rdx
0x7fd3d0e27b92: movzx eax, byte ptr [rax]
0x7fd3d0e27b95: movzx eax, al
0x7fd3d0e27b98: mov rdx, qword ptr [rbp-0x158]
0x7fd3d0e27b9f: cdqe 
0x7fd3d0e27ba1: movzx eax, byte ptr [rdx+rax*1+0x180]
0x7fd3d0e27ba9: mov byte ptr [rbp-0x4d], al
0x7fd3d0e27bac: movzx eax, byte ptr [rbp-0x150]
0x7fd3d0e27bb3: cmp al, byte ptr [rbp-0x4d]
0x7fd3d0e27bb6: jnz 0x7fd3d0e279c5
0x7fd3d0e27bbc: cmp dword ptr [rbp-0x2c], 0x0
0x7fd3d0e27bc0: sub dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27bc4: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27bc7: and eax, 0x1
0x7fd3d0e27bca: test eax, eax
0x7fd3d0e27bcc: jz 0x7fd3d0e27c32
0x7fd3d0e27bd2: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27bd5: cdqe 
0x7fd3d0e27bd7: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27bdb: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27bdf: add rax, rdx
0x7fd3d0e27be2: mov word ptr [rax], 0x1
0x7fd3d0e27be7: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27beb: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27bf2: mov eax, dword ptr [rax+0x2a4]
0x7fd3d0e27bf8: lea edx, ptr [rax+0x1]
0x7fd3d0e27bfb: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27c02: mov dword ptr [rax+0x2a4], edx
0x7fd3d0e27c08: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27c0c: jle 0x7fd3d0e27c72
0x7fd3d0e27c12: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27c15: sub eax, 0x2
0x7fd3d0e27c18: mov edx, eax
0x7fd3d0e27c1a: shr edx, 0x1f
0x7fd3d0e27c1d: add eax, edx
0x7fd3d0e27c1f: sar eax, 0x1
0x7fd3d0e27c21: mov dword ptr [rbp-0x2c], eax
0x7fd3d0e27c24: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27c27: and eax, 0x1
0x7fd3d0e27c2a: test eax, eax
0x7fd3d0e27c2c: jnz 0x7fd3d0e27bd2
0x7fd3d0e27c32: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27c35: cdqe 
0x7fd3d0e27c37: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27c3b: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27c3f: add rax, rdx
0x7fd3d0e27c42: mov word ptr [rax], 0x0
0x7fd3d0e27c47: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27c4b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27c52: mov eax, dword ptr [rax+0x2a0]
0x7fd3d0e27c58: lea edx, ptr [rax+0x1]
0x7fd3d0e27c5b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27c62: mov dword ptr [rax+0x2a0], edx
0x7fd3d0e27c68: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27c6c: jnle 0x7fd3d0e27c12
0x7fd3d0e27c72: nop
0x7fd3d0e27c73: mov dword ptr [rbp-0x2c], 0x0
0x7fd3d0e27c7a: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27c7d: cdqe 
0x7fd3d0e27c7f: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27c83: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27c87: add rdx, rax
0x7fd3d0e27c8a: mov eax, dword ptr [rbp-0x4c]
0x7fd3d0e27c8d: mov word ptr [rdx], ax
0x7fd3d0e27c90: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27c94: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27c9b: mov edx, dword ptr [rbp-0x4c]
0x7fd3d0e27c9e: movsxd rdx, edx
0x7fd3d0e27ca1: add rdx, 0xa8
0x7fd3d0e27ca8: mov eax, dword ptr [rax+rdx*4]
0x7fd3d0e27cab: lea ecx, ptr [rax+0x1]
0x7fd3d0e27cae: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27cb5: mov edx, dword ptr [rbp-0x4c]
0x7fd3d0e27cb8: movsxd rdx, edx
0x7fd3d0e27cbb: add rdx, 0xa8
0x7fd3d0e27cc2: mov dword ptr [rax+rdx*4], ecx
0x7fd3d0e27cc5: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27ccc: mov edx, dword ptr [rbp-0x30]
0x7fd3d0e27ccf: mov dword ptr [rax+0x29c], edx
0x7fd3d0e27cd5: add rsp, 0x138
0x7fd3d0e27cdc: pop rbx
0x7fd3d0e27cdd: pop r12
0x7fd3d0e27cdf: pop r13
0x7fd3d0e27ce1: pop r14
0x7fd3d0e27ce3: pop rbp
0x7fd3d0e27ce4: ret 
0x7fd3d0e27ce5: ret 
0x7fd3d0e27ce6: push rbp
0x7fd3d0e27ce7: mov rbp, rsp
0x7fd3d0e27cea: sub rsp, 0x60
0x7fd3d0e27cee: mov qword ptr [rbp-0x48], rdi
0x7fd3d0e27cf2: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27cf6: mov rax, qword ptr [rax+0x38]
0x7fd3d0e27cfa: mov qword ptr [rbp-0x10], rax
0x7fd3d0e27cfe: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d02: mov rax, qword ptr [rax+0x40]
0x7fd3d0e27d06: mov qword ptr [rbp-0x18], rax
0x7fd3d0e27d0a: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d0e: mov rax, qword ptr [rax+0x28]
0x7fd3d0e27d12: mov qword ptr [rbp-0x20], rax
0x7fd3d0e27d16: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d1a: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27d1d: mov dword ptr [rbp-0x24], eax
0x7fd3d0e27d20: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d24: mov eax, dword ptr [rax+0x290]
0x7fd3d0e27d2a: mov dword ptr [rbp-0x28], eax
0x7fd3d0e27d2d: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d31: mov eax, dword ptr [rax+0x58]
0x7fd3d0e27d34: mov dword ptr [rbp-0x4], eax
0x7fd3d0e27d37: cmp dword ptr [rbp-0x24], 0x270f
0x7fd3d0e27d3e: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e27d41: add eax, 0x22
0x7fd3d0e27d44: mov dword ptr [rbp-0x8], eax
0x7fd3d0e27d47: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27d4a: and eax, 0x1
0x7fd3d0e27d4d: test eax, eax
0x7fd3d0e27d4f: jz 0x7fd3d0e27d59
0x7fd3d0e27d55: add dword ptr [rbp-0x8], 0x1
0x7fd3d0e27d59: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27d5c: movsxd rdx, eax
0x7fd3d0e27d5f: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e27d63: add rax, rdx
0x7fd3d0e27d66: mov qword ptr [rbp-0x30], rax
0x7fd3d0e27d6a: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e27d6e: cmp dword ptr [rbp-0x4], 0x64
0x7fd3d0e27d72: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e27d75: lea ecx, ptr [rax-0x1]
0x7fd3d0e27d78: mov edx, 0x55555556
0x7fd3d0e27d7d: mov eax, ecx
0x7fd3d0e27d7f: imul edx
0x7fd3d0e27d81: mov eax, ecx
0x7fd3d0e27d83: sar eax, 0x1f
0x7fd3d0e27d86: mov ecx, edx
0x7fd3d0e27d88: sub ecx, eax
0x7fd3d0e27d8a: mov eax, ecx
0x7fd3d0e27d8c: imul eax, dword ptr [rbp-0x24]
0x7fd3d0e27d90: mov dword ptr [rbp-0x34], eax
0x7fd3d0e27d93: mov eax, dword ptr [rbp-0x34]
0x7fd3d0e27d96: mov dword ptr [rbp-0x38], eax
0x7fd3d0e27d99: mov r9d, dword ptr [rbp-0x28]
0x7fd3d0e27d9d: mov r8d, dword ptr [rbp-0x24]
0x7fd3d0e27da1: mov rcx, qword ptr [rbp-0x20]
0x7fd3d0e27da5: mov rdx, qword ptr [rbp-0x30]
0x7fd3d0e27da9: mov rsi, qword ptr [rbp-0x18]
0x7fd3d0e27dad: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27db1: lea rdi, ptr [rbp-0x38]
0x7fd3d0e27db5: mov qword ptr [rsp], rdi
0x7fd3d0e27db9: mov rdi, rax
0x7fd3d0e27dbc: call qword ptr [rip-0x2b49162]
0x7fd3d0e27dc2: cmp dword ptr [rbp-0x28], 0x2
0x7fd3d0e27dc6: mov eax, dword ptr [rbp-0x38]
0x7fd3d0e27dc9: test eax, eax
0x7fd3d0e27dcb: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27dcf: mov dword ptr [rax+0x30], 0xffffffff
0x7fd3d0e27dd6: mov dword ptr [rbp-0x8], 0x0
0x7fd3d0e27ddd: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27de1: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27de4: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e27de7: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27dea: cdqe 
0x7fd3d0e27dec: lea rdx, ptr [rax*4]
0x7fd3d0e27df4: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27df8: add rax, rdx
0x7fd3d0e27dfb: mov eax, dword ptr [rax]
0x7fd3d0e27dfd: test eax, eax
0x7fd3d0e27dff: jz 0x7fd3d0e27e19
0x7fd3d0e27e05: add dword ptr [rbp-0x8], 0x1
0x7fd3d0e27e09: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27e0d: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27e10: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e27e13: jnle 0x7fd3d0e27de7
0x7fd3d0e27e19: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27e1d: mov edx, dword ptr [rbp-0x8]
0x7fd3d0e27e20: mov dword ptr [rax+0x30], edx
0x7fd3d0e27e23: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27e27: mov eax, dword ptr [rax+0x30]
0x7fd3d0e27e2a: cmp eax, 0xffffffff
0x7fd3d0e27e2d: leave 
0x7fd3d0e27e2e: ret 
0x7fd3d0e27e2f: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27e32: movsxd rdx, eax
0x7fd3d0e27e35: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e27e39: add rax, rdx
0x7fd3d0e27e3c: mov qword ptr [rbp-0x30], rax
0x7fd3d0e27e40: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e27e44: jnle 0x7fd3d0e27d6e
0x7fd3d0e27e4a: jmp qword ptr [rip-0x2b486f0]
0x7fd3d0e27e50: push rbp
0x7fd3d0e27e51: mov rbp, rsp
0x7fd3d0e27e54: push rbx
0x7fd3d0e27e55: mov qword ptr [rbp-0x10], rdi
0x7fd3d0e27e59: mov dword ptr [rbp-0x14], esi
0x7fd3d0e27e5c: mov dword ptr [rbp-0x18], edx
0x7fd3d0e27e5f: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27e63: mov eax, dword ptr [rax+0x284]
0x7fd3d0e27e69: cmp eax, 0x7
0x7fd3d0e27e6c: jnle 0x7fd3d0e27ec7
0x7fd3d0e27e72: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27e76: mov edx, dword ptr [rax+0x280]
0x7fd3d0e27e7c: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27e80: mov eax, dword ptr [rax+0x284]
0x7fd3d0e27e86: mov ecx, 0x20
0x7fd3d0e27e8b: mov ebx, ecx
0x7fd3d0e27e8d: sub ebx, eax
0x7fd3d0e27e8f: mov eax, ebx
0x7fd3d0e27e91: sub eax, dword ptr [rbp-0x14]
0x7fd3d0e27e94: mov esi, dword ptr [rbp-0x18]
0x7fd3d0e27e97: mov ebx, esi
0x7fd3d0e27e99: mov ecx, eax
0x7fd3d0e27e9b: shl ebx, cl
0x7fd3d0e27e9d: mov eax, ebx
0x7fd3d0e27e9f: or edx, eax
0x7fd3d0e27ea1: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ea5: mov dword ptr [rax+0x280], edx
0x7fd3d0e27eab: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27eaf: mov edx, dword ptr [rax+0x284]
0x7fd3d0e27eb5: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e27eb8: add edx, eax
0x7fd3d0e27eba: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ebe: mov dword ptr [rax+0x284], edx
0x7fd3d0e27ec4: pop rbx
0x7fd3d0e27ec5: pop rbp
0x7fd3d0e27ec6: ret 
0x7fd3d0e27ec7: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ecb: mov rdx, qword ptr [rax+0x50]
0x7fd3d0e27ecf: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ed3: mov eax, dword ptr [rax+0x74]
0x7fd3d0e27ed6: cdqe 
0x7fd3d0e27ed8: add rdx, rax
0x7fd3d0e27edb: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27edf: mov eax, dword ptr [rax+0x280]
0x7fd3d0e27ee5: shr eax, 0x18
0x7fd3d0e27ee8: mov byte ptr [rdx], al
0x7fd3d0e27eea: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27eee: mov eax, dword ptr [rax+0x74]
0x7fd3d0e27ef1: lea edx, ptr [rax+0x1]
0x7fd3d0e27ef4: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ef8: mov dword ptr [rax+0x74], edx
0x7fd3d0e27efb: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27eff: mov eax, dword ptr [rax+0x280]
0x7fd3d0e27f05: mov edx, eax
0x7fd3d0e27f07: shl edx, 0x8
0x7fd3d0e27f0a: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f0e: mov dword ptr [rax+0x280], edx
0x7fd3d0e27f14: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f18: mov eax, dword ptr [rax+0x284]
0x7fd3d0e27f1e: lea edx, ptr [rax-0x8]
0x7fd3d0e27f21: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f25: mov dword ptr [rax+0x284], edx
0x7fd3d0e27f2b: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f2f: mov eax, dword ptr [rax+0x284]
0x7fd3d0e27f35: cmp eax, 0x7
0x7fd3d0e27f38: jnle 0x7fd3d0e27ec7
0x7fd3d0e27f3e: jmp 0x7fd3d0e27e72
0x7fd3d0e27f43: push rbp
0x7fd3d0e27f44: mov rbp, rsp
0x7fd3d0e27f47: sub rsp, 0x20
0x7fd3d0e27f4b: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e27f4f: mov byte ptr [rbp-0x1], 0x0
0x7fd3d0e27f53: mov byte ptr [rbp-0x2], 0x0
0x7fd3d0e27f57: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e27f5b: mov rax, qword ptr [rax+0x30]
0x7fd3d0e27f5f: mov qword ptr [rbp-0x10], rax
0x7fd3d0e27f63: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f67: mov eax, dword ptr [rax+0xc]
0x7fd3d0e27f6a: cmp eax, 0x1
0x7fd3d0e27f6d: jz 0x7fd3d0e283a6
0x7fd3d0e27f73: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f77: mov eax, dword ptr [rax+0xc]
0x7fd3d0e27f7a: cmp eax, 0x2
0x7fd3d0e27f7d: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f81: mov rdi, rax
0x7fd3d0e27f84: sub rsp, 0x8
0x7fd3d0e27f88: push rbp
0x7fd3d0e27f89: mov rbp, rsp
0x7fd3d0e27f8c: sub rsp, 0x28
0x7fd3d0e27f90: mov qword ptr [rbp-0x28], rdi
0x7fd3d0e27f94: mov byte ptr [rbp-0x1], 0x0
0x7fd3d0e27f98: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27f9c: mov eax, dword ptr [rax+0x8]
0x7fd3d0e27f9f: cmp eax, 0x2
0x7fd3d0e27fa2: jnz 0x7fd3d0e28163
0x7fd3d0e27fa8: jmp 0x7fd3d0e27fae
0x7fd3d0e27fad: nop
0x7fd3d0e27fae: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27fb2: mov edx, dword ptr [rax+0x6c]
0x7fd3d0e27fb5: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27fb9: mov eax, dword ptr [rax+0x70]
0x7fd3d0e27fbc: cmp edx, eax
0x7fd3d0e27fbe: jnl 0x7fd3d0e28338
0x7fd3d0e27fc4: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27fc8: mov rax, qword ptr [rax]
0x7fd3d0e27fcb: mov eax, dword ptr [rax+0x8]
0x7fd3d0e27fce: test eax, eax
0x7fd3d0e27fd0: jz 0x7fd3d0e2833e
0x7fd3d0e27fd6: mov byte ptr [rbp-0x1], 0x1
0x7fd3d0e27fda: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27fde: mov rax, qword ptr [rax]
0x7fd3d0e27fe1: mov rax, qword ptr [rax]
0x7fd3d0e27fe4: movzx eax, byte ptr [rax]
0x7fd3d0e27fe7: movzx eax, al
0x7fd3d0e27fea: mov dword ptr [rbp-0x8], eax
0x7fd3d0e27fed: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27ff1: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e27ff4: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e27ff7: jz 0x7fd3d0e2809f
0x7fd3d0e27ffd: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28001: mov eax, dword ptr [rax+0x60]
0x7fd3d0e28004: cmp eax, 0x1
0x7fd3d0e28007: jnz 0x7fd3d0e2809f
0x7fd3d0e2800d: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28011: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e28014: mov byte ptr [rbp-0x9], al
0x7fd3d0e28017: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2801b: mov eax, dword ptr [rax+0x288]
0x7fd3d0e28021: mov edx, eax
0x7fd3d0e28023: shl edx, 0x8
0x7fd3d0e28026: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2802a: mov eax, dword ptr [rax+0x288]
0x7fd3d0e28030: mov ecx, eax
0x7fd3d0e28032: shr ecx, 0x18
0x7fd3d0e28035: movzx eax, byte ptr [rbp-0x9]
0x7fd3d0e28039: xor eax, ecx
0x7fd3d0e2803b: mov eax, eax
0x7fd3d0e2803d: mov eax, dword ptr [rax*4+0x61c6a0]
0x7fd3d0e28044: xor edx, eax
0x7fd3d0e28046: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2804a: mov dword ptr [rax+0x288], edx
0x7fd3d0e28050: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28054: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e28057: mov rdx, qword ptr [rbp-0x28]
0x7fd3d0e2805b: mov eax, eax
0x7fd3d0e2805d: mov byte ptr [rdx+rax*1+0x80], 0x1
0x7fd3d0e28065: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28069: mov rdx, qword ptr [rax+0x40]
0x7fd3d0e2806d: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28071: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e28074: cdqe 
0x7fd3d0e28076: add rdx, rax
0x7fd3d0e28079: movzx eax, byte ptr [rbp-0x9]
0x7fd3d0e2807d: mov byte ptr [rdx], al
0x7fd3d0e2807f: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28083: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e28086: lea edx, ptr [rax+0x1]
0x7fd3d0e28089: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2808d: mov dword ptr [rax+0x6c], edx
0x7fd3d0e28090: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28094: mov edx, dword ptr [rbp-0x8]
0x7fd3d0e28097: mov dword ptr [rax+0x5c], edx
0x7fd3d0e2809a: jmp 0x7fd3d0e2810b
0x7fd3d0e2809f: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280a3: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e280a6: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e280a9: jnz 0x7fd3d0e280c1
0x7fd3d0e280af: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280b3: mov eax, dword ptr [rax+0x60]
0x7fd3d0e280b6: cmp eax, 0xff
0x7fd3d0e280bb: jnz 0x7fd3d0e280fa
0x7fd3d0e280c1: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280c5: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e280c8: cmp eax, 0xff
0x7fd3d0e280cd: jnbe 0x7fd3d0e280e0
0x7fd3d0e280d3: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280d7: mov rdi, rax
0x7fd3d0e280da: call qword ptr [rip-0x2b45c80]
0x7fd3d0e280e0: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280e4: mov edx, dword ptr [rbp-0x8]
0x7fd3d0e280e7: mov dword ptr [rax+0x5c], edx
0x7fd3d0e280ea: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280ee: mov dword ptr [rax+0x60], 0x1
0x7fd3d0e280f5: jmp 0x7fd3d0e2810b
0x7fd3d0e280fa: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280fe: mov eax, dword ptr [rax+0x60]
0x7fd3d0e28101: lea edx, ptr [rax+0x1]
0x7fd3d0e28104: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28108: mov dword ptr [rax+0x60], edx
0x7fd3d0e2810b: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2810f: mov rax, qword ptr [rax]
0x7fd3d0e28112: mov rdx, qword ptr [rax]
0x7fd3d0e28115: add rdx, 0x1
0x7fd3d0e28119: mov qword ptr [rax], rdx
0x7fd3d0e2811c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28120: mov rax, qword ptr [rax]
0x7fd3d0e28123: mov edx, dword ptr [rax+0x8]
0x7fd3d0e28126: sub edx, 0x1
0x7fd3d0e28129: mov dword ptr [rax+0x8], edx
0x7fd3d0e2812c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28130: mov rax, qword ptr [rax]
0x7fd3d0e28133: mov edx, dword ptr [rax+0xc]
0x7fd3d0e28136: add edx, 0x1
0x7fd3d0e28139: mov dword ptr [rax+0xc], edx
0x7fd3d0e2813c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28140: mov rax, qword ptr [rax]
0x7fd3d0e28143: mov eax, dword ptr [rax+0xc]
0x7fd3d0e28146: test eax, eax
0x7fd3d0e28148: jnz 0x7fd3d0e27fad
0x7fd3d0e2814e: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28152: mov rax, qword ptr [rax]
0x7fd3d0e28155: mov edx, dword ptr [rax+0x10]
0x7fd3d0e28158: add edx, 0x1
0x7fd3d0e2815b: mov dword ptr [rax+0x10], edx
0x7fd3d0e2815e: jmp 0x7fd3d0e27fad
0x7fd3d0e28163: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28167: mov edx, dword ptr [rax+0x6c]
0x7fd3d0e2816a: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2816e: mov eax, dword ptr [rax+0x70]
0x7fd3d0e28171: cmp edx, eax
0x7fd3d0e28173: jnl 0x7fd3d0e28344
0x7fd3d0e28179: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2817d: mov rax, qword ptr [rax]
0x7fd3d0e28180: mov eax, dword ptr [rax+0x8]
0x7fd3d0e28183: test eax, eax
0x7fd3d0e28185: jz 0x7fd3d0e2834a
0x7fd3d0e2818b: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2818f: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28192: test eax, eax
0x7fd3d0e28194: jz 0x7fd3d0e28350
0x7fd3d0e2819a: mov byte ptr [rbp-0x1], 0x1
0x7fd3d0e2819e: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281a2: mov rax, qword ptr [rax]
0x7fd3d0e281a5: mov rax, qword ptr [rax]
0x7fd3d0e281a8: movzx eax, byte ptr [rax]
0x7fd3d0e281ab: movzx eax, al
0x7fd3d0e281ae: mov dword ptr [rbp-0x10], eax
0x7fd3d0e281b1: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281b5: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e281b8: cmp eax, dword ptr [rbp-0x10]
0x7fd3d0e281bb: jz 0x7fd3d0e28263
0x7fd3d0e281c1: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281c5: mov eax, dword ptr [rax+0x60]
0x7fd3d0e281c8: cmp eax, 0x1
0x7fd3d0e281cb: jnz 0x7fd3d0e28263
0x7fd3d0e281d1: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281d5: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e281d8: mov byte ptr [rbp-0x11], al
0x7fd3d0e281db: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281df: mov eax, dword ptr [rax+0x288]
0x7fd3d0e281e5: mov edx, eax
0x7fd3d0e281e7: shl edx, 0x8
0x7fd3d0e281ea: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281ee: mov eax, dword ptr [rax+0x288]
0x7fd3d0e281f4: mov ecx, eax
0x7fd3d0e281f6: shr ecx, 0x18
0x7fd3d0e281f9: movzx eax, byte ptr [rbp-0x11]
0x7fd3d0e281fd: xor eax, ecx
0x7fd3d0e281ff: mov eax, eax
0x7fd3d0e28201: mov eax, dword ptr [rax*4+0x61c6a0]
0x7fd3d0e28208: xor edx, eax
0x7fd3d0e2820a: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2820e: mov dword ptr [rax+0x288], edx
0x7fd3d0e28214: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28218: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e2821b: mov rdx, qword ptr [rbp-0x28]
0x7fd3d0e2821f: mov eax, eax
0x7fd3d0e28221: mov byte ptr [rdx+rax*1+0x80], 0x1
0x7fd3d0e28229: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2822d: mov rdx, qword ptr [rax+0x40]
0x7fd3d0e28231: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28235: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e28238: cdqe 
0x7fd3d0e2823a: add rdx, rax
0x7fd3d0e2823d: movzx eax, byte ptr [rbp-0x11]
0x7fd3d0e28241: mov byte ptr [rdx], al
0x7fd3d0e28243: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28247: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e2824a: lea edx, ptr [rax+0x1]
0x7fd3d0e2824d: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28251: mov dword ptr [rax+0x6c], edx
0x7fd3d0e28254: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28258: mov edx, dword ptr [rbp-0x10]
0x7fd3d0e2825b: mov dword ptr [rax+0x5c], edx
0x7fd3d0e2825e: jmp 0x7fd3d0e282cf
0x7fd3d0e28263: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28267: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e2826a: cmp eax, dword ptr [rbp-0x10]
0x7fd3d0e2826d: jnz 0x7fd3d0e28285
0x7fd3d0e28273: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28277: mov eax, dword ptr [rax+0x60]
0x7fd3d0e2827a: cmp eax, 0xff
0x7fd3d0e2827f: jnz 0x7fd3d0e282be
0x7fd3d0e28285: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28289: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e2828c: cmp eax, 0xff
0x7fd3d0e28291: jnbe 0x7fd3d0e282a4
0x7fd3d0e28297: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2829b: mov rdi, rax
0x7fd3d0e2829e: call qword ptr [rip-0x2b43fc4]
0x7fd3d0e282a4: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282a8: mov edx, dword ptr [rbp-0x10]
0x7fd3d0e282ab: mov dword ptr [rax+0x5c], edx
0x7fd3d0e282ae: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282b2: mov dword ptr [rax+0x60], 0x1
0x7fd3d0e282b9: jmp 0x7fd3d0e282cf
0x7fd3d0e282be: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282c2: mov eax, dword ptr [rax+0x60]
0x7fd3d0e282c5: lea edx, ptr [rax+0x1]
0x7fd3d0e282c8: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282cc: mov dword ptr [rax+0x60], edx
0x7fd3d0e282cf: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282d3: mov rax, qword ptr [rax]
0x7fd3d0e282d6: mov rdx, qword ptr [rax]
0x7fd3d0e282d9: add rdx, 0x1
0x7fd3d0e282dd: mov qword ptr [rax], rdx
0x7fd3d0e282e0: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282e4: mov rax, qword ptr [rax]
0x7fd3d0e282e7: mov edx, dword ptr [rax+0x8]
0x7fd3d0e282ea: sub edx, 0x1
0x7fd3d0e282ed: mov dword ptr [rax+0x8], edx
0x7fd3d0e282f0: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282f4: mov rax, qword ptr [rax]
0x7fd3d0e282f7: mov edx, dword ptr [rax+0xc]
0x7fd3d0e282fa: add edx, 0x1
0x7fd3d0e282fd: mov dword ptr [rax+0xc], edx
0x7fd3d0e28300: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28304: mov rax, qword ptr [rax]
0x7fd3d0e28307: mov eax, dword ptr [rax+0xc]
0x7fd3d0e2830a: test eax, eax
0x7fd3d0e2830c: jnz 0x7fd3d0e28322
0x7fd3d0e28312: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28316: mov rax, qword ptr [rax]
0x7fd3d0e28319: mov edx, dword ptr [rax+0x10]
0x7fd3d0e2831c: add edx, 0x1
0x7fd3d0e2831f: mov dword ptr [rax+0x10], edx
0x7fd3d0e28322: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28326: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28329: lea edx, ptr [rax-0x1]
0x7fd3d0e2832c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28330: mov dword ptr [rax+0x10], edx
0x7fd3d0e28333: jmp 0x7fd3d0e28163
0x7fd3d0e28338: nop
0x7fd3d0e28339: jmp 0x7fd3d0e28351
0x7fd3d0e2833e: nop
0x7fd3d0e2833f: jmp 0x7fd3d0e28351
0x7fd3d0e28344: nop
0x7fd3d0e28345: jmp 0x7fd3d0e28351
0x7fd3d0e2834a: nop
0x7fd3d0e2834b: jmp 0x7fd3d0e28351
0x7fd3d0e28350: nop
0x7fd3d0e28351: movzx eax, byte ptr [rbp-0x1]
0x7fd3d0e28355: leave 
0x7fd3d0e28356: add rsp, 0x8
0x7fd3d0e2835a: call qword ptr [rip-0x2b432c0]
0x7fd3d0e28360: or byte ptr [rbp-0x1], al
0x7fd3d0e28363: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28367: mov eax, dword ptr [rax+0x8]
0x7fd3d0e2836a: cmp eax, 0x2
0x7fd3d0e2836d: jnz 0x7fd3d0e2843e
0x7fd3d0e28373: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28377: mov edx, dword ptr [rax+0x6c]
0x7fd3d0e2837a: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2837e: mov eax, dword ptr [rax+0x70]
0x7fd3d0e28381: cmp edx, eax
0x7fd3d0e28383: jnl 0x7fd3d0e28412
0x7fd3d0e28389: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2838d: mov rax, qword ptr [rax]
0x7fd3d0e28390: mov eax, dword ptr [rax+0x8]
0x7fd3d0e28393: test eax, eax
0x7fd3d0e28395: cmp byte ptr [rbp-0x1], 0x0
0x7fd3d0e28399: jz 0x7fd3d0e283d2
0x7fd3d0e2839f: mov eax, 0x1
0x7fd3d0e283a4: leave 
0x7fd3d0e283a5: ret 
0x7fd3d0e283a6: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283aa: mov rdi, rax
0x7fd3d0e283ad: call qword ptr [rip-0x2b42cd3]
0x7fd3d0e283b3: or byte ptr [rbp-0x2], al
0x7fd3d0e283b6: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283ba: mov edx, dword ptr [rax+0x78]
0x7fd3d0e283bd: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283c1: mov eax, dword ptr [rax+0x74]
0x7fd3d0e283c4: cmp edx, eax
0x7fd3d0e283c6: jnl 0x7fd3d0e283db
0x7fd3d0e283cc: nop
0x7fd3d0e283cd: jmp 0x7fd3d0e28395
0x7fd3d0e283d2: cmp byte ptr [rbp-0x2], 0x0
0x7fd3d0e283d6: jmp 0x7fd3d0e2839f
0x7fd3d0e283db: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283df: mov eax, dword ptr [rax+0x8]
0x7fd3d0e283e2: cmp eax, 0x4
0x7fd3d0e283e5: jz 0x7fd3d0e28481
0x7fd3d0e283eb: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283ef: mov rdi, rax
0x7fd3d0e283f2: call 0x7fd3d0e285b1
0x7fd3d0e283f7: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283fb: mov dword ptr [rax+0xc], 0x2
0x7fd3d0e28402: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28406: mov eax, dword ptr [rax+0x8]
0x7fd3d0e28409: cmp eax, 0x3
0x7fd3d0e2840c: jnz 0x7fd3d0e27f73
0x7fd3d0e28412: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28416: mov esi, 0x0
0x7fd3d0e2841b: mov rdi, rax
0x7fd3d0e2841e: call 0x7fd3d0e28632
0x7fd3d0e28423: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28427: mov dword ptr [rax+0xc], 0x1
0x7fd3d0e2842e: nop
0x7fd3d0e2842f: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28433: mov eax, dword ptr [rax+0xc]
0x7fd3d0e28436: cmp eax, 0x1
0x7fd3d0e28439: jmp 0x7fd3d0e283a6
0x7fd3d0e2843e: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28442: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28445: test eax, eax
0x7fd3d0e28447: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2844b: mov rdi, rax
0x7fd3d0e2844e: call 0x7fd3d0e29171
0x7fd3d0e28453: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28457: mov eax, dword ptr [rax+0x8]
0x7fd3d0e2845a: cmp eax, 0x4
0x7fd3d0e2845d: setz al
0x7fd3d0e28460: movzx edx, al
0x7fd3d0e28463: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28467: mov esi, edx
0x7fd3d0e28469: mov rdi, rax
0x7fd3d0e2846c: call 0x7fd3d0e28632
0x7fd3d0e28471: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28475: mov dword ptr [rax+0xc], 0x1
0x7fd3d0e2847c: jmp 0x7fd3d0e2842e
0x7fd3d0e28481: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28485: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28488: test eax, eax
0x7fd3d0e2848a: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2848e: mov rdi, rax
0x7fd3d0e28491: call 0x7fd3d0e28f92
0x7fd3d0e28496: test al, al
0x7fd3d0e28498: nop
0x7fd3d0e28499: jmp 0x7fd3d0e28395
0x7fd3d0e2849e: jmp 0x7fd3d0e28395
0x7fd3d0e284a3: push rbp
0x7fd3d0e284a4: mov rbp, rsp
0x7fd3d0e284a7: sub rsp, 0x20
0x7fd3d0e284ab: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e284af: mov dword ptr [rbp-0x1c], esi
0x7fd3d0e284b2: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e284b7: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e284bb: mov rax, qword ptr [rax+0x30]
0x7fd3d0e284bf: mov qword ptr [rbp-0x8], rax
0x7fd3d0e284c3: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e284c8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e284cc: mov rax, qword ptr [rax]
0x7fd3d0e284cf: cmp rax, qword ptr [rbp-0x18]
0x7fd3d0e284d3: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e284d7: mov eax, dword ptr [rax+0x8]
0x7fd3d0e284da: cmp eax, 0x2
0x7fd3d0e284dd: jnz 0x7fd3d0e28507
0x7fd3d0e284e3: cmp dword ptr [rbp-0x1c], 0x0
0x7fd3d0e284e7: jnz 0x7fd3d0e28586
0x7fd3d0e284ed: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e284f1: mov rdi, rax
0x7fd3d0e284f4: call 0x7fd3d0e27f43
0x7fd3d0e284f9: mov byte ptr [rbp-0x9], al
0x7fd3d0e284fc: cmp byte ptr [rbp-0x9], 0x0
0x7fd3d0e28500: mov eax, 0x1
0x7fd3d0e28505: leave 
0x7fd3d0e28506: ret 
0x7fd3d0e28507: cmp eax, 0x2
0x7fd3d0e2850a: cmp eax, 0x3
0x7fd3d0e2850d: cmp eax, 0x4
0x7fd3d0e28510: cmp dword ptr [rbp-0x1c], 0x2
0x7fd3d0e28514: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28518: mov edx, dword ptr [rax+0x10]
0x7fd3d0e2851b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2851f: mov rax, qword ptr [rax]
0x7fd3d0e28522: mov eax, dword ptr [rax+0x8]
0x7fd3d0e28525: cmp edx, eax
0x7fd3d0e28527: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e2852b: mov rdi, rax
0x7fd3d0e2852e: call 0x7fd3d0e27f43
0x7fd3d0e28533: mov byte ptr [rbp-0x9], al
0x7fd3d0e28536: cmp byte ptr [rbp-0x9], 0x0
0x7fd3d0e2853a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2853e: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28541: test eax, eax
0x7fd3d0e28543: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28547: mov rdi, rax
0x7fd3d0e2854a: call 0x7fd3d0e28f92
0x7fd3d0e2854f: test al, al
0x7fd3d0e28551: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28555: mov edx, dword ptr [rax+0x78]
0x7fd3d0e28558: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2855c: mov eax, dword ptr [rax+0x74]
0x7fd3d0e2855f: cmp edx, eax
0x7fd3d0e28561: jnl 0x7fd3d0e28571
0x7fd3d0e28567: mov eax, 0x3
0x7fd3d0e2856c: jmp 0x7fd3d0e28505
0x7fd3d0e28571: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28575: mov dword ptr [rax+0x8], 0x1
0x7fd3d0e2857c: mov eax, 0x4
0x7fd3d0e28581: jmp 0x7fd3d0e28505
0x7fd3d0e28586: cmp dword ptr [rbp-0x1c], 0x1
0x7fd3d0e2858a: cmp dword ptr [rbp-0x1c], 0x2
0x7fd3d0e2858e: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28592: mov edx, dword ptr [rax+0x8]
0x7fd3d0e28595: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28599: mov dword ptr [rax+0x10], edx
0x7fd3d0e2859c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e285a0: mov dword ptr [rax+0x8], 0x4
0x7fd3d0e285a7: jmp 0x7fd3d0e284d3
0x7fd3d0e285ac: jmp 0x7fd3d0e284d3
0x7fd3d0e285b1: push rbp
0x7fd3d0e285b2: mov rbp, rsp
0x7fd3d0e285b5: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e285b9: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e285bd: mov dword ptr [rax+0x6c], 0x0
0x7fd3d0e285c4: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e285c8: mov dword ptr [rax+0x74], 0x0
0x7fd3d0e285cf: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e285d3: mov dword ptr [rax+0x78], 0x0
0x7fd3d0e285da: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e285de: mov dword ptr [rax+0x288], 0xffffffff
0x7fd3d0e285e8: mov dword ptr [rbp-0x4], 0x0
0x7fd3d0e285ef: cmp dword ptr [rbp-0x4], 0xff
0x7fd3d0e285f6: mov rdx, qword ptr [rbp-0x18]
0x7fd3d0e285fa: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e285fd: cdqe 
0x7fd3d0e285ff: mov byte ptr [rdx+rax*1+0x80], 0x0
0x7fd3d0e28607: add dword ptr [rbp-0x4], 0x1
0x7fd3d0e2860b: cmp dword ptr [rbp-0x4], 0xff
0x7fd3d0e28612: jle 0x7fd3d0e285f6
0x7fd3d0e28618: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e2861c: mov eax, dword ptr [rax+0x294]
0x7fd3d0e28622: lea edx, ptr [rax+0x1]
0x7fd3d0e28625: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28629: mov dword ptr [rax+0x294], edx
0x7fd3d0e2862f: pop rbp
0x7fd3d0e28630: ret 
0x7fd3d0e28631: ret 
0x7fd3d0e28632: push rbp
0x7fd3d0e28633: mov rbp, rsp
0x7fd3d0e28636: sub rsp, 0x10
0x7fd3d0e2863a: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e2863e: mov eax, esi
0x7fd3d0e28640: mov byte ptr [rbp-0xc], al
0x7fd3d0e28643: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28647: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e2864a: test eax, eax
0x7fd3d0e2864c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28650: mov eax, dword ptr [rax+0x288]
0x7fd3d0e28656: mov edx, eax
0x7fd3d0e28658: not edx
0x7fd3d0e2865a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2865e: mov dword ptr [rax+0x288], edx
0x7fd3d0e28664: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28668: mov eax, dword ptr [rax+0x28c]
0x7fd3d0e2866e: mov edx, eax
0x7fd3d0e28670: rol edx, 0x1
0x7fd3d0e28672: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28676: mov dword ptr [rax+0x28c], edx
0x7fd3d0e2867c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28680: mov edx, dword ptr [rax+0x28c]
0x7fd3d0e28686: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2868a: mov eax, dword ptr [rax+0x288]
0x7fd3d0e28690: xor edx, eax
0x7fd3d0e28692: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28696: mov dword ptr [rax+0x28c], edx
0x7fd3d0e2869c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286a0: mov eax, dword ptr [rax+0x294]
0x7fd3d0e286a6: cmp eax, 0x1
0x7fd3d0e286a9: jle 0x7fd3d0e286ba
0x7fd3d0e286af: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286b3: mov dword ptr [rax+0x74], 0x0
0x7fd3d0e286ba: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286be: mov eax, dword ptr [rax+0x290]
0x7fd3d0e286c4: cmp eax, 0x1
0x7fd3d0e286c7: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286cb: mov rdi, rax
0x7fd3d0e286ce: call 0x7fd3d0e27ce6
0x7fd3d0e286d3: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286d7: mov rdx, qword ptr [rax+0x20]
0x7fd3d0e286db: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286df: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e286e2: cdqe 
0x7fd3d0e286e4: add rdx, rax
0x7fd3d0e286e7: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286eb: mov qword ptr [rax+0x50], rdx
0x7fd3d0e286ef: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286f3: mov eax, dword ptr [rax+0x294]
0x7fd3d0e286f9: cmp eax, 0x1
0x7fd3d0e286fc: jz 0x7fd3d0e287f1
0x7fd3d0e28702: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28706: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e28709: test eax, eax
0x7fd3d0e2870b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2870f: mov esi, 0x31
0x7fd3d0e28714: mov rdi, rax
0x7fd3d0e28717: call 0x7fd3d0e288f4
0x7fd3d0e2871c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28720: mov esi, 0x41
0x7fd3d0e28725: mov rdi, rax
0x7fd3d0e28728: call 0x7fd3d0e288f4
0x7fd3d0e2872d: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28731: mov esi, 0x59
0x7fd3d0e28736: mov rdi, rax
0x7fd3d0e28739: call 0x7fd3d0e288f4
0x7fd3d0e2873e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28742: mov esi, 0x26
0x7fd3d0e28747: mov rdi, rax
0x7fd3d0e2874a: call 0x7fd3d0e288f4
0x7fd3d0e2874f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28753: mov esi, 0x53
0x7fd3d0e28758: mov rdi, rax
0x7fd3d0e2875b: call 0x7fd3d0e288f4
0x7fd3d0e28760: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28764: mov esi, 0x59
0x7fd3d0e28769: mov rdi, rax
0x7fd3d0e2876c: call 0x7fd3d0e288f4
0x7fd3d0e28771: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28775: mov edx, dword ptr [rax+0x288]
0x7fd3d0e2877b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2877f: mov esi, edx
0x7fd3d0e28781: mov rdi, rax
0x7fd3d0e28784: call 0x7fd3d0e2891d
0x7fd3d0e28789: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2878d: mov edx, 0x0
0x7fd3d0e28792: mov esi, 0x1
0x7fd3d0e28797: mov rdi, rax
0x7fd3d0e2879a: call 0x7fd3d0e27e50
0x7fd3d0e2879f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287a3: mov eax, dword ptr [rax+0x30]
0x7fd3d0e287a6: mov edx, eax
0x7fd3d0e287a8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287ac: mov esi, 0x18
0x7fd3d0e287b1: mov rdi, rax
0x7fd3d0e287b4: call 0x7fd3d0e27e50
0x7fd3d0e287b9: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287bd: mov rdi, rax
0x7fd3d0e287c0: call 0x7fd3d0e2784c
0x7fd3d0e287c5: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287c9: mov rdi, rax
0x7fd3d0e287cc: call qword ptr [rip-0x2b3eab2]
0x7fd3d0e287d2: cmp byte ptr [rbp-0xc], 0x0
0x7fd3d0e287d6: jnz 0x7fd3d0e28853
0x7fd3d0e287dc: leave 
0x7fd3d0e287dd: ret 
0x7fd3d0e287de: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287e2: mov eax, dword ptr [rax+0x290]
0x7fd3d0e287e8: cmp eax, 0x1
0x7fd3d0e287eb: jle 0x7fd3d0e286c7
0x7fd3d0e287f1: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287f5: mov rdi, rax
0x7fd3d0e287f8: call 0x7fd3d0e29229
0x7fd3d0e287fd: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28801: mov esi, 0x42
0x7fd3d0e28806: mov rdi, rax
0x7fd3d0e28809: call 0x7fd3d0e288f4
0x7fd3d0e2880e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28812: mov esi, 0x5a
0x7fd3d0e28817: mov rdi, rax
0x7fd3d0e2881a: call 0x7fd3d0e288f4
0x7fd3d0e2881f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28823: mov esi, 0x68
0x7fd3d0e28828: mov rdi, rax
0x7fd3d0e2882b: call 0x7fd3d0e288f4
0x7fd3d0e28830: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28834: mov eax, dword ptr [rax+0x298]
0x7fd3d0e2883a: add eax, 0x30
0x7fd3d0e2883d: movzx edx, al
0x7fd3d0e28840: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28844: mov esi, edx
0x7fd3d0e28846: mov rdi, rax
0x7fd3d0e28849: call 0x7fd3d0e288f4
0x7fd3d0e2884e: jmp 0x7fd3d0e28702
0x7fd3d0e28853: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28857: mov esi, 0x17
0x7fd3d0e2885c: mov rdi, rax
0x7fd3d0e2885f: call 0x7fd3d0e288f4
0x7fd3d0e28864: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28868: mov esi, 0x72
0x7fd3d0e2886d: mov rdi, rax
0x7fd3d0e28870: call 0x7fd3d0e288f4
0x7fd3d0e28875: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28879: mov esi, 0x45
0x7fd3d0e2887e: mov rdi, rax
0x7fd3d0e28881: call 0x7fd3d0e288f4
0x7fd3d0e28886: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2888a: mov esi, 0x38
0x7fd3d0e2888f: mov rdi, rax
0x7fd3d0e28892: call 0x7fd3d0e288f4
0x7fd3d0e28897: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2889b: mov esi, 0x50
0x7fd3d0e288a0: mov rdi, rax
0x7fd3d0e288a3: call 0x7fd3d0e288f4
0x7fd3d0e288a8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288ac: mov esi, 0x90
0x7fd3d0e288b1: mov rdi, rax
0x7fd3d0e288b4: call 0x7fd3d0e288f4
0x7fd3d0e288b9: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288bd: mov edx, dword ptr [rax+0x28c]
0x7fd3d0e288c3: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288c7: mov esi, edx
0x7fd3d0e288c9: mov rdi, rax
0x7fd3d0e288cc: call 0x7fd3d0e2891d
0x7fd3d0e288d1: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288d5: mov eax, dword ptr [rax+0x290]
0x7fd3d0e288db: cmp eax, 0x1
0x7fd3d0e288de: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288e2: mov rdi, rax
0x7fd3d0e288e5: call 0x7fd3d0e28ed6
0x7fd3d0e288ea: call 0x7fd3d0e28ed6
0x7fd3d0e288ef: jmp 0x7fd3d0e287dc
0x7fd3d0e288f4: push rbp
0x7fd3d0e288f5: mov rbp, rsp
0x7fd3d0e288f8: sub rsp, 0x10
0x7fd3d0e288fc: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28900: mov eax, esi
0x7fd3d0e28902: mov byte ptr [rbp-0xc], al
0x7fd3d0e28905: movzx edx, byte ptr [rbp-0xc]
0x7fd3d0e28909: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2890d: mov esi, 0x8
0x7fd3d0e28912: mov rdi, rax
0x7fd3d0e28915: call 0x7fd3d0e27e50
0x7fd3d0e2891a: leave 
0x7fd3d0e2891b: ret 
0x7fd3d0e2891c: ret 
0x7fd3d0e2891d: push rbp
0x7fd3d0e2891e: mov rbp, rsp
0x7fd3d0e28921: sub rsp, 0x10
0x7fd3d0e28925: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28929: mov dword ptr [rbp-0xc], esi
0x7fd3d0e2892c: mov eax, dword ptr [rbp-0xc]
0x7fd3d0e2892f: mov edx, eax
0x7fd3d0e28931: shr edx, 0x18
0x7fd3d0e28934: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28938: mov esi, 0x8
0x7fd3d0e2893d: mov rdi, rax
0x7fd3d0e28940: call 0x7fd3d0e27e50
0x7fd3d0e28945: mov eax, dword ptr [rbp-0xc]
0x7fd3d0e28948: shr eax, 0x10
0x7fd3d0e2894b: movzx edx, al
0x7fd3d0e2894e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28952: mov esi, 0x8
0x7fd3d0e28957: mov rdi, rax
0x7fd3d0e2895a: call 0x7fd3d0e27e50
0x7fd3d0e2895f: mov eax, dword ptr [rbp-0xc]
0x7fd3d0e28962: shr eax, 0x8
0x7fd3d0e28965: movzx edx, al
0x7fd3d0e28968: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2896c: mov esi, 0x8
0x7fd3d0e28971: mov rdi, rax
0x7fd3d0e28974: call 0x7fd3d0e27e50
0x7fd3d0e28979: mov eax, dword ptr [rbp-0xc]
0x7fd3d0e2897c: movzx edx, al
0x7fd3d0e2897f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28983: mov esi, 0x8
0x7fd3d0e28988: mov rdi, rax
0x7fd3d0e2898b: call 0x7fd3d0e27e50
0x7fd3d0e28990: leave 
0x7fd3d0e28991: ret 
0x7fd3d0e28992: ret 
0x7fd3d0e28993: push rbp
0x7fd3d0e28994: mov rbp, rsp
0x7fd3d0e28997: sub rsp, 0x50
0x7fd3d0e2899b: mov qword ptr [rbp-0x28], rdi
0x7fd3d0e2899f: mov qword ptr [rbp-0x30], rsi
0x7fd3d0e289a3: mov dword ptr [rbp-0x34], edx
0x7fd3d0e289a6: mov qword ptr [rbp-0x40], rcx
0x7fd3d0e289aa: mov qword ptr [rbp-0x48], r8
0x7fd3d0e289ae: mov qword ptr [rbp-0x50], r9
0x7fd3d0e289b2: mov rax, qword ptr [rbp-0x30]
0x7fd3d0e289b6: mov qword ptr [rbp-0x8], rax
0x7fd3d0e289ba: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e289bf: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e289c3: movzx eax, byte ptr [rax+0x1394]
0x7fd3d0e289ca: test al, al
0x7fd3d0e289cc: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e289d0: mov rax, qword ptr [rax]
0x7fd3d0e289d3: mov rdi, rax
0x7fd3d0e289d6: call qword ptr [rip-0x2b3c97c]
0x7fd3d0e289dc: test eax, eax
0x7fd3d0e289de: cmp qword ptr [rbp-0x40], 0x0
0x7fd3d0e289e3: mov rax, qword ptr [rbp-0x40]
0x7fd3d0e289e7: mov dword ptr [rax], 0x0
0x7fd3d0e289ed: cmp qword ptr [rbp-0x48], 0x0
0x7fd3d0e289f2: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e289f6: mov dword ptr [rax], 0x0
0x7fd3d0e289fc: cmp qword ptr [rbp-0x50], 0x0
0x7fd3d0e28a01: mov rax, qword ptr [rbp-0x50]
0x7fd3d0e28a05: mov dword ptr [rax], 0x0
0x7fd3d0e28a0b: cmp qword ptr [rbp+0x10], 0x0
0x7fd3d0e28a10: mov rax, qword ptr [rbp+0x10]
0x7fd3d0e28a14: mov dword ptr [rax], 0x0
0x7fd3d0e28a1a: cmp dword ptr [rbp-0x34], 0x0
0x7fd3d0e28a1e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a22: mov eax, dword ptr [rax+0x13e8]
0x7fd3d0e28a28: test eax, eax
0x7fd3d0e28a2a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a2e: mov dword ptr [rax+0x13b8], 0x1388
0x7fd3d0e28a38: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a3c: lea rdx, ptr [rax+0x8]
0x7fd3d0e28a40: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a44: mov qword ptr [rax+0x13b0], rdx
0x7fd3d0e28a4b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a4f: add rax, 0x1398
0x7fd3d0e28a55: mov esi, 0x2
0x7fd3d0e28a5a: mov rdi, rax
0x7fd3d0e28a5d: call 0x7fd3d0e284a3
0x7fd3d0e28a62: mov dword ptr [rbp-0xc], eax
0x7fd3d0e28a65: cmp dword ptr [rbp-0xc], 0x3
0x7fd3d0e28a69: jnz 0x7fd3d0e28bef
0x7fd3d0e28a6f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a73: mov eax, dword ptr [rax+0x13b8]
0x7fd3d0e28a79: cmp eax, 0x1387
0x7fd3d0e28a7e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a82: mov eax, dword ptr [rax+0x13b8]
0x7fd3d0e28a88: mov edx, 0x1388
0x7fd3d0e28a8d: mov ecx, edx
0x7fd3d0e28a8f: sub ecx, eax
0x7fd3d0e28a91: mov eax, ecx
0x7fd3d0e28a93: mov dword ptr [rbp-0x10], eax
0x7fd3d0e28a96: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a9a: mov rdx, qword ptr [rax]
0x7fd3d0e28a9d: mov eax, dword ptr [rbp-0x10]
0x7fd3d0e28aa0: cdqe 
0x7fd3d0e28aa2: mov rcx, qword ptr [rbp-0x8]
0x7fd3d0e28aa6: lea rdi, ptr [rcx+0x8]
0x7fd3d0e28aaa: mov rcx, rdx
0x7fd3d0e28aad: mov rdx, rax
0x7fd3d0e28ab0: mov esi, 0x1
0x7fd3d0e28ab5: call qword ptr [rip-0x2b3bd1b]
0x7fd3d0e28abb: mov dword ptr [rbp-0x14], eax
0x7fd3d0e28abe: mov eax, dword ptr [rbp-0x10]
0x7fd3d0e28ac1: cmp eax, dword ptr [rbp-0x14]
0x7fd3d0e28ac4: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ac8: mov rax, qword ptr [rax]
0x7fd3d0e28acb: mov rdi, rax
0x7fd3d0e28ace: call qword ptr [rip-0x2b3bb74]
0x7fd3d0e28ad4: test eax, eax
0x7fd3d0e28ad6: cmp dword ptr [rbp-0xc], 0x4
0x7fd3d0e28ada: jz 0x7fd3d0e28b1e
0x7fd3d0e28ae0: nop
0x7fd3d0e28ae1: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ae5: mov dword ptr [rax+0x13b8], 0x1388
0x7fd3d0e28aef: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28af3: lea rdx, ptr [rax+0x8]
0x7fd3d0e28af7: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28afb: mov qword ptr [rax+0x13b0], rdx
0x7fd3d0e28b02: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b06: add rax, 0x1398
0x7fd3d0e28b0c: mov esi, 0x2
0x7fd3d0e28b11: mov rdi, rax
0x7fd3d0e28b14: call 0x7fd3d0e284a3
0x7fd3d0e28b19: jmp 0x7fd3d0e28a62
0x7fd3d0e28b1e: nop
0x7fd3d0e28b1f: cmp dword ptr [rbp-0x34], 0x0
0x7fd3d0e28b23: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b27: mov rax, qword ptr [rax]
0x7fd3d0e28b2a: mov rdi, rax
0x7fd3d0e28b2d: call qword ptr [rip-0x2b3b613]
0x7fd3d0e28b33: test eax, eax
0x7fd3d0e28b35: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b39: mov rax, qword ptr [rax]
0x7fd3d0e28b3c: mov rdi, rax
0x7fd3d0e28b3f: call qword ptr [rip-0x2b3b4e5]
0x7fd3d0e28b45: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b49: mov rax, qword ptr [rax]
0x7fd3d0e28b4c: mov rdi, rax
0x7fd3d0e28b4f: call qword ptr [rip-0x2b3b3f5]
0x7fd3d0e28b55: test eax, eax
0x7fd3d0e28b57: cmp qword ptr [rbp-0x40], 0x0
0x7fd3d0e28b5c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b60: mov edx, dword ptr [rax+0x13a4]
0x7fd3d0e28b66: mov rax, qword ptr [rbp-0x40]
0x7fd3d0e28b6a: mov dword ptr [rax], edx
0x7fd3d0e28b6c: cmp qword ptr [rbp-0x48], 0x0
0x7fd3d0e28b71: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b75: mov edx, dword ptr [rax+0x13a8]
0x7fd3d0e28b7b: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e28b7f: mov dword ptr [rax], edx
0x7fd3d0e28b81: cmp qword ptr [rbp-0x50], 0x0
0x7fd3d0e28b86: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b8a: mov edx, dword ptr [rax+0x13bc]
0x7fd3d0e28b90: mov rax, qword ptr [rbp-0x50]
0x7fd3d0e28b94: mov dword ptr [rax], edx
0x7fd3d0e28b96: cmp qword ptr [rbp+0x10], 0x0
0x7fd3d0e28b9b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b9f: mov edx, dword ptr [rax+0x13c0]
0x7fd3d0e28ba5: mov rax, qword ptr [rbp+0x10]
0x7fd3d0e28ba9: mov dword ptr [rax], edx
0x7fd3d0e28bab: cmp qword ptr [rbp-0x28], 0x0
0x7fd3d0e28bb0: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28bb4: mov dword ptr [rax], 0x0
0x7fd3d0e28bba: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28bbf: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28bc3: mov dword ptr [rax+0x13e8], 0x0
0x7fd3d0e28bcd: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28bd1: add rax, 0x1398
0x7fd3d0e28bd7: mov rdi, rax
0x7fd3d0e28bda: call qword ptr [rip-0x2b3ac80]
0x7fd3d0e28be0: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28be4: mov rdi, rax
0x7fd3d0e28be7: call qword ptr [rip-0x2b3abcd]
0x7fd3d0e28bed: leave 
0x7fd3d0e28bee: ret 
0x7fd3d0e28bef: cmp dword ptr [rbp-0xc], 0x4
0x7fd3d0e28bf3: jz 0x7fd3d0e28a6f
0x7fd3d0e28bf9: jmp qword ptr [rip-0x2b3aa5f]
0x7fd3d0e28bff: push rbp
0x7fd3d0e28c00: mov rbp, rsp
0x7fd3d0e28c03: sub rsp, 0x20
0x7fd3d0e28c07: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28c0b: mov qword ptr [rbp-0x20], rsi
0x7fd3d0e28c0f: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e28c14: jnz 0x7fd3d0e28c5e
0x7fd3d0e28c1a: call 0x7fd3d0e2901f
0x7fd3d0e28c1f: mov qword ptr [rbp-0x10], rax
0x7fd3d0e28c23: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28c27: mov rdi, rax
0x7fd3d0e28c2a: call qword ptr [rip-0x2b3a790]
0x7fd3d0e28c30: add eax, 0x5
0x7fd3d0e28c33: mov edi, eax
0x7fd3d0e28c35: call 0x7fd3d0e28d6f
0x7fd3d0e28c3a: mov rdx, qword ptr [rbp-0x10]
0x7fd3d0e28c3e: mov qword ptr [rdx], rax
0x7fd3d0e28c41: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28c45: mov rax, qword ptr [rax]
0x7fd3d0e28c48: mov rdx, qword ptr [rbp-0x20]
0x7fd3d0e28c4c: mov rsi, rdx
0x7fd3d0e28c4f: mov rdi, rax
0x7fd3d0e28c52: call qword ptr [rip-0x2b3a4f8]
0x7fd3d0e28c58: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28c5c: leave 
0x7fd3d0e28c5d: ret 
0x7fd3d0e28c5e: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28c62: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28c66: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28c6a: mov rax, qword ptr [rax+0x8]
0x7fd3d0e28c6e: test rax, rax
0x7fd3d0e28c71: jnz 0x7fd3d0e28c9c
0x7fd3d0e28c77: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28c7b: mov rax, qword ptr [rax+0x8]
0x7fd3d0e28c7f: mov rdx, qword ptr [rbp-0x20]
0x7fd3d0e28c83: mov rsi, rdx
0x7fd3d0e28c86: mov rdi, rax
0x7fd3d0e28c89: call 0x7fd3d0e28bff
0x7fd3d0e28c8e: mov rdx, qword ptr [rbp-0x8]
0x7fd3d0e28c92: mov qword ptr [rdx+0x8], rax
0x7fd3d0e28c96: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28c9a: leave 
0x7fd3d0e28c9b: ret 
0x7fd3d0e28c9c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ca0: mov rax, qword ptr [rax+0x8]
0x7fd3d0e28ca4: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28ca8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28cac: mov rax, qword ptr [rax+0x8]
0x7fd3d0e28cb0: test rax, rax
0x7fd3d0e28cb3: jnz 0x7fd3d0e28c9c
0x7fd3d0e28cb9: jmp 0x7fd3d0e28c77
0x7fd3d0e28cbe: push rbp
0x7fd3d0e28cbf: mov rbp, rsp
0x7fd3d0e28cc2: sub rsp, 0x20
0x7fd3d0e28cc6: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28cca: mov qword ptr [rbp-0x20], rsi
0x7fd3d0e28cce: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28cd2: mov rdi, rax
0x7fd3d0e28cd5: call qword ptr [rip-0x2b39bfb]
0x7fd3d0e28cdb: mov dword ptr [rbp-0x4], eax
0x7fd3d0e28cde: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28ce2: mov rdi, rax
0x7fd3d0e28ce5: call qword ptr [rip-0x2b39b0b]
0x7fd3d0e28ceb: mov dword ptr [rbp-0x8], eax
0x7fd3d0e28cee: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e28cf1: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e28cf4: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e28cf7: movsxd rdx, eax
0x7fd3d0e28cfa: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e28cfd: cdqe 
0x7fd3d0e28cff: sub rdx, rax
0x7fd3d0e28d02: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28d06: add rdx, rax
0x7fd3d0e28d09: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28d0d: mov rsi, rax
0x7fd3d0e28d10: mov rdi, rdx
0x7fd3d0e28d13: call qword ptr [rip-0x2b39779]
0x7fd3d0e28d19: test eax, eax
0x7fd3d0e28d1b: mov eax, 0x0
0x7fd3d0e28d20: leave 
0x7fd3d0e28d21: ret 
0x7fd3d0e28d22: ret 
0x7fd3d0e28d23: push rbp
0x7fd3d0e28d24: mov rbp, rsp
0x7fd3d0e28d27: sub rsp, 0x10
0x7fd3d0e28d2b: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28d2f: mov qword ptr [rbp-0x10], rsi
0x7fd3d0e28d33: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28d37: mov rdi, rax
0x7fd3d0e28d3a: call qword ptr [rip-0x2b39420]
0x7fd3d0e28d40: cmp rax, 0x400
0x7fd3d0e28d46: mov rcx, qword ptr [rbp-0x10]
0x7fd3d0e28d4a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28d4e: mov edx, 0x400
0x7fd3d0e28d53: mov rsi, rcx
0x7fd3d0e28d56: mov rdi, rax
0x7fd3d0e28d59: call qword ptr [rip-0x2b3923f]
0x7fd3d0e28d5f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28d63: add rax, 0x400
0x7fd3d0e28d69: mov byte ptr [rax], 0x0
0x7fd3d0e28d6c: leave 
0x7fd3d0e28d6d: ret 
0x7fd3d0e28d6e: ret 
0x7fd3d0e28d6f: push rbp
0x7fd3d0e28d70: mov rbp, rsp
0x7fd3d0e28d73: sub rsp, 0x20
0x7fd3d0e28d77: mov dword ptr [rbp-0x14], edi
0x7fd3d0e28d7a: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e28d7d: cdqe 
0x7fd3d0e28d7f: mov rdi, rax
0x7fd3d0e28d82: call qword ptr [rip-0x2b38ee8]
0x7fd3d0e28d88: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28d8c: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28d91: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28d95: leave 
0x7fd3d0e28d96: ret 
0x7fd3d0e28d97: ret 
0x7fd3d0e28d98: push rbp
0x7fd3d0e28d99: mov rbp, rsp
0x7fd3d0e28d9c: sub rsp, 0x30
0x7fd3d0e28da0: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28da4: mov qword ptr [rbp-0x20], rsi
0x7fd3d0e28da8: mov dword ptr [rbp-0x24], edx
0x7fd3d0e28dab: mov dword ptr [rbp-0x28], ecx
0x7fd3d0e28dae: mov dword ptr [rbp-0x2c], r8d
0x7fd3d0e28db2: mov qword ptr [rbp-0x8], 0x0
0x7fd3d0e28dba: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e28dbf: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28dc3: mov dword ptr [rax], 0x0
0x7fd3d0e28dc9: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28dce: cmp qword ptr [rbp-0x20], 0x0
0x7fd3d0e28dd3: cmp dword ptr [rbp-0x24], 0x0
0x7fd3d0e28dd7: cmp dword ptr [rbp-0x24], 0x9
0x7fd3d0e28ddb: cmp dword ptr [rbp-0x2c], 0x0
0x7fd3d0e28ddf: cmp dword ptr [rbp-0x2c], 0xfa
0x7fd3d0e28de6: cmp dword ptr [rbp-0x28], 0x0
0x7fd3d0e28dea: cmp dword ptr [rbp-0x28], 0x4
0x7fd3d0e28dee: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28df2: mov rdi, rax
0x7fd3d0e28df5: call qword ptr [rip-0x2b3875b]
0x7fd3d0e28dfb: test eax, eax
0x7fd3d0e28dfd: mov edi, 0x13f0
0x7fd3d0e28e02: call qword ptr [rip-0x2b38668]
0x7fd3d0e28e08: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28e0c: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28e11: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e28e16: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28e1a: mov dword ptr [rax], 0x0
0x7fd3d0e28e20: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28e25: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e29: mov dword ptr [rax+0x13e8], 0x0
0x7fd3d0e28e33: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e37: mov byte ptr [rax+0x13ec], 0x0
0x7fd3d0e28e3e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e42: mov dword ptr [rax+0x1390], 0x0
0x7fd3d0e28e4c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e50: mov rdx, qword ptr [rbp-0x20]
0x7fd3d0e28e54: mov qword ptr [rax], rdx
0x7fd3d0e28e57: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e5b: mov byte ptr [rax+0x1394], 0x1
0x7fd3d0e28e62: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e66: mov qword ptr [rax+0x13d0], 0x0
0x7fd3d0e28e71: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e75: mov qword ptr [rax+0x13d8], 0x0
0x7fd3d0e28e80: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e84: mov qword ptr [rax+0x13e0], 0x0
0x7fd3d0e28e8f: cmp dword ptr [rbp-0x2c], 0x0
0x7fd3d0e28e93: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e97: lea rdi, ptr [rax+0x1398]
0x7fd3d0e28e9e: mov ecx, dword ptr [rbp-0x2c]
0x7fd3d0e28ea1: mov edx, dword ptr [rbp-0x28]
0x7fd3d0e28ea4: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e28ea7: mov esi, eax
0x7fd3d0e28ea9: call qword ptr [rip-0x2b37ecf]
0x7fd3d0e28eaf: mov dword ptr [rbp-0xc], eax
0x7fd3d0e28eb2: cmp dword ptr [rbp-0xc], 0x0
0x7fd3d0e28eb6: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28eba: mov dword ptr [rax+0x13a0], 0x0
0x7fd3d0e28ec4: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ec8: mov byte ptr [rax+0x13ec], 0x1
0x7fd3d0e28ecf: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ed3: leave 
0x7fd3d0e28ed4: ret 
0x7fd3d0e28ed5: ret 
0x7fd3d0e28ed6: push rbp
0x7fd3d0e28ed7: mov rbp, rsp
0x7fd3d0e28eda: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28ede: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ee2: mov eax, dword ptr [rax+0x284]
0x7fd3d0e28ee8: test eax, eax
0x7fd3d0e28eea: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28eee: mov rdx, qword ptr [rax+0x50]
0x7fd3d0e28ef2: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ef6: mov eax, dword ptr [rax+0x74]
0x7fd3d0e28ef9: cdqe 
0x7fd3d0e28efb: add rdx, rax
0x7fd3d0e28efe: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f02: mov eax, dword ptr [rax+0x280]
0x7fd3d0e28f08: shr eax, 0x18
0x7fd3d0e28f0b: mov byte ptr [rdx], al
0x7fd3d0e28f0d: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f11: mov eax, dword ptr [rax+0x74]
0x7fd3d0e28f14: lea edx, ptr [rax+0x1]
0x7fd3d0e28f17: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f1b: mov dword ptr [rax+0x74], edx
0x7fd3d0e28f1e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f22: mov eax, dword ptr [rax+0x280]
0x7fd3d0e28f28: mov edx, eax
0x7fd3d0e28f2a: shl edx, 0x8
0x7fd3d0e28f2d: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f31: mov dword ptr [rax+0x280], edx
0x7fd3d0e28f37: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f3b: mov eax, dword ptr [rax+0x284]
0x7fd3d0e28f41: lea edx, ptr [rax-0x8]
0x7fd3d0e28f44: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f48: mov dword ptr [rax+0x284], edx
0x7fd3d0e28f4e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f52: mov eax, dword ptr [rax+0x284]
0x7fd3d0e28f58: test eax, eax
0x7fd3d0e28f5a: jnle 0x7fd3d0e28eea
0x7fd3d0e28f60: pop rbp
0x7fd3d0e28f61: ret 
0x7fd3d0e28f62: ret 
0x7fd3d0e28f63: push rbp
0x7fd3d0e28f64: mov rbp, rsp
0x7fd3d0e28f67: sub rsp, 0x20
0x7fd3d0e28f6b: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28f6f: mov dword ptr [rbp-0x1c], esi
0x7fd3d0e28f72: mov dword ptr [rbp-0x20], edx
0x7fd3d0e28f75: mov eax, dword ptr [rbp-0x1c]
0x7fd3d0e28f78: imul eax, dword ptr [rbp-0x20]
0x7fd3d0e28f7c: cdqe 
0x7fd3d0e28f7e: mov rdi, rax
0x7fd3d0e28f81: call qword ptr [rip-0x2b36fe7]
0x7fd3d0e28f87: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28f8b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f8f: leave 
0x7fd3d0e28f90: ret 
0x7fd3d0e28f91: ret 
0x7fd3d0e28f92: push rbp
0x7fd3d0e28f93: mov rbp, rsp
0x7fd3d0e28f96: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28f9a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f9e: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e28fa1: cmp eax, 0xff
0x7fd3d0e28fa6: mov eax, 0x1
0x7fd3d0e28fab: pop rbp
0x7fd3d0e28fac: ret 
0x7fd3d0e28fad: ret 
0x7fd3d0e28fae: push rbp
0x7fd3d0e28faf: mov rbp, rsp
0x7fd3d0e28fb2: sub rsp, 0x10
0x7fd3d0e28fb6: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28fba: mov qword ptr [rbp-0x10], rsi
0x7fd3d0e28fbe: cmp qword ptr [rbp-0x10], 0x0
0x7fd3d0e28fc3: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28fc7: mov rdi, rax
0x7fd3d0e28fca: call qword ptr [rip-0x2b369f0]
0x7fd3d0e28fd0: leave 
0x7fd3d0e28fd1: ret 
0x7fd3d0e28fd2: ret 
0x7fd3d0e28fd3: push rbp
0x7fd3d0e28fd4: mov rbp, rsp
0x7fd3d0e28fd7: sub rsp, 0x20
0x7fd3d0e28fdb: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28fdf: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28fe3: mov esi, 0x419598
0x7fd3d0e28fe8: mov rdi, rax
0x7fd3d0e28feb: call qword ptr [rip-0x2b36751]
0x7fd3d0e28ff1: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28ff5: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28ffa: setnz al
0x7fd3d0e28ffd: mov byte ptr [rbp-0x9], al
0x7fd3d0e29000: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e29005: jz 0x7fd3d0e29018
0x7fd3d0e2900b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2900f: mov rdi, rax
0x7fd3d0e29012: call qword ptr [rip-0x2b36538]
0x7fd3d0e29018: movzx eax, byte ptr [rbp-0x9]
0x7fd3d0e2901c: leave 
0x7fd3d0e2901d: ret 
0x7fd3d0e2901e: ret 
0x7fd3d0e2901f: push rbp
0x7fd3d0e29020: mov rbp, rsp
0x7fd3d0e29023: sub rsp, 0x10
0x7fd3d0e29027: mov edi, 0x10
0x7fd3d0e2902c: call 0x7fd3d0e28d6f
0x7fd3d0e29031: mov qword ptr [rbp-0x8], rax
0x7fd3d0e29035: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29039: mov qword ptr [rax], 0x0
0x7fd3d0e29040: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29044: mov qword ptr [rax+0x8], 0x0
0x7fd3d0e2904c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29050: leave 
0x7fd3d0e29051: ret 
0x7fd3d0e29052: ret 
0x7fd3d0e29053: push rbp
0x7fd3d0e29054: mov rbp, rsp
0x7fd3d0e29057: sub rsp, 0x30
0x7fd3d0e2905b: mov qword ptr [rbp-0x28], rdi
0x7fd3d0e2905f: mov rax, qword ptr [0x61d308]
0x7fd3d0e29067: mov qword ptr [rbp-0x20], rax
0x7fd3d0e2906b: mov rax, qword ptr [0x61d318]
0x7fd3d0e29073: mov qword ptr [rbp-0x18], rax
0x7fd3d0e29077: mov edx, dword ptr [0x61d2d8]
0x7fd3d0e2907e: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e29082: mov esi, edx
0x7fd3d0e29084: mov rdi, rax
0x7fd3d0e29087: call qword ptr [rip-0x2b35ded]
0x7fd3d0e2908d: mov dword ptr [rbp-0x4], eax
0x7fd3d0e29090: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e29094: lea rdx, ptr [rbp-0x20]
0x7fd3d0e29098: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2909c: mov rsi, rdx
0x7fd3d0e2909f: mov rdi, rax
0x7fd3d0e290a2: call qword ptr [rip-0x2b35c08]
0x7fd3d0e290a8: mov dword ptr [rbp-0x4], eax
0x7fd3d0e290ab: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e290af: mov edx, dword ptr [0x61d2e0]
0x7fd3d0e290b6: mov ecx, dword ptr [0x61d2dc]
0x7fd3d0e290bd: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e290c1: mov esi, ecx
0x7fd3d0e290c3: mov rdi, rax
0x7fd3d0e290c6: call qword ptr [rip-0x2b359ec]
0x7fd3d0e290cc: mov dword ptr [rbp-0x4], eax
0x7fd3d0e290cf: leave 
0x7fd3d0e290d0: ret 
0x7fd3d0e290d1: ret 
0x7fd3d0e290d2: push rbp
0x7fd3d0e290d3: mov rbp, rsp
0x7fd3d0e290d6: sub rsp, 0x30
0x7fd3d0e290da: mov qword ptr [rbp-0x28], rdi
0x7fd3d0e290de: mov qword ptr [rbp-0x30], rsi
0x7fd3d0e290e2: mov rax, qword ptr [rbp-0x30]
0x7fd3d0e290e6: mov rdi, rax
0x7fd3d0e290e9: call qword ptr [rip-0x2b3570f]
0x7fd3d0e290ef: mov qword ptr [rbp-0x20], rax
0x7fd3d0e290f3: cmp qword ptr [rbp-0x20], 0x0
0x7fd3d0e290f8: leave 
0x7fd3d0e290f9: ret 
0x7fd3d0e290fa: ret 
0x7fd3d0e290fb: push rbp
0x7fd3d0e290fc: mov rbp, rsp
0x7fd3d0e290ff: sub rsp, 0x20
0x7fd3d0e29103: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e29107: mov qword ptr [rbp-0x20], rsi
0x7fd3d0e2910b: mov rax, qword ptr [rbp-0x18]

instructions map dump:
mainGtU:
0x7fd3d0e27000: push rbp
0x7fd3d0e27001: mov rbp, rsp
0x7fd3d0e27004: mov dword ptr [rbp-0x14], edi
0x7fd3d0e27007: mov dword ptr [rbp-0x18], esi
0x7fd3d0e2700a: mov qword ptr [rbp-0x20], rdx
0x7fd3d0e2700e: mov qword ptr [rbp-0x28], rcx
0x7fd3d0e27012: mov dword ptr [rbp-0x2c], r8d
0x7fd3d0e27016: mov qword ptr [rbp-0x38], r9
0x7fd3d0e2701a: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2701d: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27021: add rax, rdx
0x7fd3d0e27024: movzx eax, byte ptr [rax]
0x7fd3d0e27027: mov byte ptr [rbp-0x5], al
0x7fd3d0e2702a: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2702d: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27031: add rax, rdx
0x7fd3d0e27034: movzx eax, byte ptr [rax]
0x7fd3d0e27037: mov byte ptr [rbp-0x6], al
0x7fd3d0e2703a: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2703e: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27041: jnz 0x7fd3d0e27695
0x7fd3d0e27047: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e2704b: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2704f: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27052: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27056: add rax, rdx
0x7fd3d0e27059: movzx eax, byte ptr [rax]
0x7fd3d0e2705c: mov byte ptr [rbp-0x5], al
0x7fd3d0e2705f: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27062: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27066: add rax, rdx
0x7fd3d0e27069: movzx eax, byte ptr [rax]
0x7fd3d0e2706c: mov byte ptr [rbp-0x6], al
0x7fd3d0e2706f: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27073: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27076: jnz 0x7fd3d0e276b4
0x7fd3d0e2707c: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27080: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27084: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27087: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2708b: add rax, rdx
0x7fd3d0e2708e: movzx eax, byte ptr [rax]
0x7fd3d0e27091: mov byte ptr [rbp-0x5], al
0x7fd3d0e27094: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27097: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2709b: add rax, rdx
0x7fd3d0e2709e: movzx eax, byte ptr [rax]
0x7fd3d0e270a1: mov byte ptr [rbp-0x6], al
0x7fd3d0e270a4: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e270a8: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e270ab: jnz 0x7fd3d0e27700
0x7fd3d0e270b1: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e270b5: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e270b9: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e270bc: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e270c0: add rax, rdx
0x7fd3d0e270c3: movzx eax, byte ptr [rax]
0x7fd3d0e270c6: mov byte ptr [rbp-0x5], al
0x7fd3d0e270c9: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e270cc: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e270d0: add rax, rdx
0x7fd3d0e270d3: movzx eax, byte ptr [rax]
0x7fd3d0e270d6: mov byte ptr [rbp-0x6], al
0x7fd3d0e270d9: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e270dd: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e270e0: jnz 0x7fd3d0e2772f
0x7fd3d0e270e6: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e270ea: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e270ee: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e270f1: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e270f5: add rax, rdx
0x7fd3d0e270f8: movzx eax, byte ptr [rax]
0x7fd3d0e270fb: mov byte ptr [rbp-0x5], al
0x7fd3d0e270fe: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27101: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27105: add rax, rdx
0x7fd3d0e27108: movzx eax, byte ptr [rax]
0x7fd3d0e2710b: mov byte ptr [rbp-0x6], al
0x7fd3d0e2710e: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27112: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27115: jnz 0x7fd3d0e276c3
0x7fd3d0e2711b: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e2711f: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27123: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27126: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2712a: add rax, rdx
0x7fd3d0e2712d: movzx eax, byte ptr [rax]
0x7fd3d0e27130: mov byte ptr [rbp-0x5], al
0x7fd3d0e27133: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27136: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2713a: add rax, rdx
0x7fd3d0e2713d: movzx eax, byte ptr [rax]
0x7fd3d0e27140: mov byte ptr [rbp-0x6], al
0x7fd3d0e27143: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27147: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2714a: jnz 0x7fd3d0e276d2
0x7fd3d0e27150: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27154: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27158: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2715b: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2715f: add rax, rdx
0x7fd3d0e27162: movzx eax, byte ptr [rax]
0x7fd3d0e27165: mov byte ptr [rbp-0x5], al
0x7fd3d0e27168: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2716b: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2716f: add rax, rdx
0x7fd3d0e27172: movzx eax, byte ptr [rax]
0x7fd3d0e27175: mov byte ptr [rbp-0x6], al
0x7fd3d0e27178: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2717c: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2717f: jnz 0x7fd3d0e276f1
0x7fd3d0e27185: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27189: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2718d: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27190: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27194: add rax, rdx
0x7fd3d0e27197: movzx eax, byte ptr [rax]
0x7fd3d0e2719a: mov byte ptr [rbp-0x5], al
0x7fd3d0e2719d: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e271a0: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e271a4: add rax, rdx
0x7fd3d0e271a7: movzx eax, byte ptr [rax]
0x7fd3d0e271aa: mov byte ptr [rbp-0x6], al
0x7fd3d0e271ad: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e271b1: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e271b4: jnz 0x7fd3d0e2774e
0x7fd3d0e271ba: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e271be: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e271c2: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e271c5: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e271c9: add rax, rdx
0x7fd3d0e271cc: movzx eax, byte ptr [rax]
0x7fd3d0e271cf: mov byte ptr [rbp-0x5], al
0x7fd3d0e271d2: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e271d5: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e271d9: add rax, rdx
0x7fd3d0e271dc: movzx eax, byte ptr [rax]
0x7fd3d0e271df: mov byte ptr [rbp-0x6], al
0x7fd3d0e271e2: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e271e6: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e271e9: jnz 0x7fd3d0e2775d
0x7fd3d0e271ef: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e271f3: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e271f7: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e271fa: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e271fe: add rax, rdx
0x7fd3d0e27201: movzx eax, byte ptr [rax]
0x7fd3d0e27204: mov byte ptr [rbp-0x5], al
0x7fd3d0e27207: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2720a: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2720e: add rax, rdx
0x7fd3d0e27211: movzx eax, byte ptr [rax]
0x7fd3d0e27214: mov byte ptr [rbp-0x6], al
0x7fd3d0e27217: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2721b: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2721e: jnz 0x7fd3d0e27799
0x7fd3d0e27224: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27228: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2722c: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2722f: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27233: add rax, rdx
0x7fd3d0e27236: movzx eax, byte ptr [rax]
0x7fd3d0e27239: mov byte ptr [rbp-0x5], al
0x7fd3d0e2723c: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2723f: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27243: add rax, rdx
0x7fd3d0e27246: movzx eax, byte ptr [rax]
0x7fd3d0e27249: mov byte ptr [rbp-0x6], al
0x7fd3d0e2724c: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27250: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27253: jnz 0x7fd3d0e277b7
0x7fd3d0e27259: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e2725d: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27261: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27264: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27268: add rax, rdx
0x7fd3d0e2726b: movzx eax, byte ptr [rax]
0x7fd3d0e2726e: mov byte ptr [rbp-0x5], al
0x7fd3d0e27271: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27274: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27278: add rax, rdx
0x7fd3d0e2727b: movzx eax, byte ptr [rax]
0x7fd3d0e2727e: mov byte ptr [rbp-0x6], al
0x7fd3d0e27281: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27285: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27288: jnz 0x7fd3d0e277c6
0x7fd3d0e2728e: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27292: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27296: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27299: add eax, 0x8
0x7fd3d0e2729c: mov dword ptr [rbp-0x4], eax
0x7fd3d0e2729f: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e272a2: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e272a6: add rax, rdx
0x7fd3d0e272a9: movzx eax, byte ptr [rax]
0x7fd3d0e272ac: mov byte ptr [rbp-0x5], al
0x7fd3d0e272af: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e272b2: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e272b6: add rax, rdx
0x7fd3d0e272b9: movzx eax, byte ptr [rax]
0x7fd3d0e272bc: mov byte ptr [rbp-0x6], al
0x7fd3d0e272bf: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e272c3: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e272c6: jnz 0x7fd3d0e2778a
0x7fd3d0e272cc: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e272cf: lea rdx, ptr [rax+rax*1]
0x7fd3d0e272d3: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e272d7: add rax, rdx
0x7fd3d0e272da: movzx eax, word ptr [rax]
0x7fd3d0e272dd: mov word ptr [rbp-0x8], ax
0x7fd3d0e272e1: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e272e4: lea rdx, ptr [rax+rax*1]
0x7fd3d0e272e8: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e272ec: add rax, rdx
0x7fd3d0e272ef: movzx eax, word ptr [rax]
0x7fd3d0e272f2: mov word ptr [rbp-0xa], ax
0x7fd3d0e272f6: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e272fa: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e272fe: jnz 0x7fd3d0e27668
0x7fd3d0e27304: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27308: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2730c: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2730f: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27313: add rax, rdx
0x7fd3d0e27316: movzx eax, byte ptr [rax]
0x7fd3d0e27319: mov byte ptr [rbp-0x5], al
0x7fd3d0e2731c: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2731f: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27323: add rax, rdx
0x7fd3d0e27326: movzx eax, byte ptr [rax]
0x7fd3d0e27329: mov byte ptr [rbp-0x6], al
0x7fd3d0e2732c: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27330: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27333: jnz 0x7fd3d0e2777b
0x7fd3d0e27339: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e2733c: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27340: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27344: add rax, rdx
0x7fd3d0e27347: movzx eax, word ptr [rax]
0x7fd3d0e2734a: mov word ptr [rbp-0x8], ax
0x7fd3d0e2734e: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27351: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27355: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27359: add rax, rdx
0x7fd3d0e2735c: movzx eax, word ptr [rax]
0x7fd3d0e2735f: mov word ptr [rbp-0xa], ax
0x7fd3d0e27363: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27367: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2736b: jnz 0x7fd3d0e27675
0x7fd3d0e27371: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27375: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27379: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2737c: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27380: add rax, rdx
0x7fd3d0e27383: movzx eax, byte ptr [rax]
0x7fd3d0e27386: mov byte ptr [rbp-0x5], al
0x7fd3d0e27389: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e2738c: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27390: add rax, rdx
0x7fd3d0e27393: movzx eax, byte ptr [rax]
0x7fd3d0e27396: mov byte ptr [rbp-0x6], al
0x7fd3d0e27399: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2739d: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e273a0: jnz 0x7fd3d0e2776c
0x7fd3d0e273a6: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e273a9: lea rdx, ptr [rax+rax*1]
0x7fd3d0e273ad: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e273b1: add rax, rdx
0x7fd3d0e273b4: movzx eax, word ptr [rax]
0x7fd3d0e273b7: mov word ptr [rbp-0x8], ax
0x7fd3d0e273bb: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e273be: lea rdx, ptr [rax+rax*1]
0x7fd3d0e273c2: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e273c6: add rax, rdx
0x7fd3d0e273c9: movzx eax, word ptr [rax]
0x7fd3d0e273cc: mov word ptr [rbp-0xa], ax
0x7fd3d0e273d0: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e273d4: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e273d8: jnz 0x7fd3d0e27685
0x7fd3d0e273de: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e273e2: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e273e6: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e273e9: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e273ed: add rax, rdx
0x7fd3d0e273f0: movzx eax, byte ptr [rax]
0x7fd3d0e273f3: mov byte ptr [rbp-0x5], al
0x7fd3d0e273f6: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e273f9: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e273fd: add rax, rdx
0x7fd3d0e27400: movzx eax, byte ptr [rax]
0x7fd3d0e27403: mov byte ptr [rbp-0x6], al
0x7fd3d0e27406: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2740a: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2740d: jnz 0x7fd3d0e277a8
0x7fd3d0e27413: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e27416: lea rdx, ptr [rax+rax*1]
0x7fd3d0e2741a: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2741e: add rax, rdx
0x7fd3d0e27421: movzx eax, word ptr [rax]
0x7fd3d0e27424: mov word ptr [rbp-0x8], ax
0x7fd3d0e27428: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e2742b: lea rdx, ptr [rax+rax*1]
0x7fd3d0e2742f: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27433: add rax, rdx
0x7fd3d0e27436: movzx eax, word ptr [rax]
0x7fd3d0e27439: mov word ptr [rbp-0xa], ax
0x7fd3d0e2743d: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27441: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27445: jnz 0x7fd3d0e276a4
0x7fd3d0e2744b: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e2744f: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27453: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27456: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2745a: add rax, rdx
0x7fd3d0e2745d: movzx eax, byte ptr [rax]
0x7fd3d0e27460: mov byte ptr [rbp-0x5], al
0x7fd3d0e27463: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27466: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2746a: add rax, rdx
0x7fd3d0e2746d: movzx eax, byte ptr [rax]
0x7fd3d0e27470: mov byte ptr [rbp-0x6], al
0x7fd3d0e27473: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27477: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2747a: jnz 0x7fd3d0e277f3
0x7fd3d0e27480: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e27483: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27487: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2748b: add rax, rdx
0x7fd3d0e2748e: movzx eax, word ptr [rax]
0x7fd3d0e27491: mov word ptr [rbp-0x8], ax
0x7fd3d0e27495: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27498: lea rdx, ptr [rax+rax*1]
0x7fd3d0e2749c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e274a0: add rax, rdx
0x7fd3d0e274a3: movzx eax, word ptr [rax]
0x7fd3d0e274a6: mov word ptr [rbp-0xa], ax
0x7fd3d0e274aa: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e274ae: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e274b2: jnz 0x7fd3d0e276e1
0x7fd3d0e274b8: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e274bc: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e274c0: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e274c3: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e274c7: add rax, rdx
0x7fd3d0e274ca: movzx eax, byte ptr [rax]
0x7fd3d0e274cd: mov byte ptr [rbp-0x5], al
0x7fd3d0e274d0: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e274d3: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e274d7: add rax, rdx
0x7fd3d0e274da: movzx eax, byte ptr [rax]
0x7fd3d0e274dd: mov byte ptr [rbp-0x6], al
0x7fd3d0e274e0: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e274e4: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e274e7: jnz 0x7fd3d0e277e4
0x7fd3d0e274ed: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e274f0: lea rdx, ptr [rax+rax*1]
0x7fd3d0e274f4: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e274f8: add rax, rdx
0x7fd3d0e274fb: movzx eax, word ptr [rax]
0x7fd3d0e274fe: mov word ptr [rbp-0x8], ax
0x7fd3d0e27502: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27505: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27509: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2750d: add rax, rdx
0x7fd3d0e27510: movzx eax, word ptr [rax]
0x7fd3d0e27513: mov word ptr [rbp-0xa], ax
0x7fd3d0e27517: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e2751b: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2751f: jnz 0x7fd3d0e2771f
0x7fd3d0e27525: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27529: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2752d: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27530: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27534: add rax, rdx
0x7fd3d0e27537: movzx eax, byte ptr [rax]
0x7fd3d0e2753a: mov byte ptr [rbp-0x5], al
0x7fd3d0e2753d: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27540: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e27544: add rax, rdx
0x7fd3d0e27547: movzx eax, byte ptr [rax]
0x7fd3d0e2754a: mov byte ptr [rbp-0x6], al
0x7fd3d0e2754d: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27551: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27554: jnz 0x7fd3d0e277d5
0x7fd3d0e2755a: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e2755d: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27561: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27565: add rax, rdx
0x7fd3d0e27568: movzx eax, word ptr [rax]
0x7fd3d0e2756b: mov word ptr [rbp-0x8], ax
0x7fd3d0e2756f: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27572: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27576: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2757a: add rax, rdx
0x7fd3d0e2757d: movzx eax, word ptr [rax]
0x7fd3d0e27580: mov word ptr [rbp-0xa], ax
0x7fd3d0e27584: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27588: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2758c: jnz 0x7fd3d0e2773e
0x7fd3d0e27592: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27596: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e2759a: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e2759d: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e275a1: add rax, rdx
0x7fd3d0e275a4: movzx eax, byte ptr [rax]
0x7fd3d0e275a7: mov byte ptr [rbp-0x5], al
0x7fd3d0e275aa: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e275ad: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e275b1: add rax, rdx
0x7fd3d0e275b4: movzx eax, byte ptr [rax]
0x7fd3d0e275b7: mov byte ptr [rbp-0x6], al
0x7fd3d0e275ba: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e275be: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e275c1: jnz 0x7fd3d0e27802
0x7fd3d0e275c7: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e275ca: lea rdx, ptr [rax+rax*1]
0x7fd3d0e275ce: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e275d2: add rax, rdx
0x7fd3d0e275d5: movzx eax, word ptr [rax]
0x7fd3d0e275d8: mov word ptr [rbp-0x8], ax
0x7fd3d0e275dc: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e275df: lea rdx, ptr [rax+rax*1]
0x7fd3d0e275e3: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e275e7: add rax, rdx
0x7fd3d0e275ea: movzx eax, word ptr [rax]
0x7fd3d0e275ed: mov word ptr [rbp-0xa], ax
0x7fd3d0e275f1: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e275f5: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e275f9: jnz 0x7fd3d0e2770f
0x7fd3d0e275ff: add dword ptr [rbp-0x14], 0x1
0x7fd3d0e27603: add dword ptr [rbp-0x18], 0x1
0x7fd3d0e27607: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e2760a: cmp eax, dword ptr [rbp-0x2c]
0x7fd3d0e2760d: jnb 0x7fd3d0e27834
0x7fd3d0e27613: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e27616: cmp eax, dword ptr [rbp-0x2c]
0x7fd3d0e27619: jnb 0x7fd3d0e27811
0x7fd3d0e2761f: sub dword ptr [rbp-0x4], 0x8
0x7fd3d0e27623: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e27627: mov eax, dword ptr [rax]
0x7fd3d0e27629: lea edx, ptr [rax-0x1]
0x7fd3d0e2762c: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e27630: mov dword ptr [rax], edx
0x7fd3d0e27632: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e27636: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27636: mov edx, dword ptr [rbp-0x14]
0x7fd3d0e27639: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2763d: add rax, rdx
0x7fd3d0e27640: movzx eax, byte ptr [rax]
0x7fd3d0e27643: mov byte ptr [rbp-0x5], al
0x7fd3d0e27646: mov edx, dword ptr [rbp-0x18]
0x7fd3d0e27649: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e2764d: add rax, rdx
0x7fd3d0e27650: movzx eax, byte ptr [rax]
0x7fd3d0e27653: mov byte ptr [rbp-0x6], al
0x7fd3d0e27656: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2765a: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2765d: jz 0x7fd3d0e272cc
0x7fd3d0e27663: jmp 0x7fd3d0e2778a
0x7fd3d0e27668: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e2766c: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27670: setnbe al
0x7fd3d0e27673: pop rbp
0x7fd3d0e27673: pop rbp
0x7fd3d0e27674: ret 
0x7fd3d0e27675: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27679: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2767d: setnbe al
0x7fd3d0e27680: jmp 0x7fd3d0e27673
0x7fd3d0e27685: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27689: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e2768d: setnbe al
0x7fd3d0e27690: jmp 0x7fd3d0e27673
0x7fd3d0e27695: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27699: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e2769c: setnbe al
0x7fd3d0e2769f: jmp 0x7fd3d0e27673
0x7fd3d0e276a4: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e276a8: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e276ac: setnbe al
0x7fd3d0e276af: jmp 0x7fd3d0e27673
0x7fd3d0e276b4: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e276b8: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e276bb: setnbe al
0x7fd3d0e276be: jmp 0x7fd3d0e27673
0x7fd3d0e276c3: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e276c7: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e276ca: setnbe al
0x7fd3d0e276cd: jmp 0x7fd3d0e27673
0x7fd3d0e276d2: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e276d6: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e276d9: setnbe al
0x7fd3d0e276dc: jmp 0x7fd3d0e27673
0x7fd3d0e276e1: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e276e5: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e276e9: setnbe al
0x7fd3d0e276ec: jmp 0x7fd3d0e27673
0x7fd3d0e276f1: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e276f5: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e276f8: setnbe al
0x7fd3d0e276fb: jmp 0x7fd3d0e27673
0x7fd3d0e27700: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27704: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27707: setnbe al
0x7fd3d0e2770a: jmp 0x7fd3d0e27673
0x7fd3d0e2770f: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27713: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27717: setnbe al
0x7fd3d0e2771a: jmp 0x7fd3d0e27673
0x7fd3d0e2771f: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27723: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27727: setnbe al
0x7fd3d0e2772a: jmp 0x7fd3d0e27673
0x7fd3d0e2772f: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27733: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27736: setnbe al
0x7fd3d0e27739: jmp 0x7fd3d0e27673
0x7fd3d0e2773e: movzx eax, word ptr [rbp-0x8]
0x7fd3d0e27742: cmp ax, word ptr [rbp-0xa]
0x7fd3d0e27746: setnbe al
0x7fd3d0e27749: jmp 0x7fd3d0e27673
0x7fd3d0e2774e: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27752: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27755: setnbe al
0x7fd3d0e27758: jmp 0x7fd3d0e27673
0x7fd3d0e2775d: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27761: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27764: setnbe al
0x7fd3d0e27767: jmp 0x7fd3d0e27673
0x7fd3d0e2776c: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27770: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27773: setnbe al
0x7fd3d0e27776: jmp 0x7fd3d0e27673
0x7fd3d0e2777b: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2777f: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27782: setnbe al
0x7fd3d0e27785: jmp 0x7fd3d0e27673
0x7fd3d0e2778a: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2778e: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27791: setnbe al
0x7fd3d0e27794: jmp 0x7fd3d0e27673
0x7fd3d0e27799: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e2779d: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277a0: setnbe al
0x7fd3d0e277a3: jmp 0x7fd3d0e27673
0x7fd3d0e277a8: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277ac: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277af: setnbe al
0x7fd3d0e277b2: jmp 0x7fd3d0e27673
0x7fd3d0e277b7: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277bb: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277be: setnbe al
0x7fd3d0e277c1: jmp 0x7fd3d0e27673
0x7fd3d0e277c6: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277ca: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277cd: setnbe al
0x7fd3d0e277d0: jmp 0x7fd3d0e27673
0x7fd3d0e277d5: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277d9: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277dc: setnbe al
0x7fd3d0e277df: jmp 0x7fd3d0e27673
0x7fd3d0e277e4: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277e8: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277eb: setnbe al
0x7fd3d0e277ee: jmp 0x7fd3d0e27673
0x7fd3d0e277f3: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e277f7: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e277fa: setnbe al
0x7fd3d0e277fd: jmp 0x7fd3d0e27673
0x7fd3d0e27802: movzx eax, byte ptr [rbp-0x5]
0x7fd3d0e27806: cmp al, byte ptr [rbp-0x6]
0x7fd3d0e27809: setnbe al
0x7fd3d0e2780c: jmp 0x7fd3d0e27673
0x7fd3d0e27811: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27814: sub dword ptr [rbp-0x18], eax
0x7fd3d0e27817: sub dword ptr [rbp-0x4], 0x8
0x7fd3d0e2781b: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e2781f: mov eax, dword ptr [rax]
0x7fd3d0e27821: lea edx, ptr [rax-0x1]
0x7fd3d0e27824: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e27828: mov dword ptr [rax], edx
0x7fd3d0e2782a: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e2782e: jns 0x7fd3d0e2729f
0x7fd3d0e27834: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27837: sub dword ptr [rbp-0x14], eax
0x7fd3d0e2783a: mov eax, dword ptr [rbp-0x18]
0x7fd3d0e2783d: cmp eax, dword ptr [rbp-0x2c]
0x7fd3d0e27840: jb 0x7fd3d0e2761f
0x7fd3d0e27846: jmp qword ptr [rip-0x2b4e52c]
generateMTFValues:
0x7fd3d0e2784c: push rbp
0x7fd3d0e2784d: mov rbp, rsp
0x7fd3d0e27850: push r14
0x7fd3d0e27852: push r13
0x7fd3d0e27854: push r12
0x7fd3d0e27856: push rbx
0x7fd3d0e27857: sub rsp, 0x138
0x7fd3d0e2785e: mov qword ptr [rbp-0x158], rdi
0x7fd3d0e27865: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e2786c: mov rax, qword ptr [rax+0x38]
0x7fd3d0e27870: mov qword ptr [rbp-0x38], rax
0x7fd3d0e27874: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e2787b: mov rax, qword ptr [rax+0x40]
0x7fd3d0e2787f: mov qword ptr [rbp-0x40], rax
0x7fd3d0e27883: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e2788a: mov rax, qword ptr [rax+0x48]
0x7fd3d0e2788e: mov qword ptr [rbp-0x48], rax
0x7fd3d0e27892: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27899: mov rdi, rax
0x7fd3d0e2789c: call qword ptr [rip-0x2b4e082]
0x7fd3d0e278a2: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e278a9: mov eax, dword ptr [rax+0x7c]
0x7fd3d0e278ac: add eax, 0x1
0x7fd3d0e278af: mov dword ptr [rbp-0x4c], eax
0x7fd3d0e278b2: mov dword ptr [rbp-0x24], 0x0
0x7fd3d0e278b9: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e278b9: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e278bc: cmp eax, dword ptr [rbp-0x4c]
0x7fd3d0e278bf: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e278bf: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e278c6: mov edx, dword ptr [rbp-0x24]
0x7fd3d0e278c9: movsxd rdx, edx
0x7fd3d0e278cc: add rdx, 0xa8
0x7fd3d0e278d3: mov dword ptr [rax+rdx*4], 0x0
0x7fd3d0e278da: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e278de: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e278e1: cmp eax, dword ptr [rbp-0x4c]
0x7fd3d0e278e4: jle 0x7fd3d0e278bf
0x7fd3d0e278ea: mov dword ptr [rbp-0x30], 0x0
0x7fd3d0e278f1: mov dword ptr [rbp-0x2c], 0x0
0x7fd3d0e278f8: mov dword ptr [rbp-0x24], 0x0
0x7fd3d0e278ff: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e278ff: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27906: mov eax, dword ptr [rax+0x7c]
0x7fd3d0e27909: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e2790c: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e2790c: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e2790f: mov edx, eax
0x7fd3d0e27911: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e27914: cdqe 
0x7fd3d0e27916: mov byte ptr [rbp+rax*1-0x150], dl
0x7fd3d0e2791d: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e27921: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27928: mov eax, dword ptr [rax+0x7c]
0x7fd3d0e2792b: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e2792e: jnle 0x7fd3d0e2790c
0x7fd3d0e27934: mov dword ptr [rbp-0x24], 0x0
0x7fd3d0e2793b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e2793b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27942: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27945: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e27948: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e27948: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e2794b: cdqe 
0x7fd3d0e2794d: lea rdx, ptr [rax*4]
0x7fd3d0e27955: mov rax, qword ptr [rbp-0x38]
0x7fd3d0e27959: add rax, rdx
0x7fd3d0e2795c: mov eax, dword ptr [rax]
0x7fd3d0e2795e: sub eax, 0x1
0x7fd3d0e27961: mov dword ptr [rbp-0x28], eax
0x7fd3d0e27964: cmp dword ptr [rbp-0x28], 0x0
0x7fd3d0e27968: js 0x7fd3d0e27b78
0x7fd3d0e2796e: mov eax, dword ptr [rbp-0x28]
0x7fd3d0e27971: movsxd rdx, eax
0x7fd3d0e27974: mov rax, qword ptr [rbp-0x40]
0x7fd3d0e27978: add rax, rdx
0x7fd3d0e2797b: movzx eax, byte ptr [rax]
0x7fd3d0e2797e: movzx eax, al
0x7fd3d0e27981: mov rdx, qword ptr [rbp-0x158]
0x7fd3d0e27988: cdqe 
0x7fd3d0e2798a: movzx eax, byte ptr [rdx+rax*1+0x180]
0x7fd3d0e27992: mov byte ptr [rbp-0x4d], al
0x7fd3d0e27995: movzx eax, byte ptr [rbp-0x150]
0x7fd3d0e2799c: cmp al, byte ptr [rbp-0x4d]
0x7fd3d0e2799f: jnz 0x7fd3d0e279c5
0x7fd3d0e279a5: add dword ptr [rbp-0x2c], 0x1
0x7fd3d0e279a9: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e279a9: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e279ad: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e279b4: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e279b7: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e279ba: jnle 0x7fd3d0e27948
0x7fd3d0e279c0: jmp 0x7fd3d0e27bbc
0x7fd3d0e279c5: cmp dword ptr [rbp-0x2c], 0x0
0x7fd3d0e279c9: jle 0x7fd3d0e27a89
0x7fd3d0e279cf: sub dword ptr [rbp-0x2c], 0x1
0x7fd3d0e279d3: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e279d6: and eax, 0x1
0x7fd3d0e279d9: test eax, eax
0x7fd3d0e279db: jz 0x7fd3d0e27a41
0x7fd3d0e279e1: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e279e4: cdqe 
0x7fd3d0e279e6: lea rdx, ptr [rax+rax*1]
0x7fd3d0e279ea: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e279ee: add rax, rdx
0x7fd3d0e279f1: mov word ptr [rax], 0x1
0x7fd3d0e279f6: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e279fa: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27a01: mov eax, dword ptr [rax+0x2a4]
0x7fd3d0e27a07: lea edx, ptr [rax+0x1]
0x7fd3d0e27a0a: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27a11: mov dword ptr [rax+0x2a4], edx
0x7fd3d0e27a17: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27a17: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27a1b: jle 0x7fd3d0e27a81
0x7fd3d0e27a21: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27a24: sub eax, 0x2
0x7fd3d0e27a27: mov edx, eax
0x7fd3d0e27a29: shr edx, 0x1f
0x7fd3d0e27a2c: add eax, edx
0x7fd3d0e27a2e: sar eax, 0x1
0x7fd3d0e27a30: mov dword ptr [rbp-0x2c], eax
0x7fd3d0e27a33: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27a33: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27a36: and eax, 0x1
0x7fd3d0e27a39: test eax, eax
0x7fd3d0e27a3b: jnz 0x7fd3d0e279e1
0x7fd3d0e27a41: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27a44: cdqe 
0x7fd3d0e27a46: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27a4a: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27a4e: add rax, rdx
0x7fd3d0e27a51: mov word ptr [rax], 0x0
0x7fd3d0e27a56: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27a5a: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27a61: mov eax, dword ptr [rax+0x2a0]
0x7fd3d0e27a67: lea edx, ptr [rax+0x1]
0x7fd3d0e27a6a: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27a71: mov dword ptr [rax+0x2a0], edx
0x7fd3d0e27a77: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27a7b: jnle 0x7fd3d0e27a21
0x7fd3d0e27a81: nop
0x7fd3d0e27a82: mov dword ptr [rbp-0x2c], 0x0
0x7fd3d0e27a89: movzx r12d, byte ptr [rbp-0x14f]
0x7fd3d0e27a91: movzx eax, byte ptr [rbp-0x150]
0x7fd3d0e27a98: mov byte ptr [rbp-0x14f], al
0x7fd3d0e27a9e: lea rax, ptr [rbp-0x150]
0x7fd3d0e27aa5: lea rbx, ptr [rax+0x1]
0x7fd3d0e27aa9: movzx r14d, byte ptr [rbp-0x4d]
0x7fd3d0e27aae: cmp r14b, r12b
0x7fd3d0e27aae: cmp r14b, r12b
0x7fd3d0e27ab1: jz 0x7fd3d0e27ace
0x7fd3d0e27ab7: add rbx, 0x1
0x7fd3d0e27abb: mov r13d, r12d
0x7fd3d0e27abe: movzx r12d, byte ptr [rbx]
0x7fd3d0e27ac2: mov byte ptr [rbx], r13b
0x7fd3d0e27ac5: cmp r14b, r12b
0x7fd3d0e27ac8: jnz 0x7fd3d0e27ab7
0x7fd3d0e27ace: mov byte ptr [rbp-0x150], r12b
0x7fd3d0e27ad5: mov rdx, rbx
0x7fd3d0e27ad8: lea rax, ptr [rbp-0x150]
0x7fd3d0e27adf: mov rcx, rdx
0x7fd3d0e27ae2: sub rcx, rax
0x7fd3d0e27ae5: mov rax, rcx
0x7fd3d0e27ae8: mov dword ptr [rbp-0x28], eax
0x7fd3d0e27aeb: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27aee: cdqe 
0x7fd3d0e27af0: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27af4: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27af8: add rax, rdx
0x7fd3d0e27afb: mov edx, dword ptr [rbp-0x28]
0x7fd3d0e27afe: add edx, 0x1
0x7fd3d0e27b01: mov word ptr [rax], dx
0x7fd3d0e27b04: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27b08: mov eax, dword ptr [rbp-0x28]
0x7fd3d0e27b0b: add eax, 0x1
0x7fd3d0e27b0e: mov rdx, qword ptr [rbp-0x158]
0x7fd3d0e27b15: movsxd rcx, eax
0x7fd3d0e27b18: add rcx, 0xa8
0x7fd3d0e27b1f: mov edx, dword ptr [rdx+rcx*4]
0x7fd3d0e27b22: lea ecx, ptr [rdx+0x1]
0x7fd3d0e27b25: mov rdx, qword ptr [rbp-0x158]
0x7fd3d0e27b2c: cdqe 
0x7fd3d0e27b2e: add rax, 0xa8
0x7fd3d0e27b34: mov dword ptr [rdx+rax*4], ecx
0x7fd3d0e27b37: add dword ptr [rbp-0x24], 0x1
0x7fd3d0e27b3b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27b42: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27b45: cmp eax, dword ptr [rbp-0x24]
0x7fd3d0e27b48: jnle 0x7fd3d0e27948
0x7fd3d0e27b4e: movzx r12d, byte ptr [rbp-0x14f]
0x7fd3d0e27b56: movzx eax, byte ptr [rbp-0x150]
0x7fd3d0e27b5d: mov byte ptr [rbp-0x14f], al
0x7fd3d0e27b63: lea rax, ptr [rbp-0x150]
0x7fd3d0e27b6a: lea rbx, ptr [rax+0x1]
0x7fd3d0e27b6e: movzx r14d, byte ptr [rbp-0x4d]
0x7fd3d0e27b73: jmp 0x7fd3d0e27aae
0x7fd3d0e27b78: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27b7f: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27b82: add dword ptr [rbp-0x28], eax
0x7fd3d0e27b85: mov eax, dword ptr [rbp-0x28]
0x7fd3d0e27b88: movsxd rdx, eax
0x7fd3d0e27b8b: mov rax, qword ptr [rbp-0x40]
0x7fd3d0e27b8f: add rax, rdx
0x7fd3d0e27b92: movzx eax, byte ptr [rax]
0x7fd3d0e27b95: movzx eax, al
0x7fd3d0e27b98: mov rdx, qword ptr [rbp-0x158]
0x7fd3d0e27b9f: cdqe 
0x7fd3d0e27ba1: movzx eax, byte ptr [rdx+rax*1+0x180]
0x7fd3d0e27ba9: mov byte ptr [rbp-0x4d], al
0x7fd3d0e27bac: movzx eax, byte ptr [rbp-0x150]
0x7fd3d0e27bb3: cmp al, byte ptr [rbp-0x4d]
0x7fd3d0e27bb6: jnz 0x7fd3d0e279c5
0x7fd3d0e27bbc: cmp dword ptr [rbp-0x2c], 0x0
0x7fd3d0e27bc0: sub dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27bc4: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27bc7: and eax, 0x1
0x7fd3d0e27bca: test eax, eax
0x7fd3d0e27bcc: jz 0x7fd3d0e27c32
0x7fd3d0e27bd2: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27bd5: cdqe 
0x7fd3d0e27bd7: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27bdb: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27bdf: add rax, rdx
0x7fd3d0e27be2: mov word ptr [rax], 0x1
0x7fd3d0e27be7: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27beb: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27bf2: mov eax, dword ptr [rax+0x2a4]
0x7fd3d0e27bf8: lea edx, ptr [rax+0x1]
0x7fd3d0e27bfb: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27c02: mov dword ptr [rax+0x2a4], edx
0x7fd3d0e27c08: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27c08: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27c0c: jle 0x7fd3d0e27c72
0x7fd3d0e27c12: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27c15: sub eax, 0x2
0x7fd3d0e27c18: mov edx, eax
0x7fd3d0e27c1a: shr edx, 0x1f
0x7fd3d0e27c1d: add eax, edx
0x7fd3d0e27c1f: sar eax, 0x1
0x7fd3d0e27c21: mov dword ptr [rbp-0x2c], eax
0x7fd3d0e27c24: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27c24: mov eax, dword ptr [rbp-0x2c]
0x7fd3d0e27c27: and eax, 0x1
0x7fd3d0e27c2a: test eax, eax
0x7fd3d0e27c2c: jnz 0x7fd3d0e27bd2
0x7fd3d0e27c32: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27c35: cdqe 
0x7fd3d0e27c37: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27c3b: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27c3f: add rax, rdx
0x7fd3d0e27c42: mov word ptr [rax], 0x0
0x7fd3d0e27c47: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27c4b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27c52: mov eax, dword ptr [rax+0x2a0]
0x7fd3d0e27c58: lea edx, ptr [rax+0x1]
0x7fd3d0e27c5b: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27c62: mov dword ptr [rax+0x2a0], edx
0x7fd3d0e27c68: cmp dword ptr [rbp-0x2c], 0x1
0x7fd3d0e27c6c: jnle 0x7fd3d0e27c12
0x7fd3d0e27c72: nop
0x7fd3d0e27c73: mov dword ptr [rbp-0x2c], 0x0
0x7fd3d0e27c7a: mov eax, dword ptr [rbp-0x30]
0x7fd3d0e27c7d: cdqe 
0x7fd3d0e27c7f: lea rdx, ptr [rax+rax*1]
0x7fd3d0e27c83: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27c87: add rdx, rax
0x7fd3d0e27c8a: mov eax, dword ptr [rbp-0x4c]
0x7fd3d0e27c8d: mov word ptr [rdx], ax
0x7fd3d0e27c90: add dword ptr [rbp-0x30], 0x1
0x7fd3d0e27c94: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27c9b: mov edx, dword ptr [rbp-0x4c]
0x7fd3d0e27c9e: movsxd rdx, edx
0x7fd3d0e27ca1: add rdx, 0xa8
0x7fd3d0e27ca8: mov eax, dword ptr [rax+rdx*4]
0x7fd3d0e27cab: lea ecx, ptr [rax+0x1]
0x7fd3d0e27cae: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27cb5: mov edx, dword ptr [rbp-0x4c]
0x7fd3d0e27cb8: movsxd rdx, edx
0x7fd3d0e27cbb: add rdx, 0xa8
0x7fd3d0e27cc2: mov dword ptr [rax+rdx*4], ecx
0x7fd3d0e27cc5: mov rax, qword ptr [rbp-0x158]
0x7fd3d0e27ccc: mov edx, dword ptr [rbp-0x30]
0x7fd3d0e27ccf: mov dword ptr [rax+0x29c], edx
0x7fd3d0e27cd5: add rsp, 0x138
0x7fd3d0e27cdc: pop rbx
0x7fd3d0e27cdd: pop r12
0x7fd3d0e27cdf: pop r13
0x7fd3d0e27ce1: pop r14
0x7fd3d0e27ce3: pop rbp
0x7fd3d0e27ce4: ret 
0x7fd3d0e27ce5: ret 
BZ2_blockSort:
0x7fd3d0e27ce6: push rbp
0x7fd3d0e27ce7: mov rbp, rsp
0x7fd3d0e27cea: sub rsp, 0x60
0x7fd3d0e27cee: mov qword ptr [rbp-0x48], rdi
0x7fd3d0e27cf2: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27cf6: mov rax, qword ptr [rax+0x38]
0x7fd3d0e27cfa: mov qword ptr [rbp-0x10], rax
0x7fd3d0e27cfe: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d02: mov rax, qword ptr [rax+0x40]
0x7fd3d0e27d06: mov qword ptr [rbp-0x18], rax
0x7fd3d0e27d0a: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d0e: mov rax, qword ptr [rax+0x28]
0x7fd3d0e27d12: mov qword ptr [rbp-0x20], rax
0x7fd3d0e27d16: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d1a: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27d1d: mov dword ptr [rbp-0x24], eax
0x7fd3d0e27d20: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d24: mov eax, dword ptr [rax+0x290]
0x7fd3d0e27d2a: mov dword ptr [rbp-0x28], eax
0x7fd3d0e27d2d: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27d31: mov eax, dword ptr [rax+0x58]
0x7fd3d0e27d34: mov dword ptr [rbp-0x4], eax
0x7fd3d0e27d37: cmp dword ptr [rbp-0x24], 0x270f
0x7fd3d0e27d3e: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e27d3e: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e27d41: add eax, 0x22
0x7fd3d0e27d44: mov dword ptr [rbp-0x8], eax
0x7fd3d0e27d47: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27d4a: and eax, 0x1
0x7fd3d0e27d4d: test eax, eax
0x7fd3d0e27d4f: jz 0x7fd3d0e27d59
0x7fd3d0e27d55: add dword ptr [rbp-0x8], 0x1
0x7fd3d0e27d59: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27d5c: movsxd rdx, eax
0x7fd3d0e27d5f: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e27d63: add rax, rdx
0x7fd3d0e27d66: mov qword ptr [rbp-0x30], rax
0x7fd3d0e27d6a: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e27d6e: cmp dword ptr [rbp-0x4], 0x64
0x7fd3d0e27d6e: cmp dword ptr [rbp-0x4], 0x64
0x7fd3d0e27d72: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e27d72: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e27d75: lea ecx, ptr [rax-0x1]
0x7fd3d0e27d78: mov edx, 0x55555556
0x7fd3d0e27d7d: mov eax, ecx
0x7fd3d0e27d7f: imul edx
0x7fd3d0e27d81: mov eax, ecx
0x7fd3d0e27d83: sar eax, 0x1f
0x7fd3d0e27d86: mov ecx, edx
0x7fd3d0e27d88: sub ecx, eax
0x7fd3d0e27d8a: mov eax, ecx
0x7fd3d0e27d8c: imul eax, dword ptr [rbp-0x24]
0x7fd3d0e27d90: mov dword ptr [rbp-0x34], eax
0x7fd3d0e27d93: mov eax, dword ptr [rbp-0x34]
0x7fd3d0e27d96: mov dword ptr [rbp-0x38], eax
0x7fd3d0e27d99: mov r9d, dword ptr [rbp-0x28]
0x7fd3d0e27d9d: mov r8d, dword ptr [rbp-0x24]
0x7fd3d0e27da1: mov rcx, qword ptr [rbp-0x20]
0x7fd3d0e27da5: mov rdx, qword ptr [rbp-0x30]
0x7fd3d0e27da9: mov rsi, qword ptr [rbp-0x18]
0x7fd3d0e27dad: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27db1: lea rdi, ptr [rbp-0x38]
0x7fd3d0e27db5: mov qword ptr [rsp], rdi
0x7fd3d0e27db9: mov rdi, rax
0x7fd3d0e27dbc: call qword ptr [rip-0x2b49162]
0x7fd3d0e27dc2: cmp dword ptr [rbp-0x28], 0x2
0x7fd3d0e27dc6: mov eax, dword ptr [rbp-0x38]
0x7fd3d0e27dc6: mov eax, dword ptr [rbp-0x38]
0x7fd3d0e27dc9: test eax, eax
0x7fd3d0e27dcb: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27dcb: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27dcf: mov dword ptr [rax+0x30], 0xffffffff
0x7fd3d0e27dd6: mov dword ptr [rbp-0x8], 0x0
0x7fd3d0e27ddd: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27ddd: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27de1: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27de4: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e27de7: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27de7: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27dea: cdqe 
0x7fd3d0e27dec: lea rdx, ptr [rax*4]
0x7fd3d0e27df4: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27df8: add rax, rdx
0x7fd3d0e27dfb: mov eax, dword ptr [rax]
0x7fd3d0e27dfd: test eax, eax
0x7fd3d0e27dff: jz 0x7fd3d0e27e19
0x7fd3d0e27e05: add dword ptr [rbp-0x8], 0x1
0x7fd3d0e27e09: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27e0d: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e27e10: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e27e13: jnle 0x7fd3d0e27de7
0x7fd3d0e27e19: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27e1d: mov edx, dword ptr [rbp-0x8]
0x7fd3d0e27e20: mov dword ptr [rax+0x30], edx
0x7fd3d0e27e23: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27e23: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e27e27: mov eax, dword ptr [rax+0x30]
0x7fd3d0e27e2a: cmp eax, 0xffffffff
0x7fd3d0e27e2d: leave 
0x7fd3d0e27e2d: leave 
0x7fd3d0e27e2e: ret 
0x7fd3d0e27e2f: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e27e32: movsxd rdx, eax
0x7fd3d0e27e35: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e27e39: add rax, rdx
0x7fd3d0e27e3c: mov qword ptr [rbp-0x30], rax
0x7fd3d0e27e40: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e27e44: jnle 0x7fd3d0e27d6e
0x7fd3d0e27e4a: jmp qword ptr [rip-0x2b486f0]
bsW:
0x7fd3d0e27e50: push rbp
0x7fd3d0e27e51: mov rbp, rsp
0x7fd3d0e27e54: push rbx
0x7fd3d0e27e55: mov qword ptr [rbp-0x10], rdi
0x7fd3d0e27e59: mov dword ptr [rbp-0x14], esi
0x7fd3d0e27e5c: mov dword ptr [rbp-0x18], edx
0x7fd3d0e27e5f: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27e5f: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27e63: mov eax, dword ptr [rax+0x284]
0x7fd3d0e27e69: cmp eax, 0x7
0x7fd3d0e27e6c: jnle 0x7fd3d0e27ec7
0x7fd3d0e27e72: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27e76: mov edx, dword ptr [rax+0x280]
0x7fd3d0e27e7c: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27e80: mov eax, dword ptr [rax+0x284]
0x7fd3d0e27e86: mov ecx, 0x20
0x7fd3d0e27e8b: mov ebx, ecx
0x7fd3d0e27e8d: sub ebx, eax
0x7fd3d0e27e8f: mov eax, ebx
0x7fd3d0e27e91: sub eax, dword ptr [rbp-0x14]
0x7fd3d0e27e94: mov esi, dword ptr [rbp-0x18]
0x7fd3d0e27e97: mov ebx, esi
0x7fd3d0e27e99: mov ecx, eax
0x7fd3d0e27e9b: shl ebx, cl
0x7fd3d0e27e9d: mov eax, ebx
0x7fd3d0e27e9f: or edx, eax
0x7fd3d0e27ea1: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ea5: mov dword ptr [rax+0x280], edx
0x7fd3d0e27eab: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27eaf: mov edx, dword ptr [rax+0x284]
0x7fd3d0e27eb5: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e27eb8: add edx, eax
0x7fd3d0e27eba: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ebe: mov dword ptr [rax+0x284], edx
0x7fd3d0e27ec4: pop rbx
0x7fd3d0e27ec5: pop rbp
0x7fd3d0e27ec6: ret 
0x7fd3d0e27ec7: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ecb: mov rdx, qword ptr [rax+0x50]
0x7fd3d0e27ecf: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ed3: mov eax, dword ptr [rax+0x74]
0x7fd3d0e27ed6: cdqe 
0x7fd3d0e27ed8: add rdx, rax
0x7fd3d0e27edb: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27edf: mov eax, dword ptr [rax+0x280]
0x7fd3d0e27ee5: shr eax, 0x18
0x7fd3d0e27ee8: mov byte ptr [rdx], al
0x7fd3d0e27eea: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27eee: mov eax, dword ptr [rax+0x74]
0x7fd3d0e27ef1: lea edx, ptr [rax+0x1]
0x7fd3d0e27ef4: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27ef8: mov dword ptr [rax+0x74], edx
0x7fd3d0e27efb: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27eff: mov eax, dword ptr [rax+0x280]
0x7fd3d0e27f05: mov edx, eax
0x7fd3d0e27f07: shl edx, 0x8
0x7fd3d0e27f0a: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f0e: mov dword ptr [rax+0x280], edx
0x7fd3d0e27f14: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f18: mov eax, dword ptr [rax+0x284]
0x7fd3d0e27f1e: lea edx, ptr [rax-0x8]
0x7fd3d0e27f21: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f25: mov dword ptr [rax+0x284], edx
0x7fd3d0e27f2b: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f2f: mov eax, dword ptr [rax+0x284]
0x7fd3d0e27f35: cmp eax, 0x7
0x7fd3d0e27f38: jnle 0x7fd3d0e27ec7
0x7fd3d0e27f3e: jmp 0x7fd3d0e27e72
handle_compress:
0x7fd3d0e27f43: push rbp
0x7fd3d0e27f44: mov rbp, rsp
0x7fd3d0e27f47: sub rsp, 0x20
0x7fd3d0e27f4b: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e27f4f: mov byte ptr [rbp-0x1], 0x0
0x7fd3d0e27f53: mov byte ptr [rbp-0x2], 0x0
0x7fd3d0e27f57: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e27f5b: mov rax, qword ptr [rax+0x30]
0x7fd3d0e27f5f: mov qword ptr [rbp-0x10], rax
0x7fd3d0e27f63: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f63: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f67: mov eax, dword ptr [rax+0xc]
0x7fd3d0e27f6a: cmp eax, 0x1
0x7fd3d0e27f6d: jz 0x7fd3d0e283a6
0x7fd3d0e27f73: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f77: mov eax, dword ptr [rax+0xc]
0x7fd3d0e27f7a: cmp eax, 0x2
0x7fd3d0e27f7d: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e27f81: mov rdi, rax
0x7fd3d0e27f84: sub rsp, 0x8
0x7fd3d0e27f88: push rbp
0x7fd3d0e27f89: mov rbp, rsp
0x7fd3d0e27f8c: sub rsp, 0x28
0x7fd3d0e27f90: mov qword ptr [rbp-0x28], rdi
0x7fd3d0e27f94: mov byte ptr [rbp-0x1], 0x0
0x7fd3d0e27f98: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27f9c: mov eax, dword ptr [rax+0x8]
0x7fd3d0e27f9f: cmp eax, 0x2
0x7fd3d0e27fa2: jnz 0x7fd3d0e28163
0x7fd3d0e27fa8: jmp 0x7fd3d0e27fae
0x7fd3d0e27fad: nop
0x7fd3d0e27fae: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27fb2: mov edx, dword ptr [rax+0x6c]
0x7fd3d0e27fb5: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27fb9: mov eax, dword ptr [rax+0x70]
0x7fd3d0e27fbc: cmp edx, eax
0x7fd3d0e27fbe: jnl 0x7fd3d0e28338
0x7fd3d0e27fc4: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27fc8: mov rax, qword ptr [rax]
0x7fd3d0e27fcb: mov eax, dword ptr [rax+0x8]
0x7fd3d0e27fce: test eax, eax
0x7fd3d0e27fd0: jz 0x7fd3d0e2833e
0x7fd3d0e27fd6: mov byte ptr [rbp-0x1], 0x1
0x7fd3d0e27fda: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27fde: mov rax, qword ptr [rax]
0x7fd3d0e27fe1: mov rax, qword ptr [rax]
0x7fd3d0e27fe4: movzx eax, byte ptr [rax]
0x7fd3d0e27fe7: movzx eax, al
0x7fd3d0e27fea: mov dword ptr [rbp-0x8], eax
0x7fd3d0e27fed: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e27ff1: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e27ff4: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e27ff7: jz 0x7fd3d0e2809f
0x7fd3d0e27ffd: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28001: mov eax, dword ptr [rax+0x60]
0x7fd3d0e28004: cmp eax, 0x1
0x7fd3d0e28007: jnz 0x7fd3d0e2809f
0x7fd3d0e2800d: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28011: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e28014: mov byte ptr [rbp-0x9], al
0x7fd3d0e28017: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2801b: mov eax, dword ptr [rax+0x288]
0x7fd3d0e28021: mov edx, eax
0x7fd3d0e28023: shl edx, 0x8
0x7fd3d0e28026: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2802a: mov eax, dword ptr [rax+0x288]
0x7fd3d0e28030: mov ecx, eax
0x7fd3d0e28032: shr ecx, 0x18
0x7fd3d0e28035: movzx eax, byte ptr [rbp-0x9]
0x7fd3d0e28039: xor eax, ecx
0x7fd3d0e2803b: mov eax, eax
0x7fd3d0e2803d: mov eax, dword ptr [rax*4+0x61c6a0]
0x7fd3d0e28044: xor edx, eax
0x7fd3d0e28046: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2804a: mov dword ptr [rax+0x288], edx
0x7fd3d0e28050: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28054: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e28057: mov rdx, qword ptr [rbp-0x28]
0x7fd3d0e2805b: mov eax, eax
0x7fd3d0e2805d: mov byte ptr [rdx+rax*1+0x80], 0x1
0x7fd3d0e28065: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28069: mov rdx, qword ptr [rax+0x40]
0x7fd3d0e2806d: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28071: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e28074: cdqe 
0x7fd3d0e28076: add rdx, rax
0x7fd3d0e28079: movzx eax, byte ptr [rbp-0x9]
0x7fd3d0e2807d: mov byte ptr [rdx], al
0x7fd3d0e2807f: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28083: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e28086: lea edx, ptr [rax+0x1]
0x7fd3d0e28089: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2808d: mov dword ptr [rax+0x6c], edx
0x7fd3d0e28090: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28094: mov edx, dword ptr [rbp-0x8]
0x7fd3d0e28097: mov dword ptr [rax+0x5c], edx
0x7fd3d0e2809a: jmp 0x7fd3d0e2810b
0x7fd3d0e2809f: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280a3: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e280a6: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e280a9: jnz 0x7fd3d0e280c1
0x7fd3d0e280af: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280b3: mov eax, dword ptr [rax+0x60]
0x7fd3d0e280b6: cmp eax, 0xff
0x7fd3d0e280bb: jnz 0x7fd3d0e280fa
0x7fd3d0e280c1: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280c5: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e280c8: cmp eax, 0xff
0x7fd3d0e280cd: jnbe 0x7fd3d0e280e0
0x7fd3d0e280d3: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280d7: mov rdi, rax
0x7fd3d0e280da: call qword ptr [rip-0x2b45c80]
0x7fd3d0e280e0: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280e4: mov edx, dword ptr [rbp-0x8]
0x7fd3d0e280e7: mov dword ptr [rax+0x5c], edx
0x7fd3d0e280ea: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280ee: mov dword ptr [rax+0x60], 0x1
0x7fd3d0e280f5: jmp 0x7fd3d0e2810b
0x7fd3d0e280fa: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e280fe: mov eax, dword ptr [rax+0x60]
0x7fd3d0e28101: lea edx, ptr [rax+0x1]
0x7fd3d0e28104: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28108: mov dword ptr [rax+0x60], edx
0x7fd3d0e2810b: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2810f: mov rax, qword ptr [rax]
0x7fd3d0e28112: mov rdx, qword ptr [rax]
0x7fd3d0e28115: add rdx, 0x1
0x7fd3d0e28119: mov qword ptr [rax], rdx
0x7fd3d0e2811c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28120: mov rax, qword ptr [rax]
0x7fd3d0e28123: mov edx, dword ptr [rax+0x8]
0x7fd3d0e28126: sub edx, 0x1
0x7fd3d0e28129: mov dword ptr [rax+0x8], edx
0x7fd3d0e2812c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28130: mov rax, qword ptr [rax]
0x7fd3d0e28133: mov edx, dword ptr [rax+0xc]
0x7fd3d0e28136: add edx, 0x1
0x7fd3d0e28139: mov dword ptr [rax+0xc], edx
0x7fd3d0e2813c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28140: mov rax, qword ptr [rax]
0x7fd3d0e28143: mov eax, dword ptr [rax+0xc]
0x7fd3d0e28146: test eax, eax
0x7fd3d0e28148: jnz 0x7fd3d0e27fad
0x7fd3d0e2814e: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28152: mov rax, qword ptr [rax]
0x7fd3d0e28155: mov edx, dword ptr [rax+0x10]
0x7fd3d0e28158: add edx, 0x1
0x7fd3d0e2815b: mov dword ptr [rax+0x10], edx
0x7fd3d0e2815e: jmp 0x7fd3d0e27fad
0x7fd3d0e28163: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28167: mov edx, dword ptr [rax+0x6c]
0x7fd3d0e2816a: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2816e: mov eax, dword ptr [rax+0x70]
0x7fd3d0e28171: cmp edx, eax
0x7fd3d0e28173: jnl 0x7fd3d0e28344
0x7fd3d0e28179: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2817d: mov rax, qword ptr [rax]
0x7fd3d0e28180: mov eax, dword ptr [rax+0x8]
0x7fd3d0e28183: test eax, eax
0x7fd3d0e28185: jz 0x7fd3d0e2834a
0x7fd3d0e2818b: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2818f: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28192: test eax, eax
0x7fd3d0e28194: jz 0x7fd3d0e28350
0x7fd3d0e2819a: mov byte ptr [rbp-0x1], 0x1
0x7fd3d0e2819e: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281a2: mov rax, qword ptr [rax]
0x7fd3d0e281a5: mov rax, qword ptr [rax]
0x7fd3d0e281a8: movzx eax, byte ptr [rax]
0x7fd3d0e281ab: movzx eax, al
0x7fd3d0e281ae: mov dword ptr [rbp-0x10], eax
0x7fd3d0e281b1: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281b5: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e281b8: cmp eax, dword ptr [rbp-0x10]
0x7fd3d0e281bb: jz 0x7fd3d0e28263
0x7fd3d0e281c1: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281c5: mov eax, dword ptr [rax+0x60]
0x7fd3d0e281c8: cmp eax, 0x1
0x7fd3d0e281cb: jnz 0x7fd3d0e28263
0x7fd3d0e281d1: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281d5: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e281d8: mov byte ptr [rbp-0x11], al
0x7fd3d0e281db: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281df: mov eax, dword ptr [rax+0x288]
0x7fd3d0e281e5: mov edx, eax
0x7fd3d0e281e7: shl edx, 0x8
0x7fd3d0e281ea: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e281ee: mov eax, dword ptr [rax+0x288]
0x7fd3d0e281f4: mov ecx, eax
0x7fd3d0e281f6: shr ecx, 0x18
0x7fd3d0e281f9: movzx eax, byte ptr [rbp-0x11]
0x7fd3d0e281fd: xor eax, ecx
0x7fd3d0e281ff: mov eax, eax
0x7fd3d0e28201: mov eax, dword ptr [rax*4+0x61c6a0]
0x7fd3d0e28208: xor edx, eax
0x7fd3d0e2820a: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2820e: mov dword ptr [rax+0x288], edx
0x7fd3d0e28214: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28218: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e2821b: mov rdx, qword ptr [rbp-0x28]
0x7fd3d0e2821f: mov eax, eax
0x7fd3d0e28221: mov byte ptr [rdx+rax*1+0x80], 0x1
0x7fd3d0e28229: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2822d: mov rdx, qword ptr [rax+0x40]
0x7fd3d0e28231: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28235: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e28238: cdqe 
0x7fd3d0e2823a: add rdx, rax
0x7fd3d0e2823d: movzx eax, byte ptr [rbp-0x11]
0x7fd3d0e28241: mov byte ptr [rdx], al
0x7fd3d0e28243: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28247: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e2824a: lea edx, ptr [rax+0x1]
0x7fd3d0e2824d: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28251: mov dword ptr [rax+0x6c], edx
0x7fd3d0e28254: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28258: mov edx, dword ptr [rbp-0x10]
0x7fd3d0e2825b: mov dword ptr [rax+0x5c], edx
0x7fd3d0e2825e: jmp 0x7fd3d0e282cf
0x7fd3d0e28263: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28267: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e2826a: cmp eax, dword ptr [rbp-0x10]
0x7fd3d0e2826d: jnz 0x7fd3d0e28285
0x7fd3d0e28273: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28277: mov eax, dword ptr [rax+0x60]
0x7fd3d0e2827a: cmp eax, 0xff
0x7fd3d0e2827f: jnz 0x7fd3d0e282be
0x7fd3d0e28285: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28289: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e2828c: cmp eax, 0xff
0x7fd3d0e28291: jnbe 0x7fd3d0e282a4
0x7fd3d0e28297: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2829b: mov rdi, rax
0x7fd3d0e2829e: call qword ptr [rip-0x2b43fc4]
0x7fd3d0e282a4: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282a8: mov edx, dword ptr [rbp-0x10]
0x7fd3d0e282ab: mov dword ptr [rax+0x5c], edx
0x7fd3d0e282ae: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282b2: mov dword ptr [rax+0x60], 0x1
0x7fd3d0e282b9: jmp 0x7fd3d0e282cf
0x7fd3d0e282be: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282c2: mov eax, dword ptr [rax+0x60]
0x7fd3d0e282c5: lea edx, ptr [rax+0x1]
0x7fd3d0e282c8: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282cc: mov dword ptr [rax+0x60], edx
0x7fd3d0e282cf: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282d3: mov rax, qword ptr [rax]
0x7fd3d0e282d6: mov rdx, qword ptr [rax]
0x7fd3d0e282d9: add rdx, 0x1
0x7fd3d0e282dd: mov qword ptr [rax], rdx
0x7fd3d0e282e0: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282e4: mov rax, qword ptr [rax]
0x7fd3d0e282e7: mov edx, dword ptr [rax+0x8]
0x7fd3d0e282ea: sub edx, 0x1
0x7fd3d0e282ed: mov dword ptr [rax+0x8], edx
0x7fd3d0e282f0: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e282f4: mov rax, qword ptr [rax]
0x7fd3d0e282f7: mov edx, dword ptr [rax+0xc]
0x7fd3d0e282fa: add edx, 0x1
0x7fd3d0e282fd: mov dword ptr [rax+0xc], edx
0x7fd3d0e28300: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28304: mov rax, qword ptr [rax]
0x7fd3d0e28307: mov eax, dword ptr [rax+0xc]
0x7fd3d0e2830a: test eax, eax
0x7fd3d0e2830c: jnz 0x7fd3d0e28322
0x7fd3d0e28312: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28316: mov rax, qword ptr [rax]
0x7fd3d0e28319: mov edx, dword ptr [rax+0x10]
0x7fd3d0e2831c: add edx, 0x1
0x7fd3d0e2831f: mov dword ptr [rax+0x10], edx
0x7fd3d0e28322: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28326: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28329: lea edx, ptr [rax-0x1]
0x7fd3d0e2832c: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28330: mov dword ptr [rax+0x10], edx
0x7fd3d0e28333: jmp 0x7fd3d0e28163
0x7fd3d0e28338: nop
0x7fd3d0e28339: jmp 0x7fd3d0e28351
0x7fd3d0e2833e: nop
0x7fd3d0e2833f: jmp 0x7fd3d0e28351
0x7fd3d0e28344: nop
0x7fd3d0e28345: jmp 0x7fd3d0e28351
0x7fd3d0e2834a: nop
0x7fd3d0e2834b: jmp 0x7fd3d0e28351
0x7fd3d0e28350: nop
0x7fd3d0e28351: movzx eax, byte ptr [rbp-0x1]
0x7fd3d0e28355: leave 
0x7fd3d0e28356: add rsp, 0x8
0x7fd3d0e2835a: call qword ptr [rip-0x2b432c0]
0x7fd3d0e28360: or byte ptr [rbp-0x1], al
0x7fd3d0e28363: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28367: mov eax, dword ptr [rax+0x8]
0x7fd3d0e2836a: cmp eax, 0x2
0x7fd3d0e2836d: jnz 0x7fd3d0e2843e
0x7fd3d0e28373: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28377: mov edx, dword ptr [rax+0x6c]
0x7fd3d0e2837a: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2837e: mov eax, dword ptr [rax+0x70]
0x7fd3d0e28381: cmp edx, eax
0x7fd3d0e28383: jnl 0x7fd3d0e28412
0x7fd3d0e28389: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2838d: mov rax, qword ptr [rax]
0x7fd3d0e28390: mov eax, dword ptr [rax+0x8]
0x7fd3d0e28393: test eax, eax
0x7fd3d0e28395: cmp byte ptr [rbp-0x1], 0x0
0x7fd3d0e28395: cmp byte ptr [rbp-0x1], 0x0
0x7fd3d0e28399: jz 0x7fd3d0e283d2
0x7fd3d0e2839f: mov eax, 0x1
0x7fd3d0e283a4: leave 
0x7fd3d0e283a4: leave 
0x7fd3d0e283a5: ret 
0x7fd3d0e283a6: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283aa: mov rdi, rax
0x7fd3d0e283ad: call qword ptr [rip-0x2b42cd3]
0x7fd3d0e283b3: or byte ptr [rbp-0x2], al
0x7fd3d0e283b6: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283ba: mov edx, dword ptr [rax+0x78]
0x7fd3d0e283bd: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283c1: mov eax, dword ptr [rax+0x74]
0x7fd3d0e283c4: cmp edx, eax
0x7fd3d0e283c6: jnl 0x7fd3d0e283db
0x7fd3d0e283cc: nop
0x7fd3d0e283cd: jmp 0x7fd3d0e28395
0x7fd3d0e283d2: cmp byte ptr [rbp-0x2], 0x0
0x7fd3d0e283d6: jmp 0x7fd3d0e2839f
0x7fd3d0e283db: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283df: mov eax, dword ptr [rax+0x8]
0x7fd3d0e283e2: cmp eax, 0x4
0x7fd3d0e283e5: jz 0x7fd3d0e28481
0x7fd3d0e283eb: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283ef: mov rdi, rax
0x7fd3d0e283f2: call 0x7fd3d0e285b1
0x7fd3d0e283f7: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e283fb: mov dword ptr [rax+0xc], 0x2
0x7fd3d0e28402: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28406: mov eax, dword ptr [rax+0x8]
0x7fd3d0e28409: cmp eax, 0x3
0x7fd3d0e2840c: jnz 0x7fd3d0e27f73
0x7fd3d0e28412: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28416: mov esi, 0x0
0x7fd3d0e2841b: mov rdi, rax
0x7fd3d0e2841e: call 0x7fd3d0e28632
0x7fd3d0e28423: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28427: mov dword ptr [rax+0xc], 0x1
0x7fd3d0e2842e: nop
0x7fd3d0e2842e: nop
0x7fd3d0e2842f: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28433: mov eax, dword ptr [rax+0xc]
0x7fd3d0e28436: cmp eax, 0x1
0x7fd3d0e28439: jmp 0x7fd3d0e283a6
0x7fd3d0e2843e: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28442: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28445: test eax, eax
0x7fd3d0e28447: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2844b: mov rdi, rax
0x7fd3d0e2844e: call 0x7fd3d0e29171
0x7fd3d0e28453: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28457: mov eax, dword ptr [rax+0x8]
0x7fd3d0e2845a: cmp eax, 0x4
0x7fd3d0e2845d: setz al
0x7fd3d0e28460: movzx edx, al
0x7fd3d0e28463: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28467: mov esi, edx
0x7fd3d0e28469: mov rdi, rax
0x7fd3d0e2846c: call 0x7fd3d0e28632
0x7fd3d0e28471: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28475: mov dword ptr [rax+0xc], 0x1
0x7fd3d0e2847c: jmp 0x7fd3d0e2842e
0x7fd3d0e28481: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28485: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28488: test eax, eax
0x7fd3d0e2848a: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2848e: mov rdi, rax
0x7fd3d0e28491: call 0x7fd3d0e28f92
0x7fd3d0e28496: test al, al
0x7fd3d0e28498: nop
0x7fd3d0e28498: nop
0x7fd3d0e28499: jmp 0x7fd3d0e28395
0x7fd3d0e2849e: jmp 0x7fd3d0e28395
BZ2_bzCompress:
0x7fd3d0e284a3: push rbp
0x7fd3d0e284a4: mov rbp, rsp
0x7fd3d0e284a7: sub rsp, 0x20
0x7fd3d0e284ab: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e284af: mov dword ptr [rbp-0x1c], esi
0x7fd3d0e284b2: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e284b7: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e284b7: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e284bb: mov rax, qword ptr [rax+0x30]
0x7fd3d0e284bf: mov qword ptr [rbp-0x8], rax
0x7fd3d0e284c3: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e284c8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e284c8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e284cc: mov rax, qword ptr [rax]
0x7fd3d0e284cf: cmp rax, qword ptr [rbp-0x18]
0x7fd3d0e284d3: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e284d3: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e284d7: mov eax, dword ptr [rax+0x8]
0x7fd3d0e284da: cmp eax, 0x2
0x7fd3d0e284dd: jnz 0x7fd3d0e28507
0x7fd3d0e284e3: cmp dword ptr [rbp-0x1c], 0x0
0x7fd3d0e284e7: jnz 0x7fd3d0e28586
0x7fd3d0e284ed: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e284f1: mov rdi, rax
0x7fd3d0e284f4: call 0x7fd3d0e27f43
0x7fd3d0e284f9: mov byte ptr [rbp-0x9], al
0x7fd3d0e284fc: cmp byte ptr [rbp-0x9], 0x0
0x7fd3d0e28500: mov eax, 0x1
0x7fd3d0e28505: leave 
0x7fd3d0e28505: leave 
0x7fd3d0e28505: leave 
0x7fd3d0e28506: ret 
0x7fd3d0e28507: cmp eax, 0x2
0x7fd3d0e2850a: cmp eax, 0x3
0x7fd3d0e2850a: cmp eax, 0x3
0x7fd3d0e2850d: cmp eax, 0x4
0x7fd3d0e28510: cmp dword ptr [rbp-0x1c], 0x2
0x7fd3d0e28510: cmp dword ptr [rbp-0x1c], 0x2
0x7fd3d0e28514: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28514: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28518: mov edx, dword ptr [rax+0x10]
0x7fd3d0e2851b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2851f: mov rax, qword ptr [rax]
0x7fd3d0e28522: mov eax, dword ptr [rax+0x8]
0x7fd3d0e28525: cmp edx, eax
0x7fd3d0e28527: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28527: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e2852b: mov rdi, rax
0x7fd3d0e2852e: call 0x7fd3d0e27f43
0x7fd3d0e28533: mov byte ptr [rbp-0x9], al
0x7fd3d0e28536: cmp byte ptr [rbp-0x9], 0x0
0x7fd3d0e2853a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2853a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2853e: mov eax, dword ptr [rax+0x10]
0x7fd3d0e28541: test eax, eax
0x7fd3d0e28543: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28547: mov rdi, rax
0x7fd3d0e2854a: call 0x7fd3d0e28f92
0x7fd3d0e2854f: test al, al
0x7fd3d0e28551: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28555: mov edx, dword ptr [rax+0x78]
0x7fd3d0e28558: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2855c: mov eax, dword ptr [rax+0x74]
0x7fd3d0e2855f: cmp edx, eax
0x7fd3d0e28561: jnl 0x7fd3d0e28571
0x7fd3d0e28567: mov eax, 0x3
0x7fd3d0e2856c: jmp 0x7fd3d0e28505
0x7fd3d0e28571: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28575: mov dword ptr [rax+0x8], 0x1
0x7fd3d0e2857c: mov eax, 0x4
0x7fd3d0e28581: jmp 0x7fd3d0e28505
0x7fd3d0e28586: cmp dword ptr [rbp-0x1c], 0x1
0x7fd3d0e2858a: cmp dword ptr [rbp-0x1c], 0x2
0x7fd3d0e2858a: cmp dword ptr [rbp-0x1c], 0x2
0x7fd3d0e2858e: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28592: mov edx, dword ptr [rax+0x8]
0x7fd3d0e28595: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28599: mov dword ptr [rax+0x10], edx
0x7fd3d0e2859c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e285a0: mov dword ptr [rax+0x8], 0x4
0x7fd3d0e285a7: jmp 0x7fd3d0e284d3
0x7fd3d0e285ac: jmp 0x7fd3d0e284d3
prepare_new_block:
0x7fd3d0e285b1: push rbp
0x7fd3d0e285b2: mov rbp, rsp
0x7fd3d0e285b5: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e285b9: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e285bd: mov dword ptr [rax+0x6c], 0x0
0x7fd3d0e285c4: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e285c8: mov dword ptr [rax+0x74], 0x0
0x7fd3d0e285cf: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e285d3: mov dword ptr [rax+0x78], 0x0
0x7fd3d0e285da: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e285de: mov dword ptr [rax+0x288], 0xffffffff
0x7fd3d0e285e8: mov dword ptr [rbp-0x4], 0x0
0x7fd3d0e285ef: cmp dword ptr [rbp-0x4], 0xff
0x7fd3d0e285ef: cmp dword ptr [rbp-0x4], 0xff
0x7fd3d0e285f6: mov rdx, qword ptr [rbp-0x18]
0x7fd3d0e285f6: mov rdx, qword ptr [rbp-0x18]
0x7fd3d0e285fa: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e285fd: cdqe 
0x7fd3d0e285ff: mov byte ptr [rdx+rax*1+0x80], 0x0
0x7fd3d0e28607: add dword ptr [rbp-0x4], 0x1
0x7fd3d0e2860b: cmp dword ptr [rbp-0x4], 0xff
0x7fd3d0e28612: jle 0x7fd3d0e285f6
0x7fd3d0e28618: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e2861c: mov eax, dword ptr [rax+0x294]
0x7fd3d0e28622: lea edx, ptr [rax+0x1]
0x7fd3d0e28625: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28629: mov dword ptr [rax+0x294], edx
0x7fd3d0e2862f: pop rbp
0x7fd3d0e28630: ret 
0x7fd3d0e28631: ret 
BZ2_compressBlock:
0x7fd3d0e28632: push rbp
0x7fd3d0e28633: mov rbp, rsp
0x7fd3d0e28636: sub rsp, 0x10
0x7fd3d0e2863a: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e2863e: mov eax, esi
0x7fd3d0e28640: mov byte ptr [rbp-0xc], al
0x7fd3d0e28643: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28647: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e2864a: test eax, eax
0x7fd3d0e2864c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28650: mov eax, dword ptr [rax+0x288]
0x7fd3d0e28656: mov edx, eax
0x7fd3d0e28658: not edx
0x7fd3d0e2865a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2865e: mov dword ptr [rax+0x288], edx
0x7fd3d0e28664: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28668: mov eax, dword ptr [rax+0x28c]
0x7fd3d0e2866e: mov edx, eax
0x7fd3d0e28670: rol edx, 0x1
0x7fd3d0e28672: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28676: mov dword ptr [rax+0x28c], edx
0x7fd3d0e2867c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28680: mov edx, dword ptr [rax+0x28c]
0x7fd3d0e28686: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2868a: mov eax, dword ptr [rax+0x288]
0x7fd3d0e28690: xor edx, eax
0x7fd3d0e28692: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28696: mov dword ptr [rax+0x28c], edx
0x7fd3d0e2869c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286a0: mov eax, dword ptr [rax+0x294]
0x7fd3d0e286a6: cmp eax, 0x1
0x7fd3d0e286a9: jle 0x7fd3d0e286ba
0x7fd3d0e286af: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286b3: mov dword ptr [rax+0x74], 0x0
0x7fd3d0e286ba: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286be: mov eax, dword ptr [rax+0x290]
0x7fd3d0e286c4: cmp eax, 0x1
0x7fd3d0e286c7: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286c7: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286cb: mov rdi, rax
0x7fd3d0e286ce: call 0x7fd3d0e27ce6
0x7fd3d0e286d3: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286d7: mov rdx, qword ptr [rax+0x20]
0x7fd3d0e286db: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286df: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e286e2: cdqe 
0x7fd3d0e286e4: add rdx, rax
0x7fd3d0e286e7: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286eb: mov qword ptr [rax+0x50], rdx
0x7fd3d0e286ef: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e286f3: mov eax, dword ptr [rax+0x294]
0x7fd3d0e286f9: cmp eax, 0x1
0x7fd3d0e286fc: jz 0x7fd3d0e287f1
0x7fd3d0e28702: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28706: mov eax, dword ptr [rax+0x6c]
0x7fd3d0e28709: test eax, eax
0x7fd3d0e2870b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2870f: mov esi, 0x31
0x7fd3d0e28714: mov rdi, rax
0x7fd3d0e28717: call 0x7fd3d0e288f4
0x7fd3d0e2871c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28720: mov esi, 0x41
0x7fd3d0e28725: mov rdi, rax
0x7fd3d0e28728: call 0x7fd3d0e288f4
0x7fd3d0e2872d: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28731: mov esi, 0x59
0x7fd3d0e28736: mov rdi, rax
0x7fd3d0e28739: call 0x7fd3d0e288f4
0x7fd3d0e2873e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28742: mov esi, 0x26
0x7fd3d0e28747: mov rdi, rax
0x7fd3d0e2874a: call 0x7fd3d0e288f4
0x7fd3d0e2874f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28753: mov esi, 0x53
0x7fd3d0e28758: mov rdi, rax
0x7fd3d0e2875b: call 0x7fd3d0e288f4
0x7fd3d0e28760: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28764: mov esi, 0x59
0x7fd3d0e28769: mov rdi, rax
0x7fd3d0e2876c: call 0x7fd3d0e288f4
0x7fd3d0e28771: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28775: mov edx, dword ptr [rax+0x288]
0x7fd3d0e2877b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2877f: mov esi, edx
0x7fd3d0e28781: mov rdi, rax
0x7fd3d0e28784: call 0x7fd3d0e2891d
0x7fd3d0e28789: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2878d: mov edx, 0x0
0x7fd3d0e28792: mov esi, 0x1
0x7fd3d0e28797: mov rdi, rax
0x7fd3d0e2879a: call 0x7fd3d0e27e50
0x7fd3d0e2879f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287a3: mov eax, dword ptr [rax+0x30]
0x7fd3d0e287a6: mov edx, eax
0x7fd3d0e287a8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287ac: mov esi, 0x18
0x7fd3d0e287b1: mov rdi, rax
0x7fd3d0e287b4: call 0x7fd3d0e27e50
0x7fd3d0e287b9: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287bd: mov rdi, rax
0x7fd3d0e287c0: call 0x7fd3d0e2784c
0x7fd3d0e287c5: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287c9: mov rdi, rax
0x7fd3d0e287cc: call qword ptr [rip-0x2b3eab2]
0x7fd3d0e287d2: cmp byte ptr [rbp-0xc], 0x0
0x7fd3d0e287d6: jnz 0x7fd3d0e28853
0x7fd3d0e287dc: leave 
0x7fd3d0e287dd: ret 
0x7fd3d0e287de: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287e2: mov eax, dword ptr [rax+0x290]
0x7fd3d0e287e8: cmp eax, 0x1
0x7fd3d0e287eb: jle 0x7fd3d0e286c7
0x7fd3d0e287f1: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e287f5: mov rdi, rax
0x7fd3d0e287f8: call 0x7fd3d0e29229
0x7fd3d0e287fd: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28801: mov esi, 0x42
0x7fd3d0e28806: mov rdi, rax
0x7fd3d0e28809: call 0x7fd3d0e288f4
0x7fd3d0e2880e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28812: mov esi, 0x5a
0x7fd3d0e28817: mov rdi, rax
0x7fd3d0e2881a: call 0x7fd3d0e288f4
0x7fd3d0e2881f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28823: mov esi, 0x68
0x7fd3d0e28828: mov rdi, rax
0x7fd3d0e2882b: call 0x7fd3d0e288f4
0x7fd3d0e28830: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28834: mov eax, dword ptr [rax+0x298]
0x7fd3d0e2883a: add eax, 0x30
0x7fd3d0e2883d: movzx edx, al
0x7fd3d0e28840: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28844: mov esi, edx
0x7fd3d0e28846: mov rdi, rax
0x7fd3d0e28849: call 0x7fd3d0e288f4
0x7fd3d0e2884e: jmp 0x7fd3d0e28702
0x7fd3d0e28853: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28857: mov esi, 0x17
0x7fd3d0e2885c: mov rdi, rax
0x7fd3d0e2885f: call 0x7fd3d0e288f4
0x7fd3d0e28864: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28868: mov esi, 0x72
0x7fd3d0e2886d: mov rdi, rax
0x7fd3d0e28870: call 0x7fd3d0e288f4
0x7fd3d0e28875: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28879: mov esi, 0x45
0x7fd3d0e2887e: mov rdi, rax
0x7fd3d0e28881: call 0x7fd3d0e288f4
0x7fd3d0e28886: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2888a: mov esi, 0x38
0x7fd3d0e2888f: mov rdi, rax
0x7fd3d0e28892: call 0x7fd3d0e288f4
0x7fd3d0e28897: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2889b: mov esi, 0x50
0x7fd3d0e288a0: mov rdi, rax
0x7fd3d0e288a3: call 0x7fd3d0e288f4
0x7fd3d0e288a8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288ac: mov esi, 0x90
0x7fd3d0e288b1: mov rdi, rax
0x7fd3d0e288b4: call 0x7fd3d0e288f4
0x7fd3d0e288b9: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288bd: mov edx, dword ptr [rax+0x28c]
0x7fd3d0e288c3: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288c7: mov esi, edx
0x7fd3d0e288c9: mov rdi, rax
0x7fd3d0e288cc: call 0x7fd3d0e2891d
0x7fd3d0e288d1: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288d5: mov eax, dword ptr [rax+0x290]
0x7fd3d0e288db: cmp eax, 0x1
0x7fd3d0e288de: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288de: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e288e2: mov rdi, rax
0x7fd3d0e288e5: call 0x7fd3d0e28ed6
0x7fd3d0e288ea: call 0x7fd3d0e28ed6
0x7fd3d0e288ef: jmp 0x7fd3d0e287dc
bsPutUChar:
0x7fd3d0e288f4: push rbp
0x7fd3d0e288f5: mov rbp, rsp
0x7fd3d0e288f8: sub rsp, 0x10
0x7fd3d0e288fc: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28900: mov eax, esi
0x7fd3d0e28902: mov byte ptr [rbp-0xc], al
0x7fd3d0e28905: movzx edx, byte ptr [rbp-0xc]
0x7fd3d0e28909: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2890d: mov esi, 0x8
0x7fd3d0e28912: mov rdi, rax
0x7fd3d0e28915: call 0x7fd3d0e27e50
0x7fd3d0e2891a: leave 
0x7fd3d0e2891b: ret 
0x7fd3d0e2891c: ret 
bsPutUInt32:
0x7fd3d0e2891d: push rbp
0x7fd3d0e2891e: mov rbp, rsp
0x7fd3d0e28921: sub rsp, 0x10
0x7fd3d0e28925: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28929: mov dword ptr [rbp-0xc], esi
0x7fd3d0e2892c: mov eax, dword ptr [rbp-0xc]
0x7fd3d0e2892f: mov edx, eax
0x7fd3d0e28931: shr edx, 0x18
0x7fd3d0e28934: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28938: mov esi, 0x8
0x7fd3d0e2893d: mov rdi, rax
0x7fd3d0e28940: call 0x7fd3d0e27e50
0x7fd3d0e28945: mov eax, dword ptr [rbp-0xc]
0x7fd3d0e28948: shr eax, 0x10
0x7fd3d0e2894b: movzx edx, al
0x7fd3d0e2894e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28952: mov esi, 0x8
0x7fd3d0e28957: mov rdi, rax
0x7fd3d0e2895a: call 0x7fd3d0e27e50
0x7fd3d0e2895f: mov eax, dword ptr [rbp-0xc]
0x7fd3d0e28962: shr eax, 0x8
0x7fd3d0e28965: movzx edx, al
0x7fd3d0e28968: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2896c: mov esi, 0x8
0x7fd3d0e28971: mov rdi, rax
0x7fd3d0e28974: call 0x7fd3d0e27e50
0x7fd3d0e28979: mov eax, dword ptr [rbp-0xc]
0x7fd3d0e2897c: movzx edx, al
0x7fd3d0e2897f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28983: mov esi, 0x8
0x7fd3d0e28988: mov rdi, rax
0x7fd3d0e2898b: call 0x7fd3d0e27e50
0x7fd3d0e28990: leave 
0x7fd3d0e28991: ret 
0x7fd3d0e28992: ret 
BZ2_bzWriteClose64:
0x7fd3d0e28993: push rbp
0x7fd3d0e28994: mov rbp, rsp
0x7fd3d0e28997: sub rsp, 0x50
0x7fd3d0e2899b: mov qword ptr [rbp-0x28], rdi
0x7fd3d0e2899f: mov qword ptr [rbp-0x30], rsi
0x7fd3d0e289a3: mov dword ptr [rbp-0x34], edx
0x7fd3d0e289a6: mov qword ptr [rbp-0x40], rcx
0x7fd3d0e289aa: mov qword ptr [rbp-0x48], r8
0x7fd3d0e289ae: mov qword ptr [rbp-0x50], r9
0x7fd3d0e289b2: mov rax, qword ptr [rbp-0x30]
0x7fd3d0e289b6: mov qword ptr [rbp-0x8], rax
0x7fd3d0e289ba: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e289bf: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e289bf: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e289c3: movzx eax, byte ptr [rax+0x1394]
0x7fd3d0e289ca: test al, al
0x7fd3d0e289cc: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e289cc: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e289d0: mov rax, qword ptr [rax]
0x7fd3d0e289d3: mov rdi, rax
0x7fd3d0e289d6: call qword ptr [rip-0x2b3c97c]
0x7fd3d0e289dc: test eax, eax
0x7fd3d0e289de: cmp qword ptr [rbp-0x40], 0x0
0x7fd3d0e289de: cmp qword ptr [rbp-0x40], 0x0
0x7fd3d0e289e3: mov rax, qword ptr [rbp-0x40]
0x7fd3d0e289e7: mov dword ptr [rax], 0x0
0x7fd3d0e289ed: cmp qword ptr [rbp-0x48], 0x0
0x7fd3d0e289f2: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e289f6: mov dword ptr [rax], 0x0
0x7fd3d0e289fc: cmp qword ptr [rbp-0x50], 0x0
0x7fd3d0e28a01: mov rax, qword ptr [rbp-0x50]
0x7fd3d0e28a05: mov dword ptr [rax], 0x0
0x7fd3d0e28a0b: cmp qword ptr [rbp+0x10], 0x0
0x7fd3d0e28a10: mov rax, qword ptr [rbp+0x10]
0x7fd3d0e28a14: mov dword ptr [rax], 0x0
0x7fd3d0e28a1a: cmp dword ptr [rbp-0x34], 0x0
0x7fd3d0e28a1e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a22: mov eax, dword ptr [rax+0x13e8]
0x7fd3d0e28a28: test eax, eax
0x7fd3d0e28a2a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a2a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a2e: mov dword ptr [rax+0x13b8], 0x1388
0x7fd3d0e28a38: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a3c: lea rdx, ptr [rax+0x8]
0x7fd3d0e28a40: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a44: mov qword ptr [rax+0x13b0], rdx
0x7fd3d0e28a4b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a4f: add rax, 0x1398
0x7fd3d0e28a55: mov esi, 0x2
0x7fd3d0e28a5a: mov rdi, rax
0x7fd3d0e28a5d: call 0x7fd3d0e284a3
0x7fd3d0e28a62: mov dword ptr [rbp-0xc], eax
0x7fd3d0e28a65: cmp dword ptr [rbp-0xc], 0x3
0x7fd3d0e28a69: jnz 0x7fd3d0e28bef
0x7fd3d0e28a6f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a73: mov eax, dword ptr [rax+0x13b8]
0x7fd3d0e28a79: cmp eax, 0x1387
0x7fd3d0e28a7e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a82: mov eax, dword ptr [rax+0x13b8]
0x7fd3d0e28a88: mov edx, 0x1388
0x7fd3d0e28a8d: mov ecx, edx
0x7fd3d0e28a8f: sub ecx, eax
0x7fd3d0e28a91: mov eax, ecx
0x7fd3d0e28a93: mov dword ptr [rbp-0x10], eax
0x7fd3d0e28a96: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28a9a: mov rdx, qword ptr [rax]
0x7fd3d0e28a9d: mov eax, dword ptr [rbp-0x10]
0x7fd3d0e28aa0: cdqe 
0x7fd3d0e28aa2: mov rcx, qword ptr [rbp-0x8]
0x7fd3d0e28aa6: lea rdi, ptr [rcx+0x8]
0x7fd3d0e28aaa: mov rcx, rdx
0x7fd3d0e28aad: mov rdx, rax
0x7fd3d0e28ab0: mov esi, 0x1
0x7fd3d0e28ab5: call qword ptr [rip-0x2b3bd1b]
0x7fd3d0e28abb: mov dword ptr [rbp-0x14], eax
0x7fd3d0e28abe: mov eax, dword ptr [rbp-0x10]
0x7fd3d0e28ac1: cmp eax, dword ptr [rbp-0x14]
0x7fd3d0e28ac4: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ac8: mov rax, qword ptr [rax]
0x7fd3d0e28acb: mov rdi, rax
0x7fd3d0e28ace: call qword ptr [rip-0x2b3bb74]
0x7fd3d0e28ad4: test eax, eax
0x7fd3d0e28ad6: cmp dword ptr [rbp-0xc], 0x4
0x7fd3d0e28ad6: cmp dword ptr [rbp-0xc], 0x4
0x7fd3d0e28ada: jz 0x7fd3d0e28b1e
0x7fd3d0e28ae0: nop
0x7fd3d0e28ae1: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ae5: mov dword ptr [rax+0x13b8], 0x1388
0x7fd3d0e28aef: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28af3: lea rdx, ptr [rax+0x8]
0x7fd3d0e28af7: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28afb: mov qword ptr [rax+0x13b0], rdx
0x7fd3d0e28b02: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b06: add rax, 0x1398
0x7fd3d0e28b0c: mov esi, 0x2
0x7fd3d0e28b11: mov rdi, rax
0x7fd3d0e28b14: call 0x7fd3d0e284a3
0x7fd3d0e28b19: jmp 0x7fd3d0e28a62
0x7fd3d0e28b1e: nop
0x7fd3d0e28b1f: cmp dword ptr [rbp-0x34], 0x0
0x7fd3d0e28b23: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b27: mov rax, qword ptr [rax]
0x7fd3d0e28b2a: mov rdi, rax
0x7fd3d0e28b2d: call qword ptr [rip-0x2b3b613]
0x7fd3d0e28b33: test eax, eax
0x7fd3d0e28b35: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b39: mov rax, qword ptr [rax]
0x7fd3d0e28b3c: mov rdi, rax
0x7fd3d0e28b3f: call qword ptr [rip-0x2b3b4e5]
0x7fd3d0e28b45: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b49: mov rax, qword ptr [rax]
0x7fd3d0e28b4c: mov rdi, rax
0x7fd3d0e28b4f: call qword ptr [rip-0x2b3b3f5]
0x7fd3d0e28b55: test eax, eax
0x7fd3d0e28b57: cmp qword ptr [rbp-0x40], 0x0
0x7fd3d0e28b57: cmp qword ptr [rbp-0x40], 0x0
0x7fd3d0e28b5c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b60: mov edx, dword ptr [rax+0x13a4]
0x7fd3d0e28b66: mov rax, qword ptr [rbp-0x40]
0x7fd3d0e28b6a: mov dword ptr [rax], edx
0x7fd3d0e28b6c: cmp qword ptr [rbp-0x48], 0x0
0x7fd3d0e28b71: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b75: mov edx, dword ptr [rax+0x13a8]
0x7fd3d0e28b7b: mov rax, qword ptr [rbp-0x48]
0x7fd3d0e28b7f: mov dword ptr [rax], edx
0x7fd3d0e28b81: cmp qword ptr [rbp-0x50], 0x0
0x7fd3d0e28b86: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b8a: mov edx, dword ptr [rax+0x13bc]
0x7fd3d0e28b90: mov rax, qword ptr [rbp-0x50]
0x7fd3d0e28b94: mov dword ptr [rax], edx
0x7fd3d0e28b96: cmp qword ptr [rbp+0x10], 0x0
0x7fd3d0e28b9b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28b9f: mov edx, dword ptr [rax+0x13c0]
0x7fd3d0e28ba5: mov rax, qword ptr [rbp+0x10]
0x7fd3d0e28ba9: mov dword ptr [rax], edx
0x7fd3d0e28bab: cmp qword ptr [rbp-0x28], 0x0
0x7fd3d0e28bb0: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e28bb4: mov dword ptr [rax], 0x0
0x7fd3d0e28bba: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28bbf: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28bc3: mov dword ptr [rax+0x13e8], 0x0
0x7fd3d0e28bcd: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28bd1: add rax, 0x1398
0x7fd3d0e28bd7: mov rdi, rax
0x7fd3d0e28bda: call qword ptr [rip-0x2b3ac80]
0x7fd3d0e28be0: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28be4: mov rdi, rax
0x7fd3d0e28be7: call qword ptr [rip-0x2b3abcd]
0x7fd3d0e28bed: leave 
0x7fd3d0e28bed: leave 
0x7fd3d0e28bee: ret 
0x7fd3d0e28bef: cmp dword ptr [rbp-0xc], 0x4
0x7fd3d0e28bf3: jz 0x7fd3d0e28a6f
0x7fd3d0e28bf9: jmp qword ptr [rip-0x2b3aa5f]
snocString:
0x7fd3d0e28bff: push rbp
0x7fd3d0e28c00: mov rbp, rsp
0x7fd3d0e28c03: sub rsp, 0x20
0x7fd3d0e28c07: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28c0b: mov qword ptr [rbp-0x20], rsi
0x7fd3d0e28c0f: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e28c14: jnz 0x7fd3d0e28c5e
0x7fd3d0e28c1a: call 0x7fd3d0e2901f
0x7fd3d0e28c1f: mov qword ptr [rbp-0x10], rax
0x7fd3d0e28c23: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28c27: mov rdi, rax
0x7fd3d0e28c2a: call qword ptr [rip-0x2b3a790]
0x7fd3d0e28c30: add eax, 0x5
0x7fd3d0e28c33: mov edi, eax
0x7fd3d0e28c35: call 0x7fd3d0e28d6f
0x7fd3d0e28c3a: mov rdx, qword ptr [rbp-0x10]
0x7fd3d0e28c3e: mov qword ptr [rdx], rax
0x7fd3d0e28c41: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28c45: mov rax, qword ptr [rax]
0x7fd3d0e28c48: mov rdx, qword ptr [rbp-0x20]
0x7fd3d0e28c4c: mov rsi, rdx
0x7fd3d0e28c4f: mov rdi, rax
0x7fd3d0e28c52: call qword ptr [rip-0x2b3a4f8]
0x7fd3d0e28c58: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28c5c: leave 
0x7fd3d0e28c5c: leave 
0x7fd3d0e28c5d: ret 
0x7fd3d0e28c5e: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28c62: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28c66: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28c66: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28c6a: mov rax, qword ptr [rax+0x8]
0x7fd3d0e28c6e: test rax, rax
0x7fd3d0e28c71: jnz 0x7fd3d0e28c9c
0x7fd3d0e28c77: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28c7b: mov rax, qword ptr [rax+0x8]
0x7fd3d0e28c7f: mov rdx, qword ptr [rbp-0x20]
0x7fd3d0e28c83: mov rsi, rdx
0x7fd3d0e28c86: mov rdi, rax
0x7fd3d0e28c89: call 0x7fd3d0e28bff
0x7fd3d0e28c8e: mov rdx, qword ptr [rbp-0x8]
0x7fd3d0e28c92: mov qword ptr [rdx+0x8], rax
0x7fd3d0e28c96: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28c9a: leave 
0x7fd3d0e28c9b: ret 
0x7fd3d0e28c9c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ca0: mov rax, qword ptr [rax+0x8]
0x7fd3d0e28ca4: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28ca8: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28cac: mov rax, qword ptr [rax+0x8]
0x7fd3d0e28cb0: test rax, rax
0x7fd3d0e28cb3: jnz 0x7fd3d0e28c9c
0x7fd3d0e28cb9: jmp 0x7fd3d0e28c77
hasSuffix:
0x7fd3d0e28cbe: push rbp
0x7fd3d0e28cbf: mov rbp, rsp
0x7fd3d0e28cc2: sub rsp, 0x20
0x7fd3d0e28cc6: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28cca: mov qword ptr [rbp-0x20], rsi
0x7fd3d0e28cce: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28cd2: mov rdi, rax
0x7fd3d0e28cd5: call qword ptr [rip-0x2b39bfb]
0x7fd3d0e28cdb: mov dword ptr [rbp-0x4], eax
0x7fd3d0e28cde: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28ce2: mov rdi, rax
0x7fd3d0e28ce5: call qword ptr [rip-0x2b39b0b]
0x7fd3d0e28ceb: mov dword ptr [rbp-0x8], eax
0x7fd3d0e28cee: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e28cf1: cmp eax, dword ptr [rbp-0x8]
0x7fd3d0e28cf4: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e28cf4: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e28cf7: movsxd rdx, eax
0x7fd3d0e28cfa: mov eax, dword ptr [rbp-0x8]
0x7fd3d0e28cfd: cdqe 
0x7fd3d0e28cff: sub rdx, rax
0x7fd3d0e28d02: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28d06: add rdx, rax
0x7fd3d0e28d09: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28d0d: mov rsi, rax
0x7fd3d0e28d10: mov rdi, rdx
0x7fd3d0e28d13: call qword ptr [rip-0x2b39779]
0x7fd3d0e28d19: test eax, eax
0x7fd3d0e28d1b: mov eax, 0x0
0x7fd3d0e28d1b: mov eax, 0x0
0x7fd3d0e28d20: leave 
0x7fd3d0e28d21: ret 
0x7fd3d0e28d22: ret 
copyFileName:
0x7fd3d0e28d23: push rbp
0x7fd3d0e28d24: mov rbp, rsp
0x7fd3d0e28d27: sub rsp, 0x10
0x7fd3d0e28d2b: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28d2f: mov qword ptr [rbp-0x10], rsi
0x7fd3d0e28d33: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28d37: mov rdi, rax
0x7fd3d0e28d3a: call qword ptr [rip-0x2b39420]
0x7fd3d0e28d40: cmp rax, 0x400
0x7fd3d0e28d46: mov rcx, qword ptr [rbp-0x10]
0x7fd3d0e28d46: mov rcx, qword ptr [rbp-0x10]
0x7fd3d0e28d4a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28d4e: mov edx, 0x400
0x7fd3d0e28d53: mov rsi, rcx
0x7fd3d0e28d56: mov rdi, rax
0x7fd3d0e28d59: call qword ptr [rip-0x2b3923f]
0x7fd3d0e28d5f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28d63: add rax, 0x400
0x7fd3d0e28d69: mov byte ptr [rax], 0x0
0x7fd3d0e28d6c: leave 
0x7fd3d0e28d6d: ret 
0x7fd3d0e28d6e: ret 
myMalloc:
0x7fd3d0e28d6f: push rbp
0x7fd3d0e28d70: mov rbp, rsp
0x7fd3d0e28d73: sub rsp, 0x20
0x7fd3d0e28d77: mov dword ptr [rbp-0x14], edi
0x7fd3d0e28d7a: mov eax, dword ptr [rbp-0x14]
0x7fd3d0e28d7d: cdqe 
0x7fd3d0e28d7f: mov rdi, rax
0x7fd3d0e28d82: call qword ptr [rip-0x2b38ee8]
0x7fd3d0e28d88: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28d8c: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28d91: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28d91: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28d95: leave 
0x7fd3d0e28d96: ret 
0x7fd3d0e28d97: ret 
BZ2_bzWriteOpen:
0x7fd3d0e28d98: push rbp
0x7fd3d0e28d99: mov rbp, rsp
0x7fd3d0e28d9c: sub rsp, 0x30
0x7fd3d0e28da0: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28da4: mov qword ptr [rbp-0x20], rsi
0x7fd3d0e28da8: mov dword ptr [rbp-0x24], edx
0x7fd3d0e28dab: mov dword ptr [rbp-0x28], ecx
0x7fd3d0e28dae: mov dword ptr [rbp-0x2c], r8d
0x7fd3d0e28db2: mov qword ptr [rbp-0x8], 0x0
0x7fd3d0e28dba: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e28dbf: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28dc3: mov dword ptr [rax], 0x0
0x7fd3d0e28dc9: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28dce: cmp qword ptr [rbp-0x20], 0x0
0x7fd3d0e28dce: cmp qword ptr [rbp-0x20], 0x0
0x7fd3d0e28dd3: cmp dword ptr [rbp-0x24], 0x0
0x7fd3d0e28dd7: cmp dword ptr [rbp-0x24], 0x9
0x7fd3d0e28ddb: cmp dword ptr [rbp-0x2c], 0x0
0x7fd3d0e28ddf: cmp dword ptr [rbp-0x2c], 0xfa
0x7fd3d0e28de6: cmp dword ptr [rbp-0x28], 0x0
0x7fd3d0e28dea: cmp dword ptr [rbp-0x28], 0x4
0x7fd3d0e28dee: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28dee: mov rax, qword ptr [rbp-0x20]
0x7fd3d0e28df2: mov rdi, rax
0x7fd3d0e28df5: call qword ptr [rip-0x2b3875b]
0x7fd3d0e28dfb: test eax, eax
0x7fd3d0e28dfd: mov edi, 0x13f0
0x7fd3d0e28dfd: mov edi, 0x13f0
0x7fd3d0e28e02: call qword ptr [rip-0x2b38668]
0x7fd3d0e28e08: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28e0c: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28e11: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e28e11: cmp qword ptr [rbp-0x18], 0x0
0x7fd3d0e28e16: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28e1a: mov dword ptr [rax], 0x0
0x7fd3d0e28e20: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28e25: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e29: mov dword ptr [rax+0x13e8], 0x0
0x7fd3d0e28e33: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e37: mov byte ptr [rax+0x13ec], 0x0
0x7fd3d0e28e3e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e42: mov dword ptr [rax+0x1390], 0x0
0x7fd3d0e28e4c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e50: mov rdx, qword ptr [rbp-0x20]
0x7fd3d0e28e54: mov qword ptr [rax], rdx
0x7fd3d0e28e57: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e5b: mov byte ptr [rax+0x1394], 0x1
0x7fd3d0e28e62: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e66: mov qword ptr [rax+0x13d0], 0x0
0x7fd3d0e28e71: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e75: mov qword ptr [rax+0x13d8], 0x0
0x7fd3d0e28e80: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e84: mov qword ptr [rax+0x13e0], 0x0
0x7fd3d0e28e8f: cmp dword ptr [rbp-0x2c], 0x0
0x7fd3d0e28e93: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e93: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28e97: lea rdi, ptr [rax+0x1398]
0x7fd3d0e28e9e: mov ecx, dword ptr [rbp-0x2c]
0x7fd3d0e28ea1: mov edx, dword ptr [rbp-0x28]
0x7fd3d0e28ea4: mov eax, dword ptr [rbp-0x24]
0x7fd3d0e28ea7: mov esi, eax
0x7fd3d0e28ea9: call qword ptr [rip-0x2b37ecf]
0x7fd3d0e28eaf: mov dword ptr [rbp-0xc], eax
0x7fd3d0e28eb2: cmp dword ptr [rbp-0xc], 0x0
0x7fd3d0e28eb6: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28eb6: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28eba: mov dword ptr [rax+0x13a0], 0x0
0x7fd3d0e28ec4: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ec8: mov byte ptr [rax+0x13ec], 0x1
0x7fd3d0e28ecf: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ed3: leave 
0x7fd3d0e28ed4: ret 
0x7fd3d0e28ed5: ret 
bsFinishWrite:
0x7fd3d0e28ed6: push rbp
0x7fd3d0e28ed7: mov rbp, rsp
0x7fd3d0e28eda: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28ede: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ede: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ee2: mov eax, dword ptr [rax+0x284]
0x7fd3d0e28ee8: test eax, eax
0x7fd3d0e28eea: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28eea: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28eee: mov rdx, qword ptr [rax+0x50]
0x7fd3d0e28ef2: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28ef6: mov eax, dword ptr [rax+0x74]
0x7fd3d0e28ef9: cdqe 
0x7fd3d0e28efb: add rdx, rax
0x7fd3d0e28efe: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f02: mov eax, dword ptr [rax+0x280]
0x7fd3d0e28f08: shr eax, 0x18
0x7fd3d0e28f0b: mov byte ptr [rdx], al
0x7fd3d0e28f0d: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f11: mov eax, dword ptr [rax+0x74]
0x7fd3d0e28f14: lea edx, ptr [rax+0x1]
0x7fd3d0e28f17: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f1b: mov dword ptr [rax+0x74], edx
0x7fd3d0e28f1e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f22: mov eax, dword ptr [rax+0x280]
0x7fd3d0e28f28: mov edx, eax
0x7fd3d0e28f2a: shl edx, 0x8
0x7fd3d0e28f2d: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f31: mov dword ptr [rax+0x280], edx
0x7fd3d0e28f37: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f3b: mov eax, dword ptr [rax+0x284]
0x7fd3d0e28f41: lea edx, ptr [rax-0x8]
0x7fd3d0e28f44: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f48: mov dword ptr [rax+0x284], edx
0x7fd3d0e28f4e: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f52: mov eax, dword ptr [rax+0x284]
0x7fd3d0e28f58: test eax, eax
0x7fd3d0e28f5a: jnle 0x7fd3d0e28eea
0x7fd3d0e28f60: pop rbp
0x7fd3d0e28f61: ret 
0x7fd3d0e28f62: ret 
default_bzalloc:
0x7fd3d0e28f63: push rbp
0x7fd3d0e28f64: mov rbp, rsp
0x7fd3d0e28f67: sub rsp, 0x20
0x7fd3d0e28f6b: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28f6f: mov dword ptr [rbp-0x1c], esi
0x7fd3d0e28f72: mov dword ptr [rbp-0x20], edx
0x7fd3d0e28f75: mov eax, dword ptr [rbp-0x1c]
0x7fd3d0e28f78: imul eax, dword ptr [rbp-0x20]
0x7fd3d0e28f7c: cdqe 
0x7fd3d0e28f7e: mov rdi, rax
0x7fd3d0e28f81: call qword ptr [rip-0x2b36fe7]
0x7fd3d0e28f87: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28f8b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f8f: leave 
0x7fd3d0e28f90: ret 
0x7fd3d0e28f91: ret 
isempty_RL:
0x7fd3d0e28f92: push rbp
0x7fd3d0e28f93: mov rbp, rsp
0x7fd3d0e28f96: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28f9a: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e28f9e: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e28fa1: cmp eax, 0xff
0x7fd3d0e28fa6: mov eax, 0x1
0x7fd3d0e28fa6: mov eax, 0x1
0x7fd3d0e28fab: pop rbp
0x7fd3d0e28fac: ret 
0x7fd3d0e28fad: ret 
default_bzfree:
0x7fd3d0e28fae: push rbp
0x7fd3d0e28faf: mov rbp, rsp
0x7fd3d0e28fb2: sub rsp, 0x10
0x7fd3d0e28fb6: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e28fba: mov qword ptr [rbp-0x10], rsi
0x7fd3d0e28fbe: cmp qword ptr [rbp-0x10], 0x0
0x7fd3d0e28fc3: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e28fc7: mov rdi, rax
0x7fd3d0e28fca: call qword ptr [rip-0x2b369f0]
0x7fd3d0e28fd0: leave 
0x7fd3d0e28fd1: ret 
0x7fd3d0e28fd2: ret 
fileExists:
0x7fd3d0e28fd3: push rbp
0x7fd3d0e28fd4: mov rbp, rsp
0x7fd3d0e28fd7: sub rsp, 0x20
0x7fd3d0e28fdb: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e28fdf: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e28fe3: mov esi, 0x419598
0x7fd3d0e28fe8: mov rdi, rax
0x7fd3d0e28feb: call qword ptr [rip-0x2b36751]
0x7fd3d0e28ff1: mov qword ptr [rbp-0x8], rax
0x7fd3d0e28ff5: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e28ffa: setnz al
0x7fd3d0e28ffd: mov byte ptr [rbp-0x9], al
0x7fd3d0e29000: cmp qword ptr [rbp-0x8], 0x0
0x7fd3d0e29005: jz 0x7fd3d0e29018
0x7fd3d0e2900b: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2900f: mov rdi, rax
0x7fd3d0e29012: call qword ptr [rip-0x2b36538]
0x7fd3d0e29018: movzx eax, byte ptr [rbp-0x9]
0x7fd3d0e2901c: leave 
0x7fd3d0e2901d: ret 
0x7fd3d0e2901e: ret 
mkCell:
0x7fd3d0e2901f: push rbp
0x7fd3d0e29020: mov rbp, rsp
0x7fd3d0e29023: sub rsp, 0x10
0x7fd3d0e29027: mov edi, 0x10
0x7fd3d0e2902c: call 0x7fd3d0e28d6f
0x7fd3d0e29031: mov qword ptr [rbp-0x8], rax
0x7fd3d0e29035: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29039: mov qword ptr [rax], 0x0
0x7fd3d0e29040: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29044: mov qword ptr [rax+0x8], 0x0
0x7fd3d0e2904c: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29050: leave 
0x7fd3d0e29051: ret 
0x7fd3d0e29052: ret 
applySavedMetaInfoToOutputFile:
0x7fd3d0e29053: push rbp
0x7fd3d0e29054: mov rbp, rsp
0x7fd3d0e29057: sub rsp, 0x30
0x7fd3d0e2905b: mov qword ptr [rbp-0x28], rdi
0x7fd3d0e2905f: mov rax, qword ptr [0x61d308]
0x7fd3d0e29067: mov qword ptr [rbp-0x20], rax
0x7fd3d0e2906b: mov rax, qword ptr [0x61d318]
0x7fd3d0e29073: mov qword ptr [rbp-0x18], rax
0x7fd3d0e29077: mov edx, dword ptr [0x61d2d8]
0x7fd3d0e2907e: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e29082: mov esi, edx
0x7fd3d0e29084: mov rdi, rax
0x7fd3d0e29087: call qword ptr [rip-0x2b35ded]
0x7fd3d0e2908d: mov dword ptr [rbp-0x4], eax
0x7fd3d0e29090: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e29094: lea rdx, ptr [rbp-0x20]
0x7fd3d0e29094: lea rdx, ptr [rbp-0x20]
0x7fd3d0e29098: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e2909c: mov rsi, rdx
0x7fd3d0e2909f: mov rdi, rax
0x7fd3d0e290a2: call qword ptr [rip-0x2b35c08]
0x7fd3d0e290a8: mov dword ptr [rbp-0x4], eax
0x7fd3d0e290ab: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e290af: mov edx, dword ptr [0x61d2e0]
0x7fd3d0e290af: mov edx, dword ptr [0x61d2e0]
0x7fd3d0e290b6: mov ecx, dword ptr [0x61d2dc]
0x7fd3d0e290bd: mov rax, qword ptr [rbp-0x28]
0x7fd3d0e290c1: mov esi, ecx
0x7fd3d0e290c3: mov rdi, rax
0x7fd3d0e290c6: call qword ptr [rip-0x2b359ec]
0x7fd3d0e290cc: mov dword ptr [rbp-0x4], eax
0x7fd3d0e290cf: leave 
0x7fd3d0e290d0: ret 
0x7fd3d0e290d1: ret 
addFlagsFromEnvVar:
0x7fd3d0e290d2: push rbp
0x7fd3d0e290d3: mov rbp, rsp
0x7fd3d0e290d6: sub rsp, 0x30
0x7fd3d0e290da: mov qword ptr [rbp-0x28], rdi
0x7fd3d0e290de: mov qword ptr [rbp-0x30], rsi
0x7fd3d0e290e2: mov rax, qword ptr [rbp-0x30]
0x7fd3d0e290e6: mov rdi, rax
0x7fd3d0e290e9: call qword ptr [rip-0x2b3570f]
0x7fd3d0e290ef: mov qword ptr [rbp-0x20], rax
0x7fd3d0e290f3: cmp qword ptr [rbp-0x20], 0x0
0x7fd3d0e290f8: leave 
0x7fd3d0e290f8: leave 
0x7fd3d0e290f9: ret 
0x7fd3d0e290fa: ret 
fopen_output_safely:
0x7fd3d0e290fb: push rbp
0x7fd3d0e290fc: mov rbp, rsp
0x7fd3d0e290ff: sub rsp, 0x20
0x7fd3d0e29103: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e29107: mov qword ptr [rbp-0x20], rsi
0x7fd3d0e2910b: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e2910f: mov edx, 0x180
0x7fd3d0e29114: mov esi, 0xc1
0x7fd3d0e29119: mov rdi, rax
0x7fd3d0e2911c: mov eax, 0x0
0x7fd3d0e29121: call qword ptr [rip-0x2b35307]
0x7fd3d0e29127: mov dword ptr [rbp-0x4], eax
0x7fd3d0e2912a: cmp dword ptr [rbp-0x4], 0xffffffff
0x7fd3d0e2912e: mov rdx, qword ptr [rbp-0x20]
0x7fd3d0e2912e: mov rdx, qword ptr [rbp-0x20]
0x7fd3d0e29132: mov eax, dword ptr [rbp-0x4]
0x7fd3d0e29135: mov rsi, rdx
0x7fd3d0e29138: mov edi, eax
0x7fd3d0e2913a: call qword ptr [rip-0x2b35120]
0x7fd3d0e29140: mov qword ptr [rbp-0x10], rax
0x7fd3d0e29144: cmp qword ptr [rbp-0x10], 0x0
0x7fd3d0e29149: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e29149: mov rax, qword ptr [rbp-0x10]
0x7fd3d0e2914d: leave 
0x7fd3d0e2914e: ret 
0x7fd3d0e2914f: ret 
init_RL:
0x7fd3d0e29150: push rbp
0x7fd3d0e29151: mov rbp, rsp
0x7fd3d0e29154: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e29158: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2915c: mov dword ptr [rax+0x5c], 0x100
0x7fd3d0e29163: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29167: mov dword ptr [rax+0x60], 0x0
0x7fd3d0e2916e: pop rbp
0x7fd3d0e2916f: ret 
0x7fd3d0e29170: ret 
flush_RL:
0x7fd3d0e29171: push rbp
0x7fd3d0e29172: mov rbp, rsp
0x7fd3d0e29175: sub rsp, 0x8
0x7fd3d0e29179: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e2917d: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29181: mov eax, dword ptr [rax+0x5c]
0x7fd3d0e29184: cmp eax, 0xff
0x7fd3d0e29189: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2918d: mov rdi, rax
0x7fd3d0e29190: call qword ptr [rip-0x2b34ab6]
0x7fd3d0e29196: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e2919a: mov rdi, rax
0x7fd3d0e2919d: call 0x7fd3d0e29150
0x7fd3d0e291a2: leave 
0x7fd3d0e291a3: ret 
0x7fd3d0e291a4: ret 
saveInputFileMetaInfo:
0x7fd3d0e291a5: push rbp
0x7fd3d0e291a6: mov rbp, rsp
0x7fd3d0e291a9: sub rsp, 0x20
0x7fd3d0e291ad: mov qword ptr [rbp-0x18], rdi
0x7fd3d0e291b1: mov rax, qword ptr [rbp-0x18]
0x7fd3d0e291b5: mov esi, 0x61d2c0
0x7fd3d0e291ba: mov rdi, rax
0x7fd3d0e291bd: call qword ptr [rip-0x2b34763]
0x7fd3d0e291c3: mov dword ptr [rbp-0x4], eax
0x7fd3d0e291c6: cmp dword ptr [rbp-0x4], 0x0
0x7fd3d0e291ca: leave 
0x7fd3d0e291ca: leave 
0x7fd3d0e291cb: ret 
0x7fd3d0e291cc: ret 
register_tm_clones:
0x7fd3d0e291cd: mov eax, 0x61d2a0
0x7fd3d0e291d2: push rbp
0x7fd3d0e291d3: sub rax, 0x61d2a0
0x7fd3d0e291d9: sar rax, 0x3
0x7fd3d0e291dd: mov rbp, rsp
0x7fd3d0e291e0: mov rdx, rax
0x7fd3d0e291e3: shr rdx, 0x3f
0x7fd3d0e291e7: add rax, rdx
0x7fd3d0e291ea: mov rsi, rax
0x7fd3d0e291ed: sar rsi, 0x1
0x7fd3d0e291f0: pop rbp
0x7fd3d0e291f1: ret 
0x7fd3d0e291f2: ret 
_start:
0x7fd3d0e291f3: xor ebp, ebp
0x7fd3d0e291f5: mov r9, rdx
0x7fd3d0e291f8: pop rsi
0x7fd3d0e291f9: mov rdx, rsp
0x7fd3d0e291fc: and rsp, 0xfffffffffffffff0
0x7fd3d0e29200: push rax
0x7fd3d0e29201: push rsp
0x7fd3d0e29202: mov r8, 0x418570
0x7fd3d0e29209: mov rcx, 0x418580
0x7fd3d0e29210: mov rdi, 0x4040af
0x7fd3d0e29217: call qword ptr [rip-0x2b3403d]
0x7fd3d0e2921d: call qword ptr [rip-0x2b34003]
0x7fd3d0e29223: jmp qword ptr [rip-0x2b33fc9]
BZ2_bsInitWrite:
0x7fd3d0e29229: push rbp
0x7fd3d0e2922a: mov rbp, rsp
0x7fd3d0e2922d: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e29231: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29235: mov dword ptr [rax+0x284], 0x0
0x7fd3d0e2923f: mov rax, qword ptr [rbp-0x8]
0x7fd3d0e29243: mov dword ptr [rax+0x280], 0x0
0x7fd3d0e2924d: pop rbp
0x7fd3d0e2924e: ret 
0x7fd3d0e2924f: ret 
deregister_tm_clones:
0x7fd3d0e29250: mov eax, 0x61d2a7
0x7fd3d0e29255: push rbp
0x7fd3d0e29256: sub rax, 0x61d2a0
0x7fd3d0e2925c: cmp rax, 0xe
0x7fd3d0e29260: mov rbp, rsp
0x7fd3d0e29263: pop rbp
0x7fd3d0e29264: ret 
0x7fd3d0e29265: ret 
_fini:
0x7fd3d0e29266: push rbp
0x7fd3d0e29267: sub rsp, 0x8
0x7fd3d0e2926b: push rbp
0x7fd3d0e2926c: sub rsp, 0x8
0x7fd3d0e29270: add rsp, 0x8
0x7fd3d0e29274: pop rbp
0x7fd3d0e29275: ret 
0x7fd3d0e29276: add rsp, 0x8
0x7fd3d0e2927a: pop rbp
0x7fd3d0e2927b: ret 
0x7fd3d0e2927c: ret 
containsDubiousChars:
0x7fd3d0e2927d: push rbp
0x7fd3d0e2927e: mov rbp, rsp
0x7fd3d0e29281: mov qword ptr [rbp-0x8], rdi
0x7fd3d0e29285: mov eax, 0x0
0x7fd3d0e2928a: pop rbp
0x7fd3d0e2928b: ret 
0x7fd3d0e2928c: ret 
bz_config_ok:
0x7fd3d0e2928d: push rbp
0x7fd3d0e2928e: mov rbp, rsp
0x7fd3d0e29291: mov eax, 0x1
0x7fd3d0e29296: pop rbp
0x7fd3d0e29297: ret 
0x7fd3d0e29298: ret 
_init:
0x7fd3d0e29299: sub rsp, 0x8
0x7fd3d0e2929d: call qword ptr [rip-0x2b33543]
0x7fd3d0e292a3: add rsp, 0x8
0x7fd3d0e292a7: ret 
0x7fd3d0e292a8: ret 
committing rtN: mainGtU from: 0x40a468 to: 0x7fd3d0e27000
RTN_ReplaceProbed succeeded.  orig routine addr: 0x40a468 replacement routine addr: 0x7fd3d0e27000
0x40a468: jmp qword ptr [rip+0x12b92]
committing rtN: generateMTFValues from: 0x40cb2c to: 0x7fd3d0e2784c
RTN_ReplaceProbed succeeded.  orig routine addr: 0x40cb2c replacement routine addr: 0x7fd3d0e2784c
0x40cb2c: jmp qword ptr [rip+0x104d6]
committing rtN: BZ2_blockSort from: 0x40c679 to: 0x7fd3d0e27ce6
RTN_ReplaceProbed succeeded.  orig routine addr: 0x40c679 replacement routine addr: 0x7fd3d0e27ce6
0x40c679: jmp qword ptr [rip+0x10991]
committing rtN: bsW from: 0x40c94c to: 0x7fd3d0e27e50
RTN_ReplaceProbed succeeded.  orig routine addr: 0x40c94c replacement routine addr: 0x7fd3d0e27e50
0x40c94c: jmp qword ptr [rip+0x106c6]
committing rtN: handle_compress from: 0x405ac7 to: 0x7fd3d0e27f43
RTN_ReplaceProbed succeeded.  orig routine addr: 0x405ac7 replacement routine addr: 0x7fd3d0e27f43
0x405ac7: jmp qword ptr [rip+0x17553]
committing rtN: BZ2_bzCompress from: 0x405c64 to: 0x7fd3d0e284a3
RTN_ReplaceProbed succeeded.  orig routine addr: 0x405c64 replacement routine addr: 0x7fd3d0e284a3
0x405c64: jmp qword ptr [rip+0x173be]
committing rtN: prepare_new_block from: 0x404f65 to: 0x7fd3d0e285b1
RTN_ReplaceProbed succeeded.  orig routine addr: 0x404f65 replacement routine addr: 0x7fd3d0e285b1
0x404f65: jmp qword ptr [rip+0x180c5]
committing rtN: BZ2_compressBlock from: 0x41216d to: 0x7fd3d0e28632
RTN_ReplaceProbed succeeded.  orig routine addr: 0x41216d replacement routine addr: 0x7fd3d0e28632
0x41216d: jmp qword ptr [rip+0xaec5]
committing rtN: bsPutUChar from: 0x40ca9a to: 0x7fd3d0e288f4
RTN_ReplaceProbed succeeded.  orig routine addr: 0x40ca9a replacement routine addr: 0x7fd3d0e288f4
0x40ca9a: jmp qword ptr [rip+0x105a0]
committing rtN: bsPutUInt32 from: 0x40ca25 to: 0x7fd3d0e2891d
RTN_ReplaceProbed succeeded.  orig routine addr: 0x40ca25 replacement routine addr: 0x7fd3d0e2891d
0x40ca25: jmp qword ptr [rip+0x1061d]
committing rtN: BZ2_bzWriteClose64 from: 0x408127 to: 0x7fd3d0e28993
RTN_ReplaceProbed succeeded.  orig routine addr: 0x408127 replacement routine addr: 0x7fd3d0e28993
0x408127: jmp qword ptr [rip+0x14f23]
committing rtN: snocString from: 0x403eb0 to: 0x7fd3d0e28bff
RTN_ReplaceProbed succeeded.  orig routine addr: 0x403eb0 replacement routine addr: 0x7fd3d0e28bff
0x403eb0: jmp qword ptr [rip+0x191a2]
committing rtN: hasSuffix from: 0x402a83 to: 0x7fd3d0e28cbe
RTN_ReplaceProbed succeeded.  orig routine addr: 0x402a83 replacement routine addr: 0x7fd3d0e28cbe
0x402a83: jmp qword ptr [rip+0x1a5d7]
committing rtN: copyFileName from: 0x4027f1 to: 0x7fd3d0e28d23
RTN_ReplaceProbed succeeded.  orig routine addr: 0x4027f1 replacement routine addr: 0x7fd3d0e28d23
0x4027f1: jmp qword ptr [rip+0x1a871]
committing rtN: myMalloc from: 0x403e4f to: 0x7fd3d0e28d6f
RTN_ReplaceProbed succeeded.  orig routine addr: 0x403e4f replacement routine addr: 0x7fd3d0e28d6f
0x403e4f: jmp qword ptr [rip+0x1921b]
committing rtN: BZ2_bzWriteOpen from: 0x407bfa to: 0x7fd3d0e28d98
RTN_ReplaceProbed succeeded.  orig routine addr: 0x407bfa replacement routine addr: 0x7fd3d0e28d98
0x407bfa: jmp qword ptr [rip+0x15478]
committing rtN: bsFinishWrite from: 0x40c8ce to: 0x7fd3d0e28ed6
RTN_ReplaceProbed succeeded.  orig routine addr: 0x40c8ce replacement routine addr: 0x7fd3d0e28ed6
0x40c8ce: jmp qword ptr [rip+0x1172c]
committing rtN: default_bzalloc from: 0x404f13 to: 0x7fd3d0e28f63
RTN_ReplaceProbed succeeded.  orig routine addr: 0x404f13 replacement routine addr: 0x7fd3d0e28f63
0x404f13: jmp qword ptr [rip+0x190ef]
committing rtN: isempty_RL from: 0x404ffc to: 0x7fd3d0e28f92
RTN_ReplaceProbed succeeded.  orig routine addr: 0x404ffc replacement routine addr: 0x7fd3d0e28f92
0x404ffc: jmp qword ptr [rip+0x1900e]
committing rtN: default_bzfree from: 0x404f40 to: 0x7fd3d0e28fae
RTN_ReplaceProbed succeeded.  orig routine addr: 0x404f40 replacement routine addr: 0x7fd3d0e28fae
0x404f40: jmp qword ptr [rip+0x190d2]
committing rtN: fileExists from: 0x402875 to: 0x7fd3d0e28fd3
RTN_ReplaceProbed succeeded.  orig routine addr: 0x402875 replacement routine addr: 0x7fd3d0e28fd3
0x402875: jmp qword ptr [rip+0x1b7a5]
committing rtN: mkCell from: 0x403e7d to: 0x7fd3d0e2901f
RTN_ReplaceProbed succeeded.  orig routine addr: 0x403e7d replacement routine addr: 0x7fd3d0e2901f
0x403e7d: jmp qword ptr [rip+0x1a1a5]
committing rtN: applySavedMetaInfoToOutputFile from: 0x4029f0 to: 0x7fd3d0e29053
RTN_ReplaceProbed succeeded.  orig routine addr: 0x4029f0 replacement routine addr: 0x7fd3d0e29053
0x4029f0: jmp qword ptr [rip+0x1b63a]
committing rtN: addFlagsFromEnvVar from: 0x403f51 to: 0x7fd3d0e290d2
RTN_ReplaceProbed succeeded.  orig routine addr: 0x403f51 replacement routine addr: 0x7fd3d0e290d2
0x403f51: jmp qword ptr [rip+0x1a0e1]
committing rtN: fopen_output_safely from: 0x4028ba to: 0x7fd3d0e290fb
RTN_ReplaceProbed succeeded.  orig routine addr: 0x4028ba replacement routine addr: 0x7fd3d0e290fb
0x4028ba: jmp qword ptr [rip+0x1b780]
committing rtN: init_RL from: 0x404fdc to: 0x7fd3d0e29150
RTN_ReplaceProbed succeeded.  orig routine addr: 0x404fdc replacement routine addr: 0x7fd3d0e29150
0x404fdc: jmp qword ptr [rip+0x19066]
committing rtN: flush_RL from: 0x405628 to: 0x7fd3d0e29171
RTN_ReplaceProbed succeeded.  orig routine addr: 0x405628 replacement routine addr: 0x7fd3d0e29171
0x405628: jmp qword ptr [rip+0x18a22]
committing rtN: saveInputFileMetaInfo from: 0x4029c3 to: 0x7fd3d0e291a5
RTN_ReplaceProbed succeeded.  orig routine addr: 0x4029c3 replacement routine addr: 0x7fd3d0e291a5
0x4029c3: jmp qword ptr [rip+0x1b68f]
committing rtN: register_tm_clones from: 0x401390 to: 0x7fd3d0e291cd
RTN_ReplaceProbed succeeded.  orig routine addr: 0x401390 replacement routine addr: 0x7fd3d0e291cd
0x401390: jmp qword ptr [rip+0x1ccca]
committing rtN: _start from: 0x401310 to: 0x7fd3d0e291f3
RTN_ReplaceProbed succeeded.  orig routine addr: 0x401310 replacement routine addr: 0x7fd3d0e291f3
0x401310: jmp qword ptr [rip+0x1cd52]
committing rtN: BZ2_bsInitWrite from: 0x40c8a8 to: 0x7fd3d0e29229
RTN_ReplaceProbed succeeded.  orig routine addr: 0x40c8a8 replacement routine addr: 0x7fd3d0e29229
0x40c8a8: jmp qword ptr [rip+0x117c2]
committing rtN: deregister_tm_clones from: 0x401360 to: 0x7fd3d0e29250
RTN_ReplaceProbed succeeded.  orig routine addr: 0x401360 replacement routine addr: 0x7fd3d0e29250
0x401360: jmp qword ptr [rip+0x1cd12]
committing rtN: _fini from: 0x418630 to: 0x7fd3d0e29266
RTN_ReplaceProbed succeeded.  orig routine addr: 0x418630 replacement routine addr: 0x7fd3d0e29266
0x418630: jmp qword ptr [rip+0x69ca]
committing rtN: containsDubiousChars from: 0x402a74 to: 0x7fd3d0e2927d
RTN_ReplaceProbed succeeded.  orig routine addr: 0x402a74 replacement routine addr: 0x7fd3d0e2927d
0x402a74: jmp qword ptr [rip+0x1c58e]
after commit translated routines
