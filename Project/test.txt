after memory allocation
64
40a468
old instr: 0x40a468: push rbp
    new instr:0x7fb0666db000: push rbp
old instr: 0x40a469: mov rbp, rsp
    new instr:0x7fb0666db001: mov rbp, rsp
old instr: 0x40a46c: mov dword ptr [rbp-0x14], edi
    new instr:0x7fb0666db004: mov dword ptr [rbp-0x14], edi
old instr: 0x40a46f: mov dword ptr [rbp-0x18], esi
    new instr:0x7fb0666db007: mov dword ptr [rbp-0x18], esi
old instr: 0x40a472: mov qword ptr [rbp-0x20], rdx
    new instr:0x7fb0666db00a: mov qword ptr [rbp-0x20], rdx
old instr: 0x40a476: mov qword ptr [rbp-0x28], rcx
    new instr:0x7fb0666db00e: mov qword ptr [rbp-0x28], rcx
old instr: 0x40a47a: mov dword ptr [rbp-0x2c], r8d
    new instr:0x7fb0666db012: mov dword ptr [rbp-0x2c], r8d
old instr: 0x40a47e: mov qword ptr [rbp-0x38], r9
    new instr:0x7fb0666db016: mov qword ptr [rbp-0x38], r9
old instr: 0x40a482: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db01a: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a485: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db01d: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a489: add rax, rdx
    new instr:0x7fb0666db021: add rax, rdx
old instr: 0x40a48c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db024: movzx eax, byte ptr [rax]
old instr: 0x40a48f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db027: mov byte ptr [rbp-0x5], al
old instr: 0x40a492: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db02a: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a495: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db02d: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a499: add rax, rdx
    new instr:0x7fb0666db031: add rax, rdx
old instr: 0x40a49c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db034: movzx eax, byte ptr [rax]
old instr: 0x40a49f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db037: mov byte ptr [rbp-0x6], al
old instr: 0x40a4a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db03a: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db03e: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db041: jnz 0x7fb0666db052
40a4ba
old instr: 0x40a4ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db043: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a4be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db047: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a4c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db04b: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a4c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db04e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a4c9: add rax, rdx
    new instr:0x7fb0666db052: add rax, rdx
old instr: 0x40a4cc: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db055: movzx eax, byte ptr [rax]
old instr: 0x40a4cf: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db058: mov byte ptr [rbp-0x5], al
old instr: 0x40a4d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db05b: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a4d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db05e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a4d9: add rax, rdx
    new instr:0x7fb0666db062: add rax, rdx
old instr: 0x40a4dc: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db065: movzx eax, byte ptr [rax]
old instr: 0x40a4df: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db068: mov byte ptr [rbp-0x6], al
old instr: 0x40a4e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db06b: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db06f: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db072: jnz 0x7fb0666db083
40a4fa
old instr: 0x40a4fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db074: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a4fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db078: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a502: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db07c: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a505: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db07f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a509: add rax, rdx
    new instr:0x7fb0666db083: add rax, rdx
old instr: 0x40a50c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db086: movzx eax, byte ptr [rax]
old instr: 0x40a50f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db089: mov byte ptr [rbp-0x5], al
old instr: 0x40a512: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db08c: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a515: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db08f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a519: add rax, rdx
    new instr:0x7fb0666db093: add rax, rdx
old instr: 0x40a51c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db096: movzx eax, byte ptr [rax]
old instr: 0x40a51f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db099: mov byte ptr [rbp-0x6], al
old instr: 0x40a522: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db09c: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a526: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db0a0: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db0a3: jnz 0x7fb0666db0b4
40a53a
old instr: 0x40a53a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db0a5: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a53e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db0a9: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a542: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db0ad: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a545: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db0b0: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a549: add rax, rdx
    new instr:0x7fb0666db0b4: add rax, rdx
old instr: 0x40a54c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db0b7: movzx eax, byte ptr [rax]
old instr: 0x40a54f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db0ba: mov byte ptr [rbp-0x5], al
old instr: 0x40a552: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db0bd: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a555: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db0c0: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a559: add rax, rdx
    new instr:0x7fb0666db0c4: add rax, rdx
old instr: 0x40a55c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db0c7: movzx eax, byte ptr [rax]
old instr: 0x40a55f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db0ca: mov byte ptr [rbp-0x6], al
old instr: 0x40a562: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db0cd: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a566: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db0d1: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db0d4: jnz 0x7fb0666db0e5
40a57a
old instr: 0x40a57a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db0d6: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a57e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db0da: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a582: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db0de: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a585: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db0e1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a589: add rax, rdx
    new instr:0x7fb0666db0e5: add rax, rdx
old instr: 0x40a58c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db0e8: movzx eax, byte ptr [rax]
old instr: 0x40a58f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db0eb: mov byte ptr [rbp-0x5], al
old instr: 0x40a592: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db0ee: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a595: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db0f1: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a599: add rax, rdx
    new instr:0x7fb0666db0f5: add rax, rdx
old instr: 0x40a59c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db0f8: movzx eax, byte ptr [rax]
old instr: 0x40a59f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db0fb: mov byte ptr [rbp-0x6], al
old instr: 0x40a5a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db0fe: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db102: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db105: jnz 0x7fb0666db116
40a5ba
old instr: 0x40a5ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db107: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a5be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db10b: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a5c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db10f: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a5c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db112: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a5c9: add rax, rdx
    new instr:0x7fb0666db116: add rax, rdx
old instr: 0x40a5cc: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db119: movzx eax, byte ptr [rax]
old instr: 0x40a5cf: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db11c: mov byte ptr [rbp-0x5], al
old instr: 0x40a5d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db11f: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a5d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db122: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a5d9: add rax, rdx
    new instr:0x7fb0666db126: add rax, rdx
old instr: 0x40a5dc: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db129: movzx eax, byte ptr [rax]
old instr: 0x40a5df: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db12c: mov byte ptr [rbp-0x6], al
old instr: 0x40a5e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db12f: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db133: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db136: jnz 0x7fb0666db147
40a5fa
old instr: 0x40a5fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db138: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a5fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db13c: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a602: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db140: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a605: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db143: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a609: add rax, rdx
    new instr:0x7fb0666db147: add rax, rdx
old instr: 0x40a60c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db14a: movzx eax, byte ptr [rax]
old instr: 0x40a60f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db14d: mov byte ptr [rbp-0x5], al
old instr: 0x40a612: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db150: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a615: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db153: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a619: add rax, rdx
    new instr:0x7fb0666db157: add rax, rdx
old instr: 0x40a61c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db15a: movzx eax, byte ptr [rax]
old instr: 0x40a61f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db15d: mov byte ptr [rbp-0x6], al
old instr: 0x40a622: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db160: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a626: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db164: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db167: jnz 0x7fb0666db178
40a63a
old instr: 0x40a63a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db169: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a63e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db16d: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a642: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db171: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a645: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db174: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a649: add rax, rdx
    new instr:0x7fb0666db178: add rax, rdx
old instr: 0x40a64c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db17b: movzx eax, byte ptr [rax]
old instr: 0x40a64f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db17e: mov byte ptr [rbp-0x5], al
old instr: 0x40a652: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db181: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a655: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db184: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a659: add rax, rdx
    new instr:0x7fb0666db188: add rax, rdx
old instr: 0x40a65c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db18b: movzx eax, byte ptr [rax]
old instr: 0x40a65f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db18e: mov byte ptr [rbp-0x6], al
old instr: 0x40a662: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db191: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a666: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db195: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db198: jnz 0x7fb0666db1a9
40a67a
old instr: 0x40a67a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db19a: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a67e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db19e: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a682: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db1a2: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a685: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db1a5: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a689: add rax, rdx
    new instr:0x7fb0666db1a9: add rax, rdx
old instr: 0x40a68c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db1ac: movzx eax, byte ptr [rax]
old instr: 0x40a68f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db1af: mov byte ptr [rbp-0x5], al
old instr: 0x40a692: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db1b2: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a695: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db1b5: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a699: add rax, rdx
    new instr:0x7fb0666db1b9: add rax, rdx
old instr: 0x40a69c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db1bc: movzx eax, byte ptr [rax]
old instr: 0x40a69f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db1bf: mov byte ptr [rbp-0x6], al
old instr: 0x40a6a2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db1c2: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6a6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db1c6: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db1c9: jnz 0x7fb0666db1da
40a6ba
old instr: 0x40a6ba: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db1cb: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a6be: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db1cf: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a6c2: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db1d3: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a6c5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db1d6: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a6c9: add rax, rdx
    new instr:0x7fb0666db1da: add rax, rdx
old instr: 0x40a6cc: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db1dd: movzx eax, byte ptr [rax]
old instr: 0x40a6cf: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db1e0: mov byte ptr [rbp-0x5], al
old instr: 0x40a6d2: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db1e3: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a6d5: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db1e6: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a6d9: add rax, rdx
    new instr:0x7fb0666db1ea: add rax, rdx
old instr: 0x40a6dc: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db1ed: movzx eax, byte ptr [rax]
old instr: 0x40a6df: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db1f0: mov byte ptr [rbp-0x6], al
old instr: 0x40a6e2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db1f3: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6e6: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db1f7: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db1fa: jnz 0x7fb0666db20b
40a6fa
old instr: 0x40a6fa: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db1fc: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a6fe: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db200: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a702: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db204: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a705: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db207: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a709: add rax, rdx
    new instr:0x7fb0666db20b: add rax, rdx
old instr: 0x40a70c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db20e: movzx eax, byte ptr [rax]
old instr: 0x40a70f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db211: mov byte ptr [rbp-0x5], al
old instr: 0x40a712: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db214: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a715: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db217: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a719: add rax, rdx
    new instr:0x7fb0666db21b: add rax, rdx
old instr: 0x40a71c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db21e: movzx eax, byte ptr [rax]
old instr: 0x40a71f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db221: mov byte ptr [rbp-0x6], al
old instr: 0x40a722: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db224: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a726: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db228: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db22b: jnz 0x7fb0666db23c
40a73a
old instr: 0x40a73a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db22d: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a73e: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db231: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a742: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db235: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a745: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db238: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a749: add rax, rdx
    new instr:0x7fb0666db23c: add rax, rdx
old instr: 0x40a74c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db23f: movzx eax, byte ptr [rax]
old instr: 0x40a74f: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db242: mov byte ptr [rbp-0x5], al
old instr: 0x40a752: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db245: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a755: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db248: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a759: add rax, rdx
    new instr:0x7fb0666db24c: add rax, rdx
old instr: 0x40a75c: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db24f: movzx eax, byte ptr [rax]
old instr: 0x40a75f: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db252: mov byte ptr [rbp-0x6], al
old instr: 0x40a762: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db255: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a766: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db259: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db25c: jnz 0x7fb0666db26d
40a77a
old instr: 0x40a77a: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db25e: add dword ptr [rbp-0x14], 0x1
40a78b
old instr: 0x40a78b: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db262: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a78e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db265: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a792: add rax, rdx
    new instr:0x7fb0666db269: add rax, rdx
old instr: 0x40a795: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db26c: movzx eax, byte ptr [rax]
old instr: 0x40a798: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db26f: mov byte ptr [rbp-0x5], al
old instr: 0x40a79b: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db272: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a79e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db275: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a7a2: add rax, rdx
    new instr:0x7fb0666db279: add rax, rdx
old instr: 0x40a7a5: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db27c: movzx eax, byte ptr [rax]
old instr: 0x40a7a8: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db27f: mov byte ptr [rbp-0x6], al
old instr: 0x40a7ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db282: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a7af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db286: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db289: jnz 0x7fb0666db29a
40a7c3
old instr: 0x40a7c3: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db28b: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a7c6: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db28e: lea rdx, ptr [rax+rax*1]
old instr: 0x40a7ca: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db292: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a7ce: add rax, rdx
    new instr:0x7fb0666db296: add rax, rdx
old instr: 0x40a7d1: movzx eax, word ptr [rax]
    new instr:0x7fb0666db299: movzx eax, word ptr [rax]
old instr: 0x40a7d4: mov word ptr [rbp-0x8], ax
    new instr:0x7fb0666db29c: mov word ptr [rbp-0x8], ax
old instr: 0x40a7d8: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db2a0: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a7db: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db2a3: lea rdx, ptr [rax+rax*1]
old instr: 0x40a7df: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db2a7: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a7e3: add rax, rdx
    new instr:0x7fb0666db2ab: add rax, rdx
old instr: 0x40a7e6: movzx eax, word ptr [rax]
    new instr:0x7fb0666db2ae: movzx eax, word ptr [rax]
old instr: 0x40a7e9: mov word ptr [rbp-0xa], ax
    new instr:0x7fb0666db2b1: mov word ptr [rbp-0xa], ax
old instr: 0x40a7ed: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db2b5: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a7f1: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db2b9: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fb0666db2bd: jnz 0x7fb0666db2cf
40a807
old instr: 0x40a807: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db2bf: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a80b: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db2c3: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a80f: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db2c7: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a812: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db2ca: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a816: add rax, rdx
    new instr:0x7fb0666db2ce: add rax, rdx
old instr: 0x40a819: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db2d1: movzx eax, byte ptr [rax]
old instr: 0x40a81c: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db2d4: mov byte ptr [rbp-0x5], al
old instr: 0x40a81f: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db2d7: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a822: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db2da: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a826: add rax, rdx
    new instr:0x7fb0666db2de: add rax, rdx
old instr: 0x40a829: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db2e1: movzx eax, byte ptr [rax]
old instr: 0x40a82c: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db2e4: mov byte ptr [rbp-0x6], al
old instr: 0x40a82f: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db2e7: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a833: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db2eb: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db2ee: jnz 0x7fb0666db2ff
40a847
old instr: 0x40a847: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db2f0: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a84a: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db2f3: lea rdx, ptr [rax+rax*1]
old instr: 0x40a84e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db2f7: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a852: add rax, rdx
    new instr:0x7fb0666db2fb: add rax, rdx
old instr: 0x40a855: movzx eax, word ptr [rax]
    new instr:0x7fb0666db2fe: movzx eax, word ptr [rax]
old instr: 0x40a858: mov word ptr [rbp-0x8], ax
    new instr:0x7fb0666db301: mov word ptr [rbp-0x8], ax
old instr: 0x40a85c: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db305: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a85f: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db308: lea rdx, ptr [rax+rax*1]
old instr: 0x40a863: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db30c: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a867: add rax, rdx
    new instr:0x7fb0666db310: add rax, rdx
old instr: 0x40a86a: movzx eax, word ptr [rax]
    new instr:0x7fb0666db313: movzx eax, word ptr [rax]
old instr: 0x40a86d: mov word ptr [rbp-0xa], ax
    new instr:0x7fb0666db316: mov word ptr [rbp-0xa], ax
old instr: 0x40a871: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db31a: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a875: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db31e: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fb0666db322: jnz 0x7fb0666db334
40a88b
old instr: 0x40a88b: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db324: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a88f: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db328: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a893: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db32c: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a896: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db32f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a89a: add rax, rdx
    new instr:0x7fb0666db333: add rax, rdx
old instr: 0x40a89d: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db336: movzx eax, byte ptr [rax]
old instr: 0x40a8a0: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db339: mov byte ptr [rbp-0x5], al
old instr: 0x40a8a3: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db33c: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a8a6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db33f: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a8aa: add rax, rdx
    new instr:0x7fb0666db343: add rax, rdx
old instr: 0x40a8ad: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db346: movzx eax, byte ptr [rax]
old instr: 0x40a8b0: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db349: mov byte ptr [rbp-0x6], al
old instr: 0x40a8b3: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db34c: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a8b7: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db350: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db353: jnz 0x7fb0666db364
40a8cb
old instr: 0x40a8cb: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db355: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a8ce: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db358: lea rdx, ptr [rax+rax*1]
old instr: 0x40a8d2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db35c: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a8d6: add rax, rdx
    new instr:0x7fb0666db360: add rax, rdx
old instr: 0x40a8d9: movzx eax, word ptr [rax]
    new instr:0x7fb0666db363: movzx eax, word ptr [rax]
old instr: 0x40a8dc: mov word ptr [rbp-0x8], ax
    new instr:0x7fb0666db366: mov word ptr [rbp-0x8], ax
old instr: 0x40a8e0: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db36a: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a8e3: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db36d: lea rdx, ptr [rax+rax*1]
old instr: 0x40a8e7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db371: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a8eb: add rax, rdx
    new instr:0x7fb0666db375: add rax, rdx
old instr: 0x40a8ee: movzx eax, word ptr [rax]
    new instr:0x7fb0666db378: movzx eax, word ptr [rax]
old instr: 0x40a8f1: mov word ptr [rbp-0xa], ax
    new instr:0x7fb0666db37b: mov word ptr [rbp-0xa], ax
old instr: 0x40a8f5: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db37f: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a8f9: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db383: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fb0666db387: jnz 0x7fb0666db399
40a90f
old instr: 0x40a90f: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db389: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a913: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db38d: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a917: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db391: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a91a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db394: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a91e: add rax, rdx
    new instr:0x7fb0666db398: add rax, rdx
old instr: 0x40a921: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db39b: movzx eax, byte ptr [rax]
old instr: 0x40a924: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db39e: mov byte ptr [rbp-0x5], al
old instr: 0x40a927: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db3a1: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a92a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db3a4: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a92e: add rax, rdx
    new instr:0x7fb0666db3a8: add rax, rdx
old instr: 0x40a931: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db3ab: movzx eax, byte ptr [rax]
old instr: 0x40a934: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db3ae: mov byte ptr [rbp-0x6], al
old instr: 0x40a937: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db3b1: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a93b: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db3b5: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db3b8: jnz 0x7fb0666db3c9
40a94f
old instr: 0x40a94f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db3ba: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a952: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db3bd: lea rdx, ptr [rax+rax*1]
old instr: 0x40a956: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db3c1: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a95a: add rax, rdx
    new instr:0x7fb0666db3c5: add rax, rdx
old instr: 0x40a95d: movzx eax, word ptr [rax]
    new instr:0x7fb0666db3c8: movzx eax, word ptr [rax]
old instr: 0x40a960: mov word ptr [rbp-0x8], ax
    new instr:0x7fb0666db3cb: mov word ptr [rbp-0x8], ax
old instr: 0x40a964: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db3cf: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a967: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db3d2: lea rdx, ptr [rax+rax*1]
old instr: 0x40a96b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db3d6: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a96f: add rax, rdx
    new instr:0x7fb0666db3da: add rax, rdx
old instr: 0x40a972: movzx eax, word ptr [rax]
    new instr:0x7fb0666db3dd: movzx eax, word ptr [rax]
old instr: 0x40a975: mov word ptr [rbp-0xa], ax
    new instr:0x7fb0666db3e0: mov word ptr [rbp-0xa], ax
old instr: 0x40a979: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db3e4: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a97d: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db3e8: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fb0666db3ec: jnz 0x7fb0666db3fe
40a993
old instr: 0x40a993: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db3ee: add dword ptr [rbp-0x14], 0x1
old instr: 0x40a997: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db3f2: add dword ptr [rbp-0x18], 0x1
old instr: 0x40a99b: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db3f6: mov edx, dword ptr [rbp-0x14]
old instr: 0x40a99e: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db3f9: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a9a2: add rax, rdx
    new instr:0x7fb0666db3fd: add rax, rdx
old instr: 0x40a9a5: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db400: movzx eax, byte ptr [rax]
old instr: 0x40a9a8: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db403: mov byte ptr [rbp-0x5], al
old instr: 0x40a9ab: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db406: mov edx, dword ptr [rbp-0x18]
old instr: 0x40a9ae: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db409: mov rax, qword ptr [rbp-0x20]
old instr: 0x40a9b2: add rax, rdx
    new instr:0x7fb0666db40d: add rax, rdx
old instr: 0x40a9b5: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db410: movzx eax, byte ptr [rax]
old instr: 0x40a9b8: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db413: mov byte ptr [rbp-0x6], al
old instr: 0x40a9bb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db416: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a9bf: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db41a: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db41d: jnz 0x7fb0666db42e
40a9d3
old instr: 0x40a9d3: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db41f: mov eax, dword ptr [rbp-0x14]
old instr: 0x40a9d6: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db422: lea rdx, ptr [rax+rax*1]
old instr: 0x40a9da: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db426: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a9de: add rax, rdx
    new instr:0x7fb0666db42a: add rax, rdx
old instr: 0x40a9e1: movzx eax, word ptr [rax]
    new instr:0x7fb0666db42d: movzx eax, word ptr [rax]
old instr: 0x40a9e4: mov word ptr [rbp-0x8], ax
    new instr:0x7fb0666db430: mov word ptr [rbp-0x8], ax
old instr: 0x40a9e8: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db434: mov eax, dword ptr [rbp-0x18]
old instr: 0x40a9eb: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db437: lea rdx, ptr [rax+rax*1]
old instr: 0x40a9ef: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db43b: mov rax, qword ptr [rbp-0x28]
old instr: 0x40a9f3: add rax, rdx
    new instr:0x7fb0666db43f: add rax, rdx
old instr: 0x40a9f6: movzx eax, word ptr [rax]
    new instr:0x7fb0666db442: movzx eax, word ptr [rax]
old instr: 0x40a9f9: mov word ptr [rbp-0xa], ax
    new instr:0x7fb0666db445: mov word ptr [rbp-0xa], ax
old instr: 0x40a9fd: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db449: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa01: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db44d: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fb0666db451: jnz 0x7fb0666db463
40aa17
old instr: 0x40aa17: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db453: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aa1b: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db457: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aa1f: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db45b: mov edx, dword ptr [rbp-0x14]
old instr: 0x40aa22: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db45e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aa26: add rax, rdx
    new instr:0x7fb0666db462: add rax, rdx
old instr: 0x40aa29: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db465: movzx eax, byte ptr [rax]
old instr: 0x40aa2c: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db468: mov byte ptr [rbp-0x5], al
old instr: 0x40aa2f: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db46b: mov edx, dword ptr [rbp-0x18]
old instr: 0x40aa32: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db46e: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aa36: add rax, rdx
    new instr:0x7fb0666db472: add rax, rdx
old instr: 0x40aa39: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db475: movzx eax, byte ptr [rax]
old instr: 0x40aa3c: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db478: mov byte ptr [rbp-0x6], al
old instr: 0x40aa3f: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db47b: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aa43: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db47f: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db482: jnz 0x7fb0666db493
40aa57
old instr: 0x40aa57: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db484: mov eax, dword ptr [rbp-0x14]
old instr: 0x40aa5a: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db487: lea rdx, ptr [rax+rax*1]
old instr: 0x40aa5e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db48b: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aa62: add rax, rdx
    new instr:0x7fb0666db48f: add rax, rdx
old instr: 0x40aa65: movzx eax, word ptr [rax]
    new instr:0x7fb0666db492: movzx eax, word ptr [rax]
old instr: 0x40aa68: mov word ptr [rbp-0x8], ax
    new instr:0x7fb0666db495: mov word ptr [rbp-0x8], ax
old instr: 0x40aa6c: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db499: mov eax, dword ptr [rbp-0x18]
old instr: 0x40aa6f: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db49c: lea rdx, ptr [rax+rax*1]
old instr: 0x40aa73: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db4a0: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aa77: add rax, rdx
    new instr:0x7fb0666db4a4: add rax, rdx
old instr: 0x40aa7a: movzx eax, word ptr [rax]
    new instr:0x7fb0666db4a7: movzx eax, word ptr [rax]
old instr: 0x40aa7d: mov word ptr [rbp-0xa], ax
    new instr:0x7fb0666db4aa: mov word ptr [rbp-0xa], ax
old instr: 0x40aa81: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db4ae: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa85: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db4b2: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fb0666db4b6: jnz 0x7fb0666db4c8
40aa9b
old instr: 0x40aa9b: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db4b8: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aa9f: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db4bc: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aaa3: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db4c0: mov edx, dword ptr [rbp-0x14]
old instr: 0x40aaa6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db4c3: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aaaa: add rax, rdx
    new instr:0x7fb0666db4c7: add rax, rdx
old instr: 0x40aaad: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db4ca: movzx eax, byte ptr [rax]
old instr: 0x40aab0: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db4cd: mov byte ptr [rbp-0x5], al
old instr: 0x40aab3: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db4d0: mov edx, dword ptr [rbp-0x18]
old instr: 0x40aab6: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db4d3: mov rax, qword ptr [rbp-0x20]
old instr: 0x40aaba: add rax, rdx
    new instr:0x7fb0666db4d7: add rax, rdx
old instr: 0x40aabd: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db4da: movzx eax, byte ptr [rax]
old instr: 0x40aac0: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db4dd: mov byte ptr [rbp-0x6], al
old instr: 0x40aac3: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db4e0: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aac7: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db4e4: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db4e7: jnz 0x7fb0666db4f8
40aadb
old instr: 0x40aadb: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db4e9: mov eax, dword ptr [rbp-0x14]
old instr: 0x40aade: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db4ec: lea rdx, ptr [rax+rax*1]
old instr: 0x40aae2: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db4f0: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aae6: add rax, rdx
    new instr:0x7fb0666db4f4: add rax, rdx
old instr: 0x40aae9: movzx eax, word ptr [rax]
    new instr:0x7fb0666db4f7: movzx eax, word ptr [rax]
old instr: 0x40aaec: mov word ptr [rbp-0x8], ax
    new instr:0x7fb0666db4fa: mov word ptr [rbp-0x8], ax
old instr: 0x40aaf0: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db4fe: mov eax, dword ptr [rbp-0x18]
old instr: 0x40aaf3: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db501: lea rdx, ptr [rax+rax*1]
old instr: 0x40aaf7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db505: mov rax, qword ptr [rbp-0x28]
old instr: 0x40aafb: add rax, rdx
    new instr:0x7fb0666db509: add rax, rdx
old instr: 0x40aafe: movzx eax, word ptr [rax]
    new instr:0x7fb0666db50c: movzx eax, word ptr [rax]
old instr: 0x40ab01: mov word ptr [rbp-0xa], ax
    new instr:0x7fb0666db50f: mov word ptr [rbp-0xa], ax
old instr: 0x40ab05: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db513: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab09: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db517: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fb0666db51b: jnz 0x7fb0666db52d
40ab1f
old instr: 0x40ab1f: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db51d: add dword ptr [rbp-0x14], 0x1
old instr: 0x40ab23: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db521: add dword ptr [rbp-0x18], 0x1
old instr: 0x40ab27: mov edx, dword ptr [rbp-0x14]
    new instr:0x7fb0666db525: mov edx, dword ptr [rbp-0x14]
old instr: 0x40ab2a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db528: mov rax, qword ptr [rbp-0x20]
old instr: 0x40ab2e: add rax, rdx
    new instr:0x7fb0666db52c: add rax, rdx
old instr: 0x40ab31: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db52f: movzx eax, byte ptr [rax]
old instr: 0x40ab34: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666db532: mov byte ptr [rbp-0x5], al
old instr: 0x40ab37: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666db535: mov edx, dword ptr [rbp-0x18]
old instr: 0x40ab3a: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666db538: mov rax, qword ptr [rbp-0x20]
old instr: 0x40ab3e: add rax, rdx
    new instr:0x7fb0666db53c: add rax, rdx
old instr: 0x40ab41: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db53f: movzx eax, byte ptr [rax]
old instr: 0x40ab44: mov byte ptr [rbp-0x6], al
    new instr:0x7fb0666db542: mov byte ptr [rbp-0x6], al
old instr: 0x40ab47: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db545: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40ab4b: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db549: cmp al, byte ptr [rbp-0x6]
in revert 
    new instr:0x7fb0666db54c: jnz 0x7fb0666db55d
40ab5f
old instr: 0x40ab5f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db54e: mov eax, dword ptr [rbp-0x14]
old instr: 0x40ab62: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db551: lea rdx, ptr [rax+rax*1]
old instr: 0x40ab66: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db555: mov rax, qword ptr [rbp-0x28]
old instr: 0x40ab6a: add rax, rdx
    new instr:0x7fb0666db559: add rax, rdx
old instr: 0x40ab6d: movzx eax, word ptr [rax]
    new instr:0x7fb0666db55c: movzx eax, word ptr [rax]
old instr: 0x40ab70: mov word ptr [rbp-0x8], ax
    new instr:0x7fb0666db55f: mov word ptr [rbp-0x8], ax
old instr: 0x40ab74: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db563: mov eax, dword ptr [rbp-0x18]
old instr: 0x40ab77: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db566: lea rdx, ptr [rax+rax*1]
old instr: 0x40ab7b: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666db56a: mov rax, qword ptr [rbp-0x28]
old instr: 0x40ab7f: add rax, rdx
    new instr:0x7fb0666db56e: add rax, rdx
old instr: 0x40ab82: movzx eax, word ptr [rax]
    new instr:0x7fb0666db571: movzx eax, word ptr [rax]
old instr: 0x40ab85: mov word ptr [rbp-0xa], ax
    new instr:0x7fb0666db574: mov word ptr [rbp-0xa], ax
old instr: 0x40ab89: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db578: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab8d: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db57c: cmp ax, word ptr [rbp-0xa]
in revert 
    new instr:0x7fb0666db580: jnz 0x7fb0666db58f
40aba0
old instr: 0x40aba0: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db582: add dword ptr [rbp-0x14], 0x1
old instr: 0x40aba4: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666db586: add dword ptr [rbp-0x18], 0x1
old instr: 0x40aba8: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db58a: mov eax, dword ptr [rbp-0x14]
old instr: 0x40abab: cmp eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666db58d: cmp eax, dword ptr [rbp-0x2c]
in revert 
    new instr:0x7fb0666db590: jnb 0x7fb0666db598
40abb6
old instr: 0x40abb6: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db592: mov eax, dword ptr [rbp-0x18]
old instr: 0x40abb9: cmp eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666db595: cmp eax, dword ptr [rbp-0x2c]
in revert 
    new instr:0x7fb0666db598: jnb 0x7fb0666db5a0
40abc4
old instr: 0x40abc4: sub dword ptr [rbp-0x4], 0x8
    new instr:0x7fb0666db59a: sub dword ptr [rbp-0x4], 0x8
old instr: 0x40abc8: mov rax, qword ptr [rbp-0x38]
    new instr:0x7fb0666db59e: mov rax, qword ptr [rbp-0x38]
old instr: 0x40abcc: mov eax, dword ptr [rax]
    new instr:0x7fb0666db5a2: mov eax, dword ptr [rax]
old instr: 0x40abce: lea edx, ptr [rax-0x1]
    new instr:0x7fb0666db5a4: lea edx, ptr [rax-0x1]
old instr: 0x40abd1: mov rax, qword ptr [rbp-0x38]
    new instr:0x7fb0666db5a7: mov rax, qword ptr [rbp-0x38]
old instr: 0x40abd5: mov dword ptr [rax], edx
    new instr:0x7fb0666db5ab: mov dword ptr [rax], edx
old instr: 0x40abd7: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fb0666db5ad: cmp dword ptr [rbp-0x4], 0x0
old instr: 0x40abdb: jns 0x40a78b
    new instr:0x7fb0666db5b1: jns 0x7fb0666db161
inserted instruction
add jump to 
    new instr:0x7fb0666db5b7: jmp 0x7fb066ae619d
40a7f7
old instr: 0x40a7f7: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db5bc: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a7fb: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db5c0: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a7ff: setnbe al
    new instr:0x7fb0666db5c4: setnbe al
in revert 
removing jump and inserting a dummy entry 
40abe6
old instr: 0x40abe6: pop rbp
    new instr:0x7fb0666db5c7: pop rbp
old instr: 0x40abe7: ret 
    new instr:0x7fb0666db5c8: ret 
40a87b
old instr: 0x40a87b: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db5c9: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a87f: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db5cd: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a883: setnbe al
    new instr:0x7fb0666db5d1: setnbe al
old instr: 0x40a886: jmp 0x40abe6
    new instr:0x7fb0666db5d4: jmp 0x7fb0666db934
inserted instruction
40a8ff
old instr: 0x40a8ff: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db5d9: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a903: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db5dd: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a907: setnbe al
    new instr:0x7fb0666db5e1: setnbe al
old instr: 0x40a90a: jmp 0x40abe6
    new instr:0x7fb0666db5e4: jmp 0x7fb0666db8c0
inserted instruction
40a4ab
old instr: 0x40a4ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db5e9: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db5ed: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a4b2: setnbe al
    new instr:0x7fb0666db5f0: setnbe al
old instr: 0x40a4b5: jmp 0x40abe6
    new instr:0x7fb0666db5f3: jmp 0x7fb0666dbd24
inserted instruction
40a983
old instr: 0x40a983: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db5f8: movzx eax, word ptr [rbp-0x8]
old instr: 0x40a987: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db5fc: cmp ax, word ptr [rbp-0xa]
old instr: 0x40a98b: setnbe al
    new instr:0x7fb0666db600: setnbe al
old instr: 0x40a98e: jmp 0x40abe6
    new instr:0x7fb0666db603: jmp 0x7fb0666db85b
inserted instruction
40a4eb
old instr: 0x40a4eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db608: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a4ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db60c: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a4f2: setnbe al
    new instr:0x7fb0666db60f: setnbe al
old instr: 0x40a4f5: jmp 0x40abe6
    new instr:0x7fb0666db612: jmp 0x7fb0666dbd03
inserted instruction
40a5ab
old instr: 0x40a5ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db617: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db61b: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a5b2: setnbe al
    new instr:0x7fb0666db61e: setnbe al
old instr: 0x40a5b5: jmp 0x40abe6
    new instr:0x7fb0666db621: jmp 0x7fb0666dbc52
inserted instruction
40a5eb
old instr: 0x40a5eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db626: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a5ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db62a: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a5f2: setnbe al
    new instr:0x7fb0666db62d: setnbe al
old instr: 0x40a5f5: jmp 0x40abe6
    new instr:0x7fb0666db630: jmp 0x7fb0666dbc21
inserted instruction
40aa07
old instr: 0x40aa07: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db635: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa0b: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db639: cmp ax, word ptr [rbp-0xa]
old instr: 0x40aa0f: setnbe al
    new instr:0x7fb0666db63d: setnbe al
old instr: 0x40aa12: jmp 0x40abe6
    new instr:0x7fb0666db640: jmp 0x7fb0666db814
inserted instruction
40a62b
old instr: 0x40a62b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db645: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a62f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db649: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a632: setnbe al
    new instr:0x7fb0666db64c: setnbe al
old instr: 0x40a635: jmp 0x40abe6
    new instr:0x7fb0666db64f: jmp 0x7fb0666dbc00
inserted instruction
40a52b
old instr: 0x40a52b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db654: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a52f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db658: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a532: setnbe al
    new instr:0x7fb0666db65b: setnbe al
old instr: 0x40a535: jmp 0x40abe6
    new instr:0x7fb0666db65e: jmp 0x7fb0666dbd0f
inserted instruction
40ab93
old instr: 0x40ab93: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db663: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab97: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db667: cmp ax, word ptr [rbp-0xa]
old instr: 0x40ab9b: setnbe al
    new instr:0x7fb0666db66b: setnbe al
old instr: 0x40ab9e: jmp 0x40abe6
    new instr:0x7fb0666db66e: jmp 0x7fb0666db6b6
inserted instruction
40aa8b
old instr: 0x40aa8b: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db670: movzx eax, word ptr [rbp-0x8]
old instr: 0x40aa8f: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db674: cmp ax, word ptr [rbp-0xa]
old instr: 0x40aa93: setnbe al
    new instr:0x7fb0666db678: setnbe al
old instr: 0x40aa96: jmp 0x40abe6
    new instr:0x7fb0666db67b: jmp 0x7fb0666db7cb
inserted instruction
40a56b
old instr: 0x40a56b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db680: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a56f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db684: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a572: setnbe al
    new instr:0x7fb0666db687: setnbe al
old instr: 0x40a575: jmp 0x40abe6
    new instr:0x7fb0666db68a: jmp 0x7fb0666dbcfb
inserted instruction
40ab0f
old instr: 0x40ab0f: movzx eax, word ptr [rbp-0x8]
    new instr:0x7fb0666db68f: movzx eax, word ptr [rbp-0x8]
old instr: 0x40ab13: cmp ax, word ptr [rbp-0xa]
    new instr:0x7fb0666db693: cmp ax, word ptr [rbp-0xa]
old instr: 0x40ab17: setnbe al
    new instr:0x7fb0666db697: setnbe al
old instr: 0x40ab1a: jmp 0x40abe6
    new instr:0x7fb0666db69a: jmp 0x7fb0666db766
inserted instruction
40a66b
old instr: 0x40a66b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db69f: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a66f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db6a3: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a672: setnbe al
    new instr:0x7fb0666db6a6: setnbe al
old instr: 0x40a675: jmp 0x40abe6
    new instr:0x7fb0666db6a9: jmp 0x7fb0666dbc1a
inserted instruction
40a6ab
old instr: 0x40a6ab: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db6ae: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6af: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db6b2: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a6b2: setnbe al
    new instr:0x7fb0666db6b5: setnbe al
old instr: 0x40a6b5: jmp 0x40abe6
    new instr:0x7fb0666db6b8: jmp 0x7fb0666dbbe9
inserted instruction
40a8bc
old instr: 0x40a8bc: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db6bd: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a8c0: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db6c1: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a8c3: setnbe al
    new instr:0x7fb0666db6c4: setnbe al
old instr: 0x40a8c6: jmp 0x40abe6
    new instr:0x7fb0666db6c7: jmp 0x7fb0666db9e7
inserted instruction
40a838
old instr: 0x40a838: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db6cc: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a83c: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db6d0: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a83f: setnbe al
    new instr:0x7fb0666db6d3: setnbe al
old instr: 0x40a842: jmp 0x40abe6
    new instr:0x7fb0666db6d6: jmp 0x7fb0666dba7a
inserted instruction
40a6eb
old instr: 0x40a6eb: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db6db: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a6ef: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db6df: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a6f2: setnbe al
    new instr:0x7fb0666db6e2: setnbe al
old instr: 0x40a6f5: jmp 0x40abe6
    new instr:0x7fb0666db6e5: jmp 0x7fb0666dbbd6
inserted instruction
40a940
old instr: 0x40a940: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db6ea: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a944: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db6ee: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a947: setnbe al
    new instr:0x7fb0666db6f1: setnbe al
old instr: 0x40a94a: jmp 0x40abe6
    new instr:0x7fb0666db6f4: jmp 0x7fb0666db990
inserted instruction
40a72b
old instr: 0x40a72b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db6f9: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a72f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db6fd: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a732: setnbe al
    new instr:0x7fb0666db700: setnbe al
old instr: 0x40a735: jmp 0x40abe6
    new instr:0x7fb0666db703: jmp 0x7fb0666dbbb4
inserted instruction
40a76b
old instr: 0x40a76b: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db708: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a76f: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db70c: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a772: setnbe al
    new instr:0x7fb0666db70f: setnbe al
old instr: 0x40a775: jmp 0x40abe6
    new instr:0x7fb0666db712: jmp 0x7fb0666dbb83
inserted instruction
40aacc
old instr: 0x40aacc: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db717: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aad0: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db71b: cmp al, byte ptr [rbp-0x6]
old instr: 0x40aad3: setnbe al
    new instr:0x7fb0666db71e: setnbe al
old instr: 0x40aad6: jmp 0x40abe6
    new instr:0x7fb0666db721: jmp 0x7fb0666db831
inserted instruction
40aa48
old instr: 0x40aa48: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db726: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40aa4c: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db72a: cmp al, byte ptr [rbp-0x6]
old instr: 0x40aa4f: setnbe al
    new instr:0x7fb0666db72d: setnbe al
old instr: 0x40aa52: jmp 0x40abe6
    new instr:0x7fb0666db730: jmp 0x7fb0666db8c4
inserted instruction
40a9c4
old instr: 0x40a9c4: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db735: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a9c8: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db739: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a9cb: setnbe al
    new instr:0x7fb0666db73c: setnbe al
old instr: 0x40a9ce: jmp 0x40abe6
    new instr:0x7fb0666db73f: jmp 0x7fb0666db957
inserted instruction
40ab50
old instr: 0x40ab50: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db744: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40ab54: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db748: cmp al, byte ptr [rbp-0x6]
old instr: 0x40ab57: setnbe al
    new instr:0x7fb0666db74b: setnbe al
old instr: 0x40ab5a: jmp 0x40abe6
    new instr:0x7fb0666db74e: jmp 0x7fb0666db7da
inserted instruction
40a7b4
old instr: 0x40a7b4: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666db753: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40a7b8: cmp al, byte ptr [rbp-0x6]
    new instr:0x7fb0666db757: cmp al, byte ptr [rbp-0x6]
old instr: 0x40a7bb: setnbe al
    new instr:0x7fb0666db75a: setnbe al
old instr: 0x40a7be: jmp 0x40abe6
    new instr:0x7fb0666db75d: jmp 0x7fb0666dbb85
inserted instruction
40abbe
old instr: 0x40abbe: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666db762: mov eax, dword ptr [rbp-0x2c]
40abb0
old instr: 0x40abb0: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666db765: mov eax, dword ptr [rbp-0x2c]
40abe1
old instr: 0x40abe1: mov eax, 0x0
    new instr:0x7fb0666db768: mov eax, 0x0
rtn name: mainGtU : 0
5c
40b826
old instr: 0x40b826: push rbp
    new instr:0x7fb0666db76d: push rbp
old instr: 0x40b827: mov rbp, rsp
    new instr:0x7fb0666db76e: mov rbp, rsp
old instr: 0x40b82a: push rbx
    new instr:0x7fb0666db771: push rbx
old instr: 0x40b82b: sub rsp, 0xd98
    new instr:0x7fb0666db772: sub rsp, 0xd98
old instr: 0x40b832: mov qword ptr [rbp-0xd68], rdi
    new instr:0x7fb0666db779: mov qword ptr [rbp-0xd68], rdi
old instr: 0x40b839: mov qword ptr [rbp-0xd70], rsi
    new instr:0x7fb0666db780: mov qword ptr [rbp-0xd70], rsi
old instr: 0x40b840: mov qword ptr [rbp-0xd78], rdx
    new instr:0x7fb0666db787: mov qword ptr [rbp-0xd78], rdx
old instr: 0x40b847: mov qword ptr [rbp-0xd80], rcx
    new instr:0x7fb0666db78e: mov qword ptr [rbp-0xd80], rcx
old instr: 0x40b84e: mov dword ptr [rbp-0xd84], r8d
    new instr:0x7fb0666db795: mov dword ptr [rbp-0xd84], r8d
old instr: 0x40b855: mov dword ptr [rbp-0xd88], r9d
    new instr:0x7fb0666db79c: mov dword ptr [rbp-0xd88], r9d
old instr: 0x40b85c: cmp dword ptr [rbp-0xd88], 0x3
    new instr:0x7fb0666db7a3: cmp dword ptr [rbp-0xd88], 0x3
in revert 
    new instr:0x7fb0666db7aa: jnle 0x7fb0666db7ca
40b883
old instr: 0x40b883: mov dword ptr [rbp-0x14], 0x10000
    new instr:0x7fb0666db7ac: mov dword ptr [rbp-0x14], 0x10000
in revert 
removing jump and inserting a dummy entry 
40b8ad
old instr: 0x40b8ad: cmp dword ptr [rbp-0x14], 0x0
    new instr:0x7fb0666db7b3: cmp dword ptr [rbp-0x14], 0x0
in revert 
    new instr:0x7fb0666db7b7: js 0x7fb0666db792
40b88c
old instr: 0x40b88c: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db7b9: mov eax, dword ptr [rbp-0x14]
40b8b3
old instr: 0x40b8b3: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666db7bc: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40b8ba: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db7c3: movzx eax, byte ptr [rax]
old instr: 0x40b8bd: movzx eax, al
    new instr:0x7fb0666db7c6: movzx eax, al
old instr: 0x40b8c0: shl eax, 0x8
    new instr:0x7fb0666db7c9: shl eax, 0x8
old instr: 0x40b8c3: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666db7cc: mov dword ptr [rbp-0x18], eax
old instr: 0x40b8c6: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7fb0666db7cf: mov eax, dword ptr [rbp-0xd84]
old instr: 0x40b8cc: sub eax, 0x1
    new instr:0x7fb0666db7d5: sub eax, 0x1
old instr: 0x40b8cf: mov dword ptr [rbp-0x14], eax
    new instr:0x7fb0666db7d8: mov dword ptr [rbp-0x14], eax
in revert 
removing jump and inserting a dummy entry 
40ba60
old instr: 0x40ba60: cmp dword ptr [rbp-0x14], 0x2
    new instr:0x7fb0666db7db: cmp dword ptr [rbp-0x14], 0x2
in revert 
    new instr:0x7fb0666db7df: jle 0x7fb0666db652
40b8d7
old instr: 0x40b8d7: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db7e5: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b8da: cdqe 
    new instr:0x7fb0666db7e8: cdqe 
old instr: 0x40b8dc: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db7ea: lea rdx, ptr [rax+rax*1]
old instr: 0x40b8e0: mov rax, qword ptr [rbp-0xd78]
    new instr:0x7fb0666db7ee: mov rax, qword ptr [rbp-0xd78]
old instr: 0x40b8e7: add rax, rdx
    new instr:0x7fb0666db7f5: add rax, rdx
old instr: 0x40b8ea: mov word ptr [rax], 0x0
    new instr:0x7fb0666db7f8: mov word ptr [rax], 0x0
old instr: 0x40b8ef: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db7fd: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b8f2: mov ecx, eax
    new instr:0x7fb0666db800: mov ecx, eax
old instr: 0x40b8f4: sar ecx, 0x8
    new instr:0x7fb0666db802: sar ecx, 0x8
old instr: 0x40b8f7: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db805: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b8fa: movsxd rdx, eax
    new instr:0x7fb0666db808: movsxd rdx, eax
old instr: 0x40b8fd: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666db80b: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40b904: add rax, rdx
    new instr:0x7fb0666db812: add rax, rdx
old instr: 0x40b907: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db815: movzx eax, byte ptr [rax]
old instr: 0x40b90a: movzx eax, al
    new instr:0x7fb0666db818: movzx eax, al
old instr: 0x40b90d: shl eax, 0x8
    new instr:0x7fb0666db81b: shl eax, 0x8
old instr: 0x40b910: or eax, ecx
    new instr:0x7fb0666db81e: or eax, ecx
old instr: 0x40b912: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666db820: mov dword ptr [rbp-0x18], eax
old instr: 0x40b915: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db823: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b918: cdqe 
    new instr:0x7fb0666db826: cdqe 
old instr: 0x40b91a: lea rdx, ptr [rax*4]
    new instr:0x7fb0666db828: lea rdx, ptr [rax*4]
old instr: 0x40b922: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666db830: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40b929: add rax, rdx
    new instr:0x7fb0666db837: add rax, rdx
old instr: 0x40b92c: mov edx, dword ptr [rax]
    new instr:0x7fb0666db83a: mov edx, dword ptr [rax]
old instr: 0x40b92e: add edx, 0x1
    new instr:0x7fb0666db83c: add edx, 0x1
old instr: 0x40b931: mov dword ptr [rax], edx
    new instr:0x7fb0666db83f: mov dword ptr [rax], edx
old instr: 0x40b933: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db841: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b936: cdqe 
    new instr:0x7fb0666db844: cdqe 
old instr: 0x40b938: sub rax, 0x1
    new instr:0x7fb0666db846: sub rax, 0x1
old instr: 0x40b93c: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db84a: lea rdx, ptr [rax+rax*1]
old instr: 0x40b940: mov rax, qword ptr [rbp-0xd78]
    new instr:0x7fb0666db84e: mov rax, qword ptr [rbp-0xd78]
old instr: 0x40b947: add rax, rdx
    new instr:0x7fb0666db855: add rax, rdx
old instr: 0x40b94a: mov word ptr [rax], 0x0
    new instr:0x7fb0666db858: mov word ptr [rax], 0x0
old instr: 0x40b94f: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db85d: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b952: mov edx, eax
    new instr:0x7fb0666db860: mov edx, eax
old instr: 0x40b954: sar edx, 0x8
    new instr:0x7fb0666db862: sar edx, 0x8
old instr: 0x40b957: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db865: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b95a: cdqe 
    new instr:0x7fb0666db868: cdqe 
old instr: 0x40b95c: lea rcx, ptr [rax-0x1]
    new instr:0x7fb0666db86a: lea rcx, ptr [rax-0x1]
old instr: 0x40b960: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666db86e: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40b967: add rax, rcx
    new instr:0x7fb0666db875: add rax, rcx
old instr: 0x40b96a: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db878: movzx eax, byte ptr [rax]
old instr: 0x40b96d: movzx eax, al
    new instr:0x7fb0666db87b: movzx eax, al
old instr: 0x40b970: shl eax, 0x8
    new instr:0x7fb0666db87e: shl eax, 0x8
old instr: 0x40b973: or eax, edx
    new instr:0x7fb0666db881: or eax, edx
old instr: 0x40b975: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666db883: mov dword ptr [rbp-0x18], eax
old instr: 0x40b978: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db886: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b97b: cdqe 
    new instr:0x7fb0666db889: cdqe 
old instr: 0x40b97d: lea rdx, ptr [rax*4]
    new instr:0x7fb0666db88b: lea rdx, ptr [rax*4]
old instr: 0x40b985: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666db893: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40b98c: add rax, rdx
    new instr:0x7fb0666db89a: add rax, rdx
old instr: 0x40b98f: mov edx, dword ptr [rax]
    new instr:0x7fb0666db89d: mov edx, dword ptr [rax]
old instr: 0x40b991: add edx, 0x1
    new instr:0x7fb0666db89f: add edx, 0x1
old instr: 0x40b994: mov dword ptr [rax], edx
    new instr:0x7fb0666db8a2: mov dword ptr [rax], edx
old instr: 0x40b996: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db8a4: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b999: cdqe 
    new instr:0x7fb0666db8a7: cdqe 
old instr: 0x40b99b: sub rax, 0x2
    new instr:0x7fb0666db8a9: sub rax, 0x2
old instr: 0x40b99f: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666db8ad: lea rdx, ptr [rax+rax*1]
old instr: 0x40b9a3: mov rax, qword ptr [rbp-0xd78]
    new instr:0x7fb0666db8b1: mov rax, qword ptr [rbp-0xd78]
old instr: 0x40b9aa: add rax, rdx
    new instr:0x7fb0666db8b8: add rax, rdx
old instr: 0x40b9ad: mov word ptr [rax], 0x0
    new instr:0x7fb0666db8bb: mov word ptr [rax], 0x0
old instr: 0x40b9b2: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db8c0: mov eax, dword ptr [rbp-0x18]
old instr: 0x40b9b5: mov edx, eax
    new instr:0x7fb0666db8c3: mov edx, eax
old instr: 0x40b9b7: sar edx, 0x8
    new instr:0x7fb0666db8c5: sar edx, 0x8
old instr: 0x40b9ba: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db8c8: mov eax, dword ptr [rbp-0x14]
old instr: 0x40b9bd: cdqe 
    new instr:0x7fb0666db8cb: cdqe 
old instr: 0x40b9bf: lea rcx, ptr [rax-0x2]
    new instr:0x7fb0666db8cd: lea rcx, ptr [rax-0x2]
old instr: 0x40b9c3: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666db8d1: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40b9ca: add rax, rcx
    new instr:0x7fb0666db8d8: add rax, rcx
old instr: 0x40b9cd: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db8db: movzx eax, byte ptr [rax]
40b9d0
old instr: 0x40b9d0: movzx eax, al
    new instr:0x7fb0666db8de: movzx eax, al
40b865
old instr: 0x40b865: mov rax, qword ptr [rip+0x211a44]
    new instr:0x7fb0666db8e1: mov rax, qword ptr [rip+0x211a44]
old instr: 0x40b86c: mov rcx, rax
    new instr:0x7fb0666db8e8: mov rcx, rax
old instr: 0x40b86f: mov edx, 0x21
    new instr:0x7fb0666db8eb: mov edx, 0x21
old instr: 0x40b874: mov esi, 0x1
    new instr:0x7fb0666db8f0: mov esi, 0x1
old instr: 0x40b879: mov edi, 0x41ab48
    new instr:0x7fb0666db8f5: mov edi, 0x41ab48
40ba6a
in revert 
removing jump and inserting a dummy entry 
40bacc
old instr: 0x40bacc: cmp dword ptr [rbp-0x14], 0x0
    new instr:0x7fb0666db8fa: cmp dword ptr [rbp-0x14], 0x0
in revert 
    new instr:0x7fb0666db8fe: js 0x7fb0666db89a
40ba6c
old instr: 0x40ba6c: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db900: mov eax, dword ptr [rbp-0x14]
40bad2
old instr: 0x40bad2: mov dword ptr [rbp-0x14], 0x0
    new instr:0x7fb0666db903: mov dword ptr [rbp-0x14], 0x0
in revert 
removing jump and inserting a dummy entry 
40bb2c
old instr: 0x40bb2c: cmp dword ptr [rbp-0x14], 0x21
    new instr:0x7fb0666db90a: cmp dword ptr [rbp-0x14], 0x21
in revert 
    new instr:0x7fb0666db90e: jnle 0x7fb0666db8b9
40badb
old instr: 0x40badb: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db910: mov eax, dword ptr [rbp-0x14]
40bb32
old instr: 0x40bb32: cmp dword ptr [rbp-0xd88], 0x3
    new instr:0x7fb0666db913: cmp dword ptr [rbp-0xd88], 0x3
in revert 
    new instr:0x7fb0666db91a: jnle 0x7fb0666db93a
40bb59
old instr: 0x40bb59: mov dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666db91c: mov dword ptr [rbp-0x14], 0x1
in revert 
removing jump and inserting a dummy entry 
40bbb9
old instr: 0x40bbb9: cmp dword ptr [rbp-0x14], 0x10000
    new instr:0x7fb0666db923: cmp dword ptr [rbp-0x14], 0x10000
in revert 
    new instr:0x7fb0666db92a: jnle 0x7fb0666db8cc
40bb62
old instr: 0x40bb62: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db92c: mov eax, dword ptr [rbp-0x14]
40bbc2
old instr: 0x40bbc2: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666db92f: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40bbc9: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db936: movzx eax, byte ptr [rax]
old instr: 0x40bbcc: movzx eax, al
    new instr:0x7fb0666db939: movzx eax, al
old instr: 0x40bbcf: shl eax, 0x8
    new instr:0x7fb0666db93c: shl eax, 0x8
old instr: 0x40bbd2: mov word ptr [rbp-0x22], ax
    new instr:0x7fb0666db93f: mov word ptr [rbp-0x22], ax
old instr: 0x40bbd6: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7fb0666db943: mov eax, dword ptr [rbp-0xd84]
old instr: 0x40bbdc: sub eax, 0x1
    new instr:0x7fb0666db949: sub eax, 0x1
old instr: 0x40bbdf: mov dword ptr [rbp-0x14], eax
    new instr:0x7fb0666db94c: mov dword ptr [rbp-0x14], eax
in revert 
removing jump and inserting a dummy entry 
40bdf5
old instr: 0x40bdf5: cmp dword ptr [rbp-0x14], 0x2
    new instr:0x7fb0666db94f: cmp dword ptr [rbp-0x14], 0x2
in revert 
    new instr:0x7fb0666db953: jle 0x7fb0666db741
40bbe7
old instr: 0x40bbe7: movzx eax, word ptr [rbp-0x22]
    new instr:0x7fb0666db959: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bbeb: shr ax, 0x8
    new instr:0x7fb0666db95d: shr ax, 0x8
old instr: 0x40bbef: mov edx, eax
    new instr:0x7fb0666db961: mov edx, eax
old instr: 0x40bbf1: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db963: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bbf4: movsxd rcx, eax
    new instr:0x7fb0666db966: movsxd rcx, eax
old instr: 0x40bbf7: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666db969: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40bbfe: add rax, rcx
    new instr:0x7fb0666db970: add rax, rcx
old instr: 0x40bc01: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db973: movzx eax, byte ptr [rax]
old instr: 0x40bc04: movzx eax, al
    new instr:0x7fb0666db976: movzx eax, al
old instr: 0x40bc07: shl eax, 0x8
    new instr:0x7fb0666db979: shl eax, 0x8
old instr: 0x40bc0a: or eax, edx
    new instr:0x7fb0666db97c: or eax, edx
old instr: 0x40bc0c: mov word ptr [rbp-0x22], ax
    new instr:0x7fb0666db97e: mov word ptr [rbp-0x22], ax
old instr: 0x40bc10: movzx eax, word ptr [rbp-0x22]
    new instr:0x7fb0666db982: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bc14: lea rdx, ptr [rax*4]
    new instr:0x7fb0666db986: lea rdx, ptr [rax*4]
old instr: 0x40bc1c: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666db98e: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bc23: add rax, rdx
    new instr:0x7fb0666db995: add rax, rdx
old instr: 0x40bc26: mov eax, dword ptr [rax]
    new instr:0x7fb0666db998: mov eax, dword ptr [rax]
old instr: 0x40bc28: sub eax, 0x1
    new instr:0x7fb0666db99a: sub eax, 0x1
old instr: 0x40bc2b: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666db99d: mov dword ptr [rbp-0x18], eax
old instr: 0x40bc2e: movzx eax, word ptr [rbp-0x22]
    new instr:0x7fb0666db9a0: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bc32: lea rdx, ptr [rax*4]
    new instr:0x7fb0666db9a4: lea rdx, ptr [rax*4]
old instr: 0x40bc3a: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666db9ac: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bc41: add rdx, rax
    new instr:0x7fb0666db9b3: add rdx, rax
old instr: 0x40bc44: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db9b6: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bc47: mov dword ptr [rdx], eax
    new instr:0x7fb0666db9b9: mov dword ptr [rdx], eax
old instr: 0x40bc49: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666db9bb: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bc4c: cdqe 
    new instr:0x7fb0666db9be: cdqe 
old instr: 0x40bc4e: lea rdx, ptr [rax*4]
    new instr:0x7fb0666db9c0: lea rdx, ptr [rax*4]
old instr: 0x40bc56: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7fb0666db9c8: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40bc5d: add rdx, rax
    new instr:0x7fb0666db9cf: add rdx, rax
old instr: 0x40bc60: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db9d2: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bc63: mov dword ptr [rdx], eax
    new instr:0x7fb0666db9d5: mov dword ptr [rdx], eax
old instr: 0x40bc65: movzx eax, word ptr [rbp-0x22]
    new instr:0x7fb0666db9d7: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bc69: shr ax, 0x8
    new instr:0x7fb0666db9db: shr ax, 0x8
old instr: 0x40bc6d: mov edx, eax
    new instr:0x7fb0666db9df: mov edx, eax
old instr: 0x40bc6f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666db9e1: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bc72: cdqe 
    new instr:0x7fb0666db9e4: cdqe 
old instr: 0x40bc74: lea rcx, ptr [rax-0x1]
    new instr:0x7fb0666db9e6: lea rcx, ptr [rax-0x1]
old instr: 0x40bc78: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666db9ea: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40bc7f: add rax, rcx
    new instr:0x7fb0666db9f1: add rax, rcx
old instr: 0x40bc82: movzx eax, byte ptr [rax]
    new instr:0x7fb0666db9f4: movzx eax, byte ptr [rax]
old instr: 0x40bc85: movzx eax, al
    new instr:0x7fb0666db9f7: movzx eax, al
old instr: 0x40bc88: shl eax, 0x8
    new instr:0x7fb0666db9fa: shl eax, 0x8
old instr: 0x40bc8b: or eax, edx
    new instr:0x7fb0666db9fd: or eax, edx
old instr: 0x40bc8d: mov word ptr [rbp-0x22], ax
    new instr:0x7fb0666db9ff: mov word ptr [rbp-0x22], ax
old instr: 0x40bc91: movzx eax, word ptr [rbp-0x22]
    new instr:0x7fb0666dba03: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bc95: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dba07: lea rdx, ptr [rax*4]
old instr: 0x40bc9d: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dba0f: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bca4: add rax, rdx
    new instr:0x7fb0666dba16: add rax, rdx
old instr: 0x40bca7: mov eax, dword ptr [rax]
    new instr:0x7fb0666dba19: mov eax, dword ptr [rax]
old instr: 0x40bca9: sub eax, 0x1
    new instr:0x7fb0666dba1b: sub eax, 0x1
old instr: 0x40bcac: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666dba1e: mov dword ptr [rbp-0x18], eax
old instr: 0x40bcaf: movzx eax, word ptr [rbp-0x22]
    new instr:0x7fb0666dba21: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bcb3: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dba25: lea rdx, ptr [rax*4]
old instr: 0x40bcbb: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dba2d: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bcc2: add rdx, rax
    new instr:0x7fb0666dba34: add rdx, rax
old instr: 0x40bcc5: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dba37: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bcc8: mov dword ptr [rdx], eax
    new instr:0x7fb0666dba3a: mov dword ptr [rdx], eax
old instr: 0x40bcca: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dba3c: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bccd: cdqe 
    new instr:0x7fb0666dba3f: cdqe 
old instr: 0x40bccf: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dba41: lea rdx, ptr [rax*4]
old instr: 0x40bcd7: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7fb0666dba49: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40bcde: add rdx, rax
    new instr:0x7fb0666dba50: add rdx, rax
old instr: 0x40bce1: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666dba53: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bce4: sub eax, 0x1
    new instr:0x7fb0666dba56: sub eax, 0x1
old instr: 0x40bce7: mov dword ptr [rdx], eax
    new instr:0x7fb0666dba59: mov dword ptr [rdx], eax
old instr: 0x40bce9: movzx eax, word ptr [rbp-0x22]
    new instr:0x7fb0666dba5b: movzx eax, word ptr [rbp-0x22]
old instr: 0x40bced: shr ax, 0x8
    new instr:0x7fb0666dba5f: shr ax, 0x8
old instr: 0x40bcf1: mov edx, eax
    new instr:0x7fb0666dba63: mov edx, eax
old instr: 0x40bcf3: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666dba65: mov eax, dword ptr [rbp-0x14]
40bcf6
old instr: 0x40bcf6: cdqe 
    new instr:0x7fb0666dba68: cdqe 
40bb3b
old instr: 0x40bb3b: mov rax, qword ptr [rip+0x21176e]
    new instr:0x7fb0666dba6a: mov rax, qword ptr [rip+0x21176e]
old instr: 0x40bb42: mov rcx, rax
    new instr:0x7fb0666dba71: mov rcx, rax
old instr: 0x40bb45: mov edx, 0x1b
    new instr:0x7fb0666dba74: mov edx, 0x1b
old instr: 0x40bb4a: mov esi, 0x1
    new instr:0x7fb0666dba79: mov esi, 0x1
old instr: 0x40bb4f: mov edi, 0x41aad0
    new instr:0x7fb0666dba7e: mov edi, 0x41aad0
40bdff
in revert 
removing jump and inserting a dummy entry 
40be86
old instr: 0x40be86: cmp dword ptr [rbp-0x14], 0x0
    new instr:0x7fb0666dba83: cmp dword ptr [rbp-0x14], 0x0
in revert 
    new instr:0x7fb0666dba87: js 0x7fb0666dba01
40be04
old instr: 0x40be04: movzx eax, word ptr [rbp-0x22]
    new instr:0x7fb0666dba8d: movzx eax, word ptr [rbp-0x22]
40be90
old instr: 0x40be90: mov dword ptr [rbp-0x14], 0x0
    new instr:0x7fb0666dba91: mov dword ptr [rbp-0x14], 0x0
in revert 
removing jump and inserting a dummy entry 
40beb9
old instr: 0x40beb9: cmp dword ptr [rbp-0x14], 0xff
    new instr:0x7fb0666dba98: cmp dword ptr [rbp-0x14], 0xff
in revert 
    new instr:0x7fb0666dba9f: jnle 0x7fb0666dba78
40be99
old instr: 0x40be99: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666dbaa1: mov eax, dword ptr [rbp-0x14]
40bec2
old instr: 0x40bec2: mov dword ptr [rbp-0x28], 0x1
    new instr:0x7fb0666dbaa4: mov dword ptr [rbp-0x28], 0x1
40bec9
old instr: 0x40bec9: mov edx, dword ptr [rbp-0x28]
    new instr:0x7fb0666dbaab: mov edx, dword ptr [rbp-0x28]
old instr: 0x40becc: mov eax, edx
    new instr:0x7fb0666dbaae: mov eax, edx
old instr: 0x40bece: add eax, eax
    new instr:0x7fb0666dbab0: add eax, eax
old instr: 0x40bed0: add eax, edx
    new instr:0x7fb0666dbab2: add eax, edx
old instr: 0x40bed2: add eax, 0x1
    new instr:0x7fb0666dbab4: add eax, 0x1
old instr: 0x40bed5: mov dword ptr [rbp-0x28], eax
    new instr:0x7fb0666dbab7: mov dword ptr [rbp-0x28], eax
old instr: 0x40bed8: cmp dword ptr [rbp-0x28], 0x100
    new instr:0x7fb0666dbaba: cmp dword ptr [rbp-0x28], 0x100
old instr: 0x40bedf: jle 0x40bec9
    new instr:0x7fb0666dbac1: jle 0x7fb0666dbaab
inserted instruction
40bee1
old instr: 0x40bee1: mov ecx, dword ptr [rbp-0x28]
    new instr:0x7fb0666dbac3: mov ecx, dword ptr [rbp-0x28]
old instr: 0x40bee4: mov edx, 0x55555556
    new instr:0x7fb0666dbac6: mov edx, 0x55555556
old instr: 0x40bee9: mov eax, ecx
    new instr:0x7fb0666dbacb: mov eax, ecx
old instr: 0x40beeb: imul edx
    new instr:0x7fb0666dbacd: imul edx
old instr: 0x40beed: mov eax, ecx
    new instr:0x7fb0666dbacf: mov eax, ecx
old instr: 0x40beef: sar eax, 0x1f
    new instr:0x7fb0666dbad1: sar eax, 0x1f
old instr: 0x40bef2: mov ecx, edx
    new instr:0x7fb0666dbad4: mov ecx, edx
old instr: 0x40bef4: sub ecx, eax
    new instr:0x7fb0666dbad6: sub ecx, eax
old instr: 0x40bef6: mov eax, ecx
    new instr:0x7fb0666dbad8: mov eax, ecx
old instr: 0x40bef8: mov dword ptr [rbp-0x28], eax
    new instr:0x7fb0666dbada: mov dword ptr [rbp-0x28], eax
old instr: 0x40befb: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dbadd: mov eax, dword ptr [rbp-0x28]
old instr: 0x40befe: mov dword ptr [rbp-0x14], eax
    new instr:0x7fb0666dbae0: mov dword ptr [rbp-0x14], eax
in revert 
removing jump and inserting a dummy entry 
40c015
old instr: 0x40c015: cmp dword ptr [rbp-0x14], 0xff
    new instr:0x7fb0666dbae3: cmp dword ptr [rbp-0x14], 0xff
in revert 
    new instr:0x7fb0666dbaea: jnle 0x7fb0666db9d4
40bf06
old instr: 0x40bf06: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666dbaf0: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bf09: cdqe 
    new instr:0x7fb0666dbaf3: cdqe 
old instr: 0x40bf0b: mov eax, dword ptr [rbp+rax*4-0x460]
    new instr:0x7fb0666dbaf5: mov eax, dword ptr [rbp+rax*4-0x460]
old instr: 0x40bf12: mov dword ptr [rbp-0x30], eax
    new instr:0x7fb0666dbafc: mov dword ptr [rbp-0x30], eax
old instr: 0x40bf15: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666dbaff: mov eax, dword ptr [rbp-0x14]
old instr: 0x40bf18: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666dbb02: mov dword ptr [rbp-0x18], eax
in revert 
removing jump and inserting a dummy entry 
40bf53
old instr: 0x40bf53: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dbb05: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf56: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbb08: mov edx, dword ptr [rbp-0x18]
old instr: 0x40bf59: mov ecx, edx
    new instr:0x7fb0666dbb0b: mov ecx, edx
old instr: 0x40bf5b: sub ecx, eax
    new instr:0x7fb0666dbb0d: sub ecx, eax
old instr: 0x40bf5d: mov eax, ecx
    new instr:0x7fb0666dbb0f: mov eax, ecx
old instr: 0x40bf5f: cdqe 
    new instr:0x7fb0666dbb11: cdqe 
old instr: 0x40bf61: mov eax, dword ptr [rbp+rax*4-0x460]
    new instr:0x7fb0666dbb13: mov eax, dword ptr [rbp+rax*4-0x460]
old instr: 0x40bf68: add eax, 0x1
    new instr:0x7fb0666dbb1a: add eax, 0x1
old instr: 0x40bf6b: shl eax, 0x8
    new instr:0x7fb0666dbb1d: shl eax, 0x8
old instr: 0x40bf6e: cdqe 
    new instr:0x7fb0666dbb20: cdqe 
old instr: 0x40bf70: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbb22: lea rdx, ptr [rax*4]
old instr: 0x40bf78: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbb2a: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bf7f: add rax, rdx
    new instr:0x7fb0666dbb31: add rax, rdx
old instr: 0x40bf82: mov edx, dword ptr [rax]
    new instr:0x7fb0666dbb34: mov edx, dword ptr [rax]
old instr: 0x40bf84: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dbb36: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf87: mov ecx, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbb39: mov ecx, dword ptr [rbp-0x18]
old instr: 0x40bf8a: mov ebx, ecx
    new instr:0x7fb0666dbb3c: mov ebx, ecx
old instr: 0x40bf8c: sub ebx, eax
    new instr:0x7fb0666dbb3e: sub ebx, eax
old instr: 0x40bf8e: mov eax, ebx
    new instr:0x7fb0666dbb40: mov eax, ebx
old instr: 0x40bf90: cdqe 
    new instr:0x7fb0666dbb42: cdqe 
old instr: 0x40bf92: mov eax, dword ptr [rbp+rax*4-0x460]
    new instr:0x7fb0666dbb44: mov eax, dword ptr [rbp+rax*4-0x460]
old instr: 0x40bf99: shl eax, 0x8
    new instr:0x7fb0666dbb4b: shl eax, 0x8
old instr: 0x40bf9c: cdqe 
    new instr:0x7fb0666dbb4e: cdqe 
old instr: 0x40bf9e: lea rcx, ptr [rax*4]
    new instr:0x7fb0666dbb50: lea rcx, ptr [rax*4]
old instr: 0x40bfa6: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbb58: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bfad: add rax, rcx
    new instr:0x7fb0666dbb5f: add rax, rcx
old instr: 0x40bfb0: mov eax, dword ptr [rax]
    new instr:0x7fb0666dbb62: mov eax, dword ptr [rax]
old instr: 0x40bfb2: mov ecx, edx
    new instr:0x7fb0666dbb64: mov ecx, edx
old instr: 0x40bfb4: sub ecx, eax
    new instr:0x7fb0666dbb66: sub ecx, eax
old instr: 0x40bfb6: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fb0666dbb68: mov eax, dword ptr [rbp-0x30]
old instr: 0x40bfb9: add eax, 0x1
    new instr:0x7fb0666dbb6b: add eax, 0x1
old instr: 0x40bfbc: shl eax, 0x8
    new instr:0x7fb0666dbb6e: shl eax, 0x8
old instr: 0x40bfbf: cdqe 
    new instr:0x7fb0666dbb71: cdqe 
old instr: 0x40bfc1: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbb73: lea rdx, ptr [rax*4]
old instr: 0x40bfc9: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbb7b: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bfd0: add rax, rdx
    new instr:0x7fb0666dbb82: add rax, rdx
old instr: 0x40bfd3: mov edx, dword ptr [rax]
    new instr:0x7fb0666dbb85: mov edx, dword ptr [rax]
old instr: 0x40bfd5: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fb0666dbb87: mov eax, dword ptr [rbp-0x30]
old instr: 0x40bfd8: shl eax, 0x8
    new instr:0x7fb0666dbb8a: shl eax, 0x8
old instr: 0x40bfdb: cdqe 
    new instr:0x7fb0666dbb8d: cdqe 
old instr: 0x40bfdd: lea rsi, ptr [rax*4]
    new instr:0x7fb0666dbb8f: lea rsi, ptr [rax*4]
old instr: 0x40bfe5: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbb97: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40bfec: add rax, rsi
    new instr:0x7fb0666dbb9e: add rax, rsi
old instr: 0x40bfef: mov eax, dword ptr [rax]
    new instr:0x7fb0666dbba1: mov eax, dword ptr [rax]
old instr: 0x40bff1: mov ebx, edx
    new instr:0x7fb0666dbba3: mov ebx, edx
old instr: 0x40bff3: sub ebx, eax
    new instr:0x7fb0666dbba5: sub ebx, eax
old instr: 0x40bff5: mov eax, ebx
    new instr:0x7fb0666dbba7: mov eax, ebx
old instr: 0x40bff7: cmp ecx, eax
    new instr:0x7fb0666dbba9: cmp ecx, eax
old instr: 0x40bff9: jnbe 0x40bf1d
    new instr:0x7fb0666dbbab: jnbe 0x7fb0666dbacf
inserted instruction
40bfff
in revert 
removing jump and inserting a dummy entry 
40c002
old instr: 0x40c002: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbbb1: mov eax, dword ptr [rbp-0x18]
40bf1d
old instr: 0x40bf1d: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dbbb4: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf20: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbbb7: mov edx, dword ptr [rbp-0x18]
old instr: 0x40bf23: mov ebx, edx
    new instr:0x7fb0666dbbba: mov ebx, edx
old instr: 0x40bf25: sub ebx, eax
    new instr:0x7fb0666dbbbc: sub ebx, eax
old instr: 0x40bf27: mov eax, ebx
    new instr:0x7fb0666dbbbe: mov eax, ebx
old instr: 0x40bf29: cdqe 
    new instr:0x7fb0666dbbc0: cdqe 
old instr: 0x40bf2b: mov edx, dword ptr [rbp+rax*4-0x460]
    new instr:0x7fb0666dbbc2: mov edx, dword ptr [rbp+rax*4-0x460]
old instr: 0x40bf32: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbbc9: mov eax, dword ptr [rbp-0x18]
old instr: 0x40bf35: cdqe 
    new instr:0x7fb0666dbbcc: cdqe 
old instr: 0x40bf37: mov dword ptr [rbp+rax*4-0x460], edx
    new instr:0x7fb0666dbbce: mov dword ptr [rbp+rax*4-0x460], edx
old instr: 0x40bf3e: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dbbd5: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf41: sub dword ptr [rbp-0x18], eax
    new instr:0x7fb0666dbbd8: sub dword ptr [rbp-0x18], eax
old instr: 0x40bf44: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dbbdb: mov eax, dword ptr [rbp-0x28]
old instr: 0x40bf47: sub eax, 0x1
    new instr:0x7fb0666dbbde: sub eax, 0x1
old instr: 0x40bf4a: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbbe1: cmp eax, dword ptr [rbp-0x18]
in revert 
    new instr:0x7fb0666dbbe4: jl 0x7fb0666dbc98
40c001
old instr: 0x40c001: nop
    new instr:0x7fb0666dbbea: nop
40c022
old instr: 0x40c022: cmp dword ptr [rbp-0x28], 0x1
    new instr:0x7fb0666dbbeb: cmp dword ptr [rbp-0x28], 0x1
old instr: 0x40c026: jnz 0x40bee1
    new instr:0x7fb0666dbbef: jnz 0x7fb0666dbaaa
inserted instruction
40c02c
old instr: 0x40c02c: mov dword ptr [rbp-0x20], 0x0
    new instr:0x7fb0666dbbf5: mov dword ptr [rbp-0x20], 0x0
old instr: 0x40c033: mov dword ptr [rbp-0x14], 0x0
    new instr:0x7fb0666dbbfc: mov dword ptr [rbp-0x14], 0x0
in revert 
removing jump and inserting a dummy entry 
40c627
old instr: 0x40c627: cmp dword ptr [rbp-0x14], 0xff
    new instr:0x7fb0666dbc03: cmp dword ptr [rbp-0x14], 0xff
in revert 
    new instr:0x7fb0666dbc0a: jnle 0x7fb0666db61b
40c03f
old instr: 0x40c03f: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666dbc10: mov eax, dword ptr [rbp-0x14]
old instr: 0x40c042: cdqe 
    new instr:0x7fb0666dbc13: cdqe 
old instr: 0x40c044: mov eax, dword ptr [rbp+rax*4-0x460]
    new instr:0x7fb0666dbc15: mov eax, dword ptr [rbp+rax*4-0x460]
old instr: 0x40c04b: mov dword ptr [rbp-0x34], eax
    new instr:0x7fb0666dbc1c: mov dword ptr [rbp-0x34], eax
old instr: 0x40c04e: mov dword ptr [rbp-0x18], 0x0
    new instr:0x7fb0666dbc1f: mov dword ptr [rbp-0x18], 0x0
in revert 
removing jump and inserting a dummy entry 
40c1c9
old instr: 0x40c1c9: cmp dword ptr [rbp-0x18], 0xff
    new instr:0x7fb0666dbc26: cmp dword ptr [rbp-0x18], 0xff
in revert 
    new instr:0x7fb0666dbc2d: jnle 0x7fb0666dbab7
40c05a
old instr: 0x40c05a: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbc33: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c05d: cmp eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbc36: cmp eax, dword ptr [rbp-0x34]
old instr: 0x40c060: jz 0x40c1c5
    new instr:0x7fb0666dbc39: jz 0x7fb0666dbd9e
inserted instruction
40c066
old instr: 0x40c066: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbc3f: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c069: mov edx, eax
    new instr:0x7fb0666dbc42: mov edx, eax
old instr: 0x40c06b: shl edx, 0x8
    new instr:0x7fb0666dbc44: shl edx, 0x8
old instr: 0x40c06e: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbc47: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c071: add eax, edx
    new instr:0x7fb0666dbc4a: add eax, edx
old instr: 0x40c073: mov dword ptr [rbp-0x38], eax
    new instr:0x7fb0666dbc4c: mov dword ptr [rbp-0x38], eax
old instr: 0x40c076: mov eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666dbc4f: mov eax, dword ptr [rbp-0x38]
old instr: 0x40c079: cdqe 
    new instr:0x7fb0666dbc52: cdqe 
old instr: 0x40c07b: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbc54: lea rdx, ptr [rax*4]
old instr: 0x40c083: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbc5c: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c08a: add rax, rdx
    new instr:0x7fb0666dbc63: add rax, rdx
old instr: 0x40c08d: mov eax, dword ptr [rax]
    new instr:0x7fb0666dbc66: mov eax, dword ptr [rax]
old instr: 0x40c08f: and eax, 0x200000
    new instr:0x7fb0666dbc68: and eax, 0x200000
old instr: 0x40c094: test eax, eax
    new instr:0x7fb0666dbc6d: test eax, eax
in revert 
    new instr:0x7fb0666dbc6f: jz 0x7fb0666dbd65
40c18c
old instr: 0x40c18c: mov eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666dbc75: mov eax, dword ptr [rbp-0x38]
40c09c
old instr: 0x40c09c: mov eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666dbc78: mov eax, dword ptr [rbp-0x38]
old instr: 0x40c09f: cdqe 
    new instr:0x7fb0666dbc7b: cdqe 
old instr: 0x40c0a1: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbc7d: lea rdx, ptr [rax*4]
old instr: 0x40c0a9: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbc85: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c0b0: add rax, rdx
    new instr:0x7fb0666dbc8c: add rax, rdx
old instr: 0x40c0b3: mov eax, dword ptr [rax]
    new instr:0x7fb0666dbc8f: mov eax, dword ptr [rax]
old instr: 0x40c0b5: and eax, 0xffdfffff
    new instr:0x7fb0666dbc91: and eax, 0xffdfffff
old instr: 0x40c0ba: mov dword ptr [rbp-0x3c], eax
    new instr:0x7fb0666dbc96: mov dword ptr [rbp-0x3c], eax
old instr: 0x40c0bd: mov eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666dbc99: mov eax, dword ptr [rbp-0x38]
old instr: 0x40c0c0: cdqe 
    new instr:0x7fb0666dbc9c: cdqe 
old instr: 0x40c0c2: add rax, 0x1
    new instr:0x7fb0666dbc9e: add rax, 0x1
old instr: 0x40c0c6: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbca2: lea rdx, ptr [rax*4]
old instr: 0x40c0ce: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbcaa: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c0d5: add rax, rdx
    new instr:0x7fb0666dbcb1: add rax, rdx
old instr: 0x40c0d8: mov eax, dword ptr [rax]
    new instr:0x7fb0666dbcb4: mov eax, dword ptr [rax]
old instr: 0x40c0da: and eax, 0xffdfffff
    new instr:0x7fb0666dbcb6: and eax, 0xffdfffff
old instr: 0x40c0df: sub eax, 0x1
    new instr:0x7fb0666dbcbb: sub eax, 0x1
old instr: 0x40c0e2: mov dword ptr [rbp-0x40], eax
    new instr:0x7fb0666dbcbe: mov dword ptr [rbp-0x40], eax
old instr: 0x40c0e5: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dbcc1: mov eax, dword ptr [rbp-0x40]
old instr: 0x40c0e8: cmp eax, dword ptr [rbp-0x3c]
    new instr:0x7fb0666dbcc4: cmp eax, dword ptr [rbp-0x3c]
old instr: 0x40c0eb: jle 0x40c18c
    new instr:0x7fb0666dbcc7: jle 0x7fb0666dbd68
inserted instruction
add jump to 
    new instr:0x7fb0666dbccd: jmp 0x7fb066ae7dc3
40c1c5
old instr: 0x40c1c5: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666dbcd2: add dword ptr [rbp-0x18], 0x1
40c0f1
old instr: 0x40c0f1: cmp dword ptr [rbp-0xd88], 0x3
    new instr:0x7fb0666dbcd6: cmp dword ptr [rbp-0xd88], 0x3
in revert 
    new instr:0x7fb0666dbcdd: jnle 0x7fb0666dbd16
40c131
old instr: 0x40c131: mov r9d, dword ptr [rbp-0x40]
    new instr:0x7fb0666dbcdf: mov r9d, dword ptr [rbp-0x40]
old instr: 0x40c135: mov r8d, dword ptr [rbp-0x3c]
    new instr:0x7fb0666dbce3: mov r8d, dword ptr [rbp-0x3c]
old instr: 0x40c139: mov ecx, dword ptr [rbp-0xd84]
    new instr:0x7fb0666dbce7: mov ecx, dword ptr [rbp-0xd84]
old instr: 0x40c13f: mov rdx, qword ptr [rbp-0xd78]
    new instr:0x7fb0666dbced: mov rdx, qword ptr [rbp-0xd78]
old instr: 0x40c146: mov rsi, qword ptr [rbp-0xd70]
    new instr:0x7fb0666dbcf4: mov rsi, qword ptr [rbp-0xd70]
old instr: 0x40c14d: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7fb0666dbcfb: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40c154: mov rdi, qword ptr [rbp+0x10]
    new instr:0x7fb0666dbd02: mov rdi, qword ptr [rbp+0x10]
old instr: 0x40c158: mov qword ptr [rsp+0x8], rdi
    new instr:0x7fb0666dbd06: mov qword ptr [rsp+0x8], rdi
old instr: 0x40c15d: mov dword ptr [rsp], 0x2
    new instr:0x7fb0666dbd0b: mov dword ptr [rsp], 0x2
old instr: 0x40c164: mov rdi, rax
    new instr:0x7fb0666dbd12: mov rdi, rax
    new instr:0x7fb0666dbd15: sub rsp, 0x8
HERE and bbl_size is 9and the rtn im reordering now is40afb7
old instr: 0x40afb7: push rbp
    new instr:0x7fb0666dbd19: push rbp
old instr: 0x40afb8: mov rbp, rsp
    new instr:0x7fb0666dbd1a: mov rbp, rsp
old instr: 0x40afbb: push rbx
    new instr:0x7fb0666dbd1d: push rbx
old instr: 0x40afbc: sub rsp, 0x598
    new instr:0x7fb0666dbd1e: sub rsp, 0x598
old instr: 0x40afc3: mov qword ptr [rbp-0x568], rdi
    new instr:0x7fb0666dbd25: mov qword ptr [rbp-0x568], rdi
old instr: 0x40afca: mov qword ptr [rbp-0x570], rsi
    new instr:0x7fb0666dbd2c: mov qword ptr [rbp-0x570], rsi
old instr: 0x40afd1: mov qword ptr [rbp-0x578], rdx
    new instr:0x7fb0666dbd33: mov qword ptr [rbp-0x578], rdx
old instr: 0x40afd8: mov dword ptr [rbp-0x57c], ecx
    new instr:0x7fb0666dbd3a: mov dword ptr [rbp-0x57c], ecx
old instr: 0x40afde: mov dword ptr [rbp-0x580], r8d
    new instr:0x7fb0666dbd40: mov dword ptr [rbp-0x580], r8d
old instr: 0x40afe5: mov dword ptr [rbp-0x584], r9d
    new instr:0x7fb0666dbd47: mov dword ptr [rbp-0x584], r9d
old instr: 0x40afec: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7fb0666dbd4e: mov dword ptr [rbp-0x24], 0x0
old instr: 0x40aff3: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dbd55: mov eax, dword ptr [rbp-0x24]
old instr: 0x40aff6: cdqe 
    new instr:0x7fb0666dbd58: cdqe 
old instr: 0x40aff8: mov edx, dword ptr [rbp-0x580]
    new instr:0x7fb0666dbd5a: mov edx, dword ptr [rbp-0x580]
old instr: 0x40affe: mov dword ptr [rbp+rax*4-0x210], edx
    new instr:0x7fb0666dbd60: mov dword ptr [rbp+rax*4-0x210], edx
old instr: 0x40b005: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dbd67: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b008: cdqe 
    new instr:0x7fb0666dbd6a: cdqe 
old instr: 0x40b00a: mov edx, dword ptr [rbp-0x584]
    new instr:0x7fb0666dbd6c: mov edx, dword ptr [rbp-0x584]
old instr: 0x40b010: mov dword ptr [rbp+rax*4-0x3a0], edx
    new instr:0x7fb0666dbd72: mov dword ptr [rbp+rax*4-0x3a0], edx
old instr: 0x40b017: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dbd79: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b01a: cdqe 
    new instr:0x7fb0666dbd7c: cdqe 
old instr: 0x40b01c: mov edx, dword ptr [rbp+0x10]
    new instr:0x7fb0666dbd7e: mov edx, dword ptr [rbp+0x10]
old instr: 0x40b01f: mov dword ptr [rbp+rax*4-0x530], edx
    new instr:0x7fb0666dbd81: mov dword ptr [rbp+rax*4-0x530], edx
old instr: 0x40b026: add dword ptr [rbp-0x24], 0x1
    new instr:0x7fb0666dbd88: add dword ptr [rbp-0x24], 0x1
old instr: 0x40b812: cmp dword ptr [rbp-0x24], 0x0
    new instr:0x7fb0666dbd8c: cmp dword ptr [rbp-0x24], 0x0
old instr: 0x40b02f: cmp dword ptr [rbp-0x24], 0x63
    new instr:0x7fb0666dbd90: cmp dword ptr [rbp-0x24], 0x63
old instr: 0x40b03f: sub dword ptr [rbp-0x24], 0x1
    new instr:0x7fb0666dbd94: sub dword ptr [rbp-0x24], 0x1
old instr: 0x40b043: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dbd98: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b046: cdqe 
    new instr:0x7fb0666dbd9b: cdqe 
old instr: 0x40b048: mov eax, dword ptr [rbp+rax*4-0x210]
    new instr:0x7fb0666dbd9d: mov eax, dword ptr [rbp+rax*4-0x210]
old instr: 0x40b04f: mov dword ptr [rbp-0x40], eax
    new instr:0x7fb0666dbda4: mov dword ptr [rbp-0x40], eax
old instr: 0x40b052: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dbda7: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b055: cdqe 
    new instr:0x7fb0666dbdaa: cdqe 
old instr: 0x40b057: mov eax, dword ptr [rbp+rax*4-0x3a0]
    new instr:0x7fb0666dbdac: mov eax, dword ptr [rbp+rax*4-0x3a0]
old instr: 0x40b05e: mov dword ptr [rbp-0x44], eax
    new instr:0x7fb0666dbdb3: mov dword ptr [rbp-0x44], eax
old instr: 0x40b061: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dbdb6: mov eax, dword ptr [rbp-0x24]
old instr: 0x40b064: cdqe 
    new instr:0x7fb0666dbdb9: cdqe 
old instr: 0x40b066: mov eax, dword ptr [rbp+rax*4-0x530]
    new instr:0x7fb0666dbdbb: mov eax, dword ptr [rbp+rax*4-0x530]
old instr: 0x40b06d: mov dword ptr [rbp-0x48], eax
    new instr:0x7fb0666dbdc2: mov dword ptr [rbp-0x48], eax
old instr: 0x40b070: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dbdc5: mov eax, dword ptr [rbp-0x40]
old instr: 0x40b073: mov edx, dword ptr [rbp-0x44]
    new instr:0x7fb0666dbdc8: mov edx, dword ptr [rbp-0x44]
old instr: 0x40b076: mov ecx, edx
    new instr:0x7fb0666dbdcb: mov ecx, edx
old instr: 0x40b078: sub ecx, eax
    new instr:0x7fb0666dbdcd: sub ecx, eax
old instr: 0x40b07a: mov eax, ecx
    new instr:0x7fb0666dbdcf: mov eax, ecx
old instr: 0x40b07c: cmp eax, 0x13
    new instr:0x7fb0666dbdd1: cmp eax, 0x13
old instr: 0x40b081: cmp dword ptr [rbp-0x48], 0xe
    new instr:0x7fb0666dbdd4: cmp dword ptr [rbp-0x48], 0xe
old instr: 0x40b0d4: mov eax, dword ptr [rbp-0x44]
    new instr:0x7fb0666dbdd8: mov eax, dword ptr [rbp-0x44]
old instr: 0x40b0d7: mov edx, dword ptr [rbp-0x40]
    new instr:0x7fb0666dbddb: mov edx, dword ptr [rbp-0x40]
old instr: 0x40b0da: add eax, edx
    new instr:0x7fb0666dbdde: add eax, edx
old instr: 0x40b0dc: sar eax, 0x1
    new instr:0x7fb0666dbde0: sar eax, 0x1
old instr: 0x40b0de: cdqe 
    new instr:0x7fb0666dbde2: cdqe 
old instr: 0x40b0e0: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbde4: lea rdx, ptr [rax*4]
old instr: 0x40b0e8: mov rax, qword ptr [rbp-0x568]
    new instr:0x7fb0666dbdec: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b0ef: add rax, rdx
    new instr:0x7fb0666dbdf3: add rax, rdx
old instr: 0x40b0f2: mov edx, dword ptr [rax]
    new instr:0x7fb0666dbdf6: mov edx, dword ptr [rax]
old instr: 0x40b0f4: mov eax, dword ptr [rbp-0x48]
    new instr:0x7fb0666dbdf8: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b0f7: add eax, edx
    new instr:0x7fb0666dbdfb: add eax, edx
old instr: 0x40b0f9: mov edx, eax
    new instr:0x7fb0666dbdfd: mov edx, eax
old instr: 0x40b0fb: mov rax, qword ptr [rbp-0x570]
    new instr:0x7fb0666dbdff: mov rax, qword ptr [rbp-0x570]
old instr: 0x40b102: add rax, rdx
    new instr:0x7fb0666dbe06: add rax, rdx
old instr: 0x40b105: movzx eax, byte ptr [rax]
    new instr:0x7fb0666dbe09: movzx eax, byte ptr [rax]
old instr: 0x40b108: movzx edx, al
    new instr:0x7fb0666dbe0c: movzx edx, al
old instr: 0x40b10b: mov eax, dword ptr [rbp-0x44]
    new instr:0x7fb0666dbe0f: mov eax, dword ptr [rbp-0x44]
old instr: 0x40b10e: cdqe 
    new instr:0x7fb0666dbe12: cdqe 
old instr: 0x40b110: lea rcx, ptr [rax*4]
    new instr:0x7fb0666dbe14: lea rcx, ptr [rax*4]
old instr: 0x40b118: mov rax, qword ptr [rbp-0x568]
    new instr:0x7fb0666dbe1c: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b11f: add rax, rcx
    new instr:0x7fb0666dbe23: add rax, rcx
old instr: 0x40b122: mov ecx, dword ptr [rax]
    new instr:0x7fb0666dbe26: mov ecx, dword ptr [rax]
old instr: 0x40b124: mov eax, dword ptr [rbp-0x48]
    new instr:0x7fb0666dbe28: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b127: add eax, ecx
    new instr:0x7fb0666dbe2b: add eax, ecx
old instr: 0x40b129: mov ecx, eax
    new instr:0x7fb0666dbe2d: mov ecx, eax
old instr: 0x40b12b: mov rax, qword ptr [rbp-0x570]
    new instr:0x7fb0666dbe2f: mov rax, qword ptr [rbp-0x570]
old instr: 0x40b132: add rax, rcx
    new instr:0x7fb0666dbe36: add rax, rcx
old instr: 0x40b135: movzx eax, byte ptr [rax]
    new instr:0x7fb0666dbe39: movzx eax, byte ptr [rax]
old instr: 0x40b138: movzx ecx, al
    new instr:0x7fb0666dbe3c: movzx ecx, al
old instr: 0x40b13b: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dbe3f: mov eax, dword ptr [rbp-0x40]
old instr: 0x40b13e: cdqe 
    new instr:0x7fb0666dbe42: cdqe 
old instr: 0x40b140: lea rsi, ptr [rax*4]
    new instr:0x7fb0666dbe44: lea rsi, ptr [rax*4]
old instr: 0x40b148: mov rax, qword ptr [rbp-0x568]
    new instr:0x7fb0666dbe4c: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b14f: add rax, rsi
    new instr:0x7fb0666dbe53: add rax, rsi
old instr: 0x40b152: mov esi, dword ptr [rax]
    new instr:0x7fb0666dbe56: mov esi, dword ptr [rax]
old instr: 0x40b154: mov eax, dword ptr [rbp-0x48]
    new instr:0x7fb0666dbe58: mov eax, dword ptr [rbp-0x48]
old instr: 0x40b157: add eax, esi
    new instr:0x7fb0666dbe5b: add eax, esi
old instr: 0x40b159: mov esi, eax
    new instr:0x7fb0666dbe5d: mov esi, eax
old instr: 0x40b15b: mov rax, qword ptr [rbp-0x570]
    new instr:0x7fb0666dbe5f: mov rax, qword ptr [rbp-0x570]
old instr: 0x40b162: add rax, rsi
    new instr:0x7fb0666dbe66: add rax, rsi
old instr: 0x40b165: movzx eax, byte ptr [rax]
    new instr:0x7fb0666dbe69: movzx eax, byte ptr [rax]
old instr: 0x40b168: movzx eax, al
    new instr:0x7fb0666dbe6c: movzx eax, al
old instr: 0x40b16b: mov esi, ecx
    new instr:0x7fb0666dbe6f: mov esi, ecx
old instr: 0x40b16d: mov edi, eax
    new instr:0x7fb0666dbe71: mov edi, eax
old instr: 0x40b087: mov r9d, dword ptr [rbp-0x44]
    new instr:0x7fb0666dbe73: mov r9d, dword ptr [rbp-0x44]
old instr: 0x40b08b: mov r8d, dword ptr [rbp-0x40]
    new instr:0x7fb0666dbe77: mov r8d, dword ptr [rbp-0x40]
old instr: 0x40b08f: mov ecx, dword ptr [rbp-0x57c]
    new instr:0x7fb0666dbe7b: mov ecx, dword ptr [rbp-0x57c]
old instr: 0x40b095: mov rdx, qword ptr [rbp-0x578]
    new instr:0x7fb0666dbe81: mov rdx, qword ptr [rbp-0x578]
old instr: 0x40b09c: mov rsi, qword ptr [rbp-0x570]
    new instr:0x7fb0666dbe88: mov rsi, qword ptr [rbp-0x570]
old instr: 0x40b0a3: mov rax, qword ptr [rbp-0x568]
    new instr:0x7fb0666dbe8f: mov rax, qword ptr [rbp-0x568]
old instr: 0x40b0aa: mov rdi, qword ptr [rbp+0x18]
    new instr:0x7fb0666dbe96: mov rdi, qword ptr [rbp+0x18]
old instr: 0x40b0ae: mov qword ptr [rsp+0x8], rdi
    new instr:0x7fb0666dbe9a: mov qword ptr [rsp+0x8], rdi
old instr: 0x40b0b3: mov edi, dword ptr [rbp-0x48]
    new instr:0x7fb0666dbe9f: mov edi, dword ptr [rbp-0x48]
old instr: 0x40b0b6: mov dword ptr [rsp], edi
    new instr:0x7fb0666dbea2: mov dword ptr [rsp], edi
old instr: 0x40b0b9: mov rdi, rax
    new instr:0x7fb0666dbea5: mov rdi, rax
old instr: 0x40b81c: add rsp, 0x598
    new instr:0x7fb0666dbea8: add rsp, 0x598
old instr: 0x40b823: pop rbx
    new instr:0x7fb0666dbeaf: pop rbx
old instr: 0x40b824: pop rbp
    new instr:0x7fb0666dbeb0: pop rbp
    new instr:0x7fb0666dbeb1: add rsp, 0x8
40c1d6
old instr: 0x40c1d6: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbeb5: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c1d9: cdqe 
    new instr:0x7fb0666dbeb8: cdqe 
old instr: 0x40c1db: movzx eax, byte ptr [rbp+rax*1-0x560]
    new instr:0x7fb0666dbeba: movzx eax, byte ptr [rbp+rax*1-0x560]
old instr: 0x40c1e3: test al, al
    new instr:0x7fb0666dbec2: test al, al
in revert 
    new instr:0x7fb0666dbec4: jnz 0x7fb0666dbed0
40c1f1
old instr: 0x40c1f1: mov dword ptr [rbp-0x18], 0x0
    new instr:0x7fb0666dbec6: mov dword ptr [rbp-0x18], 0x0
in revert 
removing jump and inserting a dummy entry 
40c272
old instr: 0x40c272: cmp dword ptr [rbp-0x18], 0xff
    new instr:0x7fb0666dbecd: cmp dword ptr [rbp-0x18], 0xff
in revert 
    new instr:0x7fb0666dbed4: jnle 0x7fb0666dbe55
40c1fa
old instr: 0x40c1fa: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbeda: mov eax, dword ptr [rbp-0x18]
40c634
old instr: 0x40c634: cmp dword ptr [rbp-0xd88], 0x3
    new instr:0x7fb0666dbedd: cmp dword ptr [rbp-0xd88], 0x3
in revert 
    new instr:0x7fb0666dbee4: jnle 0x7fb0666dbf18
40c66f
old instr: 0x40c66f: add rsp, 0xd98
    new instr:0x7fb0666dbee6: add rsp, 0xd98
old instr: 0x40c676: pop rbx
    new instr:0x7fb0666dbeed: pop rbx
old instr: 0x40c677: pop rbp
    new instr:0x7fb0666dbeee: pop rbp
old instr: 0x40c678: ret 
    new instr:0x7fb0666dbeef: ret 
40c27f
old instr: 0x40c27f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbef0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c282: shl eax, 0x8
    new instr:0x7fb0666dbef3: shl eax, 0x8
old instr: 0x40c285: cdqe 
    new instr:0x7fb0666dbef6: cdqe 
old instr: 0x40c287: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbef8: lea rdx, ptr [rax*4]
old instr: 0x40c28f: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbf00: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c296: add rax, rdx
    new instr:0x7fb0666dbf07: add rax, rdx
old instr: 0x40c299: mov eax, dword ptr [rax]
    new instr:0x7fb0666dbf0a: mov eax, dword ptr [rax]
old instr: 0x40c29b: and eax, 0xffdfffff
    new instr:0x7fb0666dbf0c: and eax, 0xffdfffff
old instr: 0x40c2a0: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666dbf11: mov dword ptr [rbp-0x18], eax
in revert 
removing jump and inserting a dummy entry 
40c33f
old instr: 0x40c33f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbf14: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c342: cdqe 
    new instr:0x7fb0666dbf17: cdqe 
old instr: 0x40c344: mov eax, dword ptr [rbp+rax*4-0x960]
    new instr:0x7fb0666dbf19: mov eax, dword ptr [rbp+rax*4-0x960]
old instr: 0x40c34b: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbf20: cmp eax, dword ptr [rbp-0x18]
old instr: 0x40c34e: jnle 0x40c2a8
    new instr:0x7fb0666dbf23: jnle 0x7fb0666dbe7d
inserted instruction
40c354
old instr: 0x40c354: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbf29: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c357: add eax, 0x1
    new instr:0x7fb0666dbf2c: add eax, 0x1
old instr: 0x40c35a: shl eax, 0x8
    new instr:0x7fb0666dbf2f: shl eax, 0x8
old instr: 0x40c35d: cdqe 
    new instr:0x7fb0666dbf32: cdqe 
old instr: 0x40c35f: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbf34: lea rdx, ptr [rax*4]
old instr: 0x40c367: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dbf3c: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c36e: add rax, rdx
    new instr:0x7fb0666dbf43: add rax, rdx
old instr: 0x40c371: mov eax, dword ptr [rax]
    new instr:0x7fb0666dbf46: mov eax, dword ptr [rax]
old instr: 0x40c373: and eax, 0xffdfffff
    new instr:0x7fb0666dbf48: and eax, 0xffdfffff
old instr: 0x40c378: sub eax, 0x1
    new instr:0x7fb0666dbf4d: sub eax, 0x1
old instr: 0x40c37b: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666dbf50: mov dword ptr [rbp-0x18], eax
in revert 
removing jump and inserting a dummy entry 
40c41a
old instr: 0x40c41a: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbf53: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c41d: cdqe 
    new instr:0x7fb0666dbf56: cdqe 
old instr: 0x40c41f: mov eax, dword ptr [rbp+rax*4-0xd60]
    new instr:0x7fb0666dbf58: mov eax, dword ptr [rbp+rax*4-0xd60]
old instr: 0x40c426: cmp eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbf5f: cmp eax, dword ptr [rbp-0x18]
old instr: 0x40c429: jl 0x40c383
    new instr:0x7fb0666dbf62: jl 0x7fb0666dbebc
inserted instruction
40c42f
old instr: 0x40c42f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbf68: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c432: cdqe 
    new instr:0x7fb0666dbf6b: cdqe 
old instr: 0x40c434: mov eax, dword ptr [rbp+rax*4-0x960]
    new instr:0x7fb0666dbf6d: mov eax, dword ptr [rbp+rax*4-0x960]
old instr: 0x40c43b: lea edx, ptr [rax-0x1]
    new instr:0x7fb0666dbf74: lea edx, ptr [rax-0x1]
old instr: 0x40c43e: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dbf77: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c441: cdqe 
    new instr:0x7fb0666dbf7a: cdqe 
old instr: 0x40c443: mov eax, dword ptr [rbp+rax*4-0xd60]
    new instr:0x7fb0666dbf7c: mov eax, dword ptr [rbp+rax*4-0xd60]
old instr: 0x40c44a: cmp edx, eax
    new instr:0x7fb0666dbf83: cmp edx, eax
in revert 
    new instr:0x7fb0666dbf85: jnz 0x7fb0666dbfba
40c481
old instr: 0x40c481: mov dword ptr [rbp-0x18], 0x0
    new instr:0x7fb0666dbf87: mov dword ptr [rbp-0x18], 0x0
in revert 
removing jump and inserting a dummy entry 
40c4db
old instr: 0x40c4db: cmp dword ptr [rbp-0x18], 0xff
    new instr:0x7fb0666dbf8e: cmp dword ptr [rbp-0x18], 0xff
in revert 
    new instr:0x7fb0666dbf95: jnle 0x7fb0666dbf3d
40c48a
old instr: 0x40c48a: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbf97: mov eax, dword ptr [rbp-0x18]
40c383
old instr: 0x40c383: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbf9a: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c386: cdqe 
    new instr:0x7fb0666dbf9d: cdqe 
old instr: 0x40c388: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbf9f: lea rdx, ptr [rax*4]
old instr: 0x40c390: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7fb0666dbfa7: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40c397: add rax, rdx
    new instr:0x7fb0666dbfae: add rax, rdx
old instr: 0x40c39a: mov eax, dword ptr [rax]
    new instr:0x7fb0666dbfb1: mov eax, dword ptr [rax]
old instr: 0x40c39c: sub eax, 0x1
    new instr:0x7fb0666dbfb3: sub eax, 0x1
old instr: 0x40c39f: mov dword ptr [rbp-0x1c], eax
    new instr:0x7fb0666dbfb6: mov dword ptr [rbp-0x1c], eax
old instr: 0x40c3a2: cmp dword ptr [rbp-0x1c], 0x0
    new instr:0x7fb0666dbfb9: cmp dword ptr [rbp-0x1c], 0x0
in revert 
    new instr:0x7fb0666dbfbd: js 0x7fb0666dbfc8
40c3b1
old instr: 0x40c3b1: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7fb0666dbfbf: mov eax, dword ptr [rbp-0x1c]
old instr: 0x40c3b4: movsxd rdx, eax
    new instr:0x7fb0666dbfc2: movsxd rdx, eax
old instr: 0x40c3b7: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666dbfc5: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40c3be: add rax, rdx
    new instr:0x7fb0666dbfcc: add rax, rdx
old instr: 0x40c3c1: movzx eax, byte ptr [rax]
    new instr:0x7fb0666dbfcf: movzx eax, byte ptr [rax]
old instr: 0x40c3c4: mov byte ptr [rbp-0x41], al
    new instr:0x7fb0666dbfd2: mov byte ptr [rbp-0x41], al
old instr: 0x40c3c7: movzx eax, byte ptr [rbp-0x41]
    new instr:0x7fb0666dbfd5: movzx eax, byte ptr [rbp-0x41]
old instr: 0x40c3cb: cdqe 
    new instr:0x7fb0666dbfd9: cdqe 
old instr: 0x40c3cd: movzx eax, byte ptr [rbp+rax*1-0x560]
    new instr:0x7fb0666dbfdb: movzx eax, byte ptr [rbp+rax*1-0x560]
old instr: 0x40c3d5: test al, al
    new instr:0x7fb0666dbfe3: test al, al
in revert 
    new instr:0x7fb0666dbfe5: jz 0x7fb0666dc024
40c416
old instr: 0x40c416: sub dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666dbfe7: sub dword ptr [rbp-0x18], 0x1
40c3d9
old instr: 0x40c3d9: movzx eax, byte ptr [rbp-0x41]
    new instr:0x7fb0666dbfeb: movzx eax, byte ptr [rbp-0x41]
40c2a8
old instr: 0x40c2a8: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dbfef: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c2ab: cdqe 
    new instr:0x7fb0666dbff2: cdqe 
old instr: 0x40c2ad: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dbff4: lea rdx, ptr [rax*4]
old instr: 0x40c2b5: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7fb0666dbffc: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40c2bc: add rax, rdx
    new instr:0x7fb0666dc003: add rax, rdx
old instr: 0x40c2bf: mov eax, dword ptr [rax]
    new instr:0x7fb0666dc006: mov eax, dword ptr [rax]
old instr: 0x40c2c1: sub eax, 0x1
    new instr:0x7fb0666dc008: sub eax, 0x1
old instr: 0x40c2c4: mov dword ptr [rbp-0x1c], eax
    new instr:0x7fb0666dc00b: mov dword ptr [rbp-0x1c], eax
old instr: 0x40c2c7: cmp dword ptr [rbp-0x1c], 0x0
    new instr:0x7fb0666dc00e: cmp dword ptr [rbp-0x1c], 0x0
in revert 
    new instr:0x7fb0666dc012: js 0x7fb0666dc01d
40c2d6
old instr: 0x40c2d6: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7fb0666dc014: mov eax, dword ptr [rbp-0x1c]
old instr: 0x40c2d9: movsxd rdx, eax
    new instr:0x7fb0666dc017: movsxd rdx, eax
old instr: 0x40c2dc: mov rax, qword ptr [rbp-0xd70]
    new instr:0x7fb0666dc01a: mov rax, qword ptr [rbp-0xd70]
old instr: 0x40c2e3: add rax, rdx
    new instr:0x7fb0666dc021: add rax, rdx
old instr: 0x40c2e6: movzx eax, byte ptr [rax]
    new instr:0x7fb0666dc024: movzx eax, byte ptr [rax]
old instr: 0x40c2e9: mov byte ptr [rbp-0x41], al
    new instr:0x7fb0666dc027: mov byte ptr [rbp-0x41], al
old instr: 0x40c2ec: movzx eax, byte ptr [rbp-0x41]
    new instr:0x7fb0666dc02a: movzx eax, byte ptr [rbp-0x41]
old instr: 0x40c2f0: cdqe 
    new instr:0x7fb0666dc02e: cdqe 
old instr: 0x40c2f2: movzx eax, byte ptr [rbp+rax*1-0x560]
    new instr:0x7fb0666dc030: movzx eax, byte ptr [rbp+rax*1-0x560]
old instr: 0x40c2fa: test al, al
    new instr:0x7fb0666dc038: test al, al
old instr: 0x40c2fc: jnz 0x40c33b
    new instr:0x7fb0666dc03a: jnz 0x7fb0666dc079
inserted instruction
40c2fe
old instr: 0x40c2fe: movzx eax, byte ptr [rbp-0x41]
    new instr:0x7fb0666dc03c: movzx eax, byte ptr [rbp-0x41]
40c33b
old instr: 0x40c33b: add dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666dc040: add dword ptr [rbp-0x18], 0x1
40c2cd
old instr: 0x40c2cd: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7fb0666dc044: mov eax, dword ptr [rbp-0xd84]
40c3a8
old instr: 0x40c3a8: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7fb0666dc04a: mov eax, dword ptr [rbp-0xd84]
40c63d
old instr: 0x40c63d: mov eax, dword ptr [rbp-0x20]
    new instr:0x7fb0666dc050: mov eax, dword ptr [rbp-0x20]
old instr: 0x40c640: mov edx, dword ptr [rbp-0xd84]
    new instr:0x7fb0666dc053: mov edx, dword ptr [rbp-0xd84]
old instr: 0x40c646: mov esi, edx
    new instr:0x7fb0666dc059: mov esi, edx
old instr: 0x40c648: sub esi, eax
    new instr:0x7fb0666dc05b: sub esi, eax
old instr: 0x40c64a: mov rax, qword ptr [rip+0x210c5f]
    new instr:0x7fb0666dc05d: mov rax, qword ptr [rip+0x210c5f]
old instr: 0x40c651: mov ecx, dword ptr [rbp-0x20]
    new instr:0x7fb0666dc064: mov ecx, dword ptr [rbp-0x20]
old instr: 0x40c654: mov edx, dword ptr [rbp-0xd84]
    new instr:0x7fb0666dc067: mov edx, dword ptr [rbp-0xd84]
old instr: 0x40c65a: mov r8d, esi
    new instr:0x7fb0666dc06d: mov r8d, esi
old instr: 0x40c65d: mov esi, 0x41aba0
    new instr:0x7fb0666dc070: mov esi, 0x41aba0
old instr: 0x40c662: mov rdi, rax
    new instr:0x7fb0666dc075: mov rdi, rax
old instr: 0x40c665: mov eax, 0x0
    new instr:0x7fb0666dc078: mov eax, 0x0
40c44e
old instr: 0x40c44e: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc07d: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c451: cdqe 
    new instr:0x7fb0666dc080: cdqe 
old instr: 0x40c453: mov eax, dword ptr [rbp+rax*4-0x960]
    new instr:0x7fb0666dc082: mov eax, dword ptr [rbp+rax*4-0x960]
old instr: 0x40c45a: test eax, eax
    new instr:0x7fb0666dc089: test eax, eax
old instr: 0x40c45c: jnz 0x40c477
    new instr:0x7fb0666dc08b: jnz 0x7fb0666dc0a6
inserted instruction
add jump to 
    new instr:0x7fb0666dc08d: jmp 0x7fb066ae84f0
40c4e4
old instr: 0x40c4e4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc092: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c4e7: cdqe 
    new instr:0x7fb0666dc095: cdqe 
old instr: 0x40c4e9: mov byte ptr [rbp+rax*1-0x560], 0x1
    new instr:0x7fb0666dc097: mov byte ptr [rbp+rax*1-0x560], 0x1
old instr: 0x40c4f1: cmp dword ptr [rbp-0x14], 0xfe
    new instr:0x7fb0666dc09f: cmp dword ptr [rbp-0x14], 0xfe
old instr: 0x40c4f8: jnle 0x40c623
    new instr:0x7fb0666dc0a6: jnle 0x7fb0666dc1d1
inserted instruction
40c4fe
old instr: 0x40c4fe: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc0ac: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c501: shl eax, 0x8
    new instr:0x7fb0666dc0af: shl eax, 0x8
old instr: 0x40c504: cdqe 
    new instr:0x7fb0666dc0b2: cdqe 
old instr: 0x40c506: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dc0b4: lea rdx, ptr [rax*4]
old instr: 0x40c50e: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dc0bc: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c515: add rax, rdx
    new instr:0x7fb0666dc0c3: add rax, rdx
old instr: 0x40c518: mov eax, dword ptr [rax]
    new instr:0x7fb0666dc0c6: mov eax, dword ptr [rax]
old instr: 0x40c51a: and eax, 0xffdfffff
    new instr:0x7fb0666dc0c8: and eax, 0xffdfffff
old instr: 0x40c51f: mov dword ptr [rbp-0x48], eax
    new instr:0x7fb0666dc0cd: mov dword ptr [rbp-0x48], eax
old instr: 0x40c522: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc0d0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c525: add eax, 0x1
    new instr:0x7fb0666dc0d3: add eax, 0x1
old instr: 0x40c528: shl eax, 0x8
    new instr:0x7fb0666dc0d6: shl eax, 0x8
old instr: 0x40c52b: cdqe 
    new instr:0x7fb0666dc0d9: cdqe 
old instr: 0x40c52d: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dc0db: lea rdx, ptr [rax*4]
old instr: 0x40c535: mov rax, qword ptr [rbp-0xd80]
    new instr:0x7fb0666dc0e3: mov rax, qword ptr [rbp-0xd80]
old instr: 0x40c53c: add rax, rdx
    new instr:0x7fb0666dc0ea: add rax, rdx
old instr: 0x40c53f: mov eax, dword ptr [rax]
    new instr:0x7fb0666dc0ed: mov eax, dword ptr [rax]
old instr: 0x40c541: mov edx, eax
    new instr:0x7fb0666dc0ef: mov edx, eax
old instr: 0x40c543: and edx, 0xffdfffff
    new instr:0x7fb0666dc0f1: and edx, 0xffdfffff
old instr: 0x40c549: mov eax, dword ptr [rbp-0x48]
    new instr:0x7fb0666dc0f7: mov eax, dword ptr [rbp-0x48]
old instr: 0x40c54c: mov ecx, edx
    new instr:0x7fb0666dc0fa: mov ecx, edx
old instr: 0x40c54e: sub ecx, eax
    new instr:0x7fb0666dc0fc: sub ecx, eax
old instr: 0x40c550: mov eax, ecx
    new instr:0x7fb0666dc0fe: mov eax, ecx
old instr: 0x40c552: mov dword ptr [rbp-0x4c], eax
    new instr:0x7fb0666dc100: mov dword ptr [rbp-0x4c], eax
old instr: 0x40c555: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fb0666dc103: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
40c562
old instr: 0x40c562: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc10a: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40c565: mov edx, dword ptr [rbp-0x4c]
    new instr:0x7fb0666dc10d: mov edx, dword ptr [rbp-0x4c]
old instr: 0x40c568: mov ebx, edx
    new instr:0x7fb0666dc110: mov ebx, edx
old instr: 0x40c56a: mov ecx, eax
    new instr:0x7fb0666dc112: mov ecx, eax
old instr: 0x40c56c: sar ebx, cl
    new instr:0x7fb0666dc114: sar ebx, cl
old instr: 0x40c56e: mov eax, ebx
    new instr:0x7fb0666dc116: mov eax, ebx
old instr: 0x40c570: cmp eax, 0xfffe
    new instr:0x7fb0666dc118: cmp eax, 0xfffe
old instr: 0x40c575: jnle 0x40c55e
    new instr:0x7fb0666dc11d: jnle 0x7fb0666dc106
inserted instruction
40c577
old instr: 0x40c577: mov eax, dword ptr [rbp-0x4c]
    new instr:0x7fb0666dc11f: mov eax, dword ptr [rbp-0x4c]
old instr: 0x40c57a: sub eax, 0x1
    new instr:0x7fb0666dc122: sub eax, 0x1
old instr: 0x40c57d: mov dword ptr [rbp-0x18], eax
    new instr:0x7fb0666dc125: mov dword ptr [rbp-0x18], eax
in revert 
removing jump and inserting a dummy entry 
40c5fb
old instr: 0x40c5fb: cmp dword ptr [rbp-0x18], 0x0
    new instr:0x7fb0666dc128: cmp dword ptr [rbp-0x18], 0x0
old instr: 0x40c5ff: jns 0x40c582
    new instr:0x7fb0666dc12c: jns 0x7fb0666dc0af
inserted instruction
40c601
old instr: 0x40c601: mov eax, dword ptr [rbp-0x4c]
    new instr:0x7fb0666dc12e: mov eax, dword ptr [rbp-0x4c]
old instr: 0x40c604: lea edx, ptr [rax-0x1]
    new instr:0x7fb0666dc131: lea edx, ptr [rax-0x1]
old instr: 0x40c607: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc134: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40c60a: mov ebx, edx
    new instr:0x7fb0666dc137: mov ebx, edx
old instr: 0x40c60c: mov ecx, eax
    new instr:0x7fb0666dc139: mov ecx, eax
old instr: 0x40c60e: sar ebx, cl
    new instr:0x7fb0666dc13b: sar ebx, cl
old instr: 0x40c610: mov eax, ebx
    new instr:0x7fb0666dc13d: mov eax, ebx
old instr: 0x40c612: cmp eax, 0xffff
    new instr:0x7fb0666dc13f: cmp eax, 0xffff
in revert 
    new instr:0x7fb0666dc144: jnle 0x7fb0666dc150
40c623
old instr: 0x40c623: add dword ptr [rbp-0x14], 0x1
    new instr:0x7fb0666dc146: add dword ptr [rbp-0x14], 0x1
40c582
old instr: 0x40c582: mov eax, dword ptr [rbp-0x18]
    new instr:0x7fb0666dc14a: mov eax, dword ptr [rbp-0x18]
old instr: 0x40c585: mov edx, dword ptr [rbp-0x48]
    new instr:0x7fb0666dc14d: mov edx, dword ptr [rbp-0x48]
old instr: 0x40c588: add eax, edx
    new instr:0x7fb0666dc150: add eax, edx
old instr: 0x40c58a: cdqe 
    new instr:0x7fb0666dc152: cdqe 
old instr: 0x40c58c: lea rdx, ptr [rax*4]
    new instr:0x7fb0666dc154: lea rdx, ptr [rax*4]
old instr: 0x40c594: mov rax, qword ptr [rbp-0xd68]
    new instr:0x7fb0666dc15c: mov rax, qword ptr [rbp-0xd68]
old instr: 0x40c59b: add rax, rdx
    new instr:0x7fb0666dc163: add rax, rdx
old instr: 0x40c59e: mov eax, dword ptr [rax]
    new instr:0x7fb0666dc166: mov eax, dword ptr [rax]
old instr: 0x40c5a0: mov dword ptr [rbp-0x50], eax
    new instr:0x7fb0666dc168: mov dword ptr [rbp-0x50], eax
old instr: 0x40c5a3: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc16b: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40c5a6: mov edx, dword ptr [rbp-0x18]
    new instr:0x7fb0666dc16e: mov edx, dword ptr [rbp-0x18]
old instr: 0x40c5a9: mov ebx, edx
    new instr:0x7fb0666dc171: mov ebx, edx
old instr: 0x40c5ab: mov ecx, eax
    new instr:0x7fb0666dc173: mov ecx, eax
old instr: 0x40c5ad: sar ebx, cl
    new instr:0x7fb0666dc175: sar ebx, cl
old instr: 0x40c5af: mov eax, ebx
    new instr:0x7fb0666dc177: mov eax, ebx
old instr: 0x40c5b1: mov word ptr [rbp-0x52], ax
    new instr:0x7fb0666dc179: mov word ptr [rbp-0x52], ax
old instr: 0x40c5b5: mov eax, dword ptr [rbp-0x50]
    new instr:0x7fb0666dc17d: mov eax, dword ptr [rbp-0x50]
old instr: 0x40c5b8: cdqe 
    new instr:0x7fb0666dc180: cdqe 
old instr: 0x40c5ba: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dc182: lea rdx, ptr [rax+rax*1]
old instr: 0x40c5be: mov rax, qword ptr [rbp-0xd78]
    new instr:0x7fb0666dc186: mov rax, qword ptr [rbp-0xd78]
old instr: 0x40c5c5: add rdx, rax
    new instr:0x7fb0666dc18d: add rdx, rax
old instr: 0x40c5c8: movzx eax, word ptr [rbp-0x52]
    new instr:0x7fb0666dc190: movzx eax, word ptr [rbp-0x52]
old instr: 0x40c5cc: mov word ptr [rdx], ax
    new instr:0x7fb0666dc194: mov word ptr [rdx], ax
old instr: 0x40c5cf: cmp dword ptr [rbp-0x50], 0x21
    new instr:0x7fb0666dc197: cmp dword ptr [rbp-0x50], 0x21
in revert 
    new instr:0x7fb0666dc19b: jle 0x7fb0666dc1bf
40c5f7
old instr: 0x40c5f7: sub dword ptr [rbp-0x18], 0x1
    new instr:0x7fb0666dc19d: sub dword ptr [rbp-0x18], 0x1
40c5d5
old instr: 0x40c5d5: mov eax, dword ptr [rbp-0xd84]
    new instr:0x7fb0666dc1a1: mov eax, dword ptr [rbp-0xd84]
40c55e
old instr: 0x40c55e: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7fb0666dc1a7: add dword ptr [rbp-0x2c], 0x1
40c0fa
old instr: 0x40c0fa: mov eax, dword ptr [rbp-0x3c]
    new instr:0x7fb0666dc1ab: mov eax, dword ptr [rbp-0x3c]
old instr: 0x40c0fd: mov edx, dword ptr [rbp-0x40]
    new instr:0x7fb0666dc1ae: mov edx, dword ptr [rbp-0x40]
old instr: 0x40c100: mov ecx, edx
    new instr:0x7fb0666dc1b1: mov ecx, edx
old instr: 0x40c102: sub ecx, eax
    new instr:0x7fb0666dc1b3: sub ecx, eax
old instr: 0x40c104: mov eax, ecx
    new instr:0x7fb0666dc1b5: mov eax, ecx
old instr: 0x40c106: lea edi, ptr [rax+0x1]
    new instr:0x7fb0666dc1b7: lea edi, ptr [rax+0x1]
old instr: 0x40c109: mov ecx, dword ptr [rbp-0x18]
    new instr:0x7fb0666dc1ba: mov ecx, dword ptr [rbp-0x18]
old instr: 0x40c10c: mov edx, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc1bd: mov edx, dword ptr [rbp-0x34]
old instr: 0x40c10f: mov rax, qword ptr [rip+0x21119a]
    new instr:0x7fb0666dc1c0: mov rax, qword ptr [rip+0x21119a]
old instr: 0x40c116: mov esi, dword ptr [rbp-0x20]
    new instr:0x7fb0666dc1c7: mov esi, dword ptr [rbp-0x20]
old instr: 0x40c119: mov r9d, edi
    new instr:0x7fb0666dc1ca: mov r9d, edi
old instr: 0x40c11c: mov r8d, esi
    new instr:0x7fb0666dc1cd: mov r8d, esi
old instr: 0x40c11f: mov esi, 0x41ab70
    new instr:0x7fb0666dc1d0: mov esi, 0x41ab70
old instr: 0x40c124: mov rdi, rax
    new instr:0x7fb0666dc1d5: mov rdi, rax
old instr: 0x40c127: mov eax, 0x0
    new instr:0x7fb0666dc1d8: mov eax, 0x0
40c1e7
old instr: 0x40c1e7: mov edi, 0x3ee
    new instr:0x7fb0666dc1dd: mov edi, 0x3ee
40c619
old instr: 0x40c619: mov edi, 0x3ea
    new instr:0x7fb0666dc1e2: mov edi, 0x3ea
rtn name: mainSort : 1
1
40cb2c
old instr: 0x40cb2c: push rbp
    new instr:0x7fb0666dc1e7: push rbp
old instr: 0x40cb2d: mov rbp, rsp
    new instr:0x7fb0666dc1e8: mov rbp, rsp
old instr: 0x40cb30: push r14
    new instr:0x7fb0666dc1eb: push r14
old instr: 0x40cb32: push r13
    new instr:0x7fb0666dc1ed: push r13
old instr: 0x40cb34: push r12
    new instr:0x7fb0666dc1ef: push r12
old instr: 0x40cb36: push rbx
    new instr:0x7fb0666dc1f1: push rbx
old instr: 0x40cb37: sub rsp, 0x138
    new instr:0x7fb0666dc1f2: sub rsp, 0x138
old instr: 0x40cb3e: mov qword ptr [rbp-0x158], rdi
    new instr:0x7fb0666dc1f9: mov qword ptr [rbp-0x158], rdi
old instr: 0x40cb45: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fb0666dc200: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb4c: mov rax, qword ptr [rax+0x38]
    new instr:0x7fb0666dc207: mov rax, qword ptr [rax+0x38]
old instr: 0x40cb50: mov qword ptr [rbp-0x38], rax
    new instr:0x7fb0666dc20b: mov qword ptr [rbp-0x38], rax
old instr: 0x40cb54: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fb0666dc20f: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb5b: mov rax, qword ptr [rax+0x40]
    new instr:0x7fb0666dc216: mov rax, qword ptr [rax+0x40]
old instr: 0x40cb5f: mov qword ptr [rbp-0x40], rax
    new instr:0x7fb0666dc21a: mov qword ptr [rbp-0x40], rax
old instr: 0x40cb63: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fb0666dc21e: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb6a: mov rax, qword ptr [rax+0x48]
    new instr:0x7fb0666dc225: mov rax, qword ptr [rax+0x48]
old instr: 0x40cb6e: mov qword ptr [rbp-0x48], rax
    new instr:0x7fb0666dc229: mov qword ptr [rbp-0x48], rax
old instr: 0x40cb72: mov rax, qword ptr [rbp-0x158]
    new instr:0x7fb0666dc22d: mov rax, qword ptr [rbp-0x158]
old instr: 0x40cb79: mov rdi, rax
    new instr:0x7fb0666dc234: mov rdi, rax
rtn name: generateMTFValues : 2
bb
40ceee
old instr: 0x40ceee: push rbp
    new instr:0x7fb0666dc237: push rbp
old instr: 0x40ceef: mov rbp, rsp
    new instr:0x7fb0666dc238: mov rbp, rsp
old instr: 0x40cef2: push r14
    new instr:0x7fb0666dc23b: push r14
old instr: 0x40cef4: push r13
    new instr:0x7fb0666dc23d: push r13
old instr: 0x40cef6: push r12
    new instr:0x7fb0666dc23f: push r12
old instr: 0x40cef8: push rbx
    new instr:0x7fb0666dc241: push rbx
old instr: 0x40cef9: sub rsp, 0xe0
    new instr:0x7fb0666dc242: sub rsp, 0xe0
old instr: 0x40cf00: mov qword ptr [rbp-0xf8], rdi
    new instr:0x7fb0666dc249: mov qword ptr [rbp-0xf8], rdi
old instr: 0x40cf07: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc250: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf0e: mov rax, qword ptr [rax+0x48]
    new instr:0x7fb0666dc257: mov rax, qword ptr [rax+0x48]
old instr: 0x40cf12: mov qword ptr [rbp-0x78], rax
    new instr:0x7fb0666dc25b: mov qword ptr [rbp-0x78], rax
old instr: 0x40cf16: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc25f: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf1d: mov eax, dword ptr [rax+0x290]
    new instr:0x7fb0666dc266: mov eax, dword ptr [rax+0x290]
old instr: 0x40cf23: cmp eax, 0x2
    new instr:0x7fb0666dc26c: cmp eax, 0x2
in revert 
    new instr:0x7fb0666dc26f: jnle 0x7fb0666dc2ae
40cf65
old instr: 0x40cf65: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc271: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf6c: mov eax, dword ptr [rax+0x7c]
    new instr:0x7fb0666dc278: mov eax, dword ptr [rax+0x7c]
old instr: 0x40cf6f: add eax, 0x2
    new instr:0x7fb0666dc27b: add eax, 0x2
old instr: 0x40cf72: mov dword ptr [rbp-0x7c], eax
    new instr:0x7fb0666dc27e: mov dword ptr [rbp-0x7c], eax
old instr: 0x40cf75: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666dc281: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40cfc6
old instr: 0x40cfc6: cmp dword ptr [rbp-0x28], 0x5
    new instr:0x7fb0666dc288: cmp dword ptr [rbp-0x28], 0x5
in revert 
    new instr:0x7fb0666dc28c: jnle 0x7fb0666dc240
40cf7e
old instr: 0x40cf7e: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7fb0666dc28e: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40cfba
old instr: 0x40cfba: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dc295: mov eax, dword ptr [rbp-0x24]
old instr: 0x40cfbd: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7fb0666dc298: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7fb0666dc29b: jnl 0x7fb0666dc262
40cf87
old instr: 0x40cf87: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc29d: mov rcx, qword ptr [rbp-0xf8]
40cf28
old instr: 0x40cf28: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc2a4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf2f: mov esi, dword ptr [rax+0x7c]
    new instr:0x7fb0666dc2ab: mov esi, dword ptr [rax+0x7c]
old instr: 0x40cf32: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc2ae: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf39: mov ecx, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc2b5: mov ecx, dword ptr [rax+0x29c]
old instr: 0x40cf3f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc2bb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cf46: mov edx, dword ptr [rax+0x6c]
    new instr:0x7fb0666dc2c2: mov edx, dword ptr [rax+0x6c]
old instr: 0x40cf49: mov rax, qword ptr [rip+0x210360]
    new instr:0x7fb0666dc2c5: mov rax, qword ptr [rip+0x210360]
old instr: 0x40cf50: mov r8d, esi
    new instr:0x7fb0666dc2cc: mov r8d, esi
old instr: 0x40cf53: mov esi, 0x41ac38
    new instr:0x7fb0666dc2cf: mov esi, 0x41ac38
old instr: 0x40cf58: mov rdi, rax
    new instr:0x7fb0666dc2d4: mov rdi, rax
old instr: 0x40cf5b: mov eax, 0x0
    new instr:0x7fb0666dc2d7: mov eax, 0x0
40cfc2
old instr: 0x40cfc2: add dword ptr [rbp-0x28], 0x1
    new instr:0x7fb0666dc2dc: add dword ptr [rbp-0x28], 0x1
40cfcc
old instr: 0x40cfcc: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc2e0: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cfd3: mov eax, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc2e7: mov eax, dword ptr [rax+0x29c]
old instr: 0x40cfd9: test eax, eax
    new instr:0x7fb0666dc2ed: test eax, eax
in revert 
    new instr:0x7fb0666dc2ef: jle 0x7fb0666dc2fb
40cfe7
old instr: 0x40cfe7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc2f1: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40cfee: mov eax, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc2f8: mov eax, dword ptr [rax+0x29c]
old instr: 0x40cff4: cmp eax, 0xc7
    new instr:0x7fb0666dc2fe: cmp eax, 0xc7
in revert 
    new instr:0x7fb0666dc303: jle 0x7fb0666dc30e
40d004
old instr: 0x40d004: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc305: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d00b: mov eax, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc30c: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d011: cmp eax, 0x257
    new instr:0x7fb0666dc312: cmp eax, 0x257
in revert 
    new instr:0x7fb0666dc317: jle 0x7fb0666dc322
40d021
old instr: 0x40d021: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc319: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d028: mov eax, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc320: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d02e: cmp eax, 0x4af
    new instr:0x7fb0666dc326: cmp eax, 0x4af
in revert 
    new instr:0x7fb0666dc32b: jle 0x7fb0666dc336
40d03e
old instr: 0x40d03e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc32d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d045: mov eax, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc334: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d04b: cmp eax, 0x95f
    new instr:0x7fb0666dc33a: cmp eax, 0x95f
in revert 
    new instr:0x7fb0666dc33f: jle 0x7fb0666dc34a
40d05b
old instr: 0x40d05b: mov dword ptr [rbp-0x5c], 0x6
    new instr:0x7fb0666dc341: mov dword ptr [rbp-0x5c], 0x6
old instr: 0x40d062: mov eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666dc348: mov eax, dword ptr [rbp-0x5c]
old instr: 0x40d065: mov dword ptr [rbp-0x60], eax
    new instr:0x7fb0666dc34b: mov dword ptr [rbp-0x60], eax
old instr: 0x40d068: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc34e: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d06f: mov eax, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc355: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d075: mov dword ptr [rbp-0x64], eax
    new instr:0x7fb0666dc35b: mov dword ptr [rbp-0x64], eax
old instr: 0x40d078: mov dword ptr [rbp-0x34], 0x0
    new instr:0x7fb0666dc35e: mov dword ptr [rbp-0x34], 0x0
in revert 
removing jump and inserting a dummy entry 
40d23c
old instr: 0x40d23c: cmp dword ptr [rbp-0x60], 0x0
    new instr:0x7fb0666dc365: cmp dword ptr [rbp-0x60], 0x0
in revert 
    new instr:0x7fb0666dc369: jle 0x7fb0666dc1ad
40d084
old instr: 0x40d084: mov eax, dword ptr [rbp-0x64]
    new instr:0x7fb0666dc36f: mov eax, dword ptr [rbp-0x64]
old instr: 0x40d087: mov edx, eax
    new instr:0x7fb0666dc372: mov edx, eax
old instr: 0x40d089: sar edx, 0x1f
    new instr:0x7fb0666dc374: sar edx, 0x1f
old instr: 0x40d08c: idiv dword ptr [rbp-0x60]
    new instr:0x7fb0666dc377: idiv dword ptr [rbp-0x60]
old instr: 0x40d08f: mov dword ptr [rbp-0x80], eax
    new instr:0x7fb0666dc37a: mov dword ptr [rbp-0x80], eax
old instr: 0x40d092: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc37d: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d095: sub eax, 0x1
    new instr:0x7fb0666dc380: sub eax, 0x1
old instr: 0x40d098: mov dword ptr [rbp-0x38], eax
    new instr:0x7fb0666dc383: mov dword ptr [rbp-0x38], eax
old instr: 0x40d09b: mov dword ptr [rbp-0x68], 0x0
    new instr:0x7fb0666dc386: mov dword ptr [rbp-0x68], 0x0
in revert 
removing jump and inserting a dummy entry 
40d0c2
old instr: 0x40d0c2: mov eax, dword ptr [rbp-0x68]
    new instr:0x7fb0666dc38d: mov eax, dword ptr [rbp-0x68]
old instr: 0x40d0c5: cmp eax, dword ptr [rbp-0x80]
    new instr:0x7fb0666dc390: cmp eax, dword ptr [rbp-0x80]
old instr: 0x40d0c8: jnl 0x40d0d5
    new instr:0x7fb0666dc393: jnl 0x7fb0666dc3a0
inserted instruction
40d0ca
old instr: 0x40d0ca: mov eax, dword ptr [rbp-0x7c]
    new instr:0x7fb0666dc395: mov eax, dword ptr [rbp-0x7c]
old instr: 0x40d0cd: sub eax, 0x1
    new instr:0x7fb0666dc398: sub eax, 0x1
old instr: 0x40d0d0: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666dc39b: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7fb0666dc39e: jle 0x7fb0666dc36f
40d0a4
old instr: 0x40d0a4: add dword ptr [rbp-0x38], 0x1
    new instr:0x7fb0666dc3a0: add dword ptr [rbp-0x38], 0x1
40d052
old instr: 0x40d052: mov dword ptr [rbp-0x5c], 0x5
    new instr:0x7fb0666dc3a4: mov dword ptr [rbp-0x5c], 0x5
old instr: 0x40d059: jmp 0x40d062
    new instr:0x7fb0666dc3ab: jmp 0x7fb0666dc3b4
inserted instruction
40d246
old instr: 0x40d246: mov dword ptr [rbp-0x48], 0x0
    new instr:0x7fb0666dc3ad: mov dword ptr [rbp-0x48], 0x0
in revert 
removing jump and inserting a dummy entry 
4104df
old instr: 0x4104df: cmp dword ptr [rbp-0x48], 0x3
    new instr:0x7fb0666dc3b4: cmp dword ptr [rbp-0x48], 0x3
in revert 
    new instr:0x7fb0666dc3b8: jnle 0x7fb0666d9127
40d252
old instr: 0x40d252: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666dc3be: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40d26f
old instr: 0x40d26f: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc3c5: mov eax, dword ptr [rbp-0x28]
old instr: 0x40d272: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666dc3c8: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7fb0666dc3cb: jnl 0x7fb0666dc3b1
40d25b
old instr: 0x40d25b: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc3cd: mov eax, dword ptr [rbp-0x28]
40d0d5
old instr: 0x40d0d5: mov eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666dc3d0: mov eax, dword ptr [rbp-0x38]
old instr: 0x40d0d8: cmp eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc3d3: cmp eax, dword ptr [rbp-0x34]
in revert 
    new instr:0x7fb0666dc3d6: jnle 0x7fb0666dc424
40d129
old instr: 0x40d129: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc3d8: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d130: mov eax, dword ptr [rax+0x290]
    new instr:0x7fb0666dc3df: mov eax, dword ptr [rax+0x290]
old instr: 0x40d136: cmp eax, 0x2
    new instr:0x7fb0666dc3e5: cmp eax, 0x2
in revert 
    new instr:0x7fb0666dc3e8: jnle 0x7fb0666dc447
40d198
old instr: 0x40d198: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7fb0666dc3ea: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40d21d
old instr: 0x40d21d: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dc3f1: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d220: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7fb0666dc3f4: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7fb0666dc3f7: jnl 0x7fb0666dc375
40d1a1
old instr: 0x40d1a1: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dc3fd: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d1a4: cmp eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc400: cmp eax, dword ptr [rbp-0x34]
old instr: 0x40d1a7: jl 0x40d1e6
    new instr:0x7fb0666dc403: jl 0x7fb0666dc442
inserted instruction
40d1a9
old instr: 0x40d1a9: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dc405: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d1ac: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666dc408: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7fb0666dc40b: jle 0x7fb0666dc442
40d1e6
old instr: 0x40d1e6: mov eax, dword ptr [rbp-0x60]
    new instr:0x7fb0666dc40d: mov eax, dword ptr [rbp-0x60]
40d219
old instr: 0x40d219: add dword ptr [rbp-0x24], 0x1
    new instr:0x7fb0666dc410: add dword ptr [rbp-0x24], 0x1
40d1b1
old instr: 0x40d1b1: mov eax, dword ptr [rbp-0x60]
    new instr:0x7fb0666dc414: mov eax, dword ptr [rbp-0x60]
old instr: 0x40d1b4: lea esi, ptr [rax-0x1]
    new instr:0x7fb0666dc417: lea esi, ptr [rax-0x1]
old instr: 0x40d1b7: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc41a: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40d1be: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dc421: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d1c1: movsxd rdx, eax
    new instr:0x7fb0666dc424: movsxd rdx, eax
old instr: 0x40d1c4: movsxd rax, esi
    new instr:0x7fb0666dc427: movsxd rax, esi
old instr: 0x40d1c7: add rax, rax
    new instr:0x7fb0666dc42a: add rax, rax
old instr: 0x40d1ca: mov rsi, rax
    new instr:0x7fb0666dc42d: mov rsi, rax
old instr: 0x40d1cd: shl rsi, 0x7
    new instr:0x7fb0666dc430: shl rsi, 0x7
old instr: 0x40d1d1: add rax, rsi
    new instr:0x7fb0666dc434: add rax, rsi
old instr: 0x40d1d4: add rax, rcx
    new instr:0x7fb0666dc437: add rax, rcx
old instr: 0x40d1d7: add rax, rdx
    new instr:0x7fb0666dc43a: add rax, rdx
old instr: 0x40d1da: add rax, 0x9340
    new instr:0x7fb0666dc43d: add rax, 0x9340
old instr: 0x40d1e0: mov byte ptr [rax+0xc], 0x0
    new instr:0x7fb0666dc443: mov byte ptr [rax+0xc], 0x0
old instr: 0x40d1e4: jmp 0x40d219
    new instr:0x7fb0666dc447: jmp 0x7fb0666dc47c
inserted instruction
40d0dd
old instr: 0x40d0dd: mov eax, dword ptr [rbp-0x60]
    new instr:0x7fb0666dc449: mov eax, dword ptr [rbp-0x60]
old instr: 0x40d0e0: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666dc44c: cmp eax, dword ptr [rbp-0x5c]
old instr: 0x40d0e3: jz 0x40d129
    new instr:0x7fb0666dc44f: jz 0x7fb0666dc495
inserted instruction
40d0e5
old instr: 0x40d0e5: cmp dword ptr [rbp-0x60], 0x1
    new instr:0x7fb0666dc451: cmp dword ptr [rbp-0x60], 0x1
old instr: 0x40d0e9: jz 0x40d129
    new instr:0x7fb0666dc455: jz 0x7fb0666dc495
inserted instruction
40d0eb
old instr: 0x40d0eb: mov eax, dword ptr [rbp-0x60]
    new instr:0x7fb0666dc457: mov eax, dword ptr [rbp-0x60]
old instr: 0x40d0ee: mov edx, dword ptr [rbp-0x5c]
    new instr:0x7fb0666dc45a: mov edx, dword ptr [rbp-0x5c]
old instr: 0x40d0f1: sub edx, eax
    new instr:0x7fb0666dc45d: sub edx, eax
old instr: 0x40d0f3: mov eax, edx
    new instr:0x7fb0666dc45f: mov eax, edx
old instr: 0x40d0f5: sar eax, 0x1f
    new instr:0x7fb0666dc461: sar eax, 0x1f
old instr: 0x40d0f8: shr eax, 0x1f
    new instr:0x7fb0666dc464: shr eax, 0x1f
old instr: 0x40d0fb: add edx, eax
    new instr:0x7fb0666dc467: add edx, eax
old instr: 0x40d0fd: and edx, 0x1
    new instr:0x7fb0666dc469: and edx, 0x1
old instr: 0x40d100: mov ecx, edx
    new instr:0x7fb0666dc46c: mov ecx, edx
old instr: 0x40d102: sub ecx, eax
    new instr:0x7fb0666dc46e: sub ecx, eax
old instr: 0x40d104: mov eax, ecx
    new instr:0x7fb0666dc470: mov eax, ecx
old instr: 0x40d106: cmp eax, 0x1
    new instr:0x7fb0666dc472: cmp eax, 0x1
old instr: 0x40d109: jnz 0x40d129
    new instr:0x7fb0666dc475: jnz 0x7fb0666dc495
inserted instruction
40d10b
old instr: 0x40d10b: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc477: mov rax, qword ptr [rbp-0xf8]
4104e9
old instr: 0x4104e9: cmp dword ptr [rbp-0x5c], 0x7
    new instr:0x7fb0666dc47e: cmp dword ptr [rbp-0x5c], 0x7
in revert 
    new instr:0x7fb0666dc482: jnle 0x7fb0666dc48e
4104f9
old instr: 0x4104f9: cmp dword ptr [rbp-0x4c], 0x7fff
    new instr:0x7fb0666dc484: cmp dword ptr [rbp-0x4c], 0x7fff
old instr: 0x410500: jnle 0x41050b
    new instr:0x7fb0666dc48b: jnle 0x7fb0666dc496
inserted instruction
410502
old instr: 0x410502: cmp dword ptr [rbp-0x4c], 0x4652
    new instr:0x7fb0666dc48d: cmp dword ptr [rbp-0x4c], 0x4652
in revert 
    new instr:0x7fb0666dc494: jnle 0x7fb0666dc4a0
410515
old instr: 0x410515: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fb0666dc496: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
410533
old instr: 0x410533: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc49d: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410536: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666dc4a0: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7fb0666dc4a3: jnl 0x7fb0666dc488
41051e
old instr: 0x41051e: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc4a5: mov eax, dword ptr [rbp-0x2c]
41050b
old instr: 0x41050b: mov edi, 0xbbb
    new instr:0x7fb0666dc4a8: mov edi, 0xbbb
40d018
old instr: 0x40d018: mov dword ptr [rbp-0x5c], 0x3
    new instr:0x7fb0666dc4ad: mov dword ptr [rbp-0x5c], 0x3
old instr: 0x40d01f: jmp 0x40d062
    new instr:0x7fb0666dc4b4: jmp 0x7fb0666dc4f7
inserted instruction
41053b
old instr: 0x41053b: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fb0666dc4b6: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
4105dd
old instr: 0x4105dd: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc4bd: mov eax, dword ptr [rbp-0x2c]
old instr: 0x4105e0: cmp eax, dword ptr [rbp-0x4c]
    new instr:0x7fb0666dc4c0: cmp eax, dword ptr [rbp-0x4c]
in revert 
    new instr:0x7fb0666dc4c3: jnl 0x7fb0666dc427
410547
old instr: 0x410547: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc4c9: mov rdx, qword ptr [rbp-0xf8]
old instr: 0x41054e: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc4d0: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410551: cdqe 
    new instr:0x7fb0666dc4d3: cdqe 
old instr: 0x410553: movzx eax, byte ptr [rdx+rax*1+0x6a8]
    new instr:0x7fb0666dc4d5: movzx eax, byte ptr [rdx+rax*1+0x6a8]
old instr: 0x41055b: mov byte ptr [rbp-0x83], al
    new instr:0x7fb0666dc4dd: mov byte ptr [rbp-0x83], al
old instr: 0x410561: mov dword ptr [rbp-0x30], 0x0
    new instr:0x7fb0666dc4e3: mov dword ptr [rbp-0x30], 0x0
old instr: 0x410568: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fb0666dc4ea: mov eax, dword ptr [rbp-0x30]
old instr: 0x41056b: cdqe 
    new instr:0x7fb0666dc4ed: cdqe 
old instr: 0x41056d: movzx eax, byte ptr [rbp+rax*1-0xe0]
    new instr:0x7fb0666dc4ef: movzx eax, byte ptr [rbp+rax*1-0xe0]
old instr: 0x410575: mov byte ptr [rbp-0x69], al
    new instr:0x7fb0666dc4f7: mov byte ptr [rbp-0x69], al
in revert 
removing jump and inserting a dummy entry 
4105ab
old instr: 0x4105ab: movzx eax, byte ptr [rbp-0x83]
    new instr:0x7fb0666dc4fa: movzx eax, byte ptr [rbp-0x83]
old instr: 0x4105b2: cmp al, byte ptr [rbp-0x69]
    new instr:0x7fb0666dc501: cmp al, byte ptr [rbp-0x69]
old instr: 0x4105b5: jnz 0x41057a
    new instr:0x7fb0666dc504: jnz 0x7fb0666dc4c9
inserted instruction
4105b7
old instr: 0x4105b7: movzx eax, byte ptr [rbp-0x69]
    new instr:0x7fb0666dc506: movzx eax, byte ptr [rbp-0x69]
41057a
old instr: 0x41057a: add dword ptr [rbp-0x30], 0x1
    new instr:0x7fb0666dc50a: add dword ptr [rbp-0x30], 0x1
4105e9
old instr: 0x4105e9: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666dc50e: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
41077f
old instr: 0x41077f: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc515: mov eax, dword ptr [rbp-0x28]
old instr: 0x410782: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666dc518: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7fb0666dc51b: jnl 0x7fb0666dc38b
4105f5
old instr: 0x4105f5: mov dword ptr [rbp-0x50], 0x20
    new instr:0x7fb0666dc521: mov dword ptr [rbp-0x50], 0x20
old instr: 0x4105fc: mov dword ptr [rbp-0x54], 0x0
    new instr:0x7fb0666dc528: mov dword ptr [rbp-0x54], 0x0
old instr: 0x410603: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fb0666dc52f: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
4106eb
old instr: 0x4106eb: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc536: mov eax, dword ptr [rbp-0x2c]
old instr: 0x4106ee: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7fb0666dc539: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7fb0666dc53c: jnl 0x7fb0666dc45a
41060f
old instr: 0x41060f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc542: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410616: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc549: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410619: movsxd rdx, eax
    new instr:0x7fb0666dc54c: movsxd rdx, eax
old instr: 0x41061c: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc54f: mov eax, dword ptr [rbp-0x28]
old instr: 0x41061f: cdqe 
    new instr:0x7fb0666dc552: cdqe 
old instr: 0x410621: add rax, rax
    new instr:0x7fb0666dc554: add rax, rax
old instr: 0x410624: mov rsi, rax
    new instr:0x7fb0666dc557: mov rsi, rax
old instr: 0x410627: shl rsi, 0x7
    new instr:0x7fb0666dc55a: shl rsi, 0x7
old instr: 0x41062b: add rax, rsi
    new instr:0x7fb0666dc55e: add rax, rsi
old instr: 0x41062e: add rax, rcx
    new instr:0x7fb0666dc561: add rax, rcx
old instr: 0x410631: add rax, rdx
    new instr:0x7fb0666dc564: add rax, rdx
old instr: 0x410634: add rax, 0x9340
    new instr:0x7fb0666dc567: add rax, 0x9340
old instr: 0x41063a: movzx eax, byte ptr [rax+0xc]
    new instr:0x7fb0666dc56d: movzx eax, byte ptr [rax+0xc]
old instr: 0x41063e: movzx eax, al
    new instr:0x7fb0666dc571: movzx eax, al
old instr: 0x410641: cmp eax, dword ptr [rbp-0x54]
    new instr:0x7fb0666dc574: cmp eax, dword ptr [rbp-0x54]
in revert 
    new instr:0x7fb0666dc577: jnle 0x7fb0666dc5ae
41067b
old instr: 0x41067b: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc579: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410682: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc580: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410685: movsxd rdx, eax
    new instr:0x7fb0666dc583: movsxd rdx, eax
old instr: 0x410688: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc586: mov eax, dword ptr [rbp-0x28]
old instr: 0x41068b: cdqe 
    new instr:0x7fb0666dc589: cdqe 
old instr: 0x41068d: add rax, rax
    new instr:0x7fb0666dc58b: add rax, rax
old instr: 0x410690: mov rsi, rax
    new instr:0x7fb0666dc58e: mov rsi, rax
old instr: 0x410693: shl rsi, 0x7
    new instr:0x7fb0666dc591: shl rsi, 0x7
old instr: 0x410697: add rax, rsi
    new instr:0x7fb0666dc595: add rax, rsi
old instr: 0x41069a: add rax, rcx
    new instr:0x7fb0666dc598: add rax, rcx
old instr: 0x41069d: add rax, rdx
    new instr:0x7fb0666dc59b: add rax, rdx
old instr: 0x4106a0: add rax, 0x9340
    new instr:0x7fb0666dc59e: add rax, 0x9340
old instr: 0x4106a6: movzx eax, byte ptr [rax+0xc]
    new instr:0x7fb0666dc5a4: movzx eax, byte ptr [rax+0xc]
old instr: 0x4106aa: movzx eax, al
    new instr:0x7fb0666dc5a8: movzx eax, al
old instr: 0x4106ad: cmp eax, dword ptr [rbp-0x50]
    new instr:0x7fb0666dc5ab: cmp eax, dword ptr [rbp-0x50]
in revert 
    new instr:0x7fb0666dc5ae: jl 0x7fb0666dc5e5
4106e7
old instr: 0x4106e7: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7fb0666dc5b0: add dword ptr [rbp-0x2c], 0x1
410646
old instr: 0x410646: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc5b4: mov rcx, qword ptr [rbp-0xf8]
4106b2
old instr: 0x4106b2: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc5bb: mov rcx, qword ptr [rbp-0xf8]
40d277
old instr: 0x40d277: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666dc5c2: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40d2c9
old instr: 0x40d2c9: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc5c9: mov eax, dword ptr [rbp-0x28]
old instr: 0x40d2cc: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666dc5cc: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7fb0666dc5cf: jnl 0x7fb0666dc580
40d280
old instr: 0x40d280: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7fb0666dc5d1: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40d2bd
old instr: 0x40d2bd: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dc5d8: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d2c0: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7fb0666dc5db: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7fb0666dc5de: jnl 0x7fb0666dc5a4
40d289
old instr: 0x40d289: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc5e0: mov rdx, qword ptr [rbp-0xf8]
40d2d1
old instr: 0x40d2d1: cmp dword ptr [rbp-0x5c], 0x6
    new instr:0x7fb0666dc5e7: cmp dword ptr [rbp-0x5c], 0x6
old instr: 0x40d2d5: jnz 0x40d3f0
    new instr:0x7fb0666dc5eb: jnz 0x7fb0666dc706
inserted instruction
40d2db
old instr: 0x40d2db: mov dword ptr [rbp-0x24], 0x0
    new instr:0x7fb0666dc5f1: mov dword ptr [rbp-0x24], 0x0
in revert 
removing jump and inserting a dummy entry 
40d3e4
old instr: 0x40d3e4: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dc5f8: mov eax, dword ptr [rbp-0x24]
old instr: 0x40d3e7: cmp eax, dword ptr [rbp-0x7c]
    new instr:0x7fb0666dc5fb: cmp eax, dword ptr [rbp-0x7c]
in revert 
    new instr:0x7fb0666dc5fe: jnl 0x7fb0666dc4fb
40d2e7
old instr: 0x40d2e7: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc604: mov rdx, qword ptr [rbp-0xf8]
4104ef
old instr: 0x4104ef: mov edi, 0xbba
    new instr:0x7fb0666dc60b: mov edi, 0xbba
4106f7
old instr: 0x4106f7: cmp dword ptr [rbp-0x54], 0x11
    new instr:0x7fb0666dc610: cmp dword ptr [rbp-0x54], 0x11
in revert 
    new instr:0x7fb0666dc614: jnle 0x7fb0666dc620
410707
old instr: 0x410707: cmp dword ptr [rbp-0x50], 0x0
    new instr:0x7fb0666dc616: cmp dword ptr [rbp-0x50], 0x0
in revert 
    new instr:0x7fb0666dc61a: jle 0x7fb0666dc626
410717
old instr: 0x410717: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc61c: mov eax, dword ptr [rbp-0x28]
old instr: 0x41071a: cdqe 
    new instr:0x7fb0666dc61f: cdqe 
old instr: 0x41071c: add rax, rax
    new instr:0x7fb0666dc621: add rax, rax
old instr: 0x41071f: mov rdx, rax
    new instr:0x7fb0666dc624: mov rdx, rax
old instr: 0x410722: shl rdx, 0x7
    new instr:0x7fb0666dc627: shl rdx, 0x7
old instr: 0x410726: add rax, rdx
    new instr:0x7fb0666dc62b: add rax, rdx
old instr: 0x410729: lea rdx, ptr [rax+0x9340]
    new instr:0x7fb0666dc62e: lea rdx, ptr [rax+0x9340]
old instr: 0x410730: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc635: mov rax, qword ptr [rbp-0xf8]
old instr: 0x410737: add rax, rdx
    new instr:0x7fb0666dc63c: add rax, rdx
old instr: 0x41073a: lea rsi, ptr [rax+0xc]
    new instr:0x7fb0666dc63f: lea rsi, ptr [rax+0xc]
old instr: 0x41073e: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc643: mov eax, dword ptr [rbp-0x28]
old instr: 0x410741: cdqe 
    new instr:0x7fb0666dc646: cdqe 
old instr: 0x410743: shl rax, 0x3
    new instr:0x7fb0666dc648: shl rax, 0x3
old instr: 0x410747: mov rdx, rax
    new instr:0x7fb0666dc64c: mov rdx, rax
old instr: 0x41074a: shl rdx, 0x7
    new instr:0x7fb0666dc64f: shl rdx, 0x7
old instr: 0x41074e: add rax, rdx
    new instr:0x7fb0666dc653: add rax, rdx
old instr: 0x410751: lea rdx, ptr [rax+0x9950]
    new instr:0x7fb0666dc656: lea rdx, ptr [rax+0x9950]
old instr: 0x410758: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc65d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x41075f: add rax, rdx
    new instr:0x7fb0666dc664: add rax, rdx
old instr: 0x410762: lea rdi, ptr [rax+0x8]
    new instr:0x7fb0666dc667: lea rdi, ptr [rax+0x8]
old instr: 0x410766: mov ecx, dword ptr [rbp-0x7c]
    new instr:0x7fb0666dc66b: mov ecx, dword ptr [rbp-0x7c]
old instr: 0x410769: mov edx, dword ptr [rbp-0x54]
    new instr:0x7fb0666dc66e: mov edx, dword ptr [rbp-0x54]
old instr: 0x41076c: mov eax, dword ptr [rbp-0x50]
    new instr:0x7fb0666dc671: mov eax, dword ptr [rbp-0x50]
old instr: 0x41076f: mov r8d, ecx
    new instr:0x7fb0666dc674: mov r8d, ecx
old instr: 0x410772: mov ecx, edx
    new instr:0x7fb0666dc677: mov ecx, edx
old instr: 0x410774: mov edx, eax
    new instr:0x7fb0666dc679: mov edx, eax
40d229
old instr: 0x40d229: sub dword ptr [rbp-0x60], 0x1
    new instr:0x7fb0666dc67b: sub dword ptr [rbp-0x60], 0x1
40d3f0
old instr: 0x40d3f0: mov dword ptr [rbp-0x4c], 0x0
    new instr:0x7fb0666dc67f: mov dword ptr [rbp-0x4c], 0x0
4106fd
old instr: 0x4106fd: mov edi, 0xbbc
    new instr:0x7fb0666dc686: mov edi, 0xbbc
41070d
old instr: 0x41070d: mov edi, 0xbbd
    new instr:0x7fb0666dc68b: mov edi, 0xbbd
40d405
old instr: 0x40d405: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc690: mov rax, qword ptr [rbp-0xf8]
40d13b
old instr: 0x40d13b: cvtsi2ss xmm0, dword ptr [rbp-0x68]
    new instr:0x7fb0666dc697: cvtsi2ss xmm0, dword ptr [rbp-0x68]
old instr: 0x40d140: unpcklps xmm0, xmm0
    new instr:0x7fb0666dc69c: unpcklps xmm0, xmm0
old instr: 0x40d143: cvtps2pd xmm0, xmm0
    new instr:0x7fb0666dc69f: cvtps2pd xmm0, xmm0
old instr: 0x40d146: movsd xmm1, qword ptr [rip+0xdc4a]
    new instr:0x7fb0666dc6a2: movsd xmm1, qword ptr [rip+0xdc4a]
old instr: 0x40d14e: mulsd xmm0, xmm1
    new instr:0x7fb0666dc6aa: mulsd xmm0, xmm1
old instr: 0x40d152: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc6ae: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d159: mov eax, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc6b5: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d15f: cvtsi2ss xmm1, eax
    new instr:0x7fb0666dc6bb: cvtsi2ss xmm1, eax
old instr: 0x40d163: unpcklps xmm1, xmm1
    new instr:0x7fb0666dc6bf: unpcklps xmm1, xmm1
old instr: 0x40d166: cvtps2pd xmm1, xmm1
    new instr:0x7fb0666dc6c2: cvtps2pd xmm1, xmm1
old instr: 0x40d169: divsd xmm0, xmm1
    new instr:0x7fb0666dc6c5: divsd xmm0, xmm1
old instr: 0x40d16d: mov rax, qword ptr [rip+0x21013c]
    new instr:0x7fb0666dc6c9: mov rax, qword ptr [rip+0x21013c]
old instr: 0x40d174: mov edi, dword ptr [rbp-0x68]
    new instr:0x7fb0666dc6d0: mov edi, dword ptr [rbp-0x68]
old instr: 0x40d177: mov esi, dword ptr [rbp-0x38]
    new instr:0x7fb0666dc6d3: mov esi, dword ptr [rbp-0x38]
old instr: 0x40d17a: mov ecx, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc6d6: mov ecx, dword ptr [rbp-0x34]
old instr: 0x40d17d: mov edx, dword ptr [rbp-0x60]
    new instr:0x7fb0666dc6d9: mov edx, dword ptr [rbp-0x60]
old instr: 0x40d180: mov r9d, edi
    new instr:0x7fb0666dc6dc: mov r9d, edi
old instr: 0x40d183: mov r8d, esi
    new instr:0x7fb0666dc6df: mov r8d, esi
old instr: 0x40d186: mov esi, 0x41ac78
    new instr:0x7fb0666dc6e2: mov esi, 0x41ac78
old instr: 0x40d18b: mov rdi, rax
    new instr:0x7fb0666dc6e7: mov rdi, rax
old instr: 0x40d18e: mov eax, 0x1
    new instr:0x7fb0666dc6ea: mov eax, 0x1
41078b
old instr: 0x41078b: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fb0666dc6ef: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
4107e7
old instr: 0x4107e7: cmp dword ptr [rbp-0x2c], 0xf
    new instr:0x7fb0666dc6f6: cmp dword ptr [rbp-0x2c], 0xf
in revert 
    new instr:0x7fb0666dc6fa: jnle 0x7fb0666dc6a3
410794
old instr: 0x410794: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc6fc: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410797: cdqe 
    new instr:0x7fb0666dc6ff: cdqe 
old instr: 0x410799: mov byte ptr [rbp+rax*1-0xf0], 0x0
    new instr:0x7fb0666dc701: mov byte ptr [rbp+rax*1-0xf0], 0x0
old instr: 0x4107a1: mov dword ptr [rbp-0x30], 0x0
    new instr:0x7fb0666dc709: mov dword ptr [rbp-0x30], 0x0
in revert 
removing jump and inserting a dummy entry 
4107dd
old instr: 0x4107dd: cmp dword ptr [rbp-0x30], 0xf
    new instr:0x7fb0666dc710: cmp dword ptr [rbp-0x30], 0xf
in revert 
    new instr:0x7fb0666dc714: jnle 0x7fb0666dc6dd
4107aa
old instr: 0x4107aa: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc716: mov eax, dword ptr [rbp-0x2c]
old instr: 0x4107ad: mov edx, eax
    new instr:0x7fb0666dc719: mov edx, eax
old instr: 0x4107af: shl edx, 0x4
    new instr:0x7fb0666dc71b: shl edx, 0x4
old instr: 0x4107b2: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fb0666dc71e: mov eax, dword ptr [rbp-0x30]
old instr: 0x4107b5: add eax, edx
    new instr:0x7fb0666dc721: add eax, edx
old instr: 0x4107b7: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc723: mov rdx, qword ptr [rbp-0xf8]
old instr: 0x4107be: cdqe 
    new instr:0x7fb0666dc72a: cdqe 
old instr: 0x4107c0: movzx eax, byte ptr [rdx+rax*1+0x80]
    new instr:0x7fb0666dc72c: movzx eax, byte ptr [rdx+rax*1+0x80]
old instr: 0x4107c8: test al, al
    new instr:0x7fb0666dc734: test al, al
in revert 
    new instr:0x7fb0666dc736: jnz 0x7fb0666dc745
4107d9
old instr: 0x4107d9: add dword ptr [rbp-0x30], 0x1
    new instr:0x7fb0666dc738: add dword ptr [rbp-0x30], 0x1
4107cc
old instr: 0x4107cc: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666dc73c: mov eax, dword ptr [rbp-0x2c]
40cffb
old instr: 0x40cffb: mov dword ptr [rbp-0x5c], 0x2
    new instr:0x7fb0666dc73f: mov dword ptr [rbp-0x5c], 0x2
old instr: 0x40d002: jmp 0x40d062
    new instr:0x7fb0666dc746: jmp 0x7fb0666dc7a6
inserted instruction
4107e3
old instr: 0x4107e3: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7fb0666dc748: add dword ptr [rbp-0x2c], 0x1
40d415
old instr: 0x40d415: jle 0x4103d0
    new instr:0x7fb0666dc74c: jle 0x7fb0666df707
inserted instruction
40d41b
old instr: 0x40d41b: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc752: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d41e: add eax, 0x31
    new instr:0x7fb0666dc755: add eax, 0x31
old instr: 0x40d421: mov dword ptr [rbp-0x38], eax
    new instr:0x7fb0666dc758: mov dword ptr [rbp-0x38], eax
old instr: 0x40d424: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc75b: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d42b: mov eax, dword ptr [rax+0x29c]
    new instr:0x7fb0666dc762: mov eax, dword ptr [rax+0x29c]
old instr: 0x40d431: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666dc768: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7fb0666dc76b: jle 0x7fb0666dc780
40d449
old instr: 0x40d449: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666dc76d: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40d465
old instr: 0x40d465: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc774: mov eax, dword ptr [rbp-0x28]
old instr: 0x40d468: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666dc777: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7fb0666dc77a: jnl 0x7fb0666dc761
40d452
old instr: 0x40d452: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666dc77c: mov eax, dword ptr [rbp-0x28]
40d436
old instr: 0x40d436: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc77f: mov rax, qword ptr [rbp-0xf8]
40cfdd
old instr: 0x40cfdd: mov edi, 0xbb9
    new instr:0x7fb0666dc786: mov edi, 0xbb9
40d46d
old instr: 0x40d46d: cmp dword ptr [rbp-0x5c], 0x6
    new instr:0x7fb0666dc78b: cmp dword ptr [rbp-0x5c], 0x6
old instr: 0x40d471: jnz 0x40ec4e
    new instr:0x7fb0666dc78f: jnz 0x7fb0666ddf6c
inserted instruction
40d477
old instr: 0x40d477: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc795: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d47a: mov edx, dword ptr [rbp-0x38]
    new instr:0x7fb0666dc798: mov edx, dword ptr [rbp-0x38]
old instr: 0x40d47d: mov ecx, edx
    new instr:0x7fb0666dc79b: mov ecx, edx
old instr: 0x40d47f: sub ecx, eax
    new instr:0x7fb0666dc79d: sub ecx, eax
old instr: 0x40d481: mov eax, ecx
    new instr:0x7fb0666dc79f: mov eax, ecx
old instr: 0x40d483: cmp eax, 0x31
    new instr:0x7fb0666dc7a1: cmp eax, 0x31
old instr: 0x40d486: jnz 0x40ec4e
    new instr:0x7fb0666dc7a4: jnz 0x7fb0666ddf6c
inserted instruction
40d48c
old instr: 0x40d48c: mov r12d, 0x0
    new instr:0x7fb0666dc7aa: mov r12d, 0x0
old instr: 0x40d492: mov r13d, r12d
    new instr:0x7fb0666dc7b0: mov r13d, r12d
old instr: 0x40d495: mov r14d, r13d
    new instr:0x7fb0666dc7b3: mov r14d, r13d
old instr: 0x40d498: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc7b6: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d49b: cdqe 
    new instr:0x7fb0666dc7b9: cdqe 
old instr: 0x40d49d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dc7bb: lea rdx, ptr [rax+rax*1]
old instr: 0x40d4a1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dc7bf: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d4a5: add rax, rdx
    new instr:0x7fb0666dc7c3: add rax, rdx
old instr: 0x40d4a8: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dc7c6: movzx ebx, word ptr [rax]
old instr: 0x40d4ab: movzx edx, bx
    new instr:0x7fb0666dc7c9: movzx edx, bx
old instr: 0x40d4ae: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc7cc: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d4b5: movsxd rdx, edx
    new instr:0x7fb0666dc7d3: movsxd rdx, edx
old instr: 0x40d4b8: add rdx, 0xc9b
    new instr:0x7fb0666dc7d6: add rdx, 0xc9b
old instr: 0x40d4bf: shl rdx, 0x4
    new instr:0x7fb0666dc7dd: shl rdx, 0x4
old instr: 0x40d4c3: add rax, rdx
    new instr:0x7fb0666dc7e1: add rax, rdx
old instr: 0x40d4c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc7e4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d4c9: add r14d, eax
    new instr:0x7fb0666dc7e7: add r14d, eax
old instr: 0x40d4cc: movzx edx, bx
    new instr:0x7fb0666dc7ea: movzx edx, bx
old instr: 0x40d4cf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc7ed: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d4d6: movsxd rdx, edx
    new instr:0x7fb0666dc7f4: movsxd rdx, edx
old instr: 0x40d4d9: shl rdx, 0x4
    new instr:0x7fb0666dc7f7: shl rdx, 0x4
old instr: 0x40d4dd: add rax, rdx
    new instr:0x7fb0666dc7fb: add rax, rdx
old instr: 0x40d4e0: add rax, 0xc9b4
    new instr:0x7fb0666dc7fe: add rax, 0xc9b4
old instr: 0x40d4e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc804: mov eax, dword ptr [rax+0x8]
old instr: 0x40d4e9: add r13d, eax
    new instr:0x7fb0666dc807: add r13d, eax
old instr: 0x40d4ec: movzx edx, bx
    new instr:0x7fb0666dc80a: movzx edx, bx
old instr: 0x40d4ef: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc80d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d4f6: movsxd rdx, edx
    new instr:0x7fb0666dc814: movsxd rdx, edx
old instr: 0x40d4f9: shl rdx, 0x4
    new instr:0x7fb0666dc817: shl rdx, 0x4
old instr: 0x40d4fd: add rax, rdx
    new instr:0x7fb0666dc81b: add rax, rdx
old instr: 0x40d500: add rax, 0xc9b8
    new instr:0x7fb0666dc81e: add rax, 0xc9b8
old instr: 0x40d506: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc824: mov eax, dword ptr [rax+0x8]
old instr: 0x40d509: add r12d, eax
    new instr:0x7fb0666dc827: add r12d, eax
old instr: 0x40d50c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc82a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d50f: cdqe 
    new instr:0x7fb0666dc82d: cdqe 
old instr: 0x40d511: add rax, 0x1
    new instr:0x7fb0666dc82f: add rax, 0x1
old instr: 0x40d515: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dc833: lea rdx, ptr [rax+rax*1]
old instr: 0x40d519: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dc837: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d51d: add rax, rdx
    new instr:0x7fb0666dc83b: add rax, rdx
old instr: 0x40d520: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dc83e: movzx ebx, word ptr [rax]
old instr: 0x40d523: movzx edx, bx
    new instr:0x7fb0666dc841: movzx edx, bx
old instr: 0x40d526: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc844: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d52d: movsxd rdx, edx
    new instr:0x7fb0666dc84b: movsxd rdx, edx
old instr: 0x40d530: add rdx, 0xc9b
    new instr:0x7fb0666dc84e: add rdx, 0xc9b
old instr: 0x40d537: shl rdx, 0x4
    new instr:0x7fb0666dc855: shl rdx, 0x4
old instr: 0x40d53b: add rax, rdx
    new instr:0x7fb0666dc859: add rax, rdx
old instr: 0x40d53e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc85c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d541: add r14d, eax
    new instr:0x7fb0666dc85f: add r14d, eax
old instr: 0x40d544: movzx edx, bx
    new instr:0x7fb0666dc862: movzx edx, bx
old instr: 0x40d547: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc865: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d54e: movsxd rdx, edx
    new instr:0x7fb0666dc86c: movsxd rdx, edx
old instr: 0x40d551: shl rdx, 0x4
    new instr:0x7fb0666dc86f: shl rdx, 0x4
old instr: 0x40d555: add rax, rdx
    new instr:0x7fb0666dc873: add rax, rdx
old instr: 0x40d558: add rax, 0xc9b4
    new instr:0x7fb0666dc876: add rax, 0xc9b4
old instr: 0x40d55e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc87c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d561: add r13d, eax
    new instr:0x7fb0666dc87f: add r13d, eax
old instr: 0x40d564: movzx edx, bx
    new instr:0x7fb0666dc882: movzx edx, bx
old instr: 0x40d567: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc885: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d56e: movsxd rdx, edx
    new instr:0x7fb0666dc88c: movsxd rdx, edx
old instr: 0x40d571: shl rdx, 0x4
    new instr:0x7fb0666dc88f: shl rdx, 0x4
old instr: 0x40d575: add rax, rdx
    new instr:0x7fb0666dc893: add rax, rdx
old instr: 0x40d578: add rax, 0xc9b8
    new instr:0x7fb0666dc896: add rax, 0xc9b8
old instr: 0x40d57e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc89c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d581: add r12d, eax
    new instr:0x7fb0666dc89f: add r12d, eax
old instr: 0x40d584: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc8a2: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d587: cdqe 
    new instr:0x7fb0666dc8a5: cdqe 
old instr: 0x40d589: add rax, 0x2
    new instr:0x7fb0666dc8a7: add rax, 0x2
old instr: 0x40d58d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dc8ab: lea rdx, ptr [rax+rax*1]
old instr: 0x40d591: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dc8af: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d595: add rax, rdx
    new instr:0x7fb0666dc8b3: add rax, rdx
40d598
old instr: 0x40d598: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dc8b6: movzx ebx, word ptr [rax]
old instr: 0x40d59b: movzx edx, bx
    new instr:0x7fb0666dc8b9: movzx edx, bx
old instr: 0x40d59e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc8bc: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d5a5: movsxd rdx, edx
    new instr:0x7fb0666dc8c3: movsxd rdx, edx
old instr: 0x40d5a8: add rdx, 0xc9b
    new instr:0x7fb0666dc8c6: add rdx, 0xc9b
old instr: 0x40d5af: shl rdx, 0x4
    new instr:0x7fb0666dc8cd: shl rdx, 0x4
old instr: 0x40d5b3: add rax, rdx
    new instr:0x7fb0666dc8d1: add rax, rdx
old instr: 0x40d5b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc8d4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d5b9: add r14d, eax
    new instr:0x7fb0666dc8d7: add r14d, eax
old instr: 0x40d5bc: movzx edx, bx
    new instr:0x7fb0666dc8da: movzx edx, bx
old instr: 0x40d5bf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc8dd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d5c6: movsxd rdx, edx
    new instr:0x7fb0666dc8e4: movsxd rdx, edx
old instr: 0x40d5c9: shl rdx, 0x4
    new instr:0x7fb0666dc8e7: shl rdx, 0x4
old instr: 0x40d5cd: add rax, rdx
    new instr:0x7fb0666dc8eb: add rax, rdx
old instr: 0x40d5d0: add rax, 0xc9b4
    new instr:0x7fb0666dc8ee: add rax, 0xc9b4
old instr: 0x40d5d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc8f4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d5d9: add r13d, eax
    new instr:0x7fb0666dc8f7: add r13d, eax
old instr: 0x40d5dc: movzx edx, bx
    new instr:0x7fb0666dc8fa: movzx edx, bx
old instr: 0x40d5df: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc8fd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d5e6: movsxd rdx, edx
    new instr:0x7fb0666dc904: movsxd rdx, edx
old instr: 0x40d5e9: shl rdx, 0x4
    new instr:0x7fb0666dc907: shl rdx, 0x4
old instr: 0x40d5ed: add rax, rdx
    new instr:0x7fb0666dc90b: add rax, rdx
old instr: 0x40d5f0: add rax, 0xc9b8
    new instr:0x7fb0666dc90e: add rax, 0xc9b8
old instr: 0x40d5f6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc914: mov eax, dword ptr [rax+0x8]
old instr: 0x40d5f9: add r12d, eax
    new instr:0x7fb0666dc917: add r12d, eax
old instr: 0x40d5fc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc91a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d5ff: cdqe 
    new instr:0x7fb0666dc91d: cdqe 
old instr: 0x40d601: add rax, 0x3
    new instr:0x7fb0666dc91f: add rax, 0x3
old instr: 0x40d605: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dc923: lea rdx, ptr [rax+rax*1]
old instr: 0x40d609: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dc927: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d60d: add rax, rdx
    new instr:0x7fb0666dc92b: add rax, rdx
old instr: 0x40d610: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dc92e: movzx ebx, word ptr [rax]
old instr: 0x40d613: movzx edx, bx
    new instr:0x7fb0666dc931: movzx edx, bx
old instr: 0x40d616: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc934: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d61d: movsxd rdx, edx
    new instr:0x7fb0666dc93b: movsxd rdx, edx
old instr: 0x40d620: add rdx, 0xc9b
    new instr:0x7fb0666dc93e: add rdx, 0xc9b
old instr: 0x40d627: shl rdx, 0x4
    new instr:0x7fb0666dc945: shl rdx, 0x4
old instr: 0x40d62b: add rax, rdx
    new instr:0x7fb0666dc949: add rax, rdx
old instr: 0x40d62e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc94c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d631: add r14d, eax
    new instr:0x7fb0666dc94f: add r14d, eax
old instr: 0x40d634: movzx edx, bx
    new instr:0x7fb0666dc952: movzx edx, bx
old instr: 0x40d637: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc955: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d63e: movsxd rdx, edx
    new instr:0x7fb0666dc95c: movsxd rdx, edx
old instr: 0x40d641: shl rdx, 0x4
    new instr:0x7fb0666dc95f: shl rdx, 0x4
old instr: 0x40d645: add rax, rdx
    new instr:0x7fb0666dc963: add rax, rdx
old instr: 0x40d648: add rax, 0xc9b4
    new instr:0x7fb0666dc966: add rax, 0xc9b4
old instr: 0x40d64e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc96c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d651: add r13d, eax
    new instr:0x7fb0666dc96f: add r13d, eax
old instr: 0x40d654: movzx edx, bx
    new instr:0x7fb0666dc972: movzx edx, bx
old instr: 0x40d657: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc975: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d65e: movsxd rdx, edx
    new instr:0x7fb0666dc97c: movsxd rdx, edx
old instr: 0x40d661: shl rdx, 0x4
    new instr:0x7fb0666dc97f: shl rdx, 0x4
old instr: 0x40d665: add rax, rdx
    new instr:0x7fb0666dc983: add rax, rdx
old instr: 0x40d668: add rax, 0xc9b8
    new instr:0x7fb0666dc986: add rax, 0xc9b8
old instr: 0x40d66e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc98c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d671: add r12d, eax
    new instr:0x7fb0666dc98f: add r12d, eax
old instr: 0x40d674: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dc992: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d677: cdqe 
    new instr:0x7fb0666dc995: cdqe 
old instr: 0x40d679: add rax, 0x4
    new instr:0x7fb0666dc997: add rax, 0x4
old instr: 0x40d67d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dc99b: lea rdx, ptr [rax+rax*1]
old instr: 0x40d681: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dc99f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d685: add rax, rdx
    new instr:0x7fb0666dc9a3: add rax, rdx
old instr: 0x40d688: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dc9a6: movzx ebx, word ptr [rax]
old instr: 0x40d68b: movzx edx, bx
    new instr:0x7fb0666dc9a9: movzx edx, bx
old instr: 0x40d68e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc9ac: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d695: movsxd rdx, edx
    new instr:0x7fb0666dc9b3: movsxd rdx, edx
old instr: 0x40d698: add rdx, 0xc9b
    new instr:0x7fb0666dc9b6: add rdx, 0xc9b
old instr: 0x40d69f: shl rdx, 0x4
    new instr:0x7fb0666dc9bd: shl rdx, 0x4
old instr: 0x40d6a3: add rax, rdx
    new instr:0x7fb0666dc9c1: add rax, rdx
old instr: 0x40d6a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc9c4: mov eax, dword ptr [rax+0x8]
40d6a9
old instr: 0x40d6a9: add r14d, eax
    new instr:0x7fb0666dc9c7: add r14d, eax
old instr: 0x40d6ac: movzx edx, bx
    new instr:0x7fb0666dc9ca: movzx edx, bx
old instr: 0x40d6af: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc9cd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d6b6: movsxd rdx, edx
    new instr:0x7fb0666dc9d4: movsxd rdx, edx
old instr: 0x40d6b9: shl rdx, 0x4
    new instr:0x7fb0666dc9d7: shl rdx, 0x4
old instr: 0x40d6bd: add rax, rdx
    new instr:0x7fb0666dc9db: add rax, rdx
old instr: 0x40d6c0: add rax, 0xc9b4
    new instr:0x7fb0666dc9de: add rax, 0xc9b4
old instr: 0x40d6c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dc9e4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d6c9: add r13d, eax
    new instr:0x7fb0666dc9e7: add r13d, eax
old instr: 0x40d6cc: movzx edx, bx
    new instr:0x7fb0666dc9ea: movzx edx, bx
old instr: 0x40d6cf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dc9ed: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d6d6: movsxd rdx, edx
    new instr:0x7fb0666dc9f4: movsxd rdx, edx
old instr: 0x40d6d9: shl rdx, 0x4
    new instr:0x7fb0666dc9f7: shl rdx, 0x4
old instr: 0x40d6dd: add rax, rdx
    new instr:0x7fb0666dc9fb: add rax, rdx
old instr: 0x40d6e0: add rax, 0xc9b8
    new instr:0x7fb0666dc9fe: add rax, 0xc9b8
old instr: 0x40d6e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dca04: mov eax, dword ptr [rax+0x8]
old instr: 0x40d6e9: add r12d, eax
    new instr:0x7fb0666dca07: add r12d, eax
old instr: 0x40d6ec: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dca0a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d6ef: cdqe 
    new instr:0x7fb0666dca0d: cdqe 
old instr: 0x40d6f1: add rax, 0x5
    new instr:0x7fb0666dca0f: add rax, 0x5
old instr: 0x40d6f5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dca13: lea rdx, ptr [rax+rax*1]
old instr: 0x40d6f9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dca17: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d6fd: add rax, rdx
    new instr:0x7fb0666dca1b: add rax, rdx
old instr: 0x40d700: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dca1e: movzx ebx, word ptr [rax]
old instr: 0x40d703: movzx edx, bx
    new instr:0x7fb0666dca21: movzx edx, bx
old instr: 0x40d706: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dca24: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d70d: movsxd rdx, edx
    new instr:0x7fb0666dca2b: movsxd rdx, edx
old instr: 0x40d710: add rdx, 0xc9b
    new instr:0x7fb0666dca2e: add rdx, 0xc9b
old instr: 0x40d717: shl rdx, 0x4
    new instr:0x7fb0666dca35: shl rdx, 0x4
old instr: 0x40d71b: add rax, rdx
    new instr:0x7fb0666dca39: add rax, rdx
old instr: 0x40d71e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dca3c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d721: add r14d, eax
    new instr:0x7fb0666dca3f: add r14d, eax
old instr: 0x40d724: movzx edx, bx
    new instr:0x7fb0666dca42: movzx edx, bx
old instr: 0x40d727: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dca45: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d72e: movsxd rdx, edx
    new instr:0x7fb0666dca4c: movsxd rdx, edx
old instr: 0x40d731: shl rdx, 0x4
    new instr:0x7fb0666dca4f: shl rdx, 0x4
old instr: 0x40d735: add rax, rdx
    new instr:0x7fb0666dca53: add rax, rdx
old instr: 0x40d738: add rax, 0xc9b4
    new instr:0x7fb0666dca56: add rax, 0xc9b4
old instr: 0x40d73e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dca5c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d741: add r13d, eax
    new instr:0x7fb0666dca5f: add r13d, eax
old instr: 0x40d744: movzx edx, bx
    new instr:0x7fb0666dca62: movzx edx, bx
old instr: 0x40d747: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dca65: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d74e: movsxd rdx, edx
    new instr:0x7fb0666dca6c: movsxd rdx, edx
old instr: 0x40d751: shl rdx, 0x4
    new instr:0x7fb0666dca6f: shl rdx, 0x4
old instr: 0x40d755: add rax, rdx
    new instr:0x7fb0666dca73: add rax, rdx
old instr: 0x40d758: add rax, 0xc9b8
    new instr:0x7fb0666dca76: add rax, 0xc9b8
old instr: 0x40d75e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dca7c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d761: add r12d, eax
    new instr:0x7fb0666dca7f: add r12d, eax
old instr: 0x40d764: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dca82: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d767: cdqe 
    new instr:0x7fb0666dca85: cdqe 
old instr: 0x40d769: add rax, 0x6
    new instr:0x7fb0666dca87: add rax, 0x6
old instr: 0x40d76d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dca8b: lea rdx, ptr [rax+rax*1]
old instr: 0x40d771: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dca8f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d775: add rax, rdx
    new instr:0x7fb0666dca93: add rax, rdx
old instr: 0x40d778: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dca96: movzx ebx, word ptr [rax]
old instr: 0x40d77b: movzx edx, bx
    new instr:0x7fb0666dca99: movzx edx, bx
old instr: 0x40d77e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dca9c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d785: movsxd rdx, edx
    new instr:0x7fb0666dcaa3: movsxd rdx, edx
old instr: 0x40d788: add rdx, 0xc9b
    new instr:0x7fb0666dcaa6: add rdx, 0xc9b
old instr: 0x40d78f: shl rdx, 0x4
    new instr:0x7fb0666dcaad: shl rdx, 0x4
old instr: 0x40d793: add rax, rdx
    new instr:0x7fb0666dcab1: add rax, rdx
old instr: 0x40d796: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcab4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d799: add r14d, eax
    new instr:0x7fb0666dcab7: add r14d, eax
old instr: 0x40d79c: movzx edx, bx
    new instr:0x7fb0666dcaba: movzx edx, bx
old instr: 0x40d79f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcabd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d7a6: movsxd rdx, edx
    new instr:0x7fb0666dcac4: movsxd rdx, edx
old instr: 0x40d7a9: shl rdx, 0x4
    new instr:0x7fb0666dcac7: shl rdx, 0x4
old instr: 0x40d7ad: add rax, rdx
    new instr:0x7fb0666dcacb: add rax, rdx
old instr: 0x40d7b0: add rax, 0xc9b4
    new instr:0x7fb0666dcace: add rax, 0xc9b4
old instr: 0x40d7b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcad4: mov eax, dword ptr [rax+0x8]
40d7b9
old instr: 0x40d7b9: add r13d, eax
    new instr:0x7fb0666dcad7: add r13d, eax
old instr: 0x40d7bc: movzx edx, bx
    new instr:0x7fb0666dcada: movzx edx, bx
old instr: 0x40d7bf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcadd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d7c6: movsxd rdx, edx
    new instr:0x7fb0666dcae4: movsxd rdx, edx
old instr: 0x40d7c9: shl rdx, 0x4
    new instr:0x7fb0666dcae7: shl rdx, 0x4
old instr: 0x40d7cd: add rax, rdx
    new instr:0x7fb0666dcaeb: add rax, rdx
old instr: 0x40d7d0: add rax, 0xc9b8
    new instr:0x7fb0666dcaee: add rax, 0xc9b8
old instr: 0x40d7d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcaf4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d7d9: add r12d, eax
    new instr:0x7fb0666dcaf7: add r12d, eax
old instr: 0x40d7dc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dcafa: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d7df: cdqe 
    new instr:0x7fb0666dcafd: cdqe 
old instr: 0x40d7e1: add rax, 0x7
    new instr:0x7fb0666dcaff: add rax, 0x7
old instr: 0x40d7e5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcb03: lea rdx, ptr [rax+rax*1]
old instr: 0x40d7e9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcb07: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d7ed: add rax, rdx
    new instr:0x7fb0666dcb0b: add rax, rdx
old instr: 0x40d7f0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcb0e: movzx ebx, word ptr [rax]
old instr: 0x40d7f3: movzx edx, bx
    new instr:0x7fb0666dcb11: movzx edx, bx
old instr: 0x40d7f6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcb14: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d7fd: movsxd rdx, edx
    new instr:0x7fb0666dcb1b: movsxd rdx, edx
old instr: 0x40d800: add rdx, 0xc9b
    new instr:0x7fb0666dcb1e: add rdx, 0xc9b
old instr: 0x40d807: shl rdx, 0x4
    new instr:0x7fb0666dcb25: shl rdx, 0x4
old instr: 0x40d80b: add rax, rdx
    new instr:0x7fb0666dcb29: add rax, rdx
old instr: 0x40d80e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcb2c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d811: add r14d, eax
    new instr:0x7fb0666dcb2f: add r14d, eax
old instr: 0x40d814: movzx edx, bx
    new instr:0x7fb0666dcb32: movzx edx, bx
old instr: 0x40d817: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcb35: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d81e: movsxd rdx, edx
    new instr:0x7fb0666dcb3c: movsxd rdx, edx
old instr: 0x40d821: shl rdx, 0x4
    new instr:0x7fb0666dcb3f: shl rdx, 0x4
old instr: 0x40d825: add rax, rdx
    new instr:0x7fb0666dcb43: add rax, rdx
old instr: 0x40d828: add rax, 0xc9b4
    new instr:0x7fb0666dcb46: add rax, 0xc9b4
old instr: 0x40d82e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcb4c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d831: add r13d, eax
    new instr:0x7fb0666dcb4f: add r13d, eax
old instr: 0x40d834: movzx edx, bx
    new instr:0x7fb0666dcb52: movzx edx, bx
old instr: 0x40d837: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcb55: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d83e: movsxd rdx, edx
    new instr:0x7fb0666dcb5c: movsxd rdx, edx
old instr: 0x40d841: shl rdx, 0x4
    new instr:0x7fb0666dcb5f: shl rdx, 0x4
old instr: 0x40d845: add rax, rdx
    new instr:0x7fb0666dcb63: add rax, rdx
old instr: 0x40d848: add rax, 0xc9b8
    new instr:0x7fb0666dcb66: add rax, 0xc9b8
old instr: 0x40d84e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcb6c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d851: add r12d, eax
    new instr:0x7fb0666dcb6f: add r12d, eax
old instr: 0x40d854: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dcb72: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d857: cdqe 
    new instr:0x7fb0666dcb75: cdqe 
old instr: 0x40d859: add rax, 0x8
    new instr:0x7fb0666dcb77: add rax, 0x8
old instr: 0x40d85d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcb7b: lea rdx, ptr [rax+rax*1]
old instr: 0x40d861: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcb7f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d865: add rax, rdx
    new instr:0x7fb0666dcb83: add rax, rdx
old instr: 0x40d868: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcb86: movzx ebx, word ptr [rax]
old instr: 0x40d86b: movzx edx, bx
    new instr:0x7fb0666dcb89: movzx edx, bx
old instr: 0x40d86e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcb8c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d875: movsxd rdx, edx
    new instr:0x7fb0666dcb93: movsxd rdx, edx
old instr: 0x40d878: add rdx, 0xc9b
    new instr:0x7fb0666dcb96: add rdx, 0xc9b
old instr: 0x40d87f: shl rdx, 0x4
    new instr:0x7fb0666dcb9d: shl rdx, 0x4
old instr: 0x40d883: add rax, rdx
    new instr:0x7fb0666dcba1: add rax, rdx
old instr: 0x40d886: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcba4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d889: add r14d, eax
    new instr:0x7fb0666dcba7: add r14d, eax
old instr: 0x40d88c: movzx edx, bx
    new instr:0x7fb0666dcbaa: movzx edx, bx
old instr: 0x40d88f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcbad: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d896: movsxd rdx, edx
    new instr:0x7fb0666dcbb4: movsxd rdx, edx
old instr: 0x40d899: shl rdx, 0x4
    new instr:0x7fb0666dcbb7: shl rdx, 0x4
old instr: 0x40d89d: add rax, rdx
    new instr:0x7fb0666dcbbb: add rax, rdx
old instr: 0x40d8a0: add rax, 0xc9b4
    new instr:0x7fb0666dcbbe: add rax, 0xc9b4
old instr: 0x40d8a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcbc4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d8a9: add r13d, eax
    new instr:0x7fb0666dcbc7: add r13d, eax
old instr: 0x40d8ac: movzx edx, bx
    new instr:0x7fb0666dcbca: movzx edx, bx
old instr: 0x40d8af: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcbcd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d8b6: movsxd rdx, edx
    new instr:0x7fb0666dcbd4: movsxd rdx, edx
old instr: 0x40d8b9: shl rdx, 0x4
    new instr:0x7fb0666dcbd7: shl rdx, 0x4
old instr: 0x40d8bd: add rax, rdx
    new instr:0x7fb0666dcbdb: add rax, rdx
old instr: 0x40d8c0: add rax, 0xc9b8
    new instr:0x7fb0666dcbde: add rax, 0xc9b8
old instr: 0x40d8c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcbe4: mov eax, dword ptr [rax+0x8]
40d8c9
old instr: 0x40d8c9: add r12d, eax
    new instr:0x7fb0666dcbe7: add r12d, eax
old instr: 0x40d8cc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dcbea: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d8cf: cdqe 
    new instr:0x7fb0666dcbed: cdqe 
old instr: 0x40d8d1: add rax, 0x9
    new instr:0x7fb0666dcbef: add rax, 0x9
old instr: 0x40d8d5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcbf3: lea rdx, ptr [rax+rax*1]
old instr: 0x40d8d9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcbf7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d8dd: add rax, rdx
    new instr:0x7fb0666dcbfb: add rax, rdx
old instr: 0x40d8e0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcbfe: movzx ebx, word ptr [rax]
old instr: 0x40d8e3: movzx edx, bx
    new instr:0x7fb0666dcc01: movzx edx, bx
old instr: 0x40d8e6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcc04: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d8ed: movsxd rdx, edx
    new instr:0x7fb0666dcc0b: movsxd rdx, edx
old instr: 0x40d8f0: add rdx, 0xc9b
    new instr:0x7fb0666dcc0e: add rdx, 0xc9b
old instr: 0x40d8f7: shl rdx, 0x4
    new instr:0x7fb0666dcc15: shl rdx, 0x4
old instr: 0x40d8fb: add rax, rdx
    new instr:0x7fb0666dcc19: add rax, rdx
old instr: 0x40d8fe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcc1c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d901: add r14d, eax
    new instr:0x7fb0666dcc1f: add r14d, eax
old instr: 0x40d904: movzx edx, bx
    new instr:0x7fb0666dcc22: movzx edx, bx
old instr: 0x40d907: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcc25: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d90e: movsxd rdx, edx
    new instr:0x7fb0666dcc2c: movsxd rdx, edx
old instr: 0x40d911: shl rdx, 0x4
    new instr:0x7fb0666dcc2f: shl rdx, 0x4
old instr: 0x40d915: add rax, rdx
    new instr:0x7fb0666dcc33: add rax, rdx
old instr: 0x40d918: add rax, 0xc9b4
    new instr:0x7fb0666dcc36: add rax, 0xc9b4
old instr: 0x40d91e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcc3c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d921: add r13d, eax
    new instr:0x7fb0666dcc3f: add r13d, eax
old instr: 0x40d924: movzx edx, bx
    new instr:0x7fb0666dcc42: movzx edx, bx
old instr: 0x40d927: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcc45: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d92e: movsxd rdx, edx
    new instr:0x7fb0666dcc4c: movsxd rdx, edx
old instr: 0x40d931: shl rdx, 0x4
    new instr:0x7fb0666dcc4f: shl rdx, 0x4
old instr: 0x40d935: add rax, rdx
    new instr:0x7fb0666dcc53: add rax, rdx
old instr: 0x40d938: add rax, 0xc9b8
    new instr:0x7fb0666dcc56: add rax, 0xc9b8
old instr: 0x40d93e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcc5c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d941: add r12d, eax
    new instr:0x7fb0666dcc5f: add r12d, eax
old instr: 0x40d944: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dcc62: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d947: cdqe 
    new instr:0x7fb0666dcc65: cdqe 
old instr: 0x40d949: add rax, 0xa
    new instr:0x7fb0666dcc67: add rax, 0xa
old instr: 0x40d94d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcc6b: lea rdx, ptr [rax+rax*1]
old instr: 0x40d951: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcc6f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d955: add rax, rdx
    new instr:0x7fb0666dcc73: add rax, rdx
old instr: 0x40d958: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcc76: movzx ebx, word ptr [rax]
old instr: 0x40d95b: movzx edx, bx
    new instr:0x7fb0666dcc79: movzx edx, bx
old instr: 0x40d95e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcc7c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d965: movsxd rdx, edx
    new instr:0x7fb0666dcc83: movsxd rdx, edx
old instr: 0x40d968: add rdx, 0xc9b
    new instr:0x7fb0666dcc86: add rdx, 0xc9b
old instr: 0x40d96f: shl rdx, 0x4
    new instr:0x7fb0666dcc8d: shl rdx, 0x4
old instr: 0x40d973: add rax, rdx
    new instr:0x7fb0666dcc91: add rax, rdx
old instr: 0x40d976: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcc94: mov eax, dword ptr [rax+0x8]
old instr: 0x40d979: add r14d, eax
    new instr:0x7fb0666dcc97: add r14d, eax
old instr: 0x40d97c: movzx edx, bx
    new instr:0x7fb0666dcc9a: movzx edx, bx
old instr: 0x40d97f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcc9d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d986: movsxd rdx, edx
    new instr:0x7fb0666dcca4: movsxd rdx, edx
old instr: 0x40d989: shl rdx, 0x4
    new instr:0x7fb0666dcca7: shl rdx, 0x4
old instr: 0x40d98d: add rax, rdx
    new instr:0x7fb0666dccab: add rax, rdx
old instr: 0x40d990: add rax, 0xc9b4
    new instr:0x7fb0666dccae: add rax, 0xc9b4
old instr: 0x40d996: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dccb4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d999: add r13d, eax
    new instr:0x7fb0666dccb7: add r13d, eax
old instr: 0x40d99c: movzx edx, bx
    new instr:0x7fb0666dccba: movzx edx, bx
old instr: 0x40d99f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dccbd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d9a6: movsxd rdx, edx
    new instr:0x7fb0666dccc4: movsxd rdx, edx
old instr: 0x40d9a9: shl rdx, 0x4
    new instr:0x7fb0666dccc7: shl rdx, 0x4
old instr: 0x40d9ad: add rax, rdx
    new instr:0x7fb0666dcccb: add rax, rdx
old instr: 0x40d9b0: add rax, 0xc9b8
    new instr:0x7fb0666dccce: add rax, 0xc9b8
old instr: 0x40d9b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dccd4: mov eax, dword ptr [rax+0x8]
old instr: 0x40d9b9: add r12d, eax
    new instr:0x7fb0666dccd7: add r12d, eax
old instr: 0x40d9bc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dccda: mov eax, dword ptr [rbp-0x34]
old instr: 0x40d9bf: cdqe 
    new instr:0x7fb0666dccdd: cdqe 
old instr: 0x40d9c1: add rax, 0xb
    new instr:0x7fb0666dccdf: add rax, 0xb
old instr: 0x40d9c5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcce3: lea rdx, ptr [rax+rax*1]
old instr: 0x40d9c9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcce7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40d9cd: add rax, rdx
    new instr:0x7fb0666dcceb: add rax, rdx
old instr: 0x40d9d0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dccee: movzx ebx, word ptr [rax]
40d9d3
old instr: 0x40d9d3: movzx edx, bx
    new instr:0x7fb0666dccf1: movzx edx, bx
old instr: 0x40d9d6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dccf4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d9dd: movsxd rdx, edx
    new instr:0x7fb0666dccfb: movsxd rdx, edx
old instr: 0x40d9e0: add rdx, 0xc9b
    new instr:0x7fb0666dccfe: add rdx, 0xc9b
old instr: 0x40d9e7: shl rdx, 0x4
    new instr:0x7fb0666dcd05: shl rdx, 0x4
old instr: 0x40d9eb: add rax, rdx
    new instr:0x7fb0666dcd09: add rax, rdx
old instr: 0x40d9ee: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcd0c: mov eax, dword ptr [rax+0x8]
old instr: 0x40d9f1: add r14d, eax
    new instr:0x7fb0666dcd0f: add r14d, eax
old instr: 0x40d9f4: movzx edx, bx
    new instr:0x7fb0666dcd12: movzx edx, bx
old instr: 0x40d9f7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcd15: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40d9fe: movsxd rdx, edx
    new instr:0x7fb0666dcd1c: movsxd rdx, edx
old instr: 0x40da01: shl rdx, 0x4
    new instr:0x7fb0666dcd1f: shl rdx, 0x4
old instr: 0x40da05: add rax, rdx
    new instr:0x7fb0666dcd23: add rax, rdx
old instr: 0x40da08: add rax, 0xc9b4
    new instr:0x7fb0666dcd26: add rax, 0xc9b4
old instr: 0x40da0e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcd2c: mov eax, dword ptr [rax+0x8]
old instr: 0x40da11: add r13d, eax
    new instr:0x7fb0666dcd2f: add r13d, eax
old instr: 0x40da14: movzx edx, bx
    new instr:0x7fb0666dcd32: movzx edx, bx
old instr: 0x40da17: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcd35: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40da1e: movsxd rdx, edx
    new instr:0x7fb0666dcd3c: movsxd rdx, edx
old instr: 0x40da21: shl rdx, 0x4
    new instr:0x7fb0666dcd3f: shl rdx, 0x4
old instr: 0x40da25: add rax, rdx
    new instr:0x7fb0666dcd43: add rax, rdx
old instr: 0x40da28: add rax, 0xc9b8
    new instr:0x7fb0666dcd46: add rax, 0xc9b8
old instr: 0x40da2e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcd4c: mov eax, dword ptr [rax+0x8]
old instr: 0x40da31: add r12d, eax
    new instr:0x7fb0666dcd4f: add r12d, eax
old instr: 0x40da34: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dcd52: mov eax, dword ptr [rbp-0x34]
old instr: 0x40da37: cdqe 
    new instr:0x7fb0666dcd55: cdqe 
old instr: 0x40da39: add rax, 0xc
    new instr:0x7fb0666dcd57: add rax, 0xc
old instr: 0x40da3d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcd5b: lea rdx, ptr [rax+rax*1]
old instr: 0x40da41: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcd5f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40da45: add rax, rdx
    new instr:0x7fb0666dcd63: add rax, rdx
old instr: 0x40da48: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcd66: movzx ebx, word ptr [rax]
old instr: 0x40da4b: movzx edx, bx
    new instr:0x7fb0666dcd69: movzx edx, bx
old instr: 0x40da4e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcd6c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40da55: movsxd rdx, edx
    new instr:0x7fb0666dcd73: movsxd rdx, edx
old instr: 0x40da58: add rdx, 0xc9b
    new instr:0x7fb0666dcd76: add rdx, 0xc9b
old instr: 0x40da5f: shl rdx, 0x4
    new instr:0x7fb0666dcd7d: shl rdx, 0x4
old instr: 0x40da63: add rax, rdx
    new instr:0x7fb0666dcd81: add rax, rdx
old instr: 0x40da66: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcd84: mov eax, dword ptr [rax+0x8]
old instr: 0x40da69: add r14d, eax
    new instr:0x7fb0666dcd87: add r14d, eax
old instr: 0x40da6c: movzx edx, bx
    new instr:0x7fb0666dcd8a: movzx edx, bx
old instr: 0x40da6f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcd8d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40da76: movsxd rdx, edx
    new instr:0x7fb0666dcd94: movsxd rdx, edx
old instr: 0x40da79: shl rdx, 0x4
    new instr:0x7fb0666dcd97: shl rdx, 0x4
old instr: 0x40da7d: add rax, rdx
    new instr:0x7fb0666dcd9b: add rax, rdx
old instr: 0x40da80: add rax, 0xc9b4
    new instr:0x7fb0666dcd9e: add rax, 0xc9b4
old instr: 0x40da86: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcda4: mov eax, dword ptr [rax+0x8]
old instr: 0x40da89: add r13d, eax
    new instr:0x7fb0666dcda7: add r13d, eax
old instr: 0x40da8c: movzx edx, bx
    new instr:0x7fb0666dcdaa: movzx edx, bx
old instr: 0x40da8f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcdad: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40da96: movsxd rdx, edx
    new instr:0x7fb0666dcdb4: movsxd rdx, edx
old instr: 0x40da99: shl rdx, 0x4
    new instr:0x7fb0666dcdb7: shl rdx, 0x4
old instr: 0x40da9d: add rax, rdx
    new instr:0x7fb0666dcdbb: add rax, rdx
old instr: 0x40daa0: add rax, 0xc9b8
    new instr:0x7fb0666dcdbe: add rax, 0xc9b8
old instr: 0x40daa6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcdc4: mov eax, dword ptr [rax+0x8]
old instr: 0x40daa9: add r12d, eax
    new instr:0x7fb0666dcdc7: add r12d, eax
old instr: 0x40daac: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dcdca: mov eax, dword ptr [rbp-0x34]
old instr: 0x40daaf: cdqe 
    new instr:0x7fb0666dcdcd: cdqe 
old instr: 0x40dab1: add rax, 0xd
    new instr:0x7fb0666dcdcf: add rax, 0xd
old instr: 0x40dab5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcdd3: lea rdx, ptr [rax+rax*1]
old instr: 0x40dab9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcdd7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dabd: add rax, rdx
    new instr:0x7fb0666dcddb: add rax, rdx
old instr: 0x40dac0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcdde: movzx ebx, word ptr [rax]
old instr: 0x40dac3: movzx edx, bx
    new instr:0x7fb0666dcde1: movzx edx, bx
old instr: 0x40dac6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcde4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dacd: movsxd rdx, edx
    new instr:0x7fb0666dcdeb: movsxd rdx, edx
old instr: 0x40dad0: add rdx, 0xc9b
    new instr:0x7fb0666dcdee: add rdx, 0xc9b
old instr: 0x40dad7: shl rdx, 0x4
    new instr:0x7fb0666dcdf5: shl rdx, 0x4
old instr: 0x40dadb: add rax, rdx
    new instr:0x7fb0666dcdf9: add rax, rdx
old instr: 0x40dade: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcdfc: mov eax, dword ptr [rax+0x8]
old instr: 0x40dae1: add r14d, eax
    new instr:0x7fb0666dcdff: add r14d, eax
40dae4
old instr: 0x40dae4: movzx edx, bx
    new instr:0x7fb0666dce02: movzx edx, bx
old instr: 0x40dae7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dce05: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40daee: movsxd rdx, edx
    new instr:0x7fb0666dce0c: movsxd rdx, edx
old instr: 0x40daf1: shl rdx, 0x4
    new instr:0x7fb0666dce0f: shl rdx, 0x4
old instr: 0x40daf5: add rax, rdx
    new instr:0x7fb0666dce13: add rax, rdx
old instr: 0x40daf8: add rax, 0xc9b4
    new instr:0x7fb0666dce16: add rax, 0xc9b4
old instr: 0x40dafe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dce1c: mov eax, dword ptr [rax+0x8]
old instr: 0x40db01: add r13d, eax
    new instr:0x7fb0666dce1f: add r13d, eax
old instr: 0x40db04: movzx edx, bx
    new instr:0x7fb0666dce22: movzx edx, bx
old instr: 0x40db07: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dce25: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40db0e: movsxd rdx, edx
    new instr:0x7fb0666dce2c: movsxd rdx, edx
old instr: 0x40db11: shl rdx, 0x4
    new instr:0x7fb0666dce2f: shl rdx, 0x4
old instr: 0x40db15: add rax, rdx
    new instr:0x7fb0666dce33: add rax, rdx
old instr: 0x40db18: add rax, 0xc9b8
    new instr:0x7fb0666dce36: add rax, 0xc9b8
old instr: 0x40db1e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dce3c: mov eax, dword ptr [rax+0x8]
old instr: 0x40db21: add r12d, eax
    new instr:0x7fb0666dce3f: add r12d, eax
old instr: 0x40db24: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dce42: mov eax, dword ptr [rbp-0x34]
old instr: 0x40db27: cdqe 
    new instr:0x7fb0666dce45: cdqe 
old instr: 0x40db29: add rax, 0xe
    new instr:0x7fb0666dce47: add rax, 0xe
old instr: 0x40db2d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dce4b: lea rdx, ptr [rax+rax*1]
old instr: 0x40db31: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dce4f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40db35: add rax, rdx
    new instr:0x7fb0666dce53: add rax, rdx
old instr: 0x40db38: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dce56: movzx ebx, word ptr [rax]
old instr: 0x40db3b: movzx edx, bx
    new instr:0x7fb0666dce59: movzx edx, bx
old instr: 0x40db3e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dce5c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40db45: movsxd rdx, edx
    new instr:0x7fb0666dce63: movsxd rdx, edx
old instr: 0x40db48: add rdx, 0xc9b
    new instr:0x7fb0666dce66: add rdx, 0xc9b
old instr: 0x40db4f: shl rdx, 0x4
    new instr:0x7fb0666dce6d: shl rdx, 0x4
old instr: 0x40db53: add rax, rdx
    new instr:0x7fb0666dce71: add rax, rdx
old instr: 0x40db56: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dce74: mov eax, dword ptr [rax+0x8]
old instr: 0x40db59: add r14d, eax
    new instr:0x7fb0666dce77: add r14d, eax
old instr: 0x40db5c: movzx edx, bx
    new instr:0x7fb0666dce7a: movzx edx, bx
old instr: 0x40db5f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dce7d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40db66: movsxd rdx, edx
    new instr:0x7fb0666dce84: movsxd rdx, edx
old instr: 0x40db69: shl rdx, 0x4
    new instr:0x7fb0666dce87: shl rdx, 0x4
old instr: 0x40db6d: add rax, rdx
    new instr:0x7fb0666dce8b: add rax, rdx
old instr: 0x40db70: add rax, 0xc9b4
    new instr:0x7fb0666dce8e: add rax, 0xc9b4
old instr: 0x40db76: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dce94: mov eax, dword ptr [rax+0x8]
old instr: 0x40db79: add r13d, eax
    new instr:0x7fb0666dce97: add r13d, eax
old instr: 0x40db7c: movzx edx, bx
    new instr:0x7fb0666dce9a: movzx edx, bx
old instr: 0x40db7f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dce9d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40db86: movsxd rdx, edx
    new instr:0x7fb0666dcea4: movsxd rdx, edx
old instr: 0x40db89: shl rdx, 0x4
    new instr:0x7fb0666dcea7: shl rdx, 0x4
old instr: 0x40db8d: add rax, rdx
    new instr:0x7fb0666dceab: add rax, rdx
old instr: 0x40db90: add rax, 0xc9b8
    new instr:0x7fb0666dceae: add rax, 0xc9b8
old instr: 0x40db96: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dceb4: mov eax, dword ptr [rax+0x8]
old instr: 0x40db99: add r12d, eax
    new instr:0x7fb0666dceb7: add r12d, eax
old instr: 0x40db9c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dceba: mov eax, dword ptr [rbp-0x34]
old instr: 0x40db9f: cdqe 
    new instr:0x7fb0666dcebd: cdqe 
old instr: 0x40dba1: add rax, 0xf
    new instr:0x7fb0666dcebf: add rax, 0xf
old instr: 0x40dba5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcec3: lea rdx, ptr [rax+rax*1]
old instr: 0x40dba9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcec7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dbad: add rax, rdx
    new instr:0x7fb0666dcecb: add rax, rdx
old instr: 0x40dbb0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcece: movzx ebx, word ptr [rax]
old instr: 0x40dbb3: movzx edx, bx
    new instr:0x7fb0666dced1: movzx edx, bx
old instr: 0x40dbb6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dced4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dbbd: movsxd rdx, edx
    new instr:0x7fb0666dcedb: movsxd rdx, edx
old instr: 0x40dbc0: add rdx, 0xc9b
    new instr:0x7fb0666dcede: add rdx, 0xc9b
old instr: 0x40dbc7: shl rdx, 0x4
    new instr:0x7fb0666dcee5: shl rdx, 0x4
old instr: 0x40dbcb: add rax, rdx
    new instr:0x7fb0666dcee9: add rax, rdx
old instr: 0x40dbce: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dceec: mov eax, dword ptr [rax+0x8]
old instr: 0x40dbd1: add r14d, eax
    new instr:0x7fb0666dceef: add r14d, eax
old instr: 0x40dbd4: movzx edx, bx
    new instr:0x7fb0666dcef2: movzx edx, bx
old instr: 0x40dbd7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcef5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dbde: movsxd rdx, edx
    new instr:0x7fb0666dcefc: movsxd rdx, edx
old instr: 0x40dbe1: shl rdx, 0x4
    new instr:0x7fb0666dceff: shl rdx, 0x4
old instr: 0x40dbe5: add rax, rdx
    new instr:0x7fb0666dcf03: add rax, rdx
old instr: 0x40dbe8: add rax, 0xc9b4
    new instr:0x7fb0666dcf06: add rax, 0xc9b4
old instr: 0x40dbee: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcf0c: mov eax, dword ptr [rax+0x8]
old instr: 0x40dbf1: add r13d, eax
    new instr:0x7fb0666dcf0f: add r13d, eax
40dbf4
old instr: 0x40dbf4: movzx edx, bx
    new instr:0x7fb0666dcf12: movzx edx, bx
old instr: 0x40dbf7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcf15: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dbfe: movsxd rdx, edx
    new instr:0x7fb0666dcf1c: movsxd rdx, edx
old instr: 0x40dc01: shl rdx, 0x4
    new instr:0x7fb0666dcf1f: shl rdx, 0x4
old instr: 0x40dc05: add rax, rdx
    new instr:0x7fb0666dcf23: add rax, rdx
old instr: 0x40dc08: add rax, 0xc9b8
    new instr:0x7fb0666dcf26: add rax, 0xc9b8
old instr: 0x40dc0e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcf2c: mov eax, dword ptr [rax+0x8]
old instr: 0x40dc11: add r12d, eax
    new instr:0x7fb0666dcf2f: add r12d, eax
old instr: 0x40dc14: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dcf32: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dc17: cdqe 
    new instr:0x7fb0666dcf35: cdqe 
old instr: 0x40dc19: add rax, 0x10
    new instr:0x7fb0666dcf37: add rax, 0x10
old instr: 0x40dc1d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcf3b: lea rdx, ptr [rax+rax*1]
old instr: 0x40dc21: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcf3f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dc25: add rax, rdx
    new instr:0x7fb0666dcf43: add rax, rdx
old instr: 0x40dc28: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcf46: movzx ebx, word ptr [rax]
old instr: 0x40dc2b: movzx edx, bx
    new instr:0x7fb0666dcf49: movzx edx, bx
old instr: 0x40dc2e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcf4c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dc35: movsxd rdx, edx
    new instr:0x7fb0666dcf53: movsxd rdx, edx
old instr: 0x40dc38: add rdx, 0xc9b
    new instr:0x7fb0666dcf56: add rdx, 0xc9b
old instr: 0x40dc3f: shl rdx, 0x4
    new instr:0x7fb0666dcf5d: shl rdx, 0x4
old instr: 0x40dc43: add rax, rdx
    new instr:0x7fb0666dcf61: add rax, rdx
old instr: 0x40dc46: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcf64: mov eax, dword ptr [rax+0x8]
old instr: 0x40dc49: add r14d, eax
    new instr:0x7fb0666dcf67: add r14d, eax
old instr: 0x40dc4c: movzx edx, bx
    new instr:0x7fb0666dcf6a: movzx edx, bx
old instr: 0x40dc4f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcf6d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dc56: movsxd rdx, edx
    new instr:0x7fb0666dcf74: movsxd rdx, edx
old instr: 0x40dc59: shl rdx, 0x4
    new instr:0x7fb0666dcf77: shl rdx, 0x4
old instr: 0x40dc5d: add rax, rdx
    new instr:0x7fb0666dcf7b: add rax, rdx
old instr: 0x40dc60: add rax, 0xc9b4
    new instr:0x7fb0666dcf7e: add rax, 0xc9b4
old instr: 0x40dc66: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcf84: mov eax, dword ptr [rax+0x8]
old instr: 0x40dc69: add r13d, eax
    new instr:0x7fb0666dcf87: add r13d, eax
old instr: 0x40dc6c: movzx edx, bx
    new instr:0x7fb0666dcf8a: movzx edx, bx
old instr: 0x40dc6f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcf8d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dc76: movsxd rdx, edx
    new instr:0x7fb0666dcf94: movsxd rdx, edx
old instr: 0x40dc79: shl rdx, 0x4
    new instr:0x7fb0666dcf97: shl rdx, 0x4
old instr: 0x40dc7d: add rax, rdx
    new instr:0x7fb0666dcf9b: add rax, rdx
old instr: 0x40dc80: add rax, 0xc9b8
    new instr:0x7fb0666dcf9e: add rax, 0xc9b8
old instr: 0x40dc86: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcfa4: mov eax, dword ptr [rax+0x8]
old instr: 0x40dc89: add r12d, eax
    new instr:0x7fb0666dcfa7: add r12d, eax
old instr: 0x40dc8c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dcfaa: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dc8f: cdqe 
    new instr:0x7fb0666dcfad: cdqe 
old instr: 0x40dc91: add rax, 0x11
    new instr:0x7fb0666dcfaf: add rax, 0x11
old instr: 0x40dc95: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dcfb3: lea rdx, ptr [rax+rax*1]
old instr: 0x40dc99: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dcfb7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dc9d: add rax, rdx
    new instr:0x7fb0666dcfbb: add rax, rdx
old instr: 0x40dca0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dcfbe: movzx ebx, word ptr [rax]
old instr: 0x40dca3: movzx edx, bx
    new instr:0x7fb0666dcfc1: movzx edx, bx
old instr: 0x40dca6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcfc4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dcad: movsxd rdx, edx
    new instr:0x7fb0666dcfcb: movsxd rdx, edx
old instr: 0x40dcb0: add rdx, 0xc9b
    new instr:0x7fb0666dcfce: add rdx, 0xc9b
old instr: 0x40dcb7: shl rdx, 0x4
    new instr:0x7fb0666dcfd5: shl rdx, 0x4
old instr: 0x40dcbb: add rax, rdx
    new instr:0x7fb0666dcfd9: add rax, rdx
old instr: 0x40dcbe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcfdc: mov eax, dword ptr [rax+0x8]
old instr: 0x40dcc1: add r14d, eax
    new instr:0x7fb0666dcfdf: add r14d, eax
old instr: 0x40dcc4: movzx edx, bx
    new instr:0x7fb0666dcfe2: movzx edx, bx
old instr: 0x40dcc7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dcfe5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dcce: movsxd rdx, edx
    new instr:0x7fb0666dcfec: movsxd rdx, edx
old instr: 0x40dcd1: shl rdx, 0x4
    new instr:0x7fb0666dcfef: shl rdx, 0x4
old instr: 0x40dcd5: add rax, rdx
    new instr:0x7fb0666dcff3: add rax, rdx
old instr: 0x40dcd8: add rax, 0xc9b4
    new instr:0x7fb0666dcff6: add rax, 0xc9b4
old instr: 0x40dcde: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dcffc: mov eax, dword ptr [rax+0x8]
old instr: 0x40dce1: add r13d, eax
    new instr:0x7fb0666dcfff: add r13d, eax
old instr: 0x40dce4: movzx edx, bx
    new instr:0x7fb0666dd002: movzx edx, bx
old instr: 0x40dce7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd005: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dcee: movsxd rdx, edx
    new instr:0x7fb0666dd00c: movsxd rdx, edx
old instr: 0x40dcf1: shl rdx, 0x4
    new instr:0x7fb0666dd00f: shl rdx, 0x4
old instr: 0x40dcf5: add rax, rdx
    new instr:0x7fb0666dd013: add rax, rdx
old instr: 0x40dcf8: add rax, 0xc9b8
    new instr:0x7fb0666dd016: add rax, 0xc9b8
old instr: 0x40dcfe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd01c: mov eax, dword ptr [rax+0x8]
old instr: 0x40dd01: add r12d, eax
    new instr:0x7fb0666dd01f: add r12d, eax
40dd04
old instr: 0x40dd04: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd022: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dd07: cdqe 
    new instr:0x7fb0666dd025: cdqe 
old instr: 0x40dd09: add rax, 0x12
    new instr:0x7fb0666dd027: add rax, 0x12
old instr: 0x40dd0d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd02b: lea rdx, ptr [rax+rax*1]
old instr: 0x40dd11: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd02f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dd15: add rax, rdx
    new instr:0x7fb0666dd033: add rax, rdx
old instr: 0x40dd18: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd036: movzx ebx, word ptr [rax]
old instr: 0x40dd1b: movzx edx, bx
    new instr:0x7fb0666dd039: movzx edx, bx
old instr: 0x40dd1e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd03c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dd25: movsxd rdx, edx
    new instr:0x7fb0666dd043: movsxd rdx, edx
old instr: 0x40dd28: add rdx, 0xc9b
    new instr:0x7fb0666dd046: add rdx, 0xc9b
old instr: 0x40dd2f: shl rdx, 0x4
    new instr:0x7fb0666dd04d: shl rdx, 0x4
old instr: 0x40dd33: add rax, rdx
    new instr:0x7fb0666dd051: add rax, rdx
old instr: 0x40dd36: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd054: mov eax, dword ptr [rax+0x8]
old instr: 0x40dd39: add r14d, eax
    new instr:0x7fb0666dd057: add r14d, eax
old instr: 0x40dd3c: movzx edx, bx
    new instr:0x7fb0666dd05a: movzx edx, bx
old instr: 0x40dd3f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd05d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dd46: movsxd rdx, edx
    new instr:0x7fb0666dd064: movsxd rdx, edx
old instr: 0x40dd49: shl rdx, 0x4
    new instr:0x7fb0666dd067: shl rdx, 0x4
old instr: 0x40dd4d: add rax, rdx
    new instr:0x7fb0666dd06b: add rax, rdx
old instr: 0x40dd50: add rax, 0xc9b4
    new instr:0x7fb0666dd06e: add rax, 0xc9b4
old instr: 0x40dd56: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd074: mov eax, dword ptr [rax+0x8]
old instr: 0x40dd59: add r13d, eax
    new instr:0x7fb0666dd077: add r13d, eax
old instr: 0x40dd5c: movzx edx, bx
    new instr:0x7fb0666dd07a: movzx edx, bx
old instr: 0x40dd5f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd07d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dd66: movsxd rdx, edx
    new instr:0x7fb0666dd084: movsxd rdx, edx
old instr: 0x40dd69: shl rdx, 0x4
    new instr:0x7fb0666dd087: shl rdx, 0x4
old instr: 0x40dd6d: add rax, rdx
    new instr:0x7fb0666dd08b: add rax, rdx
old instr: 0x40dd70: add rax, 0xc9b8
    new instr:0x7fb0666dd08e: add rax, 0xc9b8
old instr: 0x40dd76: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd094: mov eax, dword ptr [rax+0x8]
old instr: 0x40dd79: add r12d, eax
    new instr:0x7fb0666dd097: add r12d, eax
old instr: 0x40dd7c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd09a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dd7f: cdqe 
    new instr:0x7fb0666dd09d: cdqe 
old instr: 0x40dd81: add rax, 0x13
    new instr:0x7fb0666dd09f: add rax, 0x13
old instr: 0x40dd85: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd0a3: lea rdx, ptr [rax+rax*1]
old instr: 0x40dd89: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd0a7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dd8d: add rax, rdx
    new instr:0x7fb0666dd0ab: add rax, rdx
old instr: 0x40dd90: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd0ae: movzx ebx, word ptr [rax]
old instr: 0x40dd93: movzx edx, bx
    new instr:0x7fb0666dd0b1: movzx edx, bx
old instr: 0x40dd96: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd0b4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dd9d: movsxd rdx, edx
    new instr:0x7fb0666dd0bb: movsxd rdx, edx
old instr: 0x40dda0: add rdx, 0xc9b
    new instr:0x7fb0666dd0be: add rdx, 0xc9b
old instr: 0x40dda7: shl rdx, 0x4
    new instr:0x7fb0666dd0c5: shl rdx, 0x4
old instr: 0x40ddab: add rax, rdx
    new instr:0x7fb0666dd0c9: add rax, rdx
old instr: 0x40ddae: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd0cc: mov eax, dword ptr [rax+0x8]
old instr: 0x40ddb1: add r14d, eax
    new instr:0x7fb0666dd0cf: add r14d, eax
old instr: 0x40ddb4: movzx edx, bx
    new instr:0x7fb0666dd0d2: movzx edx, bx
old instr: 0x40ddb7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd0d5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ddbe: movsxd rdx, edx
    new instr:0x7fb0666dd0dc: movsxd rdx, edx
old instr: 0x40ddc1: shl rdx, 0x4
    new instr:0x7fb0666dd0df: shl rdx, 0x4
old instr: 0x40ddc5: add rax, rdx
    new instr:0x7fb0666dd0e3: add rax, rdx
old instr: 0x40ddc8: add rax, 0xc9b4
    new instr:0x7fb0666dd0e6: add rax, 0xc9b4
old instr: 0x40ddce: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd0ec: mov eax, dword ptr [rax+0x8]
old instr: 0x40ddd1: add r13d, eax
    new instr:0x7fb0666dd0ef: add r13d, eax
old instr: 0x40ddd4: movzx edx, bx
    new instr:0x7fb0666dd0f2: movzx edx, bx
old instr: 0x40ddd7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd0f5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ddde: movsxd rdx, edx
    new instr:0x7fb0666dd0fc: movsxd rdx, edx
old instr: 0x40dde1: shl rdx, 0x4
    new instr:0x7fb0666dd0ff: shl rdx, 0x4
old instr: 0x40dde5: add rax, rdx
    new instr:0x7fb0666dd103: add rax, rdx
old instr: 0x40dde8: add rax, 0xc9b8
    new instr:0x7fb0666dd106: add rax, 0xc9b8
old instr: 0x40ddee: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd10c: mov eax, dword ptr [rax+0x8]
old instr: 0x40ddf1: add r12d, eax
    new instr:0x7fb0666dd10f: add r12d, eax
old instr: 0x40ddf4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd112: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ddf7: cdqe 
    new instr:0x7fb0666dd115: cdqe 
old instr: 0x40ddf9: add rax, 0x14
    new instr:0x7fb0666dd117: add rax, 0x14
old instr: 0x40ddfd: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd11b: lea rdx, ptr [rax+rax*1]
old instr: 0x40de01: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd11f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40de05: add rax, rdx
    new instr:0x7fb0666dd123: add rax, rdx
old instr: 0x40de08: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd126: movzx ebx, word ptr [rax]
old instr: 0x40de0b: movzx edx, bx
    new instr:0x7fb0666dd129: movzx edx, bx
40de0e
old instr: 0x40de0e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd12c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40de15: movsxd rdx, edx
    new instr:0x7fb0666dd133: movsxd rdx, edx
old instr: 0x40de18: add rdx, 0xc9b
    new instr:0x7fb0666dd136: add rdx, 0xc9b
old instr: 0x40de1f: shl rdx, 0x4
    new instr:0x7fb0666dd13d: shl rdx, 0x4
old instr: 0x40de23: add rax, rdx
    new instr:0x7fb0666dd141: add rax, rdx
old instr: 0x40de26: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd144: mov eax, dword ptr [rax+0x8]
old instr: 0x40de29: add r14d, eax
    new instr:0x7fb0666dd147: add r14d, eax
old instr: 0x40de2c: movzx edx, bx
    new instr:0x7fb0666dd14a: movzx edx, bx
old instr: 0x40de2f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd14d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40de36: movsxd rdx, edx
    new instr:0x7fb0666dd154: movsxd rdx, edx
old instr: 0x40de39: shl rdx, 0x4
    new instr:0x7fb0666dd157: shl rdx, 0x4
old instr: 0x40de3d: add rax, rdx
    new instr:0x7fb0666dd15b: add rax, rdx
old instr: 0x40de40: add rax, 0xc9b4
    new instr:0x7fb0666dd15e: add rax, 0xc9b4
old instr: 0x40de46: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd164: mov eax, dword ptr [rax+0x8]
old instr: 0x40de49: add r13d, eax
    new instr:0x7fb0666dd167: add r13d, eax
old instr: 0x40de4c: movzx edx, bx
    new instr:0x7fb0666dd16a: movzx edx, bx
old instr: 0x40de4f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd16d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40de56: movsxd rdx, edx
    new instr:0x7fb0666dd174: movsxd rdx, edx
old instr: 0x40de59: shl rdx, 0x4
    new instr:0x7fb0666dd177: shl rdx, 0x4
old instr: 0x40de5d: add rax, rdx
    new instr:0x7fb0666dd17b: add rax, rdx
old instr: 0x40de60: add rax, 0xc9b8
    new instr:0x7fb0666dd17e: add rax, 0xc9b8
old instr: 0x40de66: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd184: mov eax, dword ptr [rax+0x8]
old instr: 0x40de69: add r12d, eax
    new instr:0x7fb0666dd187: add r12d, eax
old instr: 0x40de6c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd18a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40de6f: cdqe 
    new instr:0x7fb0666dd18d: cdqe 
old instr: 0x40de71: add rax, 0x15
    new instr:0x7fb0666dd18f: add rax, 0x15
old instr: 0x40de75: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd193: lea rdx, ptr [rax+rax*1]
old instr: 0x40de79: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd197: mov rax, qword ptr [rbp-0x78]
old instr: 0x40de7d: add rax, rdx
    new instr:0x7fb0666dd19b: add rax, rdx
old instr: 0x40de80: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd19e: movzx ebx, word ptr [rax]
old instr: 0x40de83: movzx edx, bx
    new instr:0x7fb0666dd1a1: movzx edx, bx
old instr: 0x40de86: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd1a4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40de8d: movsxd rdx, edx
    new instr:0x7fb0666dd1ab: movsxd rdx, edx
old instr: 0x40de90: add rdx, 0xc9b
    new instr:0x7fb0666dd1ae: add rdx, 0xc9b
old instr: 0x40de97: shl rdx, 0x4
    new instr:0x7fb0666dd1b5: shl rdx, 0x4
old instr: 0x40de9b: add rax, rdx
    new instr:0x7fb0666dd1b9: add rax, rdx
old instr: 0x40de9e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd1bc: mov eax, dword ptr [rax+0x8]
old instr: 0x40dea1: add r14d, eax
    new instr:0x7fb0666dd1bf: add r14d, eax
old instr: 0x40dea4: movzx edx, bx
    new instr:0x7fb0666dd1c2: movzx edx, bx
old instr: 0x40dea7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd1c5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40deae: movsxd rdx, edx
    new instr:0x7fb0666dd1cc: movsxd rdx, edx
old instr: 0x40deb1: shl rdx, 0x4
    new instr:0x7fb0666dd1cf: shl rdx, 0x4
old instr: 0x40deb5: add rax, rdx
    new instr:0x7fb0666dd1d3: add rax, rdx
old instr: 0x40deb8: add rax, 0xc9b4
    new instr:0x7fb0666dd1d6: add rax, 0xc9b4
old instr: 0x40debe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd1dc: mov eax, dword ptr [rax+0x8]
old instr: 0x40dec1: add r13d, eax
    new instr:0x7fb0666dd1df: add r13d, eax
old instr: 0x40dec4: movzx edx, bx
    new instr:0x7fb0666dd1e2: movzx edx, bx
old instr: 0x40dec7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd1e5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dece: movsxd rdx, edx
    new instr:0x7fb0666dd1ec: movsxd rdx, edx
old instr: 0x40ded1: shl rdx, 0x4
    new instr:0x7fb0666dd1ef: shl rdx, 0x4
old instr: 0x40ded5: add rax, rdx
    new instr:0x7fb0666dd1f3: add rax, rdx
old instr: 0x40ded8: add rax, 0xc9b8
    new instr:0x7fb0666dd1f6: add rax, 0xc9b8
old instr: 0x40dede: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd1fc: mov eax, dword ptr [rax+0x8]
old instr: 0x40dee1: add r12d, eax
    new instr:0x7fb0666dd1ff: add r12d, eax
old instr: 0x40dee4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd202: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dee7: cdqe 
    new instr:0x7fb0666dd205: cdqe 
old instr: 0x40dee9: add rax, 0x16
    new instr:0x7fb0666dd207: add rax, 0x16
old instr: 0x40deed: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd20b: lea rdx, ptr [rax+rax*1]
old instr: 0x40def1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd20f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40def5: add rax, rdx
    new instr:0x7fb0666dd213: add rax, rdx
old instr: 0x40def8: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd216: movzx ebx, word ptr [rax]
old instr: 0x40defb: movzx edx, bx
    new instr:0x7fb0666dd219: movzx edx, bx
old instr: 0x40defe: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd21c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df05: movsxd rdx, edx
    new instr:0x7fb0666dd223: movsxd rdx, edx
old instr: 0x40df08: add rdx, 0xc9b
    new instr:0x7fb0666dd226: add rdx, 0xc9b
old instr: 0x40df0f: shl rdx, 0x4
    new instr:0x7fb0666dd22d: shl rdx, 0x4
old instr: 0x40df13: add rax, rdx
    new instr:0x7fb0666dd231: add rax, rdx
old instr: 0x40df16: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd234: mov eax, dword ptr [rax+0x8]
old instr: 0x40df19: add r14d, eax
    new instr:0x7fb0666dd237: add r14d, eax
old instr: 0x40df1c: movzx edx, bx
    new instr:0x7fb0666dd23a: movzx edx, bx
40df1f
old instr: 0x40df1f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd23d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df26: movsxd rdx, edx
    new instr:0x7fb0666dd244: movsxd rdx, edx
old instr: 0x40df29: shl rdx, 0x4
    new instr:0x7fb0666dd247: shl rdx, 0x4
old instr: 0x40df2d: add rax, rdx
    new instr:0x7fb0666dd24b: add rax, rdx
old instr: 0x40df30: add rax, 0xc9b4
    new instr:0x7fb0666dd24e: add rax, 0xc9b4
old instr: 0x40df36: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd254: mov eax, dword ptr [rax+0x8]
old instr: 0x40df39: add r13d, eax
    new instr:0x7fb0666dd257: add r13d, eax
old instr: 0x40df3c: movzx edx, bx
    new instr:0x7fb0666dd25a: movzx edx, bx
old instr: 0x40df3f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd25d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df46: movsxd rdx, edx
    new instr:0x7fb0666dd264: movsxd rdx, edx
old instr: 0x40df49: shl rdx, 0x4
    new instr:0x7fb0666dd267: shl rdx, 0x4
old instr: 0x40df4d: add rax, rdx
    new instr:0x7fb0666dd26b: add rax, rdx
old instr: 0x40df50: add rax, 0xc9b8
    new instr:0x7fb0666dd26e: add rax, 0xc9b8
old instr: 0x40df56: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd274: mov eax, dword ptr [rax+0x8]
old instr: 0x40df59: add r12d, eax
    new instr:0x7fb0666dd277: add r12d, eax
old instr: 0x40df5c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd27a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40df5f: cdqe 
    new instr:0x7fb0666dd27d: cdqe 
old instr: 0x40df61: add rax, 0x17
    new instr:0x7fb0666dd27f: add rax, 0x17
old instr: 0x40df65: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd283: lea rdx, ptr [rax+rax*1]
old instr: 0x40df69: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd287: mov rax, qword ptr [rbp-0x78]
old instr: 0x40df6d: add rax, rdx
    new instr:0x7fb0666dd28b: add rax, rdx
old instr: 0x40df70: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd28e: movzx ebx, word ptr [rax]
old instr: 0x40df73: movzx edx, bx
    new instr:0x7fb0666dd291: movzx edx, bx
old instr: 0x40df76: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd294: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df7d: movsxd rdx, edx
    new instr:0x7fb0666dd29b: movsxd rdx, edx
old instr: 0x40df80: add rdx, 0xc9b
    new instr:0x7fb0666dd29e: add rdx, 0xc9b
old instr: 0x40df87: shl rdx, 0x4
    new instr:0x7fb0666dd2a5: shl rdx, 0x4
old instr: 0x40df8b: add rax, rdx
    new instr:0x7fb0666dd2a9: add rax, rdx
old instr: 0x40df8e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd2ac: mov eax, dword ptr [rax+0x8]
old instr: 0x40df91: add r14d, eax
    new instr:0x7fb0666dd2af: add r14d, eax
old instr: 0x40df94: movzx edx, bx
    new instr:0x7fb0666dd2b2: movzx edx, bx
old instr: 0x40df97: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd2b5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40df9e: movsxd rdx, edx
    new instr:0x7fb0666dd2bc: movsxd rdx, edx
old instr: 0x40dfa1: shl rdx, 0x4
    new instr:0x7fb0666dd2bf: shl rdx, 0x4
old instr: 0x40dfa5: add rax, rdx
    new instr:0x7fb0666dd2c3: add rax, rdx
old instr: 0x40dfa8: add rax, 0xc9b4
    new instr:0x7fb0666dd2c6: add rax, 0xc9b4
old instr: 0x40dfae: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd2cc: mov eax, dword ptr [rax+0x8]
old instr: 0x40dfb1: add r13d, eax
    new instr:0x7fb0666dd2cf: add r13d, eax
old instr: 0x40dfb4: movzx edx, bx
    new instr:0x7fb0666dd2d2: movzx edx, bx
old instr: 0x40dfb7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd2d5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dfbe: movsxd rdx, edx
    new instr:0x7fb0666dd2dc: movsxd rdx, edx
old instr: 0x40dfc1: shl rdx, 0x4
    new instr:0x7fb0666dd2df: shl rdx, 0x4
old instr: 0x40dfc5: add rax, rdx
    new instr:0x7fb0666dd2e3: add rax, rdx
old instr: 0x40dfc8: add rax, 0xc9b8
    new instr:0x7fb0666dd2e6: add rax, 0xc9b8
old instr: 0x40dfce: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd2ec: mov eax, dword ptr [rax+0x8]
old instr: 0x40dfd1: add r12d, eax
    new instr:0x7fb0666dd2ef: add r12d, eax
old instr: 0x40dfd4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd2f2: mov eax, dword ptr [rbp-0x34]
old instr: 0x40dfd7: cdqe 
    new instr:0x7fb0666dd2f5: cdqe 
old instr: 0x40dfd9: add rax, 0x18
    new instr:0x7fb0666dd2f7: add rax, 0x18
old instr: 0x40dfdd: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd2fb: lea rdx, ptr [rax+rax*1]
old instr: 0x40dfe1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd2ff: mov rax, qword ptr [rbp-0x78]
old instr: 0x40dfe5: add rax, rdx
    new instr:0x7fb0666dd303: add rax, rdx
old instr: 0x40dfe8: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd306: movzx ebx, word ptr [rax]
old instr: 0x40dfeb: movzx edx, bx
    new instr:0x7fb0666dd309: movzx edx, bx
old instr: 0x40dfee: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd30c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40dff5: movsxd rdx, edx
    new instr:0x7fb0666dd313: movsxd rdx, edx
old instr: 0x40dff8: add rdx, 0xc9b
    new instr:0x7fb0666dd316: add rdx, 0xc9b
old instr: 0x40dfff: shl rdx, 0x4
    new instr:0x7fb0666dd31d: shl rdx, 0x4
old instr: 0x40e003: add rax, rdx
    new instr:0x7fb0666dd321: add rax, rdx
old instr: 0x40e006: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd324: mov eax, dword ptr [rax+0x8]
old instr: 0x40e009: add r14d, eax
    new instr:0x7fb0666dd327: add r14d, eax
old instr: 0x40e00c: movzx edx, bx
    new instr:0x7fb0666dd32a: movzx edx, bx
old instr: 0x40e00f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd32d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e016: movsxd rdx, edx
    new instr:0x7fb0666dd334: movsxd rdx, edx
old instr: 0x40e019: shl rdx, 0x4
    new instr:0x7fb0666dd337: shl rdx, 0x4
old instr: 0x40e01d: add rax, rdx
    new instr:0x7fb0666dd33b: add rax, rdx
old instr: 0x40e020: add rax, 0xc9b4
    new instr:0x7fb0666dd33e: add rax, 0xc9b4
old instr: 0x40e026: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd344: mov eax, dword ptr [rax+0x8]
old instr: 0x40e029: add r13d, eax
    new instr:0x7fb0666dd347: add r13d, eax
old instr: 0x40e02c: movzx edx, bx
    new instr:0x7fb0666dd34a: movzx edx, bx
40e02f
old instr: 0x40e02f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd34d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e036: movsxd rdx, edx
    new instr:0x7fb0666dd354: movsxd rdx, edx
old instr: 0x40e039: shl rdx, 0x4
    new instr:0x7fb0666dd357: shl rdx, 0x4
old instr: 0x40e03d: add rax, rdx
    new instr:0x7fb0666dd35b: add rax, rdx
old instr: 0x40e040: add rax, 0xc9b8
    new instr:0x7fb0666dd35e: add rax, 0xc9b8
old instr: 0x40e046: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd364: mov eax, dword ptr [rax+0x8]
old instr: 0x40e049: add r12d, eax
    new instr:0x7fb0666dd367: add r12d, eax
old instr: 0x40e04c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd36a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e04f: cdqe 
    new instr:0x7fb0666dd36d: cdqe 
old instr: 0x40e051: add rax, 0x19
    new instr:0x7fb0666dd36f: add rax, 0x19
old instr: 0x40e055: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd373: lea rdx, ptr [rax+rax*1]
old instr: 0x40e059: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd377: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e05d: add rax, rdx
    new instr:0x7fb0666dd37b: add rax, rdx
old instr: 0x40e060: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd37e: movzx ebx, word ptr [rax]
old instr: 0x40e063: movzx edx, bx
    new instr:0x7fb0666dd381: movzx edx, bx
old instr: 0x40e066: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd384: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e06d: movsxd rdx, edx
    new instr:0x7fb0666dd38b: movsxd rdx, edx
old instr: 0x40e070: add rdx, 0xc9b
    new instr:0x7fb0666dd38e: add rdx, 0xc9b
old instr: 0x40e077: shl rdx, 0x4
    new instr:0x7fb0666dd395: shl rdx, 0x4
old instr: 0x40e07b: add rax, rdx
    new instr:0x7fb0666dd399: add rax, rdx
old instr: 0x40e07e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd39c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e081: add r14d, eax
    new instr:0x7fb0666dd39f: add r14d, eax
old instr: 0x40e084: movzx edx, bx
    new instr:0x7fb0666dd3a2: movzx edx, bx
old instr: 0x40e087: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd3a5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e08e: movsxd rdx, edx
    new instr:0x7fb0666dd3ac: movsxd rdx, edx
old instr: 0x40e091: shl rdx, 0x4
    new instr:0x7fb0666dd3af: shl rdx, 0x4
old instr: 0x40e095: add rax, rdx
    new instr:0x7fb0666dd3b3: add rax, rdx
old instr: 0x40e098: add rax, 0xc9b4
    new instr:0x7fb0666dd3b6: add rax, 0xc9b4
old instr: 0x40e09e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd3bc: mov eax, dword ptr [rax+0x8]
old instr: 0x40e0a1: add r13d, eax
    new instr:0x7fb0666dd3bf: add r13d, eax
old instr: 0x40e0a4: movzx edx, bx
    new instr:0x7fb0666dd3c2: movzx edx, bx
old instr: 0x40e0a7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd3c5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e0ae: movsxd rdx, edx
    new instr:0x7fb0666dd3cc: movsxd rdx, edx
old instr: 0x40e0b1: shl rdx, 0x4
    new instr:0x7fb0666dd3cf: shl rdx, 0x4
old instr: 0x40e0b5: add rax, rdx
    new instr:0x7fb0666dd3d3: add rax, rdx
old instr: 0x40e0b8: add rax, 0xc9b8
    new instr:0x7fb0666dd3d6: add rax, 0xc9b8
old instr: 0x40e0be: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd3dc: mov eax, dword ptr [rax+0x8]
old instr: 0x40e0c1: add r12d, eax
    new instr:0x7fb0666dd3df: add r12d, eax
old instr: 0x40e0c4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd3e2: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e0c7: cdqe 
    new instr:0x7fb0666dd3e5: cdqe 
old instr: 0x40e0c9: add rax, 0x1a
    new instr:0x7fb0666dd3e7: add rax, 0x1a
old instr: 0x40e0cd: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd3eb: lea rdx, ptr [rax+rax*1]
old instr: 0x40e0d1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd3ef: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e0d5: add rax, rdx
    new instr:0x7fb0666dd3f3: add rax, rdx
old instr: 0x40e0d8: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd3f6: movzx ebx, word ptr [rax]
old instr: 0x40e0db: movzx edx, bx
    new instr:0x7fb0666dd3f9: movzx edx, bx
old instr: 0x40e0de: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd3fc: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e0e5: movsxd rdx, edx
    new instr:0x7fb0666dd403: movsxd rdx, edx
old instr: 0x40e0e8: add rdx, 0xc9b
    new instr:0x7fb0666dd406: add rdx, 0xc9b
old instr: 0x40e0ef: shl rdx, 0x4
    new instr:0x7fb0666dd40d: shl rdx, 0x4
old instr: 0x40e0f3: add rax, rdx
    new instr:0x7fb0666dd411: add rax, rdx
old instr: 0x40e0f6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd414: mov eax, dword ptr [rax+0x8]
old instr: 0x40e0f9: add r14d, eax
    new instr:0x7fb0666dd417: add r14d, eax
old instr: 0x40e0fc: movzx edx, bx
    new instr:0x7fb0666dd41a: movzx edx, bx
old instr: 0x40e0ff: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd41d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e106: movsxd rdx, edx
    new instr:0x7fb0666dd424: movsxd rdx, edx
old instr: 0x40e109: shl rdx, 0x4
    new instr:0x7fb0666dd427: shl rdx, 0x4
old instr: 0x40e10d: add rax, rdx
    new instr:0x7fb0666dd42b: add rax, rdx
old instr: 0x40e110: add rax, 0xc9b4
    new instr:0x7fb0666dd42e: add rax, 0xc9b4
old instr: 0x40e116: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd434: mov eax, dword ptr [rax+0x8]
old instr: 0x40e119: add r13d, eax
    new instr:0x7fb0666dd437: add r13d, eax
old instr: 0x40e11c: movzx edx, bx
    new instr:0x7fb0666dd43a: movzx edx, bx
old instr: 0x40e11f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd43d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e126: movsxd rdx, edx
    new instr:0x7fb0666dd444: movsxd rdx, edx
old instr: 0x40e129: shl rdx, 0x4
    new instr:0x7fb0666dd447: shl rdx, 0x4
old instr: 0x40e12d: add rax, rdx
    new instr:0x7fb0666dd44b: add rax, rdx
old instr: 0x40e130: add rax, 0xc9b8
    new instr:0x7fb0666dd44e: add rax, 0xc9b8
old instr: 0x40e136: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd454: mov eax, dword ptr [rax+0x8]
old instr: 0x40e139: add r12d, eax
    new instr:0x7fb0666dd457: add r12d, eax
old instr: 0x40e13c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd45a: mov eax, dword ptr [rbp-0x34]
40e13f
old instr: 0x40e13f: cdqe 
    new instr:0x7fb0666dd45d: cdqe 
old instr: 0x40e141: add rax, 0x1b
    new instr:0x7fb0666dd45f: add rax, 0x1b
old instr: 0x40e145: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd463: lea rdx, ptr [rax+rax*1]
old instr: 0x40e149: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd467: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e14d: add rax, rdx
    new instr:0x7fb0666dd46b: add rax, rdx
old instr: 0x40e150: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd46e: movzx ebx, word ptr [rax]
old instr: 0x40e153: movzx edx, bx
    new instr:0x7fb0666dd471: movzx edx, bx
old instr: 0x40e156: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd474: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e15d: movsxd rdx, edx
    new instr:0x7fb0666dd47b: movsxd rdx, edx
old instr: 0x40e160: add rdx, 0xc9b
    new instr:0x7fb0666dd47e: add rdx, 0xc9b
old instr: 0x40e167: shl rdx, 0x4
    new instr:0x7fb0666dd485: shl rdx, 0x4
old instr: 0x40e16b: add rax, rdx
    new instr:0x7fb0666dd489: add rax, rdx
old instr: 0x40e16e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd48c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e171: add r14d, eax
    new instr:0x7fb0666dd48f: add r14d, eax
old instr: 0x40e174: movzx edx, bx
    new instr:0x7fb0666dd492: movzx edx, bx
old instr: 0x40e177: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd495: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e17e: movsxd rdx, edx
    new instr:0x7fb0666dd49c: movsxd rdx, edx
old instr: 0x40e181: shl rdx, 0x4
    new instr:0x7fb0666dd49f: shl rdx, 0x4
old instr: 0x40e185: add rax, rdx
    new instr:0x7fb0666dd4a3: add rax, rdx
old instr: 0x40e188: add rax, 0xc9b4
    new instr:0x7fb0666dd4a6: add rax, 0xc9b4
old instr: 0x40e18e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd4ac: mov eax, dword ptr [rax+0x8]
old instr: 0x40e191: add r13d, eax
    new instr:0x7fb0666dd4af: add r13d, eax
old instr: 0x40e194: movzx edx, bx
    new instr:0x7fb0666dd4b2: movzx edx, bx
old instr: 0x40e197: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd4b5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e19e: movsxd rdx, edx
    new instr:0x7fb0666dd4bc: movsxd rdx, edx
old instr: 0x40e1a1: shl rdx, 0x4
    new instr:0x7fb0666dd4bf: shl rdx, 0x4
old instr: 0x40e1a5: add rax, rdx
    new instr:0x7fb0666dd4c3: add rax, rdx
old instr: 0x40e1a8: add rax, 0xc9b8
    new instr:0x7fb0666dd4c6: add rax, 0xc9b8
old instr: 0x40e1ae: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd4cc: mov eax, dword ptr [rax+0x8]
old instr: 0x40e1b1: add r12d, eax
    new instr:0x7fb0666dd4cf: add r12d, eax
old instr: 0x40e1b4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd4d2: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e1b7: cdqe 
    new instr:0x7fb0666dd4d5: cdqe 
old instr: 0x40e1b9: add rax, 0x1c
    new instr:0x7fb0666dd4d7: add rax, 0x1c
old instr: 0x40e1bd: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd4db: lea rdx, ptr [rax+rax*1]
old instr: 0x40e1c1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd4df: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e1c5: add rax, rdx
    new instr:0x7fb0666dd4e3: add rax, rdx
old instr: 0x40e1c8: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd4e6: movzx ebx, word ptr [rax]
old instr: 0x40e1cb: movzx edx, bx
    new instr:0x7fb0666dd4e9: movzx edx, bx
old instr: 0x40e1ce: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd4ec: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e1d5: movsxd rdx, edx
    new instr:0x7fb0666dd4f3: movsxd rdx, edx
old instr: 0x40e1d8: add rdx, 0xc9b
    new instr:0x7fb0666dd4f6: add rdx, 0xc9b
old instr: 0x40e1df: shl rdx, 0x4
    new instr:0x7fb0666dd4fd: shl rdx, 0x4
old instr: 0x40e1e3: add rax, rdx
    new instr:0x7fb0666dd501: add rax, rdx
old instr: 0x40e1e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd504: mov eax, dword ptr [rax+0x8]
old instr: 0x40e1e9: add r14d, eax
    new instr:0x7fb0666dd507: add r14d, eax
old instr: 0x40e1ec: movzx edx, bx
    new instr:0x7fb0666dd50a: movzx edx, bx
old instr: 0x40e1ef: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd50d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e1f6: movsxd rdx, edx
    new instr:0x7fb0666dd514: movsxd rdx, edx
old instr: 0x40e1f9: shl rdx, 0x4
    new instr:0x7fb0666dd517: shl rdx, 0x4
old instr: 0x40e1fd: add rax, rdx
    new instr:0x7fb0666dd51b: add rax, rdx
old instr: 0x40e200: add rax, 0xc9b4
    new instr:0x7fb0666dd51e: add rax, 0xc9b4
old instr: 0x40e206: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd524: mov eax, dword ptr [rax+0x8]
old instr: 0x40e209: add r13d, eax
    new instr:0x7fb0666dd527: add r13d, eax
old instr: 0x40e20c: movzx edx, bx
    new instr:0x7fb0666dd52a: movzx edx, bx
old instr: 0x40e20f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd52d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e216: movsxd rdx, edx
    new instr:0x7fb0666dd534: movsxd rdx, edx
old instr: 0x40e219: shl rdx, 0x4
    new instr:0x7fb0666dd537: shl rdx, 0x4
old instr: 0x40e21d: add rax, rdx
    new instr:0x7fb0666dd53b: add rax, rdx
old instr: 0x40e220: add rax, 0xc9b8
    new instr:0x7fb0666dd53e: add rax, 0xc9b8
old instr: 0x40e226: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd544: mov eax, dword ptr [rax+0x8]
old instr: 0x40e229: add r12d, eax
    new instr:0x7fb0666dd547: add r12d, eax
old instr: 0x40e22c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd54a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e22f: cdqe 
    new instr:0x7fb0666dd54d: cdqe 
old instr: 0x40e231: add rax, 0x1d
    new instr:0x7fb0666dd54f: add rax, 0x1d
old instr: 0x40e235: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd553: lea rdx, ptr [rax+rax*1]
old instr: 0x40e239: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd557: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e23d: add rax, rdx
    new instr:0x7fb0666dd55b: add rax, rdx
old instr: 0x40e240: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd55e: movzx ebx, word ptr [rax]
old instr: 0x40e243: movzx edx, bx
    new instr:0x7fb0666dd561: movzx edx, bx
old instr: 0x40e246: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd564: mov rax, qword ptr [rbp-0xf8]
40e24d
old instr: 0x40e24d: movsxd rdx, edx
    new instr:0x7fb0666dd56b: movsxd rdx, edx
old instr: 0x40e250: add rdx, 0xc9b
    new instr:0x7fb0666dd56e: add rdx, 0xc9b
old instr: 0x40e257: shl rdx, 0x4
    new instr:0x7fb0666dd575: shl rdx, 0x4
old instr: 0x40e25b: add rax, rdx
    new instr:0x7fb0666dd579: add rax, rdx
old instr: 0x40e25e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd57c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e261: add r14d, eax
    new instr:0x7fb0666dd57f: add r14d, eax
old instr: 0x40e264: movzx edx, bx
    new instr:0x7fb0666dd582: movzx edx, bx
old instr: 0x40e267: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd585: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e26e: movsxd rdx, edx
    new instr:0x7fb0666dd58c: movsxd rdx, edx
old instr: 0x40e271: shl rdx, 0x4
    new instr:0x7fb0666dd58f: shl rdx, 0x4
old instr: 0x40e275: add rax, rdx
    new instr:0x7fb0666dd593: add rax, rdx
old instr: 0x40e278: add rax, 0xc9b4
    new instr:0x7fb0666dd596: add rax, 0xc9b4
old instr: 0x40e27e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd59c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e281: add r13d, eax
    new instr:0x7fb0666dd59f: add r13d, eax
old instr: 0x40e284: movzx edx, bx
    new instr:0x7fb0666dd5a2: movzx edx, bx
old instr: 0x40e287: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd5a5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e28e: movsxd rdx, edx
    new instr:0x7fb0666dd5ac: movsxd rdx, edx
old instr: 0x40e291: shl rdx, 0x4
    new instr:0x7fb0666dd5af: shl rdx, 0x4
old instr: 0x40e295: add rax, rdx
    new instr:0x7fb0666dd5b3: add rax, rdx
old instr: 0x40e298: add rax, 0xc9b8
    new instr:0x7fb0666dd5b6: add rax, 0xc9b8
old instr: 0x40e29e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd5bc: mov eax, dword ptr [rax+0x8]
old instr: 0x40e2a1: add r12d, eax
    new instr:0x7fb0666dd5bf: add r12d, eax
old instr: 0x40e2a4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd5c2: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e2a7: cdqe 
    new instr:0x7fb0666dd5c5: cdqe 
old instr: 0x40e2a9: add rax, 0x1e
    new instr:0x7fb0666dd5c7: add rax, 0x1e
old instr: 0x40e2ad: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd5cb: lea rdx, ptr [rax+rax*1]
old instr: 0x40e2b1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd5cf: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e2b5: add rax, rdx
    new instr:0x7fb0666dd5d3: add rax, rdx
old instr: 0x40e2b8: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd5d6: movzx ebx, word ptr [rax]
old instr: 0x40e2bb: movzx edx, bx
    new instr:0x7fb0666dd5d9: movzx edx, bx
old instr: 0x40e2be: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd5dc: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e2c5: movsxd rdx, edx
    new instr:0x7fb0666dd5e3: movsxd rdx, edx
old instr: 0x40e2c8: add rdx, 0xc9b
    new instr:0x7fb0666dd5e6: add rdx, 0xc9b
old instr: 0x40e2cf: shl rdx, 0x4
    new instr:0x7fb0666dd5ed: shl rdx, 0x4
old instr: 0x40e2d3: add rax, rdx
    new instr:0x7fb0666dd5f1: add rax, rdx
old instr: 0x40e2d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd5f4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e2d9: add r14d, eax
    new instr:0x7fb0666dd5f7: add r14d, eax
old instr: 0x40e2dc: movzx edx, bx
    new instr:0x7fb0666dd5fa: movzx edx, bx
old instr: 0x40e2df: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd5fd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e2e6: movsxd rdx, edx
    new instr:0x7fb0666dd604: movsxd rdx, edx
old instr: 0x40e2e9: shl rdx, 0x4
    new instr:0x7fb0666dd607: shl rdx, 0x4
old instr: 0x40e2ed: add rax, rdx
    new instr:0x7fb0666dd60b: add rax, rdx
old instr: 0x40e2f0: add rax, 0xc9b4
    new instr:0x7fb0666dd60e: add rax, 0xc9b4
old instr: 0x40e2f6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd614: mov eax, dword ptr [rax+0x8]
old instr: 0x40e2f9: add r13d, eax
    new instr:0x7fb0666dd617: add r13d, eax
old instr: 0x40e2fc: movzx edx, bx
    new instr:0x7fb0666dd61a: movzx edx, bx
old instr: 0x40e2ff: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd61d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e306: movsxd rdx, edx
    new instr:0x7fb0666dd624: movsxd rdx, edx
old instr: 0x40e309: shl rdx, 0x4
    new instr:0x7fb0666dd627: shl rdx, 0x4
old instr: 0x40e30d: add rax, rdx
    new instr:0x7fb0666dd62b: add rax, rdx
old instr: 0x40e310: add rax, 0xc9b8
    new instr:0x7fb0666dd62e: add rax, 0xc9b8
old instr: 0x40e316: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd634: mov eax, dword ptr [rax+0x8]
old instr: 0x40e319: add r12d, eax
    new instr:0x7fb0666dd637: add r12d, eax
old instr: 0x40e31c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd63a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e31f: cdqe 
    new instr:0x7fb0666dd63d: cdqe 
old instr: 0x40e321: add rax, 0x1f
    new instr:0x7fb0666dd63f: add rax, 0x1f
old instr: 0x40e325: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd643: lea rdx, ptr [rax+rax*1]
old instr: 0x40e329: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd647: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e32d: add rax, rdx
    new instr:0x7fb0666dd64b: add rax, rdx
old instr: 0x40e330: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd64e: movzx ebx, word ptr [rax]
old instr: 0x40e333: movzx edx, bx
    new instr:0x7fb0666dd651: movzx edx, bx
old instr: 0x40e336: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd654: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e33d: movsxd rdx, edx
    new instr:0x7fb0666dd65b: movsxd rdx, edx
old instr: 0x40e340: add rdx, 0xc9b
    new instr:0x7fb0666dd65e: add rdx, 0xc9b
old instr: 0x40e347: shl rdx, 0x4
    new instr:0x7fb0666dd665: shl rdx, 0x4
old instr: 0x40e34b: add rax, rdx
    new instr:0x7fb0666dd669: add rax, rdx
old instr: 0x40e34e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd66c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e351: add r14d, eax
    new instr:0x7fb0666dd66f: add r14d, eax
old instr: 0x40e354: movzx edx, bx
    new instr:0x7fb0666dd672: movzx edx, bx
old instr: 0x40e357: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd675: mov rax, qword ptr [rbp-0xf8]
40e35e
old instr: 0x40e35e: movsxd rdx, edx
    new instr:0x7fb0666dd67c: movsxd rdx, edx
old instr: 0x40e361: shl rdx, 0x4
    new instr:0x7fb0666dd67f: shl rdx, 0x4
old instr: 0x40e365: add rax, rdx
    new instr:0x7fb0666dd683: add rax, rdx
old instr: 0x40e368: add rax, 0xc9b4
    new instr:0x7fb0666dd686: add rax, 0xc9b4
old instr: 0x40e36e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd68c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e371: add r13d, eax
    new instr:0x7fb0666dd68f: add r13d, eax
old instr: 0x40e374: movzx edx, bx
    new instr:0x7fb0666dd692: movzx edx, bx
old instr: 0x40e377: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd695: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e37e: movsxd rdx, edx
    new instr:0x7fb0666dd69c: movsxd rdx, edx
old instr: 0x40e381: shl rdx, 0x4
    new instr:0x7fb0666dd69f: shl rdx, 0x4
old instr: 0x40e385: add rax, rdx
    new instr:0x7fb0666dd6a3: add rax, rdx
old instr: 0x40e388: add rax, 0xc9b8
    new instr:0x7fb0666dd6a6: add rax, 0xc9b8
old instr: 0x40e38e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd6ac: mov eax, dword ptr [rax+0x8]
old instr: 0x40e391: add r12d, eax
    new instr:0x7fb0666dd6af: add r12d, eax
old instr: 0x40e394: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd6b2: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e397: cdqe 
    new instr:0x7fb0666dd6b5: cdqe 
old instr: 0x40e399: add rax, 0x20
    new instr:0x7fb0666dd6b7: add rax, 0x20
old instr: 0x40e39d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd6bb: lea rdx, ptr [rax+rax*1]
old instr: 0x40e3a1: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd6bf: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e3a5: add rax, rdx
    new instr:0x7fb0666dd6c3: add rax, rdx
old instr: 0x40e3a8: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd6c6: movzx ebx, word ptr [rax]
old instr: 0x40e3ab: movzx edx, bx
    new instr:0x7fb0666dd6c9: movzx edx, bx
old instr: 0x40e3ae: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd6cc: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e3b5: movsxd rdx, edx
    new instr:0x7fb0666dd6d3: movsxd rdx, edx
old instr: 0x40e3b8: add rdx, 0xc9b
    new instr:0x7fb0666dd6d6: add rdx, 0xc9b
old instr: 0x40e3bf: shl rdx, 0x4
    new instr:0x7fb0666dd6dd: shl rdx, 0x4
old instr: 0x40e3c3: add rax, rdx
    new instr:0x7fb0666dd6e1: add rax, rdx
old instr: 0x40e3c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd6e4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e3c9: add r14d, eax
    new instr:0x7fb0666dd6e7: add r14d, eax
old instr: 0x40e3cc: movzx edx, bx
    new instr:0x7fb0666dd6ea: movzx edx, bx
old instr: 0x40e3cf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd6ed: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e3d6: movsxd rdx, edx
    new instr:0x7fb0666dd6f4: movsxd rdx, edx
old instr: 0x40e3d9: shl rdx, 0x4
    new instr:0x7fb0666dd6f7: shl rdx, 0x4
old instr: 0x40e3dd: add rax, rdx
    new instr:0x7fb0666dd6fb: add rax, rdx
old instr: 0x40e3e0: add rax, 0xc9b4
    new instr:0x7fb0666dd6fe: add rax, 0xc9b4
old instr: 0x40e3e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd704: mov eax, dword ptr [rax+0x8]
old instr: 0x40e3e9: add r13d, eax
    new instr:0x7fb0666dd707: add r13d, eax
old instr: 0x40e3ec: movzx edx, bx
    new instr:0x7fb0666dd70a: movzx edx, bx
old instr: 0x40e3ef: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd70d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e3f6: movsxd rdx, edx
    new instr:0x7fb0666dd714: movsxd rdx, edx
old instr: 0x40e3f9: shl rdx, 0x4
    new instr:0x7fb0666dd717: shl rdx, 0x4
old instr: 0x40e3fd: add rax, rdx
    new instr:0x7fb0666dd71b: add rax, rdx
old instr: 0x40e400: add rax, 0xc9b8
    new instr:0x7fb0666dd71e: add rax, 0xc9b8
old instr: 0x40e406: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd724: mov eax, dword ptr [rax+0x8]
old instr: 0x40e409: add r12d, eax
    new instr:0x7fb0666dd727: add r12d, eax
old instr: 0x40e40c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd72a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e40f: cdqe 
    new instr:0x7fb0666dd72d: cdqe 
old instr: 0x40e411: add rax, 0x21
    new instr:0x7fb0666dd72f: add rax, 0x21
old instr: 0x40e415: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd733: lea rdx, ptr [rax+rax*1]
old instr: 0x40e419: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd737: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e41d: add rax, rdx
    new instr:0x7fb0666dd73b: add rax, rdx
old instr: 0x40e420: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd73e: movzx ebx, word ptr [rax]
old instr: 0x40e423: movzx edx, bx
    new instr:0x7fb0666dd741: movzx edx, bx
old instr: 0x40e426: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd744: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e42d: movsxd rdx, edx
    new instr:0x7fb0666dd74b: movsxd rdx, edx
old instr: 0x40e430: add rdx, 0xc9b
    new instr:0x7fb0666dd74e: add rdx, 0xc9b
old instr: 0x40e437: shl rdx, 0x4
    new instr:0x7fb0666dd755: shl rdx, 0x4
old instr: 0x40e43b: add rax, rdx
    new instr:0x7fb0666dd759: add rax, rdx
old instr: 0x40e43e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd75c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e441: add r14d, eax
    new instr:0x7fb0666dd75f: add r14d, eax
old instr: 0x40e444: movzx edx, bx
    new instr:0x7fb0666dd762: movzx edx, bx
old instr: 0x40e447: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd765: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e44e: movsxd rdx, edx
    new instr:0x7fb0666dd76c: movsxd rdx, edx
old instr: 0x40e451: shl rdx, 0x4
    new instr:0x7fb0666dd76f: shl rdx, 0x4
old instr: 0x40e455: add rax, rdx
    new instr:0x7fb0666dd773: add rax, rdx
old instr: 0x40e458: add rax, 0xc9b4
    new instr:0x7fb0666dd776: add rax, 0xc9b4
old instr: 0x40e45e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd77c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e461: add r13d, eax
    new instr:0x7fb0666dd77f: add r13d, eax
old instr: 0x40e464: movzx edx, bx
    new instr:0x7fb0666dd782: movzx edx, bx
old instr: 0x40e467: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd785: mov rax, qword ptr [rbp-0xf8]
40e46e
old instr: 0x40e46e: movsxd rdx, edx
    new instr:0x7fb0666dd78c: movsxd rdx, edx
old instr: 0x40e471: shl rdx, 0x4
    new instr:0x7fb0666dd78f: shl rdx, 0x4
old instr: 0x40e475: add rax, rdx
    new instr:0x7fb0666dd793: add rax, rdx
old instr: 0x40e478: add rax, 0xc9b8
    new instr:0x7fb0666dd796: add rax, 0xc9b8
old instr: 0x40e47e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd79c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e481: add r12d, eax
    new instr:0x7fb0666dd79f: add r12d, eax
old instr: 0x40e484: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd7a2: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e487: cdqe 
    new instr:0x7fb0666dd7a5: cdqe 
old instr: 0x40e489: add rax, 0x22
    new instr:0x7fb0666dd7a7: add rax, 0x22
old instr: 0x40e48d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd7ab: lea rdx, ptr [rax+rax*1]
old instr: 0x40e491: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd7af: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e495: add rax, rdx
    new instr:0x7fb0666dd7b3: add rax, rdx
old instr: 0x40e498: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd7b6: movzx ebx, word ptr [rax]
old instr: 0x40e49b: movzx edx, bx
    new instr:0x7fb0666dd7b9: movzx edx, bx
old instr: 0x40e49e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd7bc: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e4a5: movsxd rdx, edx
    new instr:0x7fb0666dd7c3: movsxd rdx, edx
old instr: 0x40e4a8: add rdx, 0xc9b
    new instr:0x7fb0666dd7c6: add rdx, 0xc9b
old instr: 0x40e4af: shl rdx, 0x4
    new instr:0x7fb0666dd7cd: shl rdx, 0x4
old instr: 0x40e4b3: add rax, rdx
    new instr:0x7fb0666dd7d1: add rax, rdx
old instr: 0x40e4b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd7d4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e4b9: add r14d, eax
    new instr:0x7fb0666dd7d7: add r14d, eax
old instr: 0x40e4bc: movzx edx, bx
    new instr:0x7fb0666dd7da: movzx edx, bx
old instr: 0x40e4bf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd7dd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e4c6: movsxd rdx, edx
    new instr:0x7fb0666dd7e4: movsxd rdx, edx
old instr: 0x40e4c9: shl rdx, 0x4
    new instr:0x7fb0666dd7e7: shl rdx, 0x4
old instr: 0x40e4cd: add rax, rdx
    new instr:0x7fb0666dd7eb: add rax, rdx
old instr: 0x40e4d0: add rax, 0xc9b4
    new instr:0x7fb0666dd7ee: add rax, 0xc9b4
old instr: 0x40e4d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd7f4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e4d9: add r13d, eax
    new instr:0x7fb0666dd7f7: add r13d, eax
old instr: 0x40e4dc: movzx edx, bx
    new instr:0x7fb0666dd7fa: movzx edx, bx
old instr: 0x40e4df: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd7fd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e4e6: movsxd rdx, edx
    new instr:0x7fb0666dd804: movsxd rdx, edx
old instr: 0x40e4e9: shl rdx, 0x4
    new instr:0x7fb0666dd807: shl rdx, 0x4
old instr: 0x40e4ed: add rax, rdx
    new instr:0x7fb0666dd80b: add rax, rdx
old instr: 0x40e4f0: add rax, 0xc9b8
    new instr:0x7fb0666dd80e: add rax, 0xc9b8
old instr: 0x40e4f6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd814: mov eax, dword ptr [rax+0x8]
old instr: 0x40e4f9: add r12d, eax
    new instr:0x7fb0666dd817: add r12d, eax
old instr: 0x40e4fc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd81a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e4ff: cdqe 
    new instr:0x7fb0666dd81d: cdqe 
old instr: 0x40e501: add rax, 0x23
    new instr:0x7fb0666dd81f: add rax, 0x23
old instr: 0x40e505: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd823: lea rdx, ptr [rax+rax*1]
old instr: 0x40e509: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd827: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e50d: add rax, rdx
    new instr:0x7fb0666dd82b: add rax, rdx
old instr: 0x40e510: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd82e: movzx ebx, word ptr [rax]
old instr: 0x40e513: movzx edx, bx
    new instr:0x7fb0666dd831: movzx edx, bx
old instr: 0x40e516: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd834: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e51d: movsxd rdx, edx
    new instr:0x7fb0666dd83b: movsxd rdx, edx
old instr: 0x40e520: add rdx, 0xc9b
    new instr:0x7fb0666dd83e: add rdx, 0xc9b
old instr: 0x40e527: shl rdx, 0x4
    new instr:0x7fb0666dd845: shl rdx, 0x4
old instr: 0x40e52b: add rax, rdx
    new instr:0x7fb0666dd849: add rax, rdx
old instr: 0x40e52e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd84c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e531: add r14d, eax
    new instr:0x7fb0666dd84f: add r14d, eax
old instr: 0x40e534: movzx edx, bx
    new instr:0x7fb0666dd852: movzx edx, bx
old instr: 0x40e537: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd855: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e53e: movsxd rdx, edx
    new instr:0x7fb0666dd85c: movsxd rdx, edx
old instr: 0x40e541: shl rdx, 0x4
    new instr:0x7fb0666dd85f: shl rdx, 0x4
old instr: 0x40e545: add rax, rdx
    new instr:0x7fb0666dd863: add rax, rdx
old instr: 0x40e548: add rax, 0xc9b4
    new instr:0x7fb0666dd866: add rax, 0xc9b4
old instr: 0x40e54e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd86c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e551: add r13d, eax
    new instr:0x7fb0666dd86f: add r13d, eax
old instr: 0x40e554: movzx edx, bx
    new instr:0x7fb0666dd872: movzx edx, bx
old instr: 0x40e557: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd875: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e55e: movsxd rdx, edx
    new instr:0x7fb0666dd87c: movsxd rdx, edx
old instr: 0x40e561: shl rdx, 0x4
    new instr:0x7fb0666dd87f: shl rdx, 0x4
old instr: 0x40e565: add rax, rdx
    new instr:0x7fb0666dd883: add rax, rdx
old instr: 0x40e568: add rax, 0xc9b8
    new instr:0x7fb0666dd886: add rax, 0xc9b8
old instr: 0x40e56e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd88c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e571: add r12d, eax
    new instr:0x7fb0666dd88f: add r12d, eax
old instr: 0x40e574: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd892: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e577: cdqe 
    new instr:0x7fb0666dd895: cdqe 
40e579
old instr: 0x40e579: add rax, 0x24
    new instr:0x7fb0666dd897: add rax, 0x24
old instr: 0x40e57d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd89b: lea rdx, ptr [rax+rax*1]
old instr: 0x40e581: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd89f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e585: add rax, rdx
    new instr:0x7fb0666dd8a3: add rax, rdx
old instr: 0x40e588: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd8a6: movzx ebx, word ptr [rax]
old instr: 0x40e58b: movzx edx, bx
    new instr:0x7fb0666dd8a9: movzx edx, bx
old instr: 0x40e58e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd8ac: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e595: movsxd rdx, edx
    new instr:0x7fb0666dd8b3: movsxd rdx, edx
old instr: 0x40e598: add rdx, 0xc9b
    new instr:0x7fb0666dd8b6: add rdx, 0xc9b
old instr: 0x40e59f: shl rdx, 0x4
    new instr:0x7fb0666dd8bd: shl rdx, 0x4
old instr: 0x40e5a3: add rax, rdx
    new instr:0x7fb0666dd8c1: add rax, rdx
old instr: 0x40e5a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd8c4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e5a9: add r14d, eax
    new instr:0x7fb0666dd8c7: add r14d, eax
old instr: 0x40e5ac: movzx edx, bx
    new instr:0x7fb0666dd8ca: movzx edx, bx
old instr: 0x40e5af: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd8cd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e5b6: movsxd rdx, edx
    new instr:0x7fb0666dd8d4: movsxd rdx, edx
old instr: 0x40e5b9: shl rdx, 0x4
    new instr:0x7fb0666dd8d7: shl rdx, 0x4
old instr: 0x40e5bd: add rax, rdx
    new instr:0x7fb0666dd8db: add rax, rdx
old instr: 0x40e5c0: add rax, 0xc9b4
    new instr:0x7fb0666dd8de: add rax, 0xc9b4
old instr: 0x40e5c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd8e4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e5c9: add r13d, eax
    new instr:0x7fb0666dd8e7: add r13d, eax
old instr: 0x40e5cc: movzx edx, bx
    new instr:0x7fb0666dd8ea: movzx edx, bx
old instr: 0x40e5cf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd8ed: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e5d6: movsxd rdx, edx
    new instr:0x7fb0666dd8f4: movsxd rdx, edx
old instr: 0x40e5d9: shl rdx, 0x4
    new instr:0x7fb0666dd8f7: shl rdx, 0x4
old instr: 0x40e5dd: add rax, rdx
    new instr:0x7fb0666dd8fb: add rax, rdx
old instr: 0x40e5e0: add rax, 0xc9b8
    new instr:0x7fb0666dd8fe: add rax, 0xc9b8
old instr: 0x40e5e6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd904: mov eax, dword ptr [rax+0x8]
old instr: 0x40e5e9: add r12d, eax
    new instr:0x7fb0666dd907: add r12d, eax
old instr: 0x40e5ec: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd90a: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e5ef: cdqe 
    new instr:0x7fb0666dd90d: cdqe 
old instr: 0x40e5f1: add rax, 0x25
    new instr:0x7fb0666dd90f: add rax, 0x25
old instr: 0x40e5f5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd913: lea rdx, ptr [rax+rax*1]
old instr: 0x40e5f9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd917: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e5fd: add rax, rdx
    new instr:0x7fb0666dd91b: add rax, rdx
old instr: 0x40e600: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd91e: movzx ebx, word ptr [rax]
old instr: 0x40e603: movzx edx, bx
    new instr:0x7fb0666dd921: movzx edx, bx
old instr: 0x40e606: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd924: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e60d: movsxd rdx, edx
    new instr:0x7fb0666dd92b: movsxd rdx, edx
old instr: 0x40e610: add rdx, 0xc9b
    new instr:0x7fb0666dd92e: add rdx, 0xc9b
old instr: 0x40e617: shl rdx, 0x4
    new instr:0x7fb0666dd935: shl rdx, 0x4
old instr: 0x40e61b: add rax, rdx
    new instr:0x7fb0666dd939: add rax, rdx
old instr: 0x40e61e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd93c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e621: add r14d, eax
    new instr:0x7fb0666dd93f: add r14d, eax
old instr: 0x40e624: movzx edx, bx
    new instr:0x7fb0666dd942: movzx edx, bx
old instr: 0x40e627: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd945: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e62e: movsxd rdx, edx
    new instr:0x7fb0666dd94c: movsxd rdx, edx
old instr: 0x40e631: shl rdx, 0x4
    new instr:0x7fb0666dd94f: shl rdx, 0x4
old instr: 0x40e635: add rax, rdx
    new instr:0x7fb0666dd953: add rax, rdx
old instr: 0x40e638: add rax, 0xc9b4
    new instr:0x7fb0666dd956: add rax, 0xc9b4
old instr: 0x40e63e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd95c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e641: add r13d, eax
    new instr:0x7fb0666dd95f: add r13d, eax
old instr: 0x40e644: movzx edx, bx
    new instr:0x7fb0666dd962: movzx edx, bx
old instr: 0x40e647: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd965: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e64e: movsxd rdx, edx
    new instr:0x7fb0666dd96c: movsxd rdx, edx
old instr: 0x40e651: shl rdx, 0x4
    new instr:0x7fb0666dd96f: shl rdx, 0x4
old instr: 0x40e655: add rax, rdx
    new instr:0x7fb0666dd973: add rax, rdx
old instr: 0x40e658: add rax, 0xc9b8
    new instr:0x7fb0666dd976: add rax, 0xc9b8
old instr: 0x40e65e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd97c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e661: add r12d, eax
    new instr:0x7fb0666dd97f: add r12d, eax
old instr: 0x40e664: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd982: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e667: cdqe 
    new instr:0x7fb0666dd985: cdqe 
old instr: 0x40e669: add rax, 0x26
    new instr:0x7fb0666dd987: add rax, 0x26
old instr: 0x40e66d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dd98b: lea rdx, ptr [rax+rax*1]
old instr: 0x40e671: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dd98f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e675: add rax, rdx
    new instr:0x7fb0666dd993: add rax, rdx
old instr: 0x40e678: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dd996: movzx ebx, word ptr [rax]
old instr: 0x40e67b: movzx edx, bx
    new instr:0x7fb0666dd999: movzx edx, bx
old instr: 0x40e67e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd99c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e685: movsxd rdx, edx
    new instr:0x7fb0666dd9a3: movsxd rdx, edx
40e688
old instr: 0x40e688: add rdx, 0xc9b
    new instr:0x7fb0666dd9a6: add rdx, 0xc9b
old instr: 0x40e68f: shl rdx, 0x4
    new instr:0x7fb0666dd9ad: shl rdx, 0x4
old instr: 0x40e693: add rax, rdx
    new instr:0x7fb0666dd9b1: add rax, rdx
old instr: 0x40e696: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd9b4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e699: add r14d, eax
    new instr:0x7fb0666dd9b7: add r14d, eax
old instr: 0x40e69c: movzx edx, bx
    new instr:0x7fb0666dd9ba: movzx edx, bx
old instr: 0x40e69f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd9bd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e6a6: movsxd rdx, edx
    new instr:0x7fb0666dd9c4: movsxd rdx, edx
old instr: 0x40e6a9: shl rdx, 0x4
    new instr:0x7fb0666dd9c7: shl rdx, 0x4
old instr: 0x40e6ad: add rax, rdx
    new instr:0x7fb0666dd9cb: add rax, rdx
old instr: 0x40e6b0: add rax, 0xc9b4
    new instr:0x7fb0666dd9ce: add rax, 0xc9b4
old instr: 0x40e6b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd9d4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e6b9: add r13d, eax
    new instr:0x7fb0666dd9d7: add r13d, eax
old instr: 0x40e6bc: movzx edx, bx
    new instr:0x7fb0666dd9da: movzx edx, bx
old instr: 0x40e6bf: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dd9dd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e6c6: movsxd rdx, edx
    new instr:0x7fb0666dd9e4: movsxd rdx, edx
old instr: 0x40e6c9: shl rdx, 0x4
    new instr:0x7fb0666dd9e7: shl rdx, 0x4
old instr: 0x40e6cd: add rax, rdx
    new instr:0x7fb0666dd9eb: add rax, rdx
old instr: 0x40e6d0: add rax, 0xc9b8
    new instr:0x7fb0666dd9ee: add rax, 0xc9b8
old instr: 0x40e6d6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dd9f4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e6d9: add r12d, eax
    new instr:0x7fb0666dd9f7: add r12d, eax
old instr: 0x40e6dc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dd9fa: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e6df: cdqe 
    new instr:0x7fb0666dd9fd: cdqe 
old instr: 0x40e6e1: add rax, 0x27
    new instr:0x7fb0666dd9ff: add rax, 0x27
old instr: 0x40e6e5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dda03: lea rdx, ptr [rax+rax*1]
old instr: 0x40e6e9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dda07: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e6ed: add rax, rdx
    new instr:0x7fb0666dda0b: add rax, rdx
old instr: 0x40e6f0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dda0e: movzx ebx, word ptr [rax]
old instr: 0x40e6f3: movzx edx, bx
    new instr:0x7fb0666dda11: movzx edx, bx
old instr: 0x40e6f6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dda14: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e6fd: movsxd rdx, edx
    new instr:0x7fb0666dda1b: movsxd rdx, edx
old instr: 0x40e700: add rdx, 0xc9b
    new instr:0x7fb0666dda1e: add rdx, 0xc9b
old instr: 0x40e707: shl rdx, 0x4
    new instr:0x7fb0666dda25: shl rdx, 0x4
old instr: 0x40e70b: add rax, rdx
    new instr:0x7fb0666dda29: add rax, rdx
old instr: 0x40e70e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dda2c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e711: add r14d, eax
    new instr:0x7fb0666dda2f: add r14d, eax
old instr: 0x40e714: movzx edx, bx
    new instr:0x7fb0666dda32: movzx edx, bx
old instr: 0x40e717: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dda35: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e71e: movsxd rdx, edx
    new instr:0x7fb0666dda3c: movsxd rdx, edx
old instr: 0x40e721: shl rdx, 0x4
    new instr:0x7fb0666dda3f: shl rdx, 0x4
old instr: 0x40e725: add rax, rdx
    new instr:0x7fb0666dda43: add rax, rdx
old instr: 0x40e728: add rax, 0xc9b4
    new instr:0x7fb0666dda46: add rax, 0xc9b4
old instr: 0x40e72e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dda4c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e731: add r13d, eax
    new instr:0x7fb0666dda4f: add r13d, eax
old instr: 0x40e734: movzx edx, bx
    new instr:0x7fb0666dda52: movzx edx, bx
old instr: 0x40e737: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dda55: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e73e: movsxd rdx, edx
    new instr:0x7fb0666dda5c: movsxd rdx, edx
old instr: 0x40e741: shl rdx, 0x4
    new instr:0x7fb0666dda5f: shl rdx, 0x4
old instr: 0x40e745: add rax, rdx
    new instr:0x7fb0666dda63: add rax, rdx
old instr: 0x40e748: add rax, 0xc9b8
    new instr:0x7fb0666dda66: add rax, 0xc9b8
old instr: 0x40e74e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dda6c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e751: add r12d, eax
    new instr:0x7fb0666dda6f: add r12d, eax
old instr: 0x40e754: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dda72: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e757: cdqe 
    new instr:0x7fb0666dda75: cdqe 
old instr: 0x40e759: add rax, 0x28
    new instr:0x7fb0666dda77: add rax, 0x28
old instr: 0x40e75d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dda7b: lea rdx, ptr [rax+rax*1]
old instr: 0x40e761: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dda7f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e765: add rax, rdx
    new instr:0x7fb0666dda83: add rax, rdx
old instr: 0x40e768: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dda86: movzx ebx, word ptr [rax]
old instr: 0x40e76b: movzx edx, bx
    new instr:0x7fb0666dda89: movzx edx, bx
old instr: 0x40e76e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dda8c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e775: movsxd rdx, edx
    new instr:0x7fb0666dda93: movsxd rdx, edx
old instr: 0x40e778: add rdx, 0xc9b
    new instr:0x7fb0666dda96: add rdx, 0xc9b
old instr: 0x40e77f: shl rdx, 0x4
    new instr:0x7fb0666dda9d: shl rdx, 0x4
old instr: 0x40e783: add rax, rdx
    new instr:0x7fb0666ddaa1: add rax, rdx
old instr: 0x40e786: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddaa4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e789: add r14d, eax
    new instr:0x7fb0666ddaa7: add r14d, eax
old instr: 0x40e78c: movzx edx, bx
    new instr:0x7fb0666ddaaa: movzx edx, bx
old instr: 0x40e78f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddaad: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e796: movsxd rdx, edx
    new instr:0x7fb0666ddab4: movsxd rdx, edx
40e799
old instr: 0x40e799: shl rdx, 0x4
    new instr:0x7fb0666ddab7: shl rdx, 0x4
old instr: 0x40e79d: add rax, rdx
    new instr:0x7fb0666ddabb: add rax, rdx
old instr: 0x40e7a0: add rax, 0xc9b4
    new instr:0x7fb0666ddabe: add rax, 0xc9b4
old instr: 0x40e7a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddac4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e7a9: add r13d, eax
    new instr:0x7fb0666ddac7: add r13d, eax
old instr: 0x40e7ac: movzx edx, bx
    new instr:0x7fb0666ddaca: movzx edx, bx
old instr: 0x40e7af: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddacd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e7b6: movsxd rdx, edx
    new instr:0x7fb0666ddad4: movsxd rdx, edx
old instr: 0x40e7b9: shl rdx, 0x4
    new instr:0x7fb0666ddad7: shl rdx, 0x4
old instr: 0x40e7bd: add rax, rdx
    new instr:0x7fb0666ddadb: add rax, rdx
old instr: 0x40e7c0: add rax, 0xc9b8
    new instr:0x7fb0666ddade: add rax, 0xc9b8
old instr: 0x40e7c6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddae4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e7c9: add r12d, eax
    new instr:0x7fb0666ddae7: add r12d, eax
old instr: 0x40e7cc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ddaea: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e7cf: cdqe 
    new instr:0x7fb0666ddaed: cdqe 
old instr: 0x40e7d1: add rax, 0x29
    new instr:0x7fb0666ddaef: add rax, 0x29
old instr: 0x40e7d5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ddaf3: lea rdx, ptr [rax+rax*1]
old instr: 0x40e7d9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ddaf7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e7dd: add rax, rdx
    new instr:0x7fb0666ddafb: add rax, rdx
old instr: 0x40e7e0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666ddafe: movzx ebx, word ptr [rax]
old instr: 0x40e7e3: movzx edx, bx
    new instr:0x7fb0666ddb01: movzx edx, bx
old instr: 0x40e7e6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddb04: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e7ed: movsxd rdx, edx
    new instr:0x7fb0666ddb0b: movsxd rdx, edx
old instr: 0x40e7f0: add rdx, 0xc9b
    new instr:0x7fb0666ddb0e: add rdx, 0xc9b
old instr: 0x40e7f7: shl rdx, 0x4
    new instr:0x7fb0666ddb15: shl rdx, 0x4
old instr: 0x40e7fb: add rax, rdx
    new instr:0x7fb0666ddb19: add rax, rdx
old instr: 0x40e7fe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddb1c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e801: add r14d, eax
    new instr:0x7fb0666ddb1f: add r14d, eax
old instr: 0x40e804: movzx edx, bx
    new instr:0x7fb0666ddb22: movzx edx, bx
old instr: 0x40e807: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddb25: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e80e: movsxd rdx, edx
    new instr:0x7fb0666ddb2c: movsxd rdx, edx
old instr: 0x40e811: shl rdx, 0x4
    new instr:0x7fb0666ddb2f: shl rdx, 0x4
old instr: 0x40e815: add rax, rdx
    new instr:0x7fb0666ddb33: add rax, rdx
old instr: 0x40e818: add rax, 0xc9b4
    new instr:0x7fb0666ddb36: add rax, 0xc9b4
old instr: 0x40e81e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddb3c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e821: add r13d, eax
    new instr:0x7fb0666ddb3f: add r13d, eax
old instr: 0x40e824: movzx edx, bx
    new instr:0x7fb0666ddb42: movzx edx, bx
old instr: 0x40e827: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddb45: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e82e: movsxd rdx, edx
    new instr:0x7fb0666ddb4c: movsxd rdx, edx
old instr: 0x40e831: shl rdx, 0x4
    new instr:0x7fb0666ddb4f: shl rdx, 0x4
old instr: 0x40e835: add rax, rdx
    new instr:0x7fb0666ddb53: add rax, rdx
old instr: 0x40e838: add rax, 0xc9b8
    new instr:0x7fb0666ddb56: add rax, 0xc9b8
old instr: 0x40e83e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddb5c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e841: add r12d, eax
    new instr:0x7fb0666ddb5f: add r12d, eax
old instr: 0x40e844: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ddb62: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e847: cdqe 
    new instr:0x7fb0666ddb65: cdqe 
old instr: 0x40e849: add rax, 0x2a
    new instr:0x7fb0666ddb67: add rax, 0x2a
old instr: 0x40e84d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ddb6b: lea rdx, ptr [rax+rax*1]
old instr: 0x40e851: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ddb6f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e855: add rax, rdx
    new instr:0x7fb0666ddb73: add rax, rdx
old instr: 0x40e858: movzx ebx, word ptr [rax]
    new instr:0x7fb0666ddb76: movzx ebx, word ptr [rax]
old instr: 0x40e85b: movzx edx, bx
    new instr:0x7fb0666ddb79: movzx edx, bx
old instr: 0x40e85e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddb7c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e865: movsxd rdx, edx
    new instr:0x7fb0666ddb83: movsxd rdx, edx
old instr: 0x40e868: add rdx, 0xc9b
    new instr:0x7fb0666ddb86: add rdx, 0xc9b
old instr: 0x40e86f: shl rdx, 0x4
    new instr:0x7fb0666ddb8d: shl rdx, 0x4
old instr: 0x40e873: add rax, rdx
    new instr:0x7fb0666ddb91: add rax, rdx
old instr: 0x40e876: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddb94: mov eax, dword ptr [rax+0x8]
old instr: 0x40e879: add r14d, eax
    new instr:0x7fb0666ddb97: add r14d, eax
old instr: 0x40e87c: movzx edx, bx
    new instr:0x7fb0666ddb9a: movzx edx, bx
old instr: 0x40e87f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddb9d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e886: movsxd rdx, edx
    new instr:0x7fb0666ddba4: movsxd rdx, edx
old instr: 0x40e889: shl rdx, 0x4
    new instr:0x7fb0666ddba7: shl rdx, 0x4
old instr: 0x40e88d: add rax, rdx
    new instr:0x7fb0666ddbab: add rax, rdx
old instr: 0x40e890: add rax, 0xc9b4
    new instr:0x7fb0666ddbae: add rax, 0xc9b4
old instr: 0x40e896: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddbb4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e899: add r13d, eax
    new instr:0x7fb0666ddbb7: add r13d, eax
old instr: 0x40e89c: movzx edx, bx
    new instr:0x7fb0666ddbba: movzx edx, bx
old instr: 0x40e89f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddbbd: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e8a6: movsxd rdx, edx
    new instr:0x7fb0666ddbc4: movsxd rdx, edx
40e8a9
old instr: 0x40e8a9: shl rdx, 0x4
    new instr:0x7fb0666ddbc7: shl rdx, 0x4
old instr: 0x40e8ad: add rax, rdx
    new instr:0x7fb0666ddbcb: add rax, rdx
old instr: 0x40e8b0: add rax, 0xc9b8
    new instr:0x7fb0666ddbce: add rax, 0xc9b8
old instr: 0x40e8b6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddbd4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e8b9: add r12d, eax
    new instr:0x7fb0666ddbd7: add r12d, eax
old instr: 0x40e8bc: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ddbda: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e8bf: cdqe 
    new instr:0x7fb0666ddbdd: cdqe 
old instr: 0x40e8c1: add rax, 0x2b
    new instr:0x7fb0666ddbdf: add rax, 0x2b
old instr: 0x40e8c5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ddbe3: lea rdx, ptr [rax+rax*1]
old instr: 0x40e8c9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ddbe7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e8cd: add rax, rdx
    new instr:0x7fb0666ddbeb: add rax, rdx
old instr: 0x40e8d0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666ddbee: movzx ebx, word ptr [rax]
old instr: 0x40e8d3: movzx edx, bx
    new instr:0x7fb0666ddbf1: movzx edx, bx
old instr: 0x40e8d6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddbf4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e8dd: movsxd rdx, edx
    new instr:0x7fb0666ddbfb: movsxd rdx, edx
old instr: 0x40e8e0: add rdx, 0xc9b
    new instr:0x7fb0666ddbfe: add rdx, 0xc9b
old instr: 0x40e8e7: shl rdx, 0x4
    new instr:0x7fb0666ddc05: shl rdx, 0x4
old instr: 0x40e8eb: add rax, rdx
    new instr:0x7fb0666ddc09: add rax, rdx
old instr: 0x40e8ee: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddc0c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e8f1: add r14d, eax
    new instr:0x7fb0666ddc0f: add r14d, eax
old instr: 0x40e8f4: movzx edx, bx
    new instr:0x7fb0666ddc12: movzx edx, bx
old instr: 0x40e8f7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddc15: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e8fe: movsxd rdx, edx
    new instr:0x7fb0666ddc1c: movsxd rdx, edx
old instr: 0x40e901: shl rdx, 0x4
    new instr:0x7fb0666ddc1f: shl rdx, 0x4
old instr: 0x40e905: add rax, rdx
    new instr:0x7fb0666ddc23: add rax, rdx
old instr: 0x40e908: add rax, 0xc9b4
    new instr:0x7fb0666ddc26: add rax, 0xc9b4
old instr: 0x40e90e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddc2c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e911: add r13d, eax
    new instr:0x7fb0666ddc2f: add r13d, eax
old instr: 0x40e914: movzx edx, bx
    new instr:0x7fb0666ddc32: movzx edx, bx
old instr: 0x40e917: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddc35: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e91e: movsxd rdx, edx
    new instr:0x7fb0666ddc3c: movsxd rdx, edx
old instr: 0x40e921: shl rdx, 0x4
    new instr:0x7fb0666ddc3f: shl rdx, 0x4
old instr: 0x40e925: add rax, rdx
    new instr:0x7fb0666ddc43: add rax, rdx
old instr: 0x40e928: add rax, 0xc9b8
    new instr:0x7fb0666ddc46: add rax, 0xc9b8
old instr: 0x40e92e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddc4c: mov eax, dword ptr [rax+0x8]
old instr: 0x40e931: add r12d, eax
    new instr:0x7fb0666ddc4f: add r12d, eax
old instr: 0x40e934: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ddc52: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e937: cdqe 
    new instr:0x7fb0666ddc55: cdqe 
old instr: 0x40e939: add rax, 0x2c
    new instr:0x7fb0666ddc57: add rax, 0x2c
old instr: 0x40e93d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ddc5b: lea rdx, ptr [rax+rax*1]
old instr: 0x40e941: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ddc5f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e945: add rax, rdx
    new instr:0x7fb0666ddc63: add rax, rdx
old instr: 0x40e948: movzx ebx, word ptr [rax]
    new instr:0x7fb0666ddc66: movzx ebx, word ptr [rax]
old instr: 0x40e94b: movzx edx, bx
    new instr:0x7fb0666ddc69: movzx edx, bx
old instr: 0x40e94e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddc6c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e955: movsxd rdx, edx
    new instr:0x7fb0666ddc73: movsxd rdx, edx
old instr: 0x40e958: add rdx, 0xc9b
    new instr:0x7fb0666ddc76: add rdx, 0xc9b
old instr: 0x40e95f: shl rdx, 0x4
    new instr:0x7fb0666ddc7d: shl rdx, 0x4
old instr: 0x40e963: add rax, rdx
    new instr:0x7fb0666ddc81: add rax, rdx
old instr: 0x40e966: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddc84: mov eax, dword ptr [rax+0x8]
old instr: 0x40e969: add r14d, eax
    new instr:0x7fb0666ddc87: add r14d, eax
old instr: 0x40e96c: movzx edx, bx
    new instr:0x7fb0666ddc8a: movzx edx, bx
old instr: 0x40e96f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddc8d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e976: movsxd rdx, edx
    new instr:0x7fb0666ddc94: movsxd rdx, edx
old instr: 0x40e979: shl rdx, 0x4
    new instr:0x7fb0666ddc97: shl rdx, 0x4
old instr: 0x40e97d: add rax, rdx
    new instr:0x7fb0666ddc9b: add rax, rdx
old instr: 0x40e980: add rax, 0xc9b4
    new instr:0x7fb0666ddc9e: add rax, 0xc9b4
old instr: 0x40e986: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddca4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e989: add r13d, eax
    new instr:0x7fb0666ddca7: add r13d, eax
old instr: 0x40e98c: movzx edx, bx
    new instr:0x7fb0666ddcaa: movzx edx, bx
old instr: 0x40e98f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddcad: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e996: movsxd rdx, edx
    new instr:0x7fb0666ddcb4: movsxd rdx, edx
old instr: 0x40e999: shl rdx, 0x4
    new instr:0x7fb0666ddcb7: shl rdx, 0x4
old instr: 0x40e99d: add rax, rdx
    new instr:0x7fb0666ddcbb: add rax, rdx
old instr: 0x40e9a0: add rax, 0xc9b8
    new instr:0x7fb0666ddcbe: add rax, 0xc9b8
old instr: 0x40e9a6: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddcc4: mov eax, dword ptr [rax+0x8]
old instr: 0x40e9a9: add r12d, eax
    new instr:0x7fb0666ddcc7: add r12d, eax
old instr: 0x40e9ac: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ddcca: mov eax, dword ptr [rbp-0x34]
old instr: 0x40e9af: cdqe 
    new instr:0x7fb0666ddccd: cdqe 
old instr: 0x40e9b1: add rax, 0x2d
    new instr:0x7fb0666ddccf: add rax, 0x2d
40e9b5
old instr: 0x40e9b5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ddcd3: lea rdx, ptr [rax+rax*1]
old instr: 0x40e9b9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ddcd7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40e9bd: add rax, rdx
    new instr:0x7fb0666ddcdb: add rax, rdx
old instr: 0x40e9c0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666ddcde: movzx ebx, word ptr [rax]
old instr: 0x40e9c3: movzx edx, bx
    new instr:0x7fb0666ddce1: movzx edx, bx
old instr: 0x40e9c6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddce4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e9cd: movsxd rdx, edx
    new instr:0x7fb0666ddceb: movsxd rdx, edx
old instr: 0x40e9d0: add rdx, 0xc9b
    new instr:0x7fb0666ddcee: add rdx, 0xc9b
old instr: 0x40e9d7: shl rdx, 0x4
    new instr:0x7fb0666ddcf5: shl rdx, 0x4
old instr: 0x40e9db: add rax, rdx
    new instr:0x7fb0666ddcf9: add rax, rdx
old instr: 0x40e9de: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddcfc: mov eax, dword ptr [rax+0x8]
old instr: 0x40e9e1: add r14d, eax
    new instr:0x7fb0666ddcff: add r14d, eax
old instr: 0x40e9e4: movzx edx, bx
    new instr:0x7fb0666ddd02: movzx edx, bx
old instr: 0x40e9e7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddd05: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40e9ee: movsxd rdx, edx
    new instr:0x7fb0666ddd0c: movsxd rdx, edx
old instr: 0x40e9f1: shl rdx, 0x4
    new instr:0x7fb0666ddd0f: shl rdx, 0x4
old instr: 0x40e9f5: add rax, rdx
    new instr:0x7fb0666ddd13: add rax, rdx
old instr: 0x40e9f8: add rax, 0xc9b4
    new instr:0x7fb0666ddd16: add rax, 0xc9b4
old instr: 0x40e9fe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddd1c: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea01: add r13d, eax
    new instr:0x7fb0666ddd1f: add r13d, eax
old instr: 0x40ea04: movzx edx, bx
    new instr:0x7fb0666ddd22: movzx edx, bx
old instr: 0x40ea07: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddd25: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ea0e: movsxd rdx, edx
    new instr:0x7fb0666ddd2c: movsxd rdx, edx
old instr: 0x40ea11: shl rdx, 0x4
    new instr:0x7fb0666ddd2f: shl rdx, 0x4
old instr: 0x40ea15: add rax, rdx
    new instr:0x7fb0666ddd33: add rax, rdx
old instr: 0x40ea18: add rax, 0xc9b8
    new instr:0x7fb0666ddd36: add rax, 0xc9b8
old instr: 0x40ea1e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddd3c: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea21: add r12d, eax
    new instr:0x7fb0666ddd3f: add r12d, eax
old instr: 0x40ea24: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ddd42: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ea27: cdqe 
    new instr:0x7fb0666ddd45: cdqe 
old instr: 0x40ea29: add rax, 0x2e
    new instr:0x7fb0666ddd47: add rax, 0x2e
old instr: 0x40ea2d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ddd4b: lea rdx, ptr [rax+rax*1]
old instr: 0x40ea31: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ddd4f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ea35: add rax, rdx
    new instr:0x7fb0666ddd53: add rax, rdx
old instr: 0x40ea38: movzx ebx, word ptr [rax]
    new instr:0x7fb0666ddd56: movzx ebx, word ptr [rax]
old instr: 0x40ea3b: movzx edx, bx
    new instr:0x7fb0666ddd59: movzx edx, bx
old instr: 0x40ea3e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddd5c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ea45: movsxd rdx, edx
    new instr:0x7fb0666ddd63: movsxd rdx, edx
old instr: 0x40ea48: add rdx, 0xc9b
    new instr:0x7fb0666ddd66: add rdx, 0xc9b
old instr: 0x40ea4f: shl rdx, 0x4
    new instr:0x7fb0666ddd6d: shl rdx, 0x4
old instr: 0x40ea53: add rax, rdx
    new instr:0x7fb0666ddd71: add rax, rdx
old instr: 0x40ea56: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddd74: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea59: add r14d, eax
    new instr:0x7fb0666ddd77: add r14d, eax
old instr: 0x40ea5c: movzx edx, bx
    new instr:0x7fb0666ddd7a: movzx edx, bx
old instr: 0x40ea5f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddd7d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ea66: movsxd rdx, edx
    new instr:0x7fb0666ddd84: movsxd rdx, edx
old instr: 0x40ea69: shl rdx, 0x4
    new instr:0x7fb0666ddd87: shl rdx, 0x4
old instr: 0x40ea6d: add rax, rdx
    new instr:0x7fb0666ddd8b: add rax, rdx
old instr: 0x40ea70: add rax, 0xc9b4
    new instr:0x7fb0666ddd8e: add rax, 0xc9b4
old instr: 0x40ea76: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddd94: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea79: add r13d, eax
    new instr:0x7fb0666ddd97: add r13d, eax
old instr: 0x40ea7c: movzx edx, bx
    new instr:0x7fb0666ddd9a: movzx edx, bx
old instr: 0x40ea7f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddd9d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ea86: movsxd rdx, edx
    new instr:0x7fb0666ddda4: movsxd rdx, edx
old instr: 0x40ea89: shl rdx, 0x4
    new instr:0x7fb0666ddda7: shl rdx, 0x4
old instr: 0x40ea8d: add rax, rdx
    new instr:0x7fb0666dddab: add rax, rdx
old instr: 0x40ea90: add rax, 0xc9b8
    new instr:0x7fb0666dddae: add rax, 0xc9b8
old instr: 0x40ea96: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dddb4: mov eax, dword ptr [rax+0x8]
old instr: 0x40ea99: add r12d, eax
    new instr:0x7fb0666dddb7: add r12d, eax
old instr: 0x40ea9c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dddba: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ea9f: cdqe 
    new instr:0x7fb0666dddbd: cdqe 
old instr: 0x40eaa1: add rax, 0x2f
    new instr:0x7fb0666dddbf: add rax, 0x2f
old instr: 0x40eaa5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dddc3: lea rdx, ptr [rax+rax*1]
old instr: 0x40eaa9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dddc7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eaad: add rax, rdx
    new instr:0x7fb0666dddcb: add rax, rdx
old instr: 0x40eab0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dddce: movzx ebx, word ptr [rax]
old instr: 0x40eab3: movzx edx, bx
    new instr:0x7fb0666dddd1: movzx edx, bx
old instr: 0x40eab6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dddd4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eabd: movsxd rdx, edx
    new instr:0x7fb0666ddddb: movsxd rdx, edx
old instr: 0x40eac0: add rdx, 0xc9b
    new instr:0x7fb0666dddde: add rdx, 0xc9b
40eac7
old instr: 0x40eac7: shl rdx, 0x4
    new instr:0x7fb0666ddde5: shl rdx, 0x4
old instr: 0x40eacb: add rax, rdx
    new instr:0x7fb0666ddde9: add rax, rdx
old instr: 0x40eace: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dddec: mov eax, dword ptr [rax+0x8]
old instr: 0x40ead1: add r14d, eax
    new instr:0x7fb0666dddef: add r14d, eax
old instr: 0x40ead4: movzx edx, bx
    new instr:0x7fb0666dddf2: movzx edx, bx
old instr: 0x40ead7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dddf5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eade: movsxd rdx, edx
    new instr:0x7fb0666dddfc: movsxd rdx, edx
old instr: 0x40eae1: shl rdx, 0x4
    new instr:0x7fb0666dddff: shl rdx, 0x4
old instr: 0x40eae5: add rax, rdx
    new instr:0x7fb0666dde03: add rax, rdx
old instr: 0x40eae8: add rax, 0xc9b4
    new instr:0x7fb0666dde06: add rax, 0xc9b4
old instr: 0x40eaee: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dde0c: mov eax, dword ptr [rax+0x8]
old instr: 0x40eaf1: add r13d, eax
    new instr:0x7fb0666dde0f: add r13d, eax
old instr: 0x40eaf4: movzx edx, bx
    new instr:0x7fb0666dde12: movzx edx, bx
old instr: 0x40eaf7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dde15: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eafe: movsxd rdx, edx
    new instr:0x7fb0666dde1c: movsxd rdx, edx
old instr: 0x40eb01: shl rdx, 0x4
    new instr:0x7fb0666dde1f: shl rdx, 0x4
old instr: 0x40eb05: add rax, rdx
    new instr:0x7fb0666dde23: add rax, rdx
old instr: 0x40eb08: add rax, 0xc9b8
    new instr:0x7fb0666dde26: add rax, 0xc9b8
old instr: 0x40eb0e: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dde2c: mov eax, dword ptr [rax+0x8]
old instr: 0x40eb11: add r12d, eax
    new instr:0x7fb0666dde2f: add r12d, eax
old instr: 0x40eb14: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dde32: mov eax, dword ptr [rbp-0x34]
old instr: 0x40eb17: cdqe 
    new instr:0x7fb0666dde35: cdqe 
old instr: 0x40eb19: add rax, 0x30
    new instr:0x7fb0666dde37: add rax, 0x30
old instr: 0x40eb1d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dde3b: lea rdx, ptr [rax+rax*1]
old instr: 0x40eb21: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dde3f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eb25: add rax, rdx
    new instr:0x7fb0666dde43: add rax, rdx
old instr: 0x40eb28: movzx ebx, word ptr [rax]
    new instr:0x7fb0666dde46: movzx ebx, word ptr [rax]
old instr: 0x40eb2b: movzx edx, bx
    new instr:0x7fb0666dde49: movzx edx, bx
old instr: 0x40eb2e: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dde4c: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eb35: movsxd rdx, edx
    new instr:0x7fb0666dde53: movsxd rdx, edx
old instr: 0x40eb38: add rdx, 0xc9b
    new instr:0x7fb0666dde56: add rdx, 0xc9b
old instr: 0x40eb3f: shl rdx, 0x4
    new instr:0x7fb0666dde5d: shl rdx, 0x4
old instr: 0x40eb43: add rax, rdx
    new instr:0x7fb0666dde61: add rax, rdx
old instr: 0x40eb46: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dde64: mov eax, dword ptr [rax+0x8]
old instr: 0x40eb49: add r14d, eax
    new instr:0x7fb0666dde67: add r14d, eax
old instr: 0x40eb4c: movzx edx, bx
    new instr:0x7fb0666dde6a: movzx edx, bx
old instr: 0x40eb4f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dde6d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eb56: movsxd rdx, edx
    new instr:0x7fb0666dde74: movsxd rdx, edx
old instr: 0x40eb59: shl rdx, 0x4
    new instr:0x7fb0666dde77: shl rdx, 0x4
old instr: 0x40eb5d: add rax, rdx
    new instr:0x7fb0666dde7b: add rax, rdx
old instr: 0x40eb60: add rax, 0xc9b4
    new instr:0x7fb0666dde7e: add rax, 0xc9b4
old instr: 0x40eb66: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dde84: mov eax, dword ptr [rax+0x8]
old instr: 0x40eb69: add r13d, eax
    new instr:0x7fb0666dde87: add r13d, eax
old instr: 0x40eb6c: movzx edx, bx
    new instr:0x7fb0666dde8a: movzx edx, bx
old instr: 0x40eb6f: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dde8d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40eb76: movsxd rdx, edx
    new instr:0x7fb0666dde94: movsxd rdx, edx
old instr: 0x40eb79: shl rdx, 0x4
    new instr:0x7fb0666dde97: shl rdx, 0x4
old instr: 0x40eb7d: add rax, rdx
    new instr:0x7fb0666dde9b: add rax, rdx
old instr: 0x40eb80: add rax, 0xc9b8
    new instr:0x7fb0666dde9e: add rax, 0xc9b8
old instr: 0x40eb86: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddea4: mov eax, dword ptr [rax+0x8]
old instr: 0x40eb89: add r12d, eax
    new instr:0x7fb0666ddea7: add r12d, eax
old instr: 0x40eb8c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ddeaa: mov eax, dword ptr [rbp-0x34]
old instr: 0x40eb8f: cdqe 
    new instr:0x7fb0666ddead: cdqe 
old instr: 0x40eb91: add rax, 0x31
    new instr:0x7fb0666ddeaf: add rax, 0x31
old instr: 0x40eb95: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ddeb3: lea rdx, ptr [rax+rax*1]
old instr: 0x40eb99: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ddeb7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eb9d: add rax, rdx
    new instr:0x7fb0666ddebb: add rax, rdx
old instr: 0x40eba0: movzx ebx, word ptr [rax]
    new instr:0x7fb0666ddebe: movzx ebx, word ptr [rax]
old instr: 0x40eba3: movzx edx, bx
    new instr:0x7fb0666ddec1: movzx edx, bx
old instr: 0x40eba6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddec4: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ebad: movsxd rdx, edx
    new instr:0x7fb0666ddecb: movsxd rdx, edx
old instr: 0x40ebb0: add rdx, 0xc9b
    new instr:0x7fb0666ddece: add rdx, 0xc9b
old instr: 0x40ebb7: shl rdx, 0x4
    new instr:0x7fb0666dded5: shl rdx, 0x4
old instr: 0x40ebbb: add rax, rdx
    new instr:0x7fb0666dded9: add rax, rdx
old instr: 0x40ebbe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddedc: mov eax, dword ptr [rax+0x8]
old instr: 0x40ebc1: add r14d, eax
    new instr:0x7fb0666ddedf: add r14d, eax
old instr: 0x40ebc4: movzx edx, bx
    new instr:0x7fb0666ddee2: movzx edx, bx
old instr: 0x40ebc7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddee5: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ebce: movsxd rdx, edx
    new instr:0x7fb0666ddeec: movsxd rdx, edx
old instr: 0x40ebd1: shl rdx, 0x4
    new instr:0x7fb0666ddeef: shl rdx, 0x4
40ebd5
old instr: 0x40ebd5: add rax, rdx
    new instr:0x7fb0666ddef3: add rax, rdx
old instr: 0x40ebd8: add rax, 0xc9b4
    new instr:0x7fb0666ddef6: add rax, 0xc9b4
old instr: 0x40ebde: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddefc: mov eax, dword ptr [rax+0x8]
old instr: 0x40ebe1: add r13d, eax
    new instr:0x7fb0666ddeff: add r13d, eax
old instr: 0x40ebe4: movzx edx, bx
    new instr:0x7fb0666ddf02: movzx edx, bx
old instr: 0x40ebe7: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddf05: mov rax, qword ptr [rbp-0xf8]
old instr: 0x40ebee: movsxd rdx, edx
    new instr:0x7fb0666ddf0c: movsxd rdx, edx
old instr: 0x40ebf1: shl rdx, 0x4
    new instr:0x7fb0666ddf0f: shl rdx, 0x4
old instr: 0x40ebf5: add rax, rdx
    new instr:0x7fb0666ddf13: add rax, rdx
old instr: 0x40ebf8: add rax, 0xc9b8
    new instr:0x7fb0666ddf16: add rax, 0xc9b8
old instr: 0x40ebfe: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666ddf1c: mov eax, dword ptr [rax+0x8]
old instr: 0x40ec01: add r12d, eax
    new instr:0x7fb0666ddf1f: add r12d, eax
old instr: 0x40ec04: mov eax, r14d
    new instr:0x7fb0666ddf22: mov eax, r14d
old instr: 0x40ec07: mov word ptr [rbp-0xb0], ax
    new instr:0x7fb0666ddf25: mov word ptr [rbp-0xb0], ax
old instr: 0x40ec0e: mov eax, r14d
    new instr:0x7fb0666ddf2c: mov eax, r14d
old instr: 0x40ec11: shr eax, 0x10
    new instr:0x7fb0666ddf2f: shr eax, 0x10
old instr: 0x40ec14: mov word ptr [rbp-0xae], ax
    new instr:0x7fb0666ddf32: mov word ptr [rbp-0xae], ax
old instr: 0x40ec1b: mov eax, r13d
    new instr:0x7fb0666ddf39: mov eax, r13d
old instr: 0x40ec1e: mov word ptr [rbp-0xac], ax
    new instr:0x7fb0666ddf3c: mov word ptr [rbp-0xac], ax
old instr: 0x40ec25: mov eax, r13d
    new instr:0x7fb0666ddf43: mov eax, r13d
old instr: 0x40ec28: shr eax, 0x10
    new instr:0x7fb0666ddf46: shr eax, 0x10
old instr: 0x40ec2b: mov word ptr [rbp-0xaa], ax
    new instr:0x7fb0666ddf49: mov word ptr [rbp-0xaa], ax
old instr: 0x40ec32: mov eax, r12d
    new instr:0x7fb0666ddf50: mov eax, r12d
old instr: 0x40ec35: mov word ptr [rbp-0xa8], ax
    new instr:0x7fb0666ddf53: mov word ptr [rbp-0xa8], ax
old instr: 0x40ec3c: mov eax, r12d
    new instr:0x7fb0666ddf5a: mov eax, r12d
old instr: 0x40ec3f: shr eax, 0x10
    new instr:0x7fb0666ddf5d: shr eax, 0x10
old instr: 0x40ec42: mov word ptr [rbp-0xa6], ax
    new instr:0x7fb0666ddf60: mov word ptr [rbp-0xa6], ax
in revert 
removing jump and inserting a dummy entry 
40ecea
old instr: 0x40ecea: mov dword ptr [rbp-0x44], 0x3b9ac9ff
    new instr:0x7fb0666ddf67: mov dword ptr [rbp-0x44], 0x3b9ac9ff
old instr: 0x40ecf1: mov dword ptr [rbp-0x40], 0xffffffff
    new instr:0x7fb0666ddf6e: mov dword ptr [rbp-0x40], 0xffffffff
old instr: 0x40ecf8: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666ddf75: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40ed33
old instr: 0x40ed33: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666ddf7c: mov eax, dword ptr [rbp-0x28]
old instr: 0x40ed36: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666ddf7f: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7fb0666ddf82: jnl 0x7fb0666ddf4a
40ed01
old instr: 0x40ed01: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666ddf84: mov eax, dword ptr [rbp-0x28]
old instr: 0x40ed04: cdqe 
    new instr:0x7fb0666ddf87: cdqe 
old instr: 0x40ed06: movzx eax, word ptr [rbp+rax*2-0xb0]
    new instr:0x7fb0666ddf89: movzx eax, word ptr [rbp+rax*2-0xb0]
old instr: 0x40ed0e: movzx eax, ax
    new instr:0x7fb0666ddf91: movzx eax, ax
old instr: 0x40ed11: cmp eax, dword ptr [rbp-0x44]
    new instr:0x7fb0666ddf94: cmp eax, dword ptr [rbp-0x44]
in revert 
    new instr:0x7fb0666ddf97: jl 0x7fb0666ddfb2
40ed2f
old instr: 0x40ed2f: add dword ptr [rbp-0x28], 0x1
    new instr:0x7fb0666ddf99: add dword ptr [rbp-0x28], 0x1
40ed16
old instr: 0x40ed16: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666ddf9d: mov eax, dword ptr [rbp-0x28]
40ec4e
old instr: 0x40ec4e: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ddfa0: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ec51: mov dword ptr [rbp-0x2c], eax
    new instr:0x7fb0666ddfa3: mov dword ptr [rbp-0x2c], eax
in revert 
removing jump and inserting a dummy entry 
40ecde
old instr: 0x40ecde: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666ddfa6: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40ece1: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666ddfa9: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7fb0666ddfac: jnle 0x7fb0666ddf21
40ec59
old instr: 0x40ec59: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666ddfb2: mov eax, dword ptr [rbp-0x2c]
old instr: 0x40ec5c: cdqe 
    new instr:0x7fb0666ddfb5: cdqe 
old instr: 0x40ec5e: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ddfb7: lea rdx, ptr [rax+rax*1]
old instr: 0x40ec62: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ddfbb: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ec66: add rax, rdx
    new instr:0x7fb0666ddfbf: add rax, rdx
old instr: 0x40ec69: movzx eax, word ptr [rax]
    new instr:0x7fb0666ddfc2: movzx eax, word ptr [rax]
old instr: 0x40ec6c: mov word ptr [rbp-0x82], ax
    new instr:0x7fb0666ddfc5: mov word ptr [rbp-0x82], ax
old instr: 0x40ec73: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666ddfcc: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
40ecd2
old instr: 0x40ecd2: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666ddfd3: mov eax, dword ptr [rbp-0x28]
old instr: 0x40ecd5: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666ddfd6: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7fb0666ddfd9: jnl 0x7fb0666ddf7d
40ec7c
old instr: 0x40ec7c: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666ddfdb: mov eax, dword ptr [rbp-0x28]
40d035
old instr: 0x40d035: mov dword ptr [rbp-0x5c], 0x4
    new instr:0x7fb0666ddfde: mov dword ptr [rbp-0x5c], 0x4
old instr: 0x40d03c: jmp 0x40d062
    new instr:0x7fb0666ddfe5: jmp 0x7fb0666de00b
inserted instruction
40ecda
old instr: 0x40ecda: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7fb0666ddfe7: add dword ptr [rbp-0x2c], 0x1
4107ed
old instr: 0x4107ed: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ddfeb: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4107f4: mov eax, dword ptr [rax+0x74]
    new instr:0x7fb0666ddff2: mov eax, dword ptr [rax+0x74]
old instr: 0x4107f7: mov dword ptr [rbp-0x88], eax
    new instr:0x7fb0666ddff5: mov dword ptr [rbp-0x88], eax
old instr: 0x4107fd: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fb0666ddffb: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
41084f
old instr: 0x41084f: cmp dword ptr [rbp-0x2c], 0xf
    new instr:0x7fb0666de002: cmp dword ptr [rbp-0x2c], 0xf
in revert 
    new instr:0x7fb0666de006: jnle 0x7fb0666ddfb9
410806
old instr: 0x410806: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666de008: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410809: cdqe 
    new instr:0x7fb0666de00b: cdqe 
old instr: 0x41080b: movzx eax, byte ptr [rbp+rax*1-0xf0]
    new instr:0x7fb0666de00d: movzx eax, byte ptr [rbp+rax*1-0xf0]
old instr: 0x410813: test al, al
    new instr:0x7fb0666de015: test al, al
in revert 
    new instr:0x7fb0666de017: jnz 0x7fb0666de034
410832
old instr: 0x410832: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de019: mov rax, qword ptr [rbp-0xf8]
old instr: 0x410839: mov edx, 0x0
    new instr:0x7fb0666de020: mov edx, 0x0
old instr: 0x41083e: mov esi, 0x1
    new instr:0x7fb0666de025: mov esi, 0x1
old instr: 0x410843: mov rdi, rax
    new instr:0x7fb0666de02a: mov rdi, rax
410817
old instr: 0x410817: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de02d: mov rax, qword ptr [rbp-0xf8]
old instr: 0x41081e: mov edx, 0x1
    new instr:0x7fb0666de034: mov edx, 0x1
old instr: 0x410823: mov esi, 0x1
    new instr:0x7fb0666de039: mov esi, 0x1
old instr: 0x410828: mov rdi, rax
    new instr:0x7fb0666de03e: mov rdi, rax
40d2c5
old instr: 0x40d2c5: add dword ptr [rbp-0x28], 0x1
    new instr:0x7fb0666de041: add dword ptr [rbp-0x28], 0x1
40ed3b
old instr: 0x40ed3b: mov eax, dword ptr [rbp-0x44]
    new instr:0x7fb0666de045: mov eax, dword ptr [rbp-0x44]
old instr: 0x40ed3e: add dword ptr [rbp-0x3c], eax
    new instr:0x7fb0666de048: add dword ptr [rbp-0x3c], eax
old instr: 0x40ed41: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de04b: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ed44: cdqe 
    new instr:0x7fb0666de04e: cdqe 
old instr: 0x40ed46: mov eax, dword ptr [rbp+rax*4-0xd0]
    new instr:0x7fb0666de050: mov eax, dword ptr [rbp+rax*4-0xd0]
old instr: 0x40ed4d: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666de057: lea edx, ptr [rax+0x1]
old instr: 0x40ed50: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de05a: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ed53: cdqe 
    new instr:0x7fb0666de05d: cdqe 
old instr: 0x40ed55: mov dword ptr [rbp+rax*4-0xd0], edx
    new instr:0x7fb0666de05f: mov dword ptr [rbp+rax*4-0xd0], edx
old instr: 0x40ed5c: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de066: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ed5f: mov ecx, eax
    new instr:0x7fb0666de069: mov ecx, eax
old instr: 0x40ed61: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de06b: mov rdx, qword ptr [rbp-0xf8]
old instr: 0x40ed68: mov eax, dword ptr [rbp-0x4c]
    new instr:0x7fb0666de072: mov eax, dword ptr [rbp-0x4c]
old instr: 0x40ed6b: cdqe 
    new instr:0x7fb0666de075: cdqe 
old instr: 0x40ed6d: mov byte ptr [rdx+rax*1+0x6a8], cl
    new instr:0x7fb0666de077: mov byte ptr [rdx+rax*1+0x6a8], cl
old instr: 0x40ed74: add dword ptr [rbp-0x4c], 0x1
    new instr:0x7fb0666de07e: add dword ptr [rbp-0x4c], 0x1
old instr: 0x40ed78: cmp dword ptr [rbp-0x5c], 0x6
    new instr:0x7fb0666de082: cmp dword ptr [rbp-0x5c], 0x6
old instr: 0x40ed7c: jnz 0x410343
    new instr:0x7fb0666de086: jnz 0x7fb0666df64d
inserted instruction
40ed82
old instr: 0x40ed82: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de08c: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ed85: mov edx, dword ptr [rbp-0x38]
    new instr:0x7fb0666de08f: mov edx, dword ptr [rbp-0x38]
old instr: 0x40ed88: mov ecx, edx
    new instr:0x7fb0666de092: mov ecx, edx
old instr: 0x40ed8a: sub ecx, eax
    new instr:0x7fb0666de094: sub ecx, eax
old instr: 0x40ed8c: mov eax, ecx
    new instr:0x7fb0666de096: mov eax, ecx
old instr: 0x40ed8e: cmp eax, 0x31
    new instr:0x7fb0666de098: cmp eax, 0x31
old instr: 0x40ed91: jnz 0x410343
    new instr:0x7fb0666de09b: jnz 0x7fb0666df64d
inserted instruction
40ed97
old instr: 0x40ed97: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de0a1: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ed9a: cdqe 
    new instr:0x7fb0666de0a4: cdqe 
old instr: 0x40ed9c: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de0a6: lea rdx, ptr [rax+rax*1]
old instr: 0x40eda0: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de0aa: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eda4: add rax, rdx
    new instr:0x7fb0666de0ae: add rax, rdx
old instr: 0x40eda7: movzx eax, word ptr [rax]
    new instr:0x7fb0666de0b1: movzx eax, word ptr [rax]
old instr: 0x40edaa: movzx edx, ax
    new instr:0x7fb0666de0b4: movzx edx, ax
old instr: 0x40edad: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de0b7: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40edb4: movsxd rsi, edx
    new instr:0x7fb0666de0be: movsxd rsi, edx
old instr: 0x40edb7: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de0c1: mov eax, dword ptr [rbp-0x40]
old instr: 0x40edba: cdqe 
    new instr:0x7fb0666de0c4: cdqe 
old instr: 0x40edbc: add rax, rax
    new instr:0x7fb0666de0c6: add rax, rax
old instr: 0x40edbf: mov rdi, rax
    new instr:0x7fb0666de0c9: mov rdi, rax
old instr: 0x40edc2: shl rdi, 0x7
    new instr:0x7fb0666de0cc: shl rdi, 0x7
old instr: 0x40edc6: add rax, rdi
    new instr:0x7fb0666de0d0: add rax, rdi
old instr: 0x40edc9: add rax, rsi
    new instr:0x7fb0666de0d3: add rax, rsi
old instr: 0x40edcc: add rax, 0x2c60
    new instr:0x7fb0666de0d6: add rax, 0x2c60
old instr: 0x40edd2: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de0dc: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40edd6: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de0e0: lea esi, ptr [rax+0x1]
old instr: 0x40edd9: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de0e3: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ede0: movsxd rdx, edx
    new instr:0x7fb0666de0ea: movsxd rdx, edx
old instr: 0x40ede3: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de0ed: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ede6: cdqe 
    new instr:0x7fb0666de0f0: cdqe 
old instr: 0x40ede8: add rax, rax
    new instr:0x7fb0666de0f2: add rax, rax
old instr: 0x40edeb: mov rdi, rax
    new instr:0x7fb0666de0f5: mov rdi, rax
old instr: 0x40edee: shl rdi, 0x7
    new instr:0x7fb0666de0f8: shl rdi, 0x7
old instr: 0x40edf2: add rax, rdi
    new instr:0x7fb0666de0fc: add rax, rdi
old instr: 0x40edf5: add rax, rdx
    new instr:0x7fb0666de0ff: add rax, rdx
old instr: 0x40edf8: add rax, 0x2c60
    new instr:0x7fb0666de102: add rax, 0x2c60
old instr: 0x40edfe: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de108: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ee02: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de10c: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ee05: cdqe 
    new instr:0x7fb0666de10f: cdqe 
old instr: 0x40ee07: add rax, 0x1
    new instr:0x7fb0666de111: add rax, 0x1
old instr: 0x40ee0b: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de115: lea rdx, ptr [rax+rax*1]
old instr: 0x40ee0f: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de119: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ee13: add rax, rdx
    new instr:0x7fb0666de11d: add rax, rdx
old instr: 0x40ee16: movzx eax, word ptr [rax]
    new instr:0x7fb0666de120: movzx eax, word ptr [rax]
old instr: 0x40ee19: movzx edx, ax
    new instr:0x7fb0666de123: movzx edx, ax
old instr: 0x40ee1c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de126: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ee23: movsxd rsi, edx
    new instr:0x7fb0666de12d: movsxd rsi, edx
old instr: 0x40ee26: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de130: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ee29: cdqe 
    new instr:0x7fb0666de133: cdqe 
old instr: 0x40ee2b: add rax, rax
    new instr:0x7fb0666de135: add rax, rax
old instr: 0x40ee2e: mov rdi, rax
    new instr:0x7fb0666de138: mov rdi, rax
old instr: 0x40ee31: shl rdi, 0x7
    new instr:0x7fb0666de13b: shl rdi, 0x7
old instr: 0x40ee35: add rax, rdi
    new instr:0x7fb0666de13f: add rax, rdi
old instr: 0x40ee38: add rax, rsi
    new instr:0x7fb0666de142: add rax, rsi
old instr: 0x40ee3b: add rax, 0x2c60
    new instr:0x7fb0666de145: add rax, 0x2c60
old instr: 0x40ee41: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de14b: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ee45: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de14f: lea esi, ptr [rax+0x1]
old instr: 0x40ee48: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de152: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ee4f: movsxd rdx, edx
    new instr:0x7fb0666de159: movsxd rdx, edx
old instr: 0x40ee52: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de15c: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ee55: cdqe 
    new instr:0x7fb0666de15f: cdqe 
old instr: 0x40ee57: add rax, rax
    new instr:0x7fb0666de161: add rax, rax
old instr: 0x40ee5a: mov rdi, rax
    new instr:0x7fb0666de164: mov rdi, rax
old instr: 0x40ee5d: shl rdi, 0x7
    new instr:0x7fb0666de167: shl rdi, 0x7
old instr: 0x40ee61: add rax, rdi
    new instr:0x7fb0666de16b: add rax, rdi
old instr: 0x40ee64: add rax, rdx
    new instr:0x7fb0666de16e: add rax, rdx
old instr: 0x40ee67: add rax, 0x2c60
    new instr:0x7fb0666de171: add rax, 0x2c60
old instr: 0x40ee6d: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de177: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ee71: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de17b: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ee74: cdqe 
    new instr:0x7fb0666de17e: cdqe 
40ee76
old instr: 0x40ee76: add rax, 0x2
    new instr:0x7fb0666de180: add rax, 0x2
old instr: 0x40ee7a: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de184: lea rdx, ptr [rax+rax*1]
old instr: 0x40ee7e: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de188: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ee82: add rax, rdx
    new instr:0x7fb0666de18c: add rax, rdx
old instr: 0x40ee85: movzx eax, word ptr [rax]
    new instr:0x7fb0666de18f: movzx eax, word ptr [rax]
old instr: 0x40ee88: movzx edx, ax
    new instr:0x7fb0666de192: movzx edx, ax
old instr: 0x40ee8b: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de195: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ee92: movsxd rsi, edx
    new instr:0x7fb0666de19c: movsxd rsi, edx
old instr: 0x40ee95: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de19f: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ee98: cdqe 
    new instr:0x7fb0666de1a2: cdqe 
old instr: 0x40ee9a: add rax, rax
    new instr:0x7fb0666de1a4: add rax, rax
old instr: 0x40ee9d: mov rdi, rax
    new instr:0x7fb0666de1a7: mov rdi, rax
old instr: 0x40eea0: shl rdi, 0x7
    new instr:0x7fb0666de1aa: shl rdi, 0x7
old instr: 0x40eea4: add rax, rdi
    new instr:0x7fb0666de1ae: add rax, rdi
old instr: 0x40eea7: add rax, rsi
    new instr:0x7fb0666de1b1: add rax, rsi
old instr: 0x40eeaa: add rax, 0x2c60
    new instr:0x7fb0666de1b4: add rax, 0x2c60
old instr: 0x40eeb0: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de1ba: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40eeb4: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de1be: lea esi, ptr [rax+0x1]
old instr: 0x40eeb7: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de1c1: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40eebe: movsxd rdx, edx
    new instr:0x7fb0666de1c8: movsxd rdx, edx
old instr: 0x40eec1: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de1cb: mov eax, dword ptr [rbp-0x40]
old instr: 0x40eec4: cdqe 
    new instr:0x7fb0666de1ce: cdqe 
old instr: 0x40eec6: add rax, rax
    new instr:0x7fb0666de1d0: add rax, rax
old instr: 0x40eec9: mov rdi, rax
    new instr:0x7fb0666de1d3: mov rdi, rax
old instr: 0x40eecc: shl rdi, 0x7
    new instr:0x7fb0666de1d6: shl rdi, 0x7
old instr: 0x40eed0: add rax, rdi
    new instr:0x7fb0666de1da: add rax, rdi
old instr: 0x40eed3: add rax, rdx
    new instr:0x7fb0666de1dd: add rax, rdx
old instr: 0x40eed6: add rax, 0x2c60
    new instr:0x7fb0666de1e0: add rax, 0x2c60
old instr: 0x40eedc: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de1e6: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40eee0: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de1ea: mov eax, dword ptr [rbp-0x34]
old instr: 0x40eee3: cdqe 
    new instr:0x7fb0666de1ed: cdqe 
old instr: 0x40eee5: add rax, 0x3
    new instr:0x7fb0666de1ef: add rax, 0x3
old instr: 0x40eee9: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de1f3: lea rdx, ptr [rax+rax*1]
old instr: 0x40eeed: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de1f7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40eef1: add rax, rdx
    new instr:0x7fb0666de1fb: add rax, rdx
old instr: 0x40eef4: movzx eax, word ptr [rax]
    new instr:0x7fb0666de1fe: movzx eax, word ptr [rax]
old instr: 0x40eef7: movzx edx, ax
    new instr:0x7fb0666de201: movzx edx, ax
old instr: 0x40eefa: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de204: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ef01: movsxd rsi, edx
    new instr:0x7fb0666de20b: movsxd rsi, edx
old instr: 0x40ef04: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de20e: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ef07: cdqe 
    new instr:0x7fb0666de211: cdqe 
old instr: 0x40ef09: add rax, rax
    new instr:0x7fb0666de213: add rax, rax
old instr: 0x40ef0c: mov rdi, rax
    new instr:0x7fb0666de216: mov rdi, rax
old instr: 0x40ef0f: shl rdi, 0x7
    new instr:0x7fb0666de219: shl rdi, 0x7
old instr: 0x40ef13: add rax, rdi
    new instr:0x7fb0666de21d: add rax, rdi
old instr: 0x40ef16: add rax, rsi
    new instr:0x7fb0666de220: add rax, rsi
old instr: 0x40ef19: add rax, 0x2c60
    new instr:0x7fb0666de223: add rax, 0x2c60
old instr: 0x40ef1f: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de229: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ef23: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de22d: lea esi, ptr [rax+0x1]
old instr: 0x40ef26: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de230: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ef2d: movsxd rdx, edx
    new instr:0x7fb0666de237: movsxd rdx, edx
old instr: 0x40ef30: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de23a: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ef33: cdqe 
    new instr:0x7fb0666de23d: cdqe 
old instr: 0x40ef35: add rax, rax
    new instr:0x7fb0666de23f: add rax, rax
old instr: 0x40ef38: mov rdi, rax
    new instr:0x7fb0666de242: mov rdi, rax
old instr: 0x40ef3b: shl rdi, 0x7
    new instr:0x7fb0666de245: shl rdi, 0x7
old instr: 0x40ef3f: add rax, rdi
    new instr:0x7fb0666de249: add rax, rdi
old instr: 0x40ef42: add rax, rdx
    new instr:0x7fb0666de24c: add rax, rdx
old instr: 0x40ef45: add rax, 0x2c60
    new instr:0x7fb0666de24f: add rax, 0x2c60
old instr: 0x40ef4b: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de255: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ef4f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de259: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ef52: cdqe 
    new instr:0x7fb0666de25c: cdqe 
old instr: 0x40ef54: add rax, 0x4
    new instr:0x7fb0666de25e: add rax, 0x4
old instr: 0x40ef58: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de262: lea rdx, ptr [rax+rax*1]
old instr: 0x40ef5c: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de266: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ef60: add rax, rdx
    new instr:0x7fb0666de26a: add rax, rdx
old instr: 0x40ef63: movzx eax, word ptr [rax]
    new instr:0x7fb0666de26d: movzx eax, word ptr [rax]
old instr: 0x40ef66: movzx edx, ax
    new instr:0x7fb0666de270: movzx edx, ax
old instr: 0x40ef69: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de273: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ef70: movsxd rsi, edx
    new instr:0x7fb0666de27a: movsxd rsi, edx
40ef73
old instr: 0x40ef73: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de27d: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ef76: cdqe 
    new instr:0x7fb0666de280: cdqe 
old instr: 0x40ef78: add rax, rax
    new instr:0x7fb0666de282: add rax, rax
old instr: 0x40ef7b: mov rdi, rax
    new instr:0x7fb0666de285: mov rdi, rax
old instr: 0x40ef7e: shl rdi, 0x7
    new instr:0x7fb0666de288: shl rdi, 0x7
old instr: 0x40ef82: add rax, rdi
    new instr:0x7fb0666de28c: add rax, rdi
old instr: 0x40ef85: add rax, rsi
    new instr:0x7fb0666de28f: add rax, rsi
old instr: 0x40ef88: add rax, 0x2c60
    new instr:0x7fb0666de292: add rax, 0x2c60
old instr: 0x40ef8e: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de298: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ef92: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de29c: lea esi, ptr [rax+0x1]
old instr: 0x40ef95: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de29f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ef9c: movsxd rdx, edx
    new instr:0x7fb0666de2a6: movsxd rdx, edx
old instr: 0x40ef9f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de2a9: mov eax, dword ptr [rbp-0x40]
old instr: 0x40efa2: cdqe 
    new instr:0x7fb0666de2ac: cdqe 
old instr: 0x40efa4: add rax, rax
    new instr:0x7fb0666de2ae: add rax, rax
old instr: 0x40efa7: mov rdi, rax
    new instr:0x7fb0666de2b1: mov rdi, rax
old instr: 0x40efaa: shl rdi, 0x7
    new instr:0x7fb0666de2b4: shl rdi, 0x7
old instr: 0x40efae: add rax, rdi
    new instr:0x7fb0666de2b8: add rax, rdi
old instr: 0x40efb1: add rax, rdx
    new instr:0x7fb0666de2bb: add rax, rdx
old instr: 0x40efb4: add rax, 0x2c60
    new instr:0x7fb0666de2be: add rax, 0x2c60
old instr: 0x40efba: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de2c4: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40efbe: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de2c8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40efc1: cdqe 
    new instr:0x7fb0666de2cb: cdqe 
old instr: 0x40efc3: add rax, 0x5
    new instr:0x7fb0666de2cd: add rax, 0x5
old instr: 0x40efc7: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de2d1: lea rdx, ptr [rax+rax*1]
old instr: 0x40efcb: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de2d5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40efcf: add rax, rdx
    new instr:0x7fb0666de2d9: add rax, rdx
old instr: 0x40efd2: movzx eax, word ptr [rax]
    new instr:0x7fb0666de2dc: movzx eax, word ptr [rax]
old instr: 0x40efd5: movzx edx, ax
    new instr:0x7fb0666de2df: movzx edx, ax
old instr: 0x40efd8: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de2e2: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40efdf: movsxd rsi, edx
    new instr:0x7fb0666de2e9: movsxd rsi, edx
old instr: 0x40efe2: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de2ec: mov eax, dword ptr [rbp-0x40]
old instr: 0x40efe5: cdqe 
    new instr:0x7fb0666de2ef: cdqe 
old instr: 0x40efe7: add rax, rax
    new instr:0x7fb0666de2f1: add rax, rax
old instr: 0x40efea: mov rdi, rax
    new instr:0x7fb0666de2f4: mov rdi, rax
old instr: 0x40efed: shl rdi, 0x7
    new instr:0x7fb0666de2f7: shl rdi, 0x7
old instr: 0x40eff1: add rax, rdi
    new instr:0x7fb0666de2fb: add rax, rdi
old instr: 0x40eff4: add rax, rsi
    new instr:0x7fb0666de2fe: add rax, rsi
old instr: 0x40eff7: add rax, 0x2c60
    new instr:0x7fb0666de301: add rax, 0x2c60
old instr: 0x40effd: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de307: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f001: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de30b: lea esi, ptr [rax+0x1]
old instr: 0x40f004: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de30e: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f00b: movsxd rdx, edx
    new instr:0x7fb0666de315: movsxd rdx, edx
old instr: 0x40f00e: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de318: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f011: cdqe 
    new instr:0x7fb0666de31b: cdqe 
old instr: 0x40f013: add rax, rax
    new instr:0x7fb0666de31d: add rax, rax
old instr: 0x40f016: mov rdi, rax
    new instr:0x7fb0666de320: mov rdi, rax
old instr: 0x40f019: shl rdi, 0x7
    new instr:0x7fb0666de323: shl rdi, 0x7
old instr: 0x40f01d: add rax, rdi
    new instr:0x7fb0666de327: add rax, rdi
old instr: 0x40f020: add rax, rdx
    new instr:0x7fb0666de32a: add rax, rdx
old instr: 0x40f023: add rax, 0x2c60
    new instr:0x7fb0666de32d: add rax, 0x2c60
old instr: 0x40f029: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de333: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f02d: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de337: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f030: cdqe 
    new instr:0x7fb0666de33a: cdqe 
old instr: 0x40f032: add rax, 0x6
    new instr:0x7fb0666de33c: add rax, 0x6
old instr: 0x40f036: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de340: lea rdx, ptr [rax+rax*1]
old instr: 0x40f03a: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de344: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f03e: add rax, rdx
    new instr:0x7fb0666de348: add rax, rdx
old instr: 0x40f041: movzx eax, word ptr [rax]
    new instr:0x7fb0666de34b: movzx eax, word ptr [rax]
old instr: 0x40f044: movzx edx, ax
    new instr:0x7fb0666de34e: movzx edx, ax
old instr: 0x40f047: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de351: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f04e: movsxd rsi, edx
    new instr:0x7fb0666de358: movsxd rsi, edx
old instr: 0x40f051: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de35b: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f054: cdqe 
    new instr:0x7fb0666de35e: cdqe 
old instr: 0x40f056: add rax, rax
    new instr:0x7fb0666de360: add rax, rax
old instr: 0x40f059: mov rdi, rax
    new instr:0x7fb0666de363: mov rdi, rax
old instr: 0x40f05c: shl rdi, 0x7
    new instr:0x7fb0666de366: shl rdi, 0x7
old instr: 0x40f060: add rax, rdi
    new instr:0x7fb0666de36a: add rax, rdi
old instr: 0x40f063: add rax, rsi
    new instr:0x7fb0666de36d: add rax, rsi
old instr: 0x40f066: add rax, 0x2c60
    new instr:0x7fb0666de370: add rax, 0x2c60
40f06c
old instr: 0x40f06c: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de376: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f070: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de37a: lea esi, ptr [rax+0x1]
old instr: 0x40f073: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de37d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f07a: movsxd rdx, edx
    new instr:0x7fb0666de384: movsxd rdx, edx
old instr: 0x40f07d: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de387: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f080: cdqe 
    new instr:0x7fb0666de38a: cdqe 
old instr: 0x40f082: add rax, rax
    new instr:0x7fb0666de38c: add rax, rax
old instr: 0x40f085: mov rdi, rax
    new instr:0x7fb0666de38f: mov rdi, rax
old instr: 0x40f088: shl rdi, 0x7
    new instr:0x7fb0666de392: shl rdi, 0x7
old instr: 0x40f08c: add rax, rdi
    new instr:0x7fb0666de396: add rax, rdi
old instr: 0x40f08f: add rax, rdx
    new instr:0x7fb0666de399: add rax, rdx
old instr: 0x40f092: add rax, 0x2c60
    new instr:0x7fb0666de39c: add rax, 0x2c60
old instr: 0x40f098: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de3a2: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f09c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de3a6: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f09f: cdqe 
    new instr:0x7fb0666de3a9: cdqe 
old instr: 0x40f0a1: add rax, 0x7
    new instr:0x7fb0666de3ab: add rax, 0x7
old instr: 0x40f0a5: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de3af: lea rdx, ptr [rax+rax*1]
old instr: 0x40f0a9: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de3b3: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f0ad: add rax, rdx
    new instr:0x7fb0666de3b7: add rax, rdx
old instr: 0x40f0b0: movzx eax, word ptr [rax]
    new instr:0x7fb0666de3ba: movzx eax, word ptr [rax]
old instr: 0x40f0b3: movzx edx, ax
    new instr:0x7fb0666de3bd: movzx edx, ax
old instr: 0x40f0b6: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de3c0: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f0bd: movsxd rsi, edx
    new instr:0x7fb0666de3c7: movsxd rsi, edx
old instr: 0x40f0c0: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de3ca: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f0c3: cdqe 
    new instr:0x7fb0666de3cd: cdqe 
old instr: 0x40f0c5: add rax, rax
    new instr:0x7fb0666de3cf: add rax, rax
old instr: 0x40f0c8: mov rdi, rax
    new instr:0x7fb0666de3d2: mov rdi, rax
old instr: 0x40f0cb: shl rdi, 0x7
    new instr:0x7fb0666de3d5: shl rdi, 0x7
old instr: 0x40f0cf: add rax, rdi
    new instr:0x7fb0666de3d9: add rax, rdi
old instr: 0x40f0d2: add rax, rsi
    new instr:0x7fb0666de3dc: add rax, rsi
old instr: 0x40f0d5: add rax, 0x2c60
    new instr:0x7fb0666de3df: add rax, 0x2c60
old instr: 0x40f0db: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de3e5: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f0df: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de3e9: lea esi, ptr [rax+0x1]
old instr: 0x40f0e2: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de3ec: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f0e9: movsxd rdx, edx
    new instr:0x7fb0666de3f3: movsxd rdx, edx
old instr: 0x40f0ec: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de3f6: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f0ef: cdqe 
    new instr:0x7fb0666de3f9: cdqe 
old instr: 0x40f0f1: add rax, rax
    new instr:0x7fb0666de3fb: add rax, rax
old instr: 0x40f0f4: mov rdi, rax
    new instr:0x7fb0666de3fe: mov rdi, rax
old instr: 0x40f0f7: shl rdi, 0x7
    new instr:0x7fb0666de401: shl rdi, 0x7
old instr: 0x40f0fb: add rax, rdi
    new instr:0x7fb0666de405: add rax, rdi
old instr: 0x40f0fe: add rax, rdx
    new instr:0x7fb0666de408: add rax, rdx
old instr: 0x40f101: add rax, 0x2c60
    new instr:0x7fb0666de40b: add rax, 0x2c60
old instr: 0x40f107: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de411: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f10b: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de415: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f10e: cdqe 
    new instr:0x7fb0666de418: cdqe 
old instr: 0x40f110: add rax, 0x8
    new instr:0x7fb0666de41a: add rax, 0x8
old instr: 0x40f114: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de41e: lea rdx, ptr [rax+rax*1]
old instr: 0x40f118: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de422: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f11c: add rax, rdx
    new instr:0x7fb0666de426: add rax, rdx
old instr: 0x40f11f: movzx eax, word ptr [rax]
    new instr:0x7fb0666de429: movzx eax, word ptr [rax]
old instr: 0x40f122: movzx edx, ax
    new instr:0x7fb0666de42c: movzx edx, ax
old instr: 0x40f125: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de42f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f12c: movsxd rsi, edx
    new instr:0x7fb0666de436: movsxd rsi, edx
old instr: 0x40f12f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de439: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f132: cdqe 
    new instr:0x7fb0666de43c: cdqe 
old instr: 0x40f134: add rax, rax
    new instr:0x7fb0666de43e: add rax, rax
old instr: 0x40f137: mov rdi, rax
    new instr:0x7fb0666de441: mov rdi, rax
old instr: 0x40f13a: shl rdi, 0x7
    new instr:0x7fb0666de444: shl rdi, 0x7
old instr: 0x40f13e: add rax, rdi
    new instr:0x7fb0666de448: add rax, rdi
old instr: 0x40f141: add rax, rsi
    new instr:0x7fb0666de44b: add rax, rsi
old instr: 0x40f144: add rax, 0x2c60
    new instr:0x7fb0666de44e: add rax, 0x2c60
old instr: 0x40f14a: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de454: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f14e: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de458: lea esi, ptr [rax+0x1]
old instr: 0x40f151: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de45b: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f158: movsxd rdx, edx
    new instr:0x7fb0666de462: movsxd rdx, edx
old instr: 0x40f15b: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de465: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f15e: cdqe 
    new instr:0x7fb0666de468: cdqe 
old instr: 0x40f160: add rax, rax
    new instr:0x7fb0666de46a: add rax, rax
old instr: 0x40f163: mov rdi, rax
    new instr:0x7fb0666de46d: mov rdi, rax
40f166
old instr: 0x40f166: shl rdi, 0x7
    new instr:0x7fb0666de470: shl rdi, 0x7
old instr: 0x40f16a: add rax, rdi
    new instr:0x7fb0666de474: add rax, rdi
old instr: 0x40f16d: add rax, rdx
    new instr:0x7fb0666de477: add rax, rdx
old instr: 0x40f170: add rax, 0x2c60
    new instr:0x7fb0666de47a: add rax, 0x2c60
old instr: 0x40f176: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de480: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f17a: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de484: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f17d: cdqe 
    new instr:0x7fb0666de487: cdqe 
old instr: 0x40f17f: add rax, 0x9
    new instr:0x7fb0666de489: add rax, 0x9
old instr: 0x40f183: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de48d: lea rdx, ptr [rax+rax*1]
old instr: 0x40f187: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de491: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f18b: add rax, rdx
    new instr:0x7fb0666de495: add rax, rdx
old instr: 0x40f18e: movzx eax, word ptr [rax]
    new instr:0x7fb0666de498: movzx eax, word ptr [rax]
old instr: 0x40f191: movzx edx, ax
    new instr:0x7fb0666de49b: movzx edx, ax
old instr: 0x40f194: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de49e: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f19b: movsxd rsi, edx
    new instr:0x7fb0666de4a5: movsxd rsi, edx
old instr: 0x40f19e: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de4a8: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f1a1: cdqe 
    new instr:0x7fb0666de4ab: cdqe 
old instr: 0x40f1a3: add rax, rax
    new instr:0x7fb0666de4ad: add rax, rax
old instr: 0x40f1a6: mov rdi, rax
    new instr:0x7fb0666de4b0: mov rdi, rax
old instr: 0x40f1a9: shl rdi, 0x7
    new instr:0x7fb0666de4b3: shl rdi, 0x7
old instr: 0x40f1ad: add rax, rdi
    new instr:0x7fb0666de4b7: add rax, rdi
old instr: 0x40f1b0: add rax, rsi
    new instr:0x7fb0666de4ba: add rax, rsi
old instr: 0x40f1b3: add rax, 0x2c60
    new instr:0x7fb0666de4bd: add rax, 0x2c60
old instr: 0x40f1b9: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de4c3: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f1bd: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de4c7: lea esi, ptr [rax+0x1]
old instr: 0x40f1c0: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de4ca: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f1c7: movsxd rdx, edx
    new instr:0x7fb0666de4d1: movsxd rdx, edx
old instr: 0x40f1ca: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de4d4: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f1cd: cdqe 
    new instr:0x7fb0666de4d7: cdqe 
old instr: 0x40f1cf: add rax, rax
    new instr:0x7fb0666de4d9: add rax, rax
old instr: 0x40f1d2: mov rdi, rax
    new instr:0x7fb0666de4dc: mov rdi, rax
old instr: 0x40f1d5: shl rdi, 0x7
    new instr:0x7fb0666de4df: shl rdi, 0x7
old instr: 0x40f1d9: add rax, rdi
    new instr:0x7fb0666de4e3: add rax, rdi
old instr: 0x40f1dc: add rax, rdx
    new instr:0x7fb0666de4e6: add rax, rdx
old instr: 0x40f1df: add rax, 0x2c60
    new instr:0x7fb0666de4e9: add rax, 0x2c60
old instr: 0x40f1e5: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de4ef: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f1e9: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de4f3: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f1ec: cdqe 
    new instr:0x7fb0666de4f6: cdqe 
old instr: 0x40f1ee: add rax, 0xa
    new instr:0x7fb0666de4f8: add rax, 0xa
old instr: 0x40f1f2: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de4fc: lea rdx, ptr [rax+rax*1]
old instr: 0x40f1f6: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de500: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f1fa: add rax, rdx
    new instr:0x7fb0666de504: add rax, rdx
old instr: 0x40f1fd: movzx eax, word ptr [rax]
    new instr:0x7fb0666de507: movzx eax, word ptr [rax]
old instr: 0x40f200: movzx edx, ax
    new instr:0x7fb0666de50a: movzx edx, ax
old instr: 0x40f203: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de50d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f20a: movsxd rsi, edx
    new instr:0x7fb0666de514: movsxd rsi, edx
old instr: 0x40f20d: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de517: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f210: cdqe 
    new instr:0x7fb0666de51a: cdqe 
old instr: 0x40f212: add rax, rax
    new instr:0x7fb0666de51c: add rax, rax
old instr: 0x40f215: mov rdi, rax
    new instr:0x7fb0666de51f: mov rdi, rax
old instr: 0x40f218: shl rdi, 0x7
    new instr:0x7fb0666de522: shl rdi, 0x7
old instr: 0x40f21c: add rax, rdi
    new instr:0x7fb0666de526: add rax, rdi
old instr: 0x40f21f: add rax, rsi
    new instr:0x7fb0666de529: add rax, rsi
old instr: 0x40f222: add rax, 0x2c60
    new instr:0x7fb0666de52c: add rax, 0x2c60
old instr: 0x40f228: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de532: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f22c: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de536: lea esi, ptr [rax+0x1]
old instr: 0x40f22f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de539: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f236: movsxd rdx, edx
    new instr:0x7fb0666de540: movsxd rdx, edx
old instr: 0x40f239: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de543: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f23c: cdqe 
    new instr:0x7fb0666de546: cdqe 
old instr: 0x40f23e: add rax, rax
    new instr:0x7fb0666de548: add rax, rax
old instr: 0x40f241: mov rdi, rax
    new instr:0x7fb0666de54b: mov rdi, rax
old instr: 0x40f244: shl rdi, 0x7
    new instr:0x7fb0666de54e: shl rdi, 0x7
old instr: 0x40f248: add rax, rdi
    new instr:0x7fb0666de552: add rax, rdi
old instr: 0x40f24b: add rax, rdx
    new instr:0x7fb0666de555: add rax, rdx
old instr: 0x40f24e: add rax, 0x2c60
    new instr:0x7fb0666de558: add rax, 0x2c60
old instr: 0x40f254: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de55e: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f258: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de562: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f25b: cdqe 
    new instr:0x7fb0666de565: cdqe 
old instr: 0x40f25d: add rax, 0xb
    new instr:0x7fb0666de567: add rax, 0xb
40f261
old instr: 0x40f261: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de56b: lea rdx, ptr [rax+rax*1]
old instr: 0x40f265: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de56f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f269: add rax, rdx
    new instr:0x7fb0666de573: add rax, rdx
old instr: 0x40f26c: movzx eax, word ptr [rax]
    new instr:0x7fb0666de576: movzx eax, word ptr [rax]
old instr: 0x40f26f: movzx edx, ax
    new instr:0x7fb0666de579: movzx edx, ax
old instr: 0x40f272: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de57c: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f279: movsxd rsi, edx
    new instr:0x7fb0666de583: movsxd rsi, edx
old instr: 0x40f27c: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de586: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f27f: cdqe 
    new instr:0x7fb0666de589: cdqe 
old instr: 0x40f281: add rax, rax
    new instr:0x7fb0666de58b: add rax, rax
old instr: 0x40f284: mov rdi, rax
    new instr:0x7fb0666de58e: mov rdi, rax
old instr: 0x40f287: shl rdi, 0x7
    new instr:0x7fb0666de591: shl rdi, 0x7
old instr: 0x40f28b: add rax, rdi
    new instr:0x7fb0666de595: add rax, rdi
old instr: 0x40f28e: add rax, rsi
    new instr:0x7fb0666de598: add rax, rsi
old instr: 0x40f291: add rax, 0x2c60
    new instr:0x7fb0666de59b: add rax, 0x2c60
old instr: 0x40f297: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de5a1: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f29b: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de5a5: lea esi, ptr [rax+0x1]
old instr: 0x40f29e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de5a8: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f2a5: movsxd rdx, edx
    new instr:0x7fb0666de5af: movsxd rdx, edx
old instr: 0x40f2a8: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de5b2: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f2ab: cdqe 
    new instr:0x7fb0666de5b5: cdqe 
old instr: 0x40f2ad: add rax, rax
    new instr:0x7fb0666de5b7: add rax, rax
old instr: 0x40f2b0: mov rdi, rax
    new instr:0x7fb0666de5ba: mov rdi, rax
old instr: 0x40f2b3: shl rdi, 0x7
    new instr:0x7fb0666de5bd: shl rdi, 0x7
old instr: 0x40f2b7: add rax, rdi
    new instr:0x7fb0666de5c1: add rax, rdi
old instr: 0x40f2ba: add rax, rdx
    new instr:0x7fb0666de5c4: add rax, rdx
old instr: 0x40f2bd: add rax, 0x2c60
    new instr:0x7fb0666de5c7: add rax, 0x2c60
old instr: 0x40f2c3: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de5cd: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f2c7: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de5d1: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f2ca: cdqe 
    new instr:0x7fb0666de5d4: cdqe 
old instr: 0x40f2cc: add rax, 0xc
    new instr:0x7fb0666de5d6: add rax, 0xc
old instr: 0x40f2d0: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de5da: lea rdx, ptr [rax+rax*1]
old instr: 0x40f2d4: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de5de: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f2d8: add rax, rdx
    new instr:0x7fb0666de5e2: add rax, rdx
old instr: 0x40f2db: movzx eax, word ptr [rax]
    new instr:0x7fb0666de5e5: movzx eax, word ptr [rax]
old instr: 0x40f2de: movzx edx, ax
    new instr:0x7fb0666de5e8: movzx edx, ax
old instr: 0x40f2e1: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de5eb: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f2e8: movsxd rsi, edx
    new instr:0x7fb0666de5f2: movsxd rsi, edx
old instr: 0x40f2eb: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de5f5: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f2ee: cdqe 
    new instr:0x7fb0666de5f8: cdqe 
old instr: 0x40f2f0: add rax, rax
    new instr:0x7fb0666de5fa: add rax, rax
old instr: 0x40f2f3: mov rdi, rax
    new instr:0x7fb0666de5fd: mov rdi, rax
old instr: 0x40f2f6: shl rdi, 0x7
    new instr:0x7fb0666de600: shl rdi, 0x7
old instr: 0x40f2fa: add rax, rdi
    new instr:0x7fb0666de604: add rax, rdi
old instr: 0x40f2fd: add rax, rsi
    new instr:0x7fb0666de607: add rax, rsi
old instr: 0x40f300: add rax, 0x2c60
    new instr:0x7fb0666de60a: add rax, 0x2c60
old instr: 0x40f306: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de610: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f30a: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de614: lea esi, ptr [rax+0x1]
old instr: 0x40f30d: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de617: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f314: movsxd rdx, edx
    new instr:0x7fb0666de61e: movsxd rdx, edx
old instr: 0x40f317: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de621: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f31a: cdqe 
    new instr:0x7fb0666de624: cdqe 
old instr: 0x40f31c: add rax, rax
    new instr:0x7fb0666de626: add rax, rax
old instr: 0x40f31f: mov rdi, rax
    new instr:0x7fb0666de629: mov rdi, rax
old instr: 0x40f322: shl rdi, 0x7
    new instr:0x7fb0666de62c: shl rdi, 0x7
old instr: 0x40f326: add rax, rdi
    new instr:0x7fb0666de630: add rax, rdi
old instr: 0x40f329: add rax, rdx
    new instr:0x7fb0666de633: add rax, rdx
old instr: 0x40f32c: add rax, 0x2c60
    new instr:0x7fb0666de636: add rax, 0x2c60
old instr: 0x40f332: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de63c: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f336: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de640: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f339: cdqe 
    new instr:0x7fb0666de643: cdqe 
old instr: 0x40f33b: add rax, 0xd
    new instr:0x7fb0666de645: add rax, 0xd
old instr: 0x40f33f: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de649: lea rdx, ptr [rax+rax*1]
old instr: 0x40f343: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de64d: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f347: add rax, rdx
    new instr:0x7fb0666de651: add rax, rdx
old instr: 0x40f34a: movzx eax, word ptr [rax]
    new instr:0x7fb0666de654: movzx eax, word ptr [rax]
old instr: 0x40f34d: movzx edx, ax
    new instr:0x7fb0666de657: movzx edx, ax
old instr: 0x40f350: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de65a: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f357: movsxd rsi, edx
    new instr:0x7fb0666de661: movsxd rsi, edx
old instr: 0x40f35a: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de664: mov eax, dword ptr [rbp-0x40]
40f35d
old instr: 0x40f35d: cdqe 
    new instr:0x7fb0666de667: cdqe 
old instr: 0x40f35f: add rax, rax
    new instr:0x7fb0666de669: add rax, rax
old instr: 0x40f362: mov rdi, rax
    new instr:0x7fb0666de66c: mov rdi, rax
old instr: 0x40f365: shl rdi, 0x7
    new instr:0x7fb0666de66f: shl rdi, 0x7
old instr: 0x40f369: add rax, rdi
    new instr:0x7fb0666de673: add rax, rdi
old instr: 0x40f36c: add rax, rsi
    new instr:0x7fb0666de676: add rax, rsi
old instr: 0x40f36f: add rax, 0x2c60
    new instr:0x7fb0666de679: add rax, 0x2c60
old instr: 0x40f375: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de67f: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f379: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de683: lea esi, ptr [rax+0x1]
old instr: 0x40f37c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de686: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f383: movsxd rdx, edx
    new instr:0x7fb0666de68d: movsxd rdx, edx
old instr: 0x40f386: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de690: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f389: cdqe 
    new instr:0x7fb0666de693: cdqe 
old instr: 0x40f38b: add rax, rax
    new instr:0x7fb0666de695: add rax, rax
old instr: 0x40f38e: mov rdi, rax
    new instr:0x7fb0666de698: mov rdi, rax
old instr: 0x40f391: shl rdi, 0x7
    new instr:0x7fb0666de69b: shl rdi, 0x7
old instr: 0x40f395: add rax, rdi
    new instr:0x7fb0666de69f: add rax, rdi
old instr: 0x40f398: add rax, rdx
    new instr:0x7fb0666de6a2: add rax, rdx
old instr: 0x40f39b: add rax, 0x2c60
    new instr:0x7fb0666de6a5: add rax, 0x2c60
old instr: 0x40f3a1: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de6ab: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f3a5: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de6af: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f3a8: cdqe 
    new instr:0x7fb0666de6b2: cdqe 
old instr: 0x40f3aa: add rax, 0xe
    new instr:0x7fb0666de6b4: add rax, 0xe
old instr: 0x40f3ae: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de6b8: lea rdx, ptr [rax+rax*1]
old instr: 0x40f3b2: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de6bc: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f3b6: add rax, rdx
    new instr:0x7fb0666de6c0: add rax, rdx
old instr: 0x40f3b9: movzx eax, word ptr [rax]
    new instr:0x7fb0666de6c3: movzx eax, word ptr [rax]
old instr: 0x40f3bc: movzx edx, ax
    new instr:0x7fb0666de6c6: movzx edx, ax
old instr: 0x40f3bf: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de6c9: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f3c6: movsxd rsi, edx
    new instr:0x7fb0666de6d0: movsxd rsi, edx
old instr: 0x40f3c9: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de6d3: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f3cc: cdqe 
    new instr:0x7fb0666de6d6: cdqe 
old instr: 0x40f3ce: add rax, rax
    new instr:0x7fb0666de6d8: add rax, rax
old instr: 0x40f3d1: mov rdi, rax
    new instr:0x7fb0666de6db: mov rdi, rax
old instr: 0x40f3d4: shl rdi, 0x7
    new instr:0x7fb0666de6de: shl rdi, 0x7
old instr: 0x40f3d8: add rax, rdi
    new instr:0x7fb0666de6e2: add rax, rdi
old instr: 0x40f3db: add rax, rsi
    new instr:0x7fb0666de6e5: add rax, rsi
old instr: 0x40f3de: add rax, 0x2c60
    new instr:0x7fb0666de6e8: add rax, 0x2c60
old instr: 0x40f3e4: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de6ee: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f3e8: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de6f2: lea esi, ptr [rax+0x1]
old instr: 0x40f3eb: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de6f5: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f3f2: movsxd rdx, edx
    new instr:0x7fb0666de6fc: movsxd rdx, edx
old instr: 0x40f3f5: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de6ff: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f3f8: cdqe 
    new instr:0x7fb0666de702: cdqe 
old instr: 0x40f3fa: add rax, rax
    new instr:0x7fb0666de704: add rax, rax
old instr: 0x40f3fd: mov rdi, rax
    new instr:0x7fb0666de707: mov rdi, rax
old instr: 0x40f400: shl rdi, 0x7
    new instr:0x7fb0666de70a: shl rdi, 0x7
old instr: 0x40f404: add rax, rdi
    new instr:0x7fb0666de70e: add rax, rdi
old instr: 0x40f407: add rax, rdx
    new instr:0x7fb0666de711: add rax, rdx
old instr: 0x40f40a: add rax, 0x2c60
    new instr:0x7fb0666de714: add rax, 0x2c60
old instr: 0x40f410: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de71a: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f414: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de71e: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f417: cdqe 
    new instr:0x7fb0666de721: cdqe 
old instr: 0x40f419: add rax, 0xf
    new instr:0x7fb0666de723: add rax, 0xf
old instr: 0x40f41d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de727: lea rdx, ptr [rax+rax*1]
old instr: 0x40f421: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de72b: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f425: add rax, rdx
    new instr:0x7fb0666de72f: add rax, rdx
old instr: 0x40f428: movzx eax, word ptr [rax]
    new instr:0x7fb0666de732: movzx eax, word ptr [rax]
old instr: 0x40f42b: movzx edx, ax
    new instr:0x7fb0666de735: movzx edx, ax
old instr: 0x40f42e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de738: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f435: movsxd rsi, edx
    new instr:0x7fb0666de73f: movsxd rsi, edx
old instr: 0x40f438: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de742: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f43b: cdqe 
    new instr:0x7fb0666de745: cdqe 
old instr: 0x40f43d: add rax, rax
    new instr:0x7fb0666de747: add rax, rax
old instr: 0x40f440: mov rdi, rax
    new instr:0x7fb0666de74a: mov rdi, rax
old instr: 0x40f443: shl rdi, 0x7
    new instr:0x7fb0666de74d: shl rdi, 0x7
old instr: 0x40f447: add rax, rdi
    new instr:0x7fb0666de751: add rax, rdi
old instr: 0x40f44a: add rax, rsi
    new instr:0x7fb0666de754: add rax, rsi
old instr: 0x40f44d: add rax, 0x2c60
    new instr:0x7fb0666de757: add rax, 0x2c60
old instr: 0x40f453: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de75d: mov eax, dword ptr [rcx+rax*4+0x8]
40f457
old instr: 0x40f457: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de761: lea esi, ptr [rax+0x1]
old instr: 0x40f45a: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de764: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f461: movsxd rdx, edx
    new instr:0x7fb0666de76b: movsxd rdx, edx
old instr: 0x40f464: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de76e: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f467: cdqe 
    new instr:0x7fb0666de771: cdqe 
old instr: 0x40f469: add rax, rax
    new instr:0x7fb0666de773: add rax, rax
old instr: 0x40f46c: mov rdi, rax
    new instr:0x7fb0666de776: mov rdi, rax
old instr: 0x40f46f: shl rdi, 0x7
    new instr:0x7fb0666de779: shl rdi, 0x7
old instr: 0x40f473: add rax, rdi
    new instr:0x7fb0666de77d: add rax, rdi
old instr: 0x40f476: add rax, rdx
    new instr:0x7fb0666de780: add rax, rdx
old instr: 0x40f479: add rax, 0x2c60
    new instr:0x7fb0666de783: add rax, 0x2c60
old instr: 0x40f47f: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de789: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f483: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de78d: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f486: cdqe 
    new instr:0x7fb0666de790: cdqe 
old instr: 0x40f488: add rax, 0x10
    new instr:0x7fb0666de792: add rax, 0x10
old instr: 0x40f48c: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de796: lea rdx, ptr [rax+rax*1]
old instr: 0x40f490: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de79a: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f494: add rax, rdx
    new instr:0x7fb0666de79e: add rax, rdx
old instr: 0x40f497: movzx eax, word ptr [rax]
    new instr:0x7fb0666de7a1: movzx eax, word ptr [rax]
old instr: 0x40f49a: movzx edx, ax
    new instr:0x7fb0666de7a4: movzx edx, ax
old instr: 0x40f49d: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de7a7: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f4a4: movsxd rsi, edx
    new instr:0x7fb0666de7ae: movsxd rsi, edx
old instr: 0x40f4a7: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de7b1: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f4aa: cdqe 
    new instr:0x7fb0666de7b4: cdqe 
old instr: 0x40f4ac: add rax, rax
    new instr:0x7fb0666de7b6: add rax, rax
old instr: 0x40f4af: mov rdi, rax
    new instr:0x7fb0666de7b9: mov rdi, rax
old instr: 0x40f4b2: shl rdi, 0x7
    new instr:0x7fb0666de7bc: shl rdi, 0x7
old instr: 0x40f4b6: add rax, rdi
    new instr:0x7fb0666de7c0: add rax, rdi
old instr: 0x40f4b9: add rax, rsi
    new instr:0x7fb0666de7c3: add rax, rsi
old instr: 0x40f4bc: add rax, 0x2c60
    new instr:0x7fb0666de7c6: add rax, 0x2c60
old instr: 0x40f4c2: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de7cc: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f4c6: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de7d0: lea esi, ptr [rax+0x1]
old instr: 0x40f4c9: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de7d3: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f4d0: movsxd rdx, edx
    new instr:0x7fb0666de7da: movsxd rdx, edx
old instr: 0x40f4d3: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de7dd: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f4d6: cdqe 
    new instr:0x7fb0666de7e0: cdqe 
old instr: 0x40f4d8: add rax, rax
    new instr:0x7fb0666de7e2: add rax, rax
old instr: 0x40f4db: mov rdi, rax
    new instr:0x7fb0666de7e5: mov rdi, rax
old instr: 0x40f4de: shl rdi, 0x7
    new instr:0x7fb0666de7e8: shl rdi, 0x7
old instr: 0x40f4e2: add rax, rdi
    new instr:0x7fb0666de7ec: add rax, rdi
old instr: 0x40f4e5: add rax, rdx
    new instr:0x7fb0666de7ef: add rax, rdx
old instr: 0x40f4e8: add rax, 0x2c60
    new instr:0x7fb0666de7f2: add rax, 0x2c60
old instr: 0x40f4ee: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de7f8: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f4f2: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de7fc: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f4f5: cdqe 
    new instr:0x7fb0666de7ff: cdqe 
old instr: 0x40f4f7: add rax, 0x11
    new instr:0x7fb0666de801: add rax, 0x11
old instr: 0x40f4fb: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de805: lea rdx, ptr [rax+rax*1]
old instr: 0x40f4ff: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de809: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f503: add rax, rdx
    new instr:0x7fb0666de80d: add rax, rdx
old instr: 0x40f506: movzx eax, word ptr [rax]
    new instr:0x7fb0666de810: movzx eax, word ptr [rax]
old instr: 0x40f509: movzx edx, ax
    new instr:0x7fb0666de813: movzx edx, ax
old instr: 0x40f50c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de816: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f513: movsxd rsi, edx
    new instr:0x7fb0666de81d: movsxd rsi, edx
old instr: 0x40f516: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de820: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f519: cdqe 
    new instr:0x7fb0666de823: cdqe 
old instr: 0x40f51b: add rax, rax
    new instr:0x7fb0666de825: add rax, rax
old instr: 0x40f51e: mov rdi, rax
    new instr:0x7fb0666de828: mov rdi, rax
old instr: 0x40f521: shl rdi, 0x7
    new instr:0x7fb0666de82b: shl rdi, 0x7
old instr: 0x40f525: add rax, rdi
    new instr:0x7fb0666de82f: add rax, rdi
old instr: 0x40f528: add rax, rsi
    new instr:0x7fb0666de832: add rax, rsi
old instr: 0x40f52b: add rax, 0x2c60
    new instr:0x7fb0666de835: add rax, 0x2c60
old instr: 0x40f531: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de83b: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f535: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de83f: lea esi, ptr [rax+0x1]
old instr: 0x40f538: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de842: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f53f: movsxd rdx, edx
    new instr:0x7fb0666de849: movsxd rdx, edx
old instr: 0x40f542: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de84c: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f545: cdqe 
    new instr:0x7fb0666de84f: cdqe 
old instr: 0x40f547: add rax, rax
    new instr:0x7fb0666de851: add rax, rax
old instr: 0x40f54a: mov rdi, rax
    new instr:0x7fb0666de854: mov rdi, rax
old instr: 0x40f54d: shl rdi, 0x7
    new instr:0x7fb0666de857: shl rdi, 0x7
40f551
old instr: 0x40f551: add rax, rdi
    new instr:0x7fb0666de85b: add rax, rdi
old instr: 0x40f554: add rax, rdx
    new instr:0x7fb0666de85e: add rax, rdx
old instr: 0x40f557: add rax, 0x2c60
    new instr:0x7fb0666de861: add rax, 0x2c60
old instr: 0x40f55d: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de867: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f561: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de86b: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f564: cdqe 
    new instr:0x7fb0666de86e: cdqe 
old instr: 0x40f566: add rax, 0x12
    new instr:0x7fb0666de870: add rax, 0x12
old instr: 0x40f56a: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de874: lea rdx, ptr [rax+rax*1]
old instr: 0x40f56e: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de878: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f572: add rax, rdx
    new instr:0x7fb0666de87c: add rax, rdx
old instr: 0x40f575: movzx eax, word ptr [rax]
    new instr:0x7fb0666de87f: movzx eax, word ptr [rax]
old instr: 0x40f578: movzx edx, ax
    new instr:0x7fb0666de882: movzx edx, ax
old instr: 0x40f57b: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de885: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f582: movsxd rsi, edx
    new instr:0x7fb0666de88c: movsxd rsi, edx
old instr: 0x40f585: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de88f: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f588: cdqe 
    new instr:0x7fb0666de892: cdqe 
old instr: 0x40f58a: add rax, rax
    new instr:0x7fb0666de894: add rax, rax
old instr: 0x40f58d: mov rdi, rax
    new instr:0x7fb0666de897: mov rdi, rax
old instr: 0x40f590: shl rdi, 0x7
    new instr:0x7fb0666de89a: shl rdi, 0x7
old instr: 0x40f594: add rax, rdi
    new instr:0x7fb0666de89e: add rax, rdi
old instr: 0x40f597: add rax, rsi
    new instr:0x7fb0666de8a1: add rax, rsi
old instr: 0x40f59a: add rax, 0x2c60
    new instr:0x7fb0666de8a4: add rax, 0x2c60
old instr: 0x40f5a0: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de8aa: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f5a4: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de8ae: lea esi, ptr [rax+0x1]
old instr: 0x40f5a7: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de8b1: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f5ae: movsxd rdx, edx
    new instr:0x7fb0666de8b8: movsxd rdx, edx
old instr: 0x40f5b1: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de8bb: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f5b4: cdqe 
    new instr:0x7fb0666de8be: cdqe 
old instr: 0x40f5b6: add rax, rax
    new instr:0x7fb0666de8c0: add rax, rax
old instr: 0x40f5b9: mov rdi, rax
    new instr:0x7fb0666de8c3: mov rdi, rax
old instr: 0x40f5bc: shl rdi, 0x7
    new instr:0x7fb0666de8c6: shl rdi, 0x7
old instr: 0x40f5c0: add rax, rdi
    new instr:0x7fb0666de8ca: add rax, rdi
old instr: 0x40f5c3: add rax, rdx
    new instr:0x7fb0666de8cd: add rax, rdx
old instr: 0x40f5c6: add rax, 0x2c60
    new instr:0x7fb0666de8d0: add rax, 0x2c60
old instr: 0x40f5cc: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de8d6: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f5d0: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de8da: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f5d3: cdqe 
    new instr:0x7fb0666de8dd: cdqe 
old instr: 0x40f5d5: add rax, 0x13
    new instr:0x7fb0666de8df: add rax, 0x13
old instr: 0x40f5d9: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de8e3: lea rdx, ptr [rax+rax*1]
old instr: 0x40f5dd: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de8e7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f5e1: add rax, rdx
    new instr:0x7fb0666de8eb: add rax, rdx
old instr: 0x40f5e4: movzx eax, word ptr [rax]
    new instr:0x7fb0666de8ee: movzx eax, word ptr [rax]
old instr: 0x40f5e7: movzx edx, ax
    new instr:0x7fb0666de8f1: movzx edx, ax
old instr: 0x40f5ea: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de8f4: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f5f1: movsxd rsi, edx
    new instr:0x7fb0666de8fb: movsxd rsi, edx
old instr: 0x40f5f4: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de8fe: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f5f7: cdqe 
    new instr:0x7fb0666de901: cdqe 
old instr: 0x40f5f9: add rax, rax
    new instr:0x7fb0666de903: add rax, rax
old instr: 0x40f5fc: mov rdi, rax
    new instr:0x7fb0666de906: mov rdi, rax
old instr: 0x40f5ff: shl rdi, 0x7
    new instr:0x7fb0666de909: shl rdi, 0x7
old instr: 0x40f603: add rax, rdi
    new instr:0x7fb0666de90d: add rax, rdi
old instr: 0x40f606: add rax, rsi
    new instr:0x7fb0666de910: add rax, rsi
old instr: 0x40f609: add rax, 0x2c60
    new instr:0x7fb0666de913: add rax, 0x2c60
old instr: 0x40f60f: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de919: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f613: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de91d: lea esi, ptr [rax+0x1]
old instr: 0x40f616: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de920: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f61d: movsxd rdx, edx
    new instr:0x7fb0666de927: movsxd rdx, edx
old instr: 0x40f620: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de92a: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f623: cdqe 
    new instr:0x7fb0666de92d: cdqe 
old instr: 0x40f625: add rax, rax
    new instr:0x7fb0666de92f: add rax, rax
old instr: 0x40f628: mov rdi, rax
    new instr:0x7fb0666de932: mov rdi, rax
old instr: 0x40f62b: shl rdi, 0x7
    new instr:0x7fb0666de935: shl rdi, 0x7
old instr: 0x40f62f: add rax, rdi
    new instr:0x7fb0666de939: add rax, rdi
old instr: 0x40f632: add rax, rdx
    new instr:0x7fb0666de93c: add rax, rdx
old instr: 0x40f635: add rax, 0x2c60
    new instr:0x7fb0666de93f: add rax, 0x2c60
old instr: 0x40f63b: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de945: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f63f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de949: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f642: cdqe 
    new instr:0x7fb0666de94c: cdqe 
old instr: 0x40f644: add rax, 0x14
    new instr:0x7fb0666de94e: add rax, 0x14
old instr: 0x40f648: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de952: lea rdx, ptr [rax+rax*1]
40f64c
old instr: 0x40f64c: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de956: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f650: add rax, rdx
    new instr:0x7fb0666de95a: add rax, rdx
old instr: 0x40f653: movzx eax, word ptr [rax]
    new instr:0x7fb0666de95d: movzx eax, word ptr [rax]
old instr: 0x40f656: movzx edx, ax
    new instr:0x7fb0666de960: movzx edx, ax
old instr: 0x40f659: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de963: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f660: movsxd rsi, edx
    new instr:0x7fb0666de96a: movsxd rsi, edx
old instr: 0x40f663: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de96d: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f666: cdqe 
    new instr:0x7fb0666de970: cdqe 
old instr: 0x40f668: add rax, rax
    new instr:0x7fb0666de972: add rax, rax
old instr: 0x40f66b: mov rdi, rax
    new instr:0x7fb0666de975: mov rdi, rax
old instr: 0x40f66e: shl rdi, 0x7
    new instr:0x7fb0666de978: shl rdi, 0x7
old instr: 0x40f672: add rax, rdi
    new instr:0x7fb0666de97c: add rax, rdi
old instr: 0x40f675: add rax, rsi
    new instr:0x7fb0666de97f: add rax, rsi
old instr: 0x40f678: add rax, 0x2c60
    new instr:0x7fb0666de982: add rax, 0x2c60
old instr: 0x40f67e: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de988: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f682: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de98c: lea esi, ptr [rax+0x1]
old instr: 0x40f685: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de98f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f68c: movsxd rdx, edx
    new instr:0x7fb0666de996: movsxd rdx, edx
old instr: 0x40f68f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de999: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f692: cdqe 
    new instr:0x7fb0666de99c: cdqe 
old instr: 0x40f694: add rax, rax
    new instr:0x7fb0666de99e: add rax, rax
old instr: 0x40f697: mov rdi, rax
    new instr:0x7fb0666de9a1: mov rdi, rax
old instr: 0x40f69a: shl rdi, 0x7
    new instr:0x7fb0666de9a4: shl rdi, 0x7
old instr: 0x40f69e: add rax, rdi
    new instr:0x7fb0666de9a8: add rax, rdi
old instr: 0x40f6a1: add rax, rdx
    new instr:0x7fb0666de9ab: add rax, rdx
old instr: 0x40f6a4: add rax, 0x2c60
    new instr:0x7fb0666de9ae: add rax, 0x2c60
old instr: 0x40f6aa: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666de9b4: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f6ae: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666de9b8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f6b1: cdqe 
    new instr:0x7fb0666de9bb: cdqe 
old instr: 0x40f6b3: add rax, 0x15
    new instr:0x7fb0666de9bd: add rax, 0x15
old instr: 0x40f6b7: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666de9c1: lea rdx, ptr [rax+rax*1]
old instr: 0x40f6bb: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666de9c5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f6bf: add rax, rdx
    new instr:0x7fb0666de9c9: add rax, rdx
old instr: 0x40f6c2: movzx eax, word ptr [rax]
    new instr:0x7fb0666de9cc: movzx eax, word ptr [rax]
old instr: 0x40f6c5: movzx edx, ax
    new instr:0x7fb0666de9cf: movzx edx, ax
old instr: 0x40f6c8: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de9d2: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f6cf: movsxd rsi, edx
    new instr:0x7fb0666de9d9: movsxd rsi, edx
old instr: 0x40f6d2: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666de9dc: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f6d5: cdqe 
    new instr:0x7fb0666de9df: cdqe 
old instr: 0x40f6d7: add rax, rax
    new instr:0x7fb0666de9e1: add rax, rax
old instr: 0x40f6da: mov rdi, rax
    new instr:0x7fb0666de9e4: mov rdi, rax
old instr: 0x40f6dd: shl rdi, 0x7
    new instr:0x7fb0666de9e7: shl rdi, 0x7
old instr: 0x40f6e1: add rax, rdi
    new instr:0x7fb0666de9eb: add rax, rdi
old instr: 0x40f6e4: add rax, rsi
    new instr:0x7fb0666de9ee: add rax, rsi
old instr: 0x40f6e7: add rax, 0x2c60
    new instr:0x7fb0666de9f1: add rax, 0x2c60
old instr: 0x40f6ed: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666de9f7: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f6f1: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666de9fb: lea esi, ptr [rax+0x1]
old instr: 0x40f6f4: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666de9fe: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f6fb: movsxd rdx, edx
    new instr:0x7fb0666dea05: movsxd rdx, edx
old instr: 0x40f6fe: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dea08: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f701: cdqe 
    new instr:0x7fb0666dea0b: cdqe 
old instr: 0x40f703: add rax, rax
    new instr:0x7fb0666dea0d: add rax, rax
old instr: 0x40f706: mov rdi, rax
    new instr:0x7fb0666dea10: mov rdi, rax
old instr: 0x40f709: shl rdi, 0x7
    new instr:0x7fb0666dea13: shl rdi, 0x7
old instr: 0x40f70d: add rax, rdi
    new instr:0x7fb0666dea17: add rax, rdi
old instr: 0x40f710: add rax, rdx
    new instr:0x7fb0666dea1a: add rax, rdx
old instr: 0x40f713: add rax, 0x2c60
    new instr:0x7fb0666dea1d: add rax, 0x2c60
old instr: 0x40f719: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666dea23: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f71d: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dea27: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f720: cdqe 
    new instr:0x7fb0666dea2a: cdqe 
old instr: 0x40f722: add rax, 0x16
    new instr:0x7fb0666dea2c: add rax, 0x16
old instr: 0x40f726: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dea30: lea rdx, ptr [rax+rax*1]
old instr: 0x40f72a: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dea34: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f72e: add rax, rdx
    new instr:0x7fb0666dea38: add rax, rdx
old instr: 0x40f731: movzx eax, word ptr [rax]
    new instr:0x7fb0666dea3b: movzx eax, word ptr [rax]
old instr: 0x40f734: movzx edx, ax
    new instr:0x7fb0666dea3e: movzx edx, ax
old instr: 0x40f737: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dea41: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f73e: movsxd rsi, edx
    new instr:0x7fb0666dea48: movsxd rsi, edx
old instr: 0x40f741: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dea4b: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f744: cdqe 
    new instr:0x7fb0666dea4e: cdqe 
40f746
old instr: 0x40f746: add rax, rax
    new instr:0x7fb0666dea50: add rax, rax
old instr: 0x40f749: mov rdi, rax
    new instr:0x7fb0666dea53: mov rdi, rax
old instr: 0x40f74c: shl rdi, 0x7
    new instr:0x7fb0666dea56: shl rdi, 0x7
old instr: 0x40f750: add rax, rdi
    new instr:0x7fb0666dea5a: add rax, rdi
old instr: 0x40f753: add rax, rsi
    new instr:0x7fb0666dea5d: add rax, rsi
old instr: 0x40f756: add rax, 0x2c60
    new instr:0x7fb0666dea60: add rax, 0x2c60
old instr: 0x40f75c: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666dea66: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f760: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666dea6a: lea esi, ptr [rax+0x1]
old instr: 0x40f763: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dea6d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f76a: movsxd rdx, edx
    new instr:0x7fb0666dea74: movsxd rdx, edx
old instr: 0x40f76d: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dea77: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f770: cdqe 
    new instr:0x7fb0666dea7a: cdqe 
old instr: 0x40f772: add rax, rax
    new instr:0x7fb0666dea7c: add rax, rax
old instr: 0x40f775: mov rdi, rax
    new instr:0x7fb0666dea7f: mov rdi, rax
old instr: 0x40f778: shl rdi, 0x7
    new instr:0x7fb0666dea82: shl rdi, 0x7
old instr: 0x40f77c: add rax, rdi
    new instr:0x7fb0666dea86: add rax, rdi
old instr: 0x40f77f: add rax, rdx
    new instr:0x7fb0666dea89: add rax, rdx
old instr: 0x40f782: add rax, 0x2c60
    new instr:0x7fb0666dea8c: add rax, 0x2c60
old instr: 0x40f788: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666dea92: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f78c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dea96: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f78f: cdqe 
    new instr:0x7fb0666dea99: cdqe 
old instr: 0x40f791: add rax, 0x17
    new instr:0x7fb0666dea9b: add rax, 0x17
old instr: 0x40f795: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dea9f: lea rdx, ptr [rax+rax*1]
old instr: 0x40f799: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666deaa3: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f79d: add rax, rdx
    new instr:0x7fb0666deaa7: add rax, rdx
old instr: 0x40f7a0: movzx eax, word ptr [rax]
    new instr:0x7fb0666deaaa: movzx eax, word ptr [rax]
old instr: 0x40f7a3: movzx edx, ax
    new instr:0x7fb0666deaad: movzx edx, ax
old instr: 0x40f7a6: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666deab0: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f7ad: movsxd rsi, edx
    new instr:0x7fb0666deab7: movsxd rsi, edx
old instr: 0x40f7b0: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666deaba: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f7b3: cdqe 
    new instr:0x7fb0666deabd: cdqe 
old instr: 0x40f7b5: add rax, rax
    new instr:0x7fb0666deabf: add rax, rax
old instr: 0x40f7b8: mov rdi, rax
    new instr:0x7fb0666deac2: mov rdi, rax
old instr: 0x40f7bb: shl rdi, 0x7
    new instr:0x7fb0666deac5: shl rdi, 0x7
old instr: 0x40f7bf: add rax, rdi
    new instr:0x7fb0666deac9: add rax, rdi
old instr: 0x40f7c2: add rax, rsi
    new instr:0x7fb0666deacc: add rax, rsi
old instr: 0x40f7c5: add rax, 0x2c60
    new instr:0x7fb0666deacf: add rax, 0x2c60
old instr: 0x40f7cb: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666dead5: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f7cf: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666dead9: lea esi, ptr [rax+0x1]
old instr: 0x40f7d2: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666deadc: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f7d9: movsxd rdx, edx
    new instr:0x7fb0666deae3: movsxd rdx, edx
old instr: 0x40f7dc: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666deae6: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f7df: cdqe 
    new instr:0x7fb0666deae9: cdqe 
old instr: 0x40f7e1: add rax, rax
    new instr:0x7fb0666deaeb: add rax, rax
old instr: 0x40f7e4: mov rdi, rax
    new instr:0x7fb0666deaee: mov rdi, rax
old instr: 0x40f7e7: shl rdi, 0x7
    new instr:0x7fb0666deaf1: shl rdi, 0x7
old instr: 0x40f7eb: add rax, rdi
    new instr:0x7fb0666deaf5: add rax, rdi
old instr: 0x40f7ee: add rax, rdx
    new instr:0x7fb0666deaf8: add rax, rdx
old instr: 0x40f7f1: add rax, 0x2c60
    new instr:0x7fb0666deafb: add rax, 0x2c60
old instr: 0x40f7f7: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666deb01: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f7fb: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666deb05: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f7fe: cdqe 
    new instr:0x7fb0666deb08: cdqe 
old instr: 0x40f800: add rax, 0x18
    new instr:0x7fb0666deb0a: add rax, 0x18
old instr: 0x40f804: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666deb0e: lea rdx, ptr [rax+rax*1]
old instr: 0x40f808: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666deb12: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f80c: add rax, rdx
    new instr:0x7fb0666deb16: add rax, rdx
old instr: 0x40f80f: movzx eax, word ptr [rax]
    new instr:0x7fb0666deb19: movzx eax, word ptr [rax]
old instr: 0x40f812: movzx edx, ax
    new instr:0x7fb0666deb1c: movzx edx, ax
old instr: 0x40f815: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666deb1f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f81c: movsxd rsi, edx
    new instr:0x7fb0666deb26: movsxd rsi, edx
old instr: 0x40f81f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666deb29: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f822: cdqe 
    new instr:0x7fb0666deb2c: cdqe 
old instr: 0x40f824: add rax, rax
    new instr:0x7fb0666deb2e: add rax, rax
old instr: 0x40f827: mov rdi, rax
    new instr:0x7fb0666deb31: mov rdi, rax
old instr: 0x40f82a: shl rdi, 0x7
    new instr:0x7fb0666deb34: shl rdi, 0x7
old instr: 0x40f82e: add rax, rdi
    new instr:0x7fb0666deb38: add rax, rdi
old instr: 0x40f831: add rax, rsi
    new instr:0x7fb0666deb3b: add rax, rsi
old instr: 0x40f834: add rax, 0x2c60
    new instr:0x7fb0666deb3e: add rax, 0x2c60
old instr: 0x40f83a: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666deb44: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f83e: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666deb48: lea esi, ptr [rax+0x1]
40f841
old instr: 0x40f841: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666deb4b: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f848: movsxd rdx, edx
    new instr:0x7fb0666deb52: movsxd rdx, edx
old instr: 0x40f84b: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666deb55: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f84e: cdqe 
    new instr:0x7fb0666deb58: cdqe 
old instr: 0x40f850: add rax, rax
    new instr:0x7fb0666deb5a: add rax, rax
old instr: 0x40f853: mov rdi, rax
    new instr:0x7fb0666deb5d: mov rdi, rax
old instr: 0x40f856: shl rdi, 0x7
    new instr:0x7fb0666deb60: shl rdi, 0x7
old instr: 0x40f85a: add rax, rdi
    new instr:0x7fb0666deb64: add rax, rdi
old instr: 0x40f85d: add rax, rdx
    new instr:0x7fb0666deb67: add rax, rdx
old instr: 0x40f860: add rax, 0x2c60
    new instr:0x7fb0666deb6a: add rax, 0x2c60
old instr: 0x40f866: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666deb70: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f86a: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666deb74: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f86d: cdqe 
    new instr:0x7fb0666deb77: cdqe 
old instr: 0x40f86f: add rax, 0x19
    new instr:0x7fb0666deb79: add rax, 0x19
old instr: 0x40f873: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666deb7d: lea rdx, ptr [rax+rax*1]
old instr: 0x40f877: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666deb81: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f87b: add rax, rdx
    new instr:0x7fb0666deb85: add rax, rdx
old instr: 0x40f87e: movzx eax, word ptr [rax]
    new instr:0x7fb0666deb88: movzx eax, word ptr [rax]
old instr: 0x40f881: movzx edx, ax
    new instr:0x7fb0666deb8b: movzx edx, ax
old instr: 0x40f884: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666deb8e: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f88b: movsxd rsi, edx
    new instr:0x7fb0666deb95: movsxd rsi, edx
old instr: 0x40f88e: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666deb98: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f891: cdqe 
    new instr:0x7fb0666deb9b: cdqe 
old instr: 0x40f893: add rax, rax
    new instr:0x7fb0666deb9d: add rax, rax
old instr: 0x40f896: mov rdi, rax
    new instr:0x7fb0666deba0: mov rdi, rax
old instr: 0x40f899: shl rdi, 0x7
    new instr:0x7fb0666deba3: shl rdi, 0x7
old instr: 0x40f89d: add rax, rdi
    new instr:0x7fb0666deba7: add rax, rdi
old instr: 0x40f8a0: add rax, rsi
    new instr:0x7fb0666debaa: add rax, rsi
old instr: 0x40f8a3: add rax, 0x2c60
    new instr:0x7fb0666debad: add rax, 0x2c60
old instr: 0x40f8a9: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666debb3: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f8ad: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666debb7: lea esi, ptr [rax+0x1]
old instr: 0x40f8b0: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666debba: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f8b7: movsxd rdx, edx
    new instr:0x7fb0666debc1: movsxd rdx, edx
old instr: 0x40f8ba: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666debc4: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f8bd: cdqe 
    new instr:0x7fb0666debc7: cdqe 
old instr: 0x40f8bf: add rax, rax
    new instr:0x7fb0666debc9: add rax, rax
old instr: 0x40f8c2: mov rdi, rax
    new instr:0x7fb0666debcc: mov rdi, rax
old instr: 0x40f8c5: shl rdi, 0x7
    new instr:0x7fb0666debcf: shl rdi, 0x7
old instr: 0x40f8c9: add rax, rdi
    new instr:0x7fb0666debd3: add rax, rdi
old instr: 0x40f8cc: add rax, rdx
    new instr:0x7fb0666debd6: add rax, rdx
old instr: 0x40f8cf: add rax, 0x2c60
    new instr:0x7fb0666debd9: add rax, 0x2c60
old instr: 0x40f8d5: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666debdf: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f8d9: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666debe3: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f8dc: cdqe 
    new instr:0x7fb0666debe6: cdqe 
old instr: 0x40f8de: add rax, 0x1a
    new instr:0x7fb0666debe8: add rax, 0x1a
old instr: 0x40f8e2: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666debec: lea rdx, ptr [rax+rax*1]
old instr: 0x40f8e6: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666debf0: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f8ea: add rax, rdx
    new instr:0x7fb0666debf4: add rax, rdx
old instr: 0x40f8ed: movzx eax, word ptr [rax]
    new instr:0x7fb0666debf7: movzx eax, word ptr [rax]
old instr: 0x40f8f0: movzx edx, ax
    new instr:0x7fb0666debfa: movzx edx, ax
old instr: 0x40f8f3: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666debfd: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f8fa: movsxd rsi, edx
    new instr:0x7fb0666dec04: movsxd rsi, edx
old instr: 0x40f8fd: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dec07: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f900: cdqe 
    new instr:0x7fb0666dec0a: cdqe 
old instr: 0x40f902: add rax, rax
    new instr:0x7fb0666dec0c: add rax, rax
old instr: 0x40f905: mov rdi, rax
    new instr:0x7fb0666dec0f: mov rdi, rax
old instr: 0x40f908: shl rdi, 0x7
    new instr:0x7fb0666dec12: shl rdi, 0x7
old instr: 0x40f90c: add rax, rdi
    new instr:0x7fb0666dec16: add rax, rdi
old instr: 0x40f90f: add rax, rsi
    new instr:0x7fb0666dec19: add rax, rsi
old instr: 0x40f912: add rax, 0x2c60
    new instr:0x7fb0666dec1c: add rax, 0x2c60
old instr: 0x40f918: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666dec22: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f91c: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666dec26: lea esi, ptr [rax+0x1]
old instr: 0x40f91f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dec29: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f926: movsxd rdx, edx
    new instr:0x7fb0666dec30: movsxd rdx, edx
old instr: 0x40f929: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dec33: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f92c: cdqe 
    new instr:0x7fb0666dec36: cdqe 
old instr: 0x40f92e: add rax, rax
    new instr:0x7fb0666dec38: add rax, rax
old instr: 0x40f931: mov rdi, rax
    new instr:0x7fb0666dec3b: mov rdi, rax
old instr: 0x40f934: shl rdi, 0x7
    new instr:0x7fb0666dec3e: shl rdi, 0x7
old instr: 0x40f938: add rax, rdi
    new instr:0x7fb0666dec42: add rax, rdi
40f93b
old instr: 0x40f93b: add rax, rdx
    new instr:0x7fb0666dec45: add rax, rdx
old instr: 0x40f93e: add rax, 0x2c60
    new instr:0x7fb0666dec48: add rax, 0x2c60
old instr: 0x40f944: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666dec4e: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f948: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dec52: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f94b: cdqe 
    new instr:0x7fb0666dec55: cdqe 
old instr: 0x40f94d: add rax, 0x1b
    new instr:0x7fb0666dec57: add rax, 0x1b
old instr: 0x40f951: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dec5b: lea rdx, ptr [rax+rax*1]
old instr: 0x40f955: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dec5f: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f959: add rax, rdx
    new instr:0x7fb0666dec63: add rax, rdx
old instr: 0x40f95c: movzx eax, word ptr [rax]
    new instr:0x7fb0666dec66: movzx eax, word ptr [rax]
old instr: 0x40f95f: movzx edx, ax
    new instr:0x7fb0666dec69: movzx edx, ax
old instr: 0x40f962: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dec6c: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f969: movsxd rsi, edx
    new instr:0x7fb0666dec73: movsxd rsi, edx
old instr: 0x40f96c: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dec76: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f96f: cdqe 
    new instr:0x7fb0666dec79: cdqe 
old instr: 0x40f971: add rax, rax
    new instr:0x7fb0666dec7b: add rax, rax
old instr: 0x40f974: mov rdi, rax
    new instr:0x7fb0666dec7e: mov rdi, rax
old instr: 0x40f977: shl rdi, 0x7
    new instr:0x7fb0666dec81: shl rdi, 0x7
old instr: 0x40f97b: add rax, rdi
    new instr:0x7fb0666dec85: add rax, rdi
old instr: 0x40f97e: add rax, rsi
    new instr:0x7fb0666dec88: add rax, rsi
old instr: 0x40f981: add rax, 0x2c60
    new instr:0x7fb0666dec8b: add rax, 0x2c60
old instr: 0x40f987: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666dec91: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f98b: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666dec95: lea esi, ptr [rax+0x1]
old instr: 0x40f98e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dec98: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f995: movsxd rdx, edx
    new instr:0x7fb0666dec9f: movsxd rdx, edx
old instr: 0x40f998: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666deca2: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f99b: cdqe 
    new instr:0x7fb0666deca5: cdqe 
old instr: 0x40f99d: add rax, rax
    new instr:0x7fb0666deca7: add rax, rax
old instr: 0x40f9a0: mov rdi, rax
    new instr:0x7fb0666decaa: mov rdi, rax
old instr: 0x40f9a3: shl rdi, 0x7
    new instr:0x7fb0666decad: shl rdi, 0x7
old instr: 0x40f9a7: add rax, rdi
    new instr:0x7fb0666decb1: add rax, rdi
old instr: 0x40f9aa: add rax, rdx
    new instr:0x7fb0666decb4: add rax, rdx
old instr: 0x40f9ad: add rax, 0x2c60
    new instr:0x7fb0666decb7: add rax, 0x2c60
old instr: 0x40f9b3: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666decbd: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40f9b7: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666decc1: mov eax, dword ptr [rbp-0x34]
old instr: 0x40f9ba: cdqe 
    new instr:0x7fb0666decc4: cdqe 
old instr: 0x40f9bc: add rax, 0x1c
    new instr:0x7fb0666decc6: add rax, 0x1c
old instr: 0x40f9c0: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666decca: lea rdx, ptr [rax+rax*1]
old instr: 0x40f9c4: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666decce: mov rax, qword ptr [rbp-0x78]
old instr: 0x40f9c8: add rax, rdx
    new instr:0x7fb0666decd2: add rax, rdx
old instr: 0x40f9cb: movzx eax, word ptr [rax]
    new instr:0x7fb0666decd5: movzx eax, word ptr [rax]
old instr: 0x40f9ce: movzx edx, ax
    new instr:0x7fb0666decd8: movzx edx, ax
old instr: 0x40f9d1: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666decdb: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40f9d8: movsxd rsi, edx
    new instr:0x7fb0666dece2: movsxd rsi, edx
old instr: 0x40f9db: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dece5: mov eax, dword ptr [rbp-0x40]
old instr: 0x40f9de: cdqe 
    new instr:0x7fb0666dece8: cdqe 
old instr: 0x40f9e0: add rax, rax
    new instr:0x7fb0666decea: add rax, rax
old instr: 0x40f9e3: mov rdi, rax
    new instr:0x7fb0666deced: mov rdi, rax
old instr: 0x40f9e6: shl rdi, 0x7
    new instr:0x7fb0666decf0: shl rdi, 0x7
old instr: 0x40f9ea: add rax, rdi
    new instr:0x7fb0666decf4: add rax, rdi
old instr: 0x40f9ed: add rax, rsi
    new instr:0x7fb0666decf7: add rax, rsi
old instr: 0x40f9f0: add rax, 0x2c60
    new instr:0x7fb0666decfa: add rax, 0x2c60
old instr: 0x40f9f6: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666ded00: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40f9fa: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666ded04: lea esi, ptr [rax+0x1]
old instr: 0x40f9fd: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ded07: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fa04: movsxd rdx, edx
    new instr:0x7fb0666ded0e: movsxd rdx, edx
old instr: 0x40fa07: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666ded11: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fa0a: cdqe 
    new instr:0x7fb0666ded14: cdqe 
old instr: 0x40fa0c: add rax, rax
    new instr:0x7fb0666ded16: add rax, rax
old instr: 0x40fa0f: mov rdi, rax
    new instr:0x7fb0666ded19: mov rdi, rax
old instr: 0x40fa12: shl rdi, 0x7
    new instr:0x7fb0666ded1c: shl rdi, 0x7
old instr: 0x40fa16: add rax, rdi
    new instr:0x7fb0666ded20: add rax, rdi
old instr: 0x40fa19: add rax, rdx
    new instr:0x7fb0666ded23: add rax, rdx
old instr: 0x40fa1c: add rax, 0x2c60
    new instr:0x7fb0666ded26: add rax, 0x2c60
old instr: 0x40fa22: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666ded2c: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fa26: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ded30: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fa29: cdqe 
    new instr:0x7fb0666ded33: cdqe 
old instr: 0x40fa2b: add rax, 0x1d
    new instr:0x7fb0666ded35: add rax, 0x1d
old instr: 0x40fa2f: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666ded39: lea rdx, ptr [rax+rax*1]
old instr: 0x40fa33: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666ded3d: mov rax, qword ptr [rbp-0x78]
40fa37
old instr: 0x40fa37: add rax, rdx
    new instr:0x7fb0666ded41: add rax, rdx
old instr: 0x40fa3a: movzx eax, word ptr [rax]
    new instr:0x7fb0666ded44: movzx eax, word ptr [rax]
old instr: 0x40fa3d: movzx edx, ax
    new instr:0x7fb0666ded47: movzx edx, ax
old instr: 0x40fa40: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ded4a: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fa47: movsxd rsi, edx
    new instr:0x7fb0666ded51: movsxd rsi, edx
old instr: 0x40fa4a: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666ded54: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fa4d: cdqe 
    new instr:0x7fb0666ded57: cdqe 
old instr: 0x40fa4f: add rax, rax
    new instr:0x7fb0666ded59: add rax, rax
old instr: 0x40fa52: mov rdi, rax
    new instr:0x7fb0666ded5c: mov rdi, rax
old instr: 0x40fa55: shl rdi, 0x7
    new instr:0x7fb0666ded5f: shl rdi, 0x7
old instr: 0x40fa59: add rax, rdi
    new instr:0x7fb0666ded63: add rax, rdi
old instr: 0x40fa5c: add rax, rsi
    new instr:0x7fb0666ded66: add rax, rsi
old instr: 0x40fa5f: add rax, 0x2c60
    new instr:0x7fb0666ded69: add rax, 0x2c60
old instr: 0x40fa65: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666ded6f: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fa69: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666ded73: lea esi, ptr [rax+0x1]
old instr: 0x40fa6c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666ded76: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fa73: movsxd rdx, edx
    new instr:0x7fb0666ded7d: movsxd rdx, edx
old instr: 0x40fa76: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666ded80: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fa79: cdqe 
    new instr:0x7fb0666ded83: cdqe 
old instr: 0x40fa7b: add rax, rax
    new instr:0x7fb0666ded85: add rax, rax
old instr: 0x40fa7e: mov rdi, rax
    new instr:0x7fb0666ded88: mov rdi, rax
old instr: 0x40fa81: shl rdi, 0x7
    new instr:0x7fb0666ded8b: shl rdi, 0x7
old instr: 0x40fa85: add rax, rdi
    new instr:0x7fb0666ded8f: add rax, rdi
old instr: 0x40fa88: add rax, rdx
    new instr:0x7fb0666ded92: add rax, rdx
old instr: 0x40fa8b: add rax, 0x2c60
    new instr:0x7fb0666ded95: add rax, 0x2c60
old instr: 0x40fa91: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666ded9b: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fa95: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666ded9f: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fa98: cdqe 
    new instr:0x7fb0666deda2: cdqe 
old instr: 0x40fa9a: add rax, 0x1e
    new instr:0x7fb0666deda4: add rax, 0x1e
old instr: 0x40fa9e: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666deda8: lea rdx, ptr [rax+rax*1]
old instr: 0x40faa2: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dedac: mov rax, qword ptr [rbp-0x78]
old instr: 0x40faa6: add rax, rdx
    new instr:0x7fb0666dedb0: add rax, rdx
old instr: 0x40faa9: movzx eax, word ptr [rax]
    new instr:0x7fb0666dedb3: movzx eax, word ptr [rax]
old instr: 0x40faac: movzx edx, ax
    new instr:0x7fb0666dedb6: movzx edx, ax
old instr: 0x40faaf: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dedb9: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fab6: movsxd rsi, edx
    new instr:0x7fb0666dedc0: movsxd rsi, edx
old instr: 0x40fab9: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dedc3: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fabc: cdqe 
    new instr:0x7fb0666dedc6: cdqe 
old instr: 0x40fabe: add rax, rax
    new instr:0x7fb0666dedc8: add rax, rax
old instr: 0x40fac1: mov rdi, rax
    new instr:0x7fb0666dedcb: mov rdi, rax
old instr: 0x40fac4: shl rdi, 0x7
    new instr:0x7fb0666dedce: shl rdi, 0x7
old instr: 0x40fac8: add rax, rdi
    new instr:0x7fb0666dedd2: add rax, rdi
old instr: 0x40facb: add rax, rsi
    new instr:0x7fb0666dedd5: add rax, rsi
old instr: 0x40face: add rax, 0x2c60
    new instr:0x7fb0666dedd8: add rax, 0x2c60
old instr: 0x40fad4: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666dedde: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fad8: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666dede2: lea esi, ptr [rax+0x1]
old instr: 0x40fadb: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dede5: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fae2: movsxd rdx, edx
    new instr:0x7fb0666dedec: movsxd rdx, edx
old instr: 0x40fae5: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dedef: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fae8: cdqe 
    new instr:0x7fb0666dedf2: cdqe 
old instr: 0x40faea: add rax, rax
    new instr:0x7fb0666dedf4: add rax, rax
old instr: 0x40faed: mov rdi, rax
    new instr:0x7fb0666dedf7: mov rdi, rax
old instr: 0x40faf0: shl rdi, 0x7
    new instr:0x7fb0666dedfa: shl rdi, 0x7
old instr: 0x40faf4: add rax, rdi
    new instr:0x7fb0666dedfe: add rax, rdi
old instr: 0x40faf7: add rax, rdx
    new instr:0x7fb0666dee01: add rax, rdx
old instr: 0x40fafa: add rax, 0x2c60
    new instr:0x7fb0666dee04: add rax, 0x2c60
old instr: 0x40fb00: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666dee0a: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fb04: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dee0e: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fb07: cdqe 
    new instr:0x7fb0666dee11: cdqe 
old instr: 0x40fb09: add rax, 0x1f
    new instr:0x7fb0666dee13: add rax, 0x1f
old instr: 0x40fb0d: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dee17: lea rdx, ptr [rax+rax*1]
old instr: 0x40fb11: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dee1b: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fb15: add rax, rdx
    new instr:0x7fb0666dee1f: add rax, rdx
old instr: 0x40fb18: movzx eax, word ptr [rax]
    new instr:0x7fb0666dee22: movzx eax, word ptr [rax]
old instr: 0x40fb1b: movzx edx, ax
    new instr:0x7fb0666dee25: movzx edx, ax
old instr: 0x40fb1e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dee28: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fb25: movsxd rsi, edx
    new instr:0x7fb0666dee2f: movsxd rsi, edx
old instr: 0x40fb28: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dee32: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fb2b: cdqe 
    new instr:0x7fb0666dee35: cdqe 
old instr: 0x40fb2d: add rax, rax
    new instr:0x7fb0666dee37: add rax, rax
40fb30
old instr: 0x40fb30: mov rdi, rax
    new instr:0x7fb0666dee3a: mov rdi, rax
old instr: 0x40fb33: shl rdi, 0x7
    new instr:0x7fb0666dee3d: shl rdi, 0x7
old instr: 0x40fb37: add rax, rdi
    new instr:0x7fb0666dee41: add rax, rdi
old instr: 0x40fb3a: add rax, rsi
    new instr:0x7fb0666dee44: add rax, rsi
old instr: 0x40fb3d: add rax, 0x2c60
    new instr:0x7fb0666dee47: add rax, 0x2c60
old instr: 0x40fb43: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666dee4d: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fb47: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666dee51: lea esi, ptr [rax+0x1]
old instr: 0x40fb4a: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dee54: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fb51: movsxd rdx, edx
    new instr:0x7fb0666dee5b: movsxd rdx, edx
old instr: 0x40fb54: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666dee5e: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fb57: cdqe 
    new instr:0x7fb0666dee61: cdqe 
old instr: 0x40fb59: add rax, rax
    new instr:0x7fb0666dee63: add rax, rax
old instr: 0x40fb5c: mov rdi, rax
    new instr:0x7fb0666dee66: mov rdi, rax
old instr: 0x40fb5f: shl rdi, 0x7
    new instr:0x7fb0666dee69: shl rdi, 0x7
old instr: 0x40fb63: add rax, rdi
    new instr:0x7fb0666dee6d: add rax, rdi
old instr: 0x40fb66: add rax, rdx
    new instr:0x7fb0666dee70: add rax, rdx
old instr: 0x40fb69: add rax, 0x2c60
    new instr:0x7fb0666dee73: add rax, 0x2c60
old instr: 0x40fb6f: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666dee79: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fb73: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dee7d: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fb76: cdqe 
    new instr:0x7fb0666dee80: cdqe 
old instr: 0x40fb78: add rax, 0x20
    new instr:0x7fb0666dee82: add rax, 0x20
old instr: 0x40fb7c: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666dee86: lea rdx, ptr [rax+rax*1]
old instr: 0x40fb80: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666dee8a: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fb84: add rax, rdx
    new instr:0x7fb0666dee8e: add rax, rdx
old instr: 0x40fb87: movzx eax, word ptr [rax]
    new instr:0x7fb0666dee91: movzx eax, word ptr [rax]
old instr: 0x40fb8a: movzx edx, ax
    new instr:0x7fb0666dee94: movzx edx, ax
old instr: 0x40fb8d: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666dee97: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fb94: movsxd rsi, edx
    new instr:0x7fb0666dee9e: movsxd rsi, edx
old instr: 0x40fb97: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666deea1: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fb9a: cdqe 
    new instr:0x7fb0666deea4: cdqe 
old instr: 0x40fb9c: add rax, rax
    new instr:0x7fb0666deea6: add rax, rax
old instr: 0x40fb9f: mov rdi, rax
    new instr:0x7fb0666deea9: mov rdi, rax
old instr: 0x40fba2: shl rdi, 0x7
    new instr:0x7fb0666deeac: shl rdi, 0x7
old instr: 0x40fba6: add rax, rdi
    new instr:0x7fb0666deeb0: add rax, rdi
old instr: 0x40fba9: add rax, rsi
    new instr:0x7fb0666deeb3: add rax, rsi
old instr: 0x40fbac: add rax, 0x2c60
    new instr:0x7fb0666deeb6: add rax, 0x2c60
old instr: 0x40fbb2: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666deebc: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fbb6: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666deec0: lea esi, ptr [rax+0x1]
old instr: 0x40fbb9: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666deec3: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fbc0: movsxd rdx, edx
    new instr:0x7fb0666deeca: movsxd rdx, edx
old instr: 0x40fbc3: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666deecd: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fbc6: cdqe 
    new instr:0x7fb0666deed0: cdqe 
old instr: 0x40fbc8: add rax, rax
    new instr:0x7fb0666deed2: add rax, rax
old instr: 0x40fbcb: mov rdi, rax
    new instr:0x7fb0666deed5: mov rdi, rax
old instr: 0x40fbce: shl rdi, 0x7
    new instr:0x7fb0666deed8: shl rdi, 0x7
old instr: 0x40fbd2: add rax, rdi
    new instr:0x7fb0666deedc: add rax, rdi
old instr: 0x40fbd5: add rax, rdx
    new instr:0x7fb0666deedf: add rax, rdx
old instr: 0x40fbd8: add rax, 0x2c60
    new instr:0x7fb0666deee2: add rax, 0x2c60
old instr: 0x40fbde: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666deee8: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fbe2: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666deeec: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fbe5: cdqe 
    new instr:0x7fb0666deeef: cdqe 
old instr: 0x40fbe7: add rax, 0x21
    new instr:0x7fb0666deef1: add rax, 0x21
old instr: 0x40fbeb: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666deef5: lea rdx, ptr [rax+rax*1]
old instr: 0x40fbef: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666deef9: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fbf3: add rax, rdx
    new instr:0x7fb0666deefd: add rax, rdx
old instr: 0x40fbf6: movzx eax, word ptr [rax]
    new instr:0x7fb0666def00: movzx eax, word ptr [rax]
old instr: 0x40fbf9: movzx edx, ax
    new instr:0x7fb0666def03: movzx edx, ax
old instr: 0x40fbfc: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666def06: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fc03: movsxd rsi, edx
    new instr:0x7fb0666def0d: movsxd rsi, edx
old instr: 0x40fc06: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666def10: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fc09: cdqe 
    new instr:0x7fb0666def13: cdqe 
old instr: 0x40fc0b: add rax, rax
    new instr:0x7fb0666def15: add rax, rax
old instr: 0x40fc0e: mov rdi, rax
    new instr:0x7fb0666def18: mov rdi, rax
old instr: 0x40fc11: shl rdi, 0x7
    new instr:0x7fb0666def1b: shl rdi, 0x7
old instr: 0x40fc15: add rax, rdi
    new instr:0x7fb0666def1f: add rax, rdi
old instr: 0x40fc18: add rax, rsi
    new instr:0x7fb0666def22: add rax, rsi
old instr: 0x40fc1b: add rax, 0x2c60
    new instr:0x7fb0666def25: add rax, 0x2c60
old instr: 0x40fc21: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666def2b: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fc25: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666def2f: lea esi, ptr [rax+0x1]
old instr: 0x40fc28: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666def32: mov rcx, qword ptr [rbp-0xf8]
40fc2f
old instr: 0x40fc2f: movsxd rdx, edx
    new instr:0x7fb0666def39: movsxd rdx, edx
old instr: 0x40fc32: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666def3c: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fc35: cdqe 
    new instr:0x7fb0666def3f: cdqe 
old instr: 0x40fc37: add rax, rax
    new instr:0x7fb0666def41: add rax, rax
old instr: 0x40fc3a: mov rdi, rax
    new instr:0x7fb0666def44: mov rdi, rax
old instr: 0x40fc3d: shl rdi, 0x7
    new instr:0x7fb0666def47: shl rdi, 0x7
old instr: 0x40fc41: add rax, rdi
    new instr:0x7fb0666def4b: add rax, rdi
old instr: 0x40fc44: add rax, rdx
    new instr:0x7fb0666def4e: add rax, rdx
old instr: 0x40fc47: add rax, 0x2c60
    new instr:0x7fb0666def51: add rax, 0x2c60
old instr: 0x40fc4d: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666def57: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fc51: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666def5b: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fc54: cdqe 
    new instr:0x7fb0666def5e: cdqe 
old instr: 0x40fc56: add rax, 0x22
    new instr:0x7fb0666def60: add rax, 0x22
old instr: 0x40fc5a: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666def64: lea rdx, ptr [rax+rax*1]
old instr: 0x40fc5e: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666def68: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fc62: add rax, rdx
    new instr:0x7fb0666def6c: add rax, rdx
old instr: 0x40fc65: movzx eax, word ptr [rax]
    new instr:0x7fb0666def6f: movzx eax, word ptr [rax]
old instr: 0x40fc68: movzx edx, ax
    new instr:0x7fb0666def72: movzx edx, ax
old instr: 0x40fc6b: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666def75: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fc72: movsxd rsi, edx
    new instr:0x7fb0666def7c: movsxd rsi, edx
old instr: 0x40fc75: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666def7f: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fc78: cdqe 
    new instr:0x7fb0666def82: cdqe 
old instr: 0x40fc7a: add rax, rax
    new instr:0x7fb0666def84: add rax, rax
old instr: 0x40fc7d: mov rdi, rax
    new instr:0x7fb0666def87: mov rdi, rax
old instr: 0x40fc80: shl rdi, 0x7
    new instr:0x7fb0666def8a: shl rdi, 0x7
old instr: 0x40fc84: add rax, rdi
    new instr:0x7fb0666def8e: add rax, rdi
old instr: 0x40fc87: add rax, rsi
    new instr:0x7fb0666def91: add rax, rsi
old instr: 0x40fc8a: add rax, 0x2c60
    new instr:0x7fb0666def94: add rax, 0x2c60
old instr: 0x40fc90: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666def9a: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fc94: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666def9e: lea esi, ptr [rax+0x1]
old instr: 0x40fc97: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666defa1: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fc9e: movsxd rdx, edx
    new instr:0x7fb0666defa8: movsxd rdx, edx
old instr: 0x40fca1: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666defab: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fca4: cdqe 
    new instr:0x7fb0666defae: cdqe 
old instr: 0x40fca6: add rax, rax
    new instr:0x7fb0666defb0: add rax, rax
old instr: 0x40fca9: mov rdi, rax
    new instr:0x7fb0666defb3: mov rdi, rax
old instr: 0x40fcac: shl rdi, 0x7
    new instr:0x7fb0666defb6: shl rdi, 0x7
old instr: 0x40fcb0: add rax, rdi
    new instr:0x7fb0666defba: add rax, rdi
old instr: 0x40fcb3: add rax, rdx
    new instr:0x7fb0666defbd: add rax, rdx
old instr: 0x40fcb6: add rax, 0x2c60
    new instr:0x7fb0666defc0: add rax, 0x2c60
old instr: 0x40fcbc: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666defc6: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fcc0: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666defca: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fcc3: cdqe 
    new instr:0x7fb0666defcd: cdqe 
old instr: 0x40fcc5: add rax, 0x23
    new instr:0x7fb0666defcf: add rax, 0x23
old instr: 0x40fcc9: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666defd3: lea rdx, ptr [rax+rax*1]
old instr: 0x40fccd: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666defd7: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fcd1: add rax, rdx
    new instr:0x7fb0666defdb: add rax, rdx
old instr: 0x40fcd4: movzx eax, word ptr [rax]
    new instr:0x7fb0666defde: movzx eax, word ptr [rax]
old instr: 0x40fcd7: movzx edx, ax
    new instr:0x7fb0666defe1: movzx edx, ax
old instr: 0x40fcda: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666defe4: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fce1: movsxd rsi, edx
    new instr:0x7fb0666defeb: movsxd rsi, edx
old instr: 0x40fce4: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666defee: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fce7: cdqe 
    new instr:0x7fb0666deff1: cdqe 
old instr: 0x40fce9: add rax, rax
    new instr:0x7fb0666deff3: add rax, rax
old instr: 0x40fcec: mov rdi, rax
    new instr:0x7fb0666deff6: mov rdi, rax
old instr: 0x40fcef: shl rdi, 0x7
    new instr:0x7fb0666deff9: shl rdi, 0x7
old instr: 0x40fcf3: add rax, rdi
    new instr:0x7fb0666deffd: add rax, rdi
old instr: 0x40fcf6: add rax, rsi
    new instr:0x7fb0666df000: add rax, rsi
old instr: 0x40fcf9: add rax, 0x2c60
    new instr:0x7fb0666df003: add rax, 0x2c60
old instr: 0x40fcff: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df009: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fd03: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df00d: lea esi, ptr [rax+0x1]
old instr: 0x40fd06: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df010: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fd0d: movsxd rdx, edx
    new instr:0x7fb0666df017: movsxd rdx, edx
old instr: 0x40fd10: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df01a: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fd13: cdqe 
    new instr:0x7fb0666df01d: cdqe 
old instr: 0x40fd15: add rax, rax
    new instr:0x7fb0666df01f: add rax, rax
old instr: 0x40fd18: mov rdi, rax
    new instr:0x7fb0666df022: mov rdi, rax
old instr: 0x40fd1b: shl rdi, 0x7
    new instr:0x7fb0666df025: shl rdi, 0x7
old instr: 0x40fd1f: add rax, rdi
    new instr:0x7fb0666df029: add rax, rdi
old instr: 0x40fd22: add rax, rdx
    new instr:0x7fb0666df02c: add rax, rdx
40fd25
old instr: 0x40fd25: add rax, 0x2c60
    new instr:0x7fb0666df02f: add rax, 0x2c60
old instr: 0x40fd2b: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df035: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fd2f: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df039: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fd32: cdqe 
    new instr:0x7fb0666df03c: cdqe 
old instr: 0x40fd34: add rax, 0x24
    new instr:0x7fb0666df03e: add rax, 0x24
old instr: 0x40fd38: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df042: lea rdx, ptr [rax+rax*1]
old instr: 0x40fd3c: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df046: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fd40: add rax, rdx
    new instr:0x7fb0666df04a: add rax, rdx
old instr: 0x40fd43: movzx eax, word ptr [rax]
    new instr:0x7fb0666df04d: movzx eax, word ptr [rax]
old instr: 0x40fd46: movzx edx, ax
    new instr:0x7fb0666df050: movzx edx, ax
old instr: 0x40fd49: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df053: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fd50: movsxd rsi, edx
    new instr:0x7fb0666df05a: movsxd rsi, edx
old instr: 0x40fd53: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df05d: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fd56: cdqe 
    new instr:0x7fb0666df060: cdqe 
old instr: 0x40fd58: add rax, rax
    new instr:0x7fb0666df062: add rax, rax
old instr: 0x40fd5b: mov rdi, rax
    new instr:0x7fb0666df065: mov rdi, rax
old instr: 0x40fd5e: shl rdi, 0x7
    new instr:0x7fb0666df068: shl rdi, 0x7
old instr: 0x40fd62: add rax, rdi
    new instr:0x7fb0666df06c: add rax, rdi
old instr: 0x40fd65: add rax, rsi
    new instr:0x7fb0666df06f: add rax, rsi
old instr: 0x40fd68: add rax, 0x2c60
    new instr:0x7fb0666df072: add rax, 0x2c60
old instr: 0x40fd6e: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df078: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fd72: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df07c: lea esi, ptr [rax+0x1]
old instr: 0x40fd75: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df07f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fd7c: movsxd rdx, edx
    new instr:0x7fb0666df086: movsxd rdx, edx
old instr: 0x40fd7f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df089: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fd82: cdqe 
    new instr:0x7fb0666df08c: cdqe 
old instr: 0x40fd84: add rax, rax
    new instr:0x7fb0666df08e: add rax, rax
old instr: 0x40fd87: mov rdi, rax
    new instr:0x7fb0666df091: mov rdi, rax
old instr: 0x40fd8a: shl rdi, 0x7
    new instr:0x7fb0666df094: shl rdi, 0x7
old instr: 0x40fd8e: add rax, rdi
    new instr:0x7fb0666df098: add rax, rdi
old instr: 0x40fd91: add rax, rdx
    new instr:0x7fb0666df09b: add rax, rdx
old instr: 0x40fd94: add rax, 0x2c60
    new instr:0x7fb0666df09e: add rax, 0x2c60
old instr: 0x40fd9a: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df0a4: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fd9e: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df0a8: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fda1: cdqe 
    new instr:0x7fb0666df0ab: cdqe 
old instr: 0x40fda3: add rax, 0x25
    new instr:0x7fb0666df0ad: add rax, 0x25
old instr: 0x40fda7: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df0b1: lea rdx, ptr [rax+rax*1]
old instr: 0x40fdab: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df0b5: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fdaf: add rax, rdx
    new instr:0x7fb0666df0b9: add rax, rdx
old instr: 0x40fdb2: movzx eax, word ptr [rax]
    new instr:0x7fb0666df0bc: movzx eax, word ptr [rax]
old instr: 0x40fdb5: movzx edx, ax
    new instr:0x7fb0666df0bf: movzx edx, ax
old instr: 0x40fdb8: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df0c2: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fdbf: movsxd rsi, edx
    new instr:0x7fb0666df0c9: movsxd rsi, edx
old instr: 0x40fdc2: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df0cc: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fdc5: cdqe 
    new instr:0x7fb0666df0cf: cdqe 
old instr: 0x40fdc7: add rax, rax
    new instr:0x7fb0666df0d1: add rax, rax
old instr: 0x40fdca: mov rdi, rax
    new instr:0x7fb0666df0d4: mov rdi, rax
old instr: 0x40fdcd: shl rdi, 0x7
    new instr:0x7fb0666df0d7: shl rdi, 0x7
old instr: 0x40fdd1: add rax, rdi
    new instr:0x7fb0666df0db: add rax, rdi
old instr: 0x40fdd4: add rax, rsi
    new instr:0x7fb0666df0de: add rax, rsi
old instr: 0x40fdd7: add rax, 0x2c60
    new instr:0x7fb0666df0e1: add rax, 0x2c60
old instr: 0x40fddd: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df0e7: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fde1: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df0eb: lea esi, ptr [rax+0x1]
old instr: 0x40fde4: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df0ee: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fdeb: movsxd rdx, edx
    new instr:0x7fb0666df0f5: movsxd rdx, edx
old instr: 0x40fdee: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df0f8: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fdf1: cdqe 
    new instr:0x7fb0666df0fb: cdqe 
old instr: 0x40fdf3: add rax, rax
    new instr:0x7fb0666df0fd: add rax, rax
old instr: 0x40fdf6: mov rdi, rax
    new instr:0x7fb0666df100: mov rdi, rax
old instr: 0x40fdf9: shl rdi, 0x7
    new instr:0x7fb0666df103: shl rdi, 0x7
old instr: 0x40fdfd: add rax, rdi
    new instr:0x7fb0666df107: add rax, rdi
old instr: 0x40fe00: add rax, rdx
    new instr:0x7fb0666df10a: add rax, rdx
old instr: 0x40fe03: add rax, 0x2c60
    new instr:0x7fb0666df10d: add rax, 0x2c60
old instr: 0x40fe09: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df113: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fe0d: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df117: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fe10: cdqe 
    new instr:0x7fb0666df11a: cdqe 
old instr: 0x40fe12: add rax, 0x26
    new instr:0x7fb0666df11c: add rax, 0x26
old instr: 0x40fe16: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df120: lea rdx, ptr [rax+rax*1]
old instr: 0x40fe1a: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df124: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fe1e: add rax, rdx
    new instr:0x7fb0666df128: add rax, rdx
40fe21
old instr: 0x40fe21: movzx eax, word ptr [rax]
    new instr:0x7fb0666df12b: movzx eax, word ptr [rax]
old instr: 0x40fe24: movzx edx, ax
    new instr:0x7fb0666df12e: movzx edx, ax
old instr: 0x40fe27: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df131: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fe2e: movsxd rsi, edx
    new instr:0x7fb0666df138: movsxd rsi, edx
old instr: 0x40fe31: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df13b: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fe34: cdqe 
    new instr:0x7fb0666df13e: cdqe 
old instr: 0x40fe36: add rax, rax
    new instr:0x7fb0666df140: add rax, rax
old instr: 0x40fe39: mov rdi, rax
    new instr:0x7fb0666df143: mov rdi, rax
old instr: 0x40fe3c: shl rdi, 0x7
    new instr:0x7fb0666df146: shl rdi, 0x7
old instr: 0x40fe40: add rax, rdi
    new instr:0x7fb0666df14a: add rax, rdi
old instr: 0x40fe43: add rax, rsi
    new instr:0x7fb0666df14d: add rax, rsi
old instr: 0x40fe46: add rax, 0x2c60
    new instr:0x7fb0666df150: add rax, 0x2c60
old instr: 0x40fe4c: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df156: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40fe50: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df15a: lea esi, ptr [rax+0x1]
old instr: 0x40fe53: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df15d: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fe5a: movsxd rdx, edx
    new instr:0x7fb0666df164: movsxd rdx, edx
old instr: 0x40fe5d: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df167: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fe60: cdqe 
    new instr:0x7fb0666df16a: cdqe 
old instr: 0x40fe62: add rax, rax
    new instr:0x7fb0666df16c: add rax, rax
old instr: 0x40fe65: mov rdi, rax
    new instr:0x7fb0666df16f: mov rdi, rax
old instr: 0x40fe68: shl rdi, 0x7
    new instr:0x7fb0666df172: shl rdi, 0x7
old instr: 0x40fe6c: add rax, rdi
    new instr:0x7fb0666df176: add rax, rdi
old instr: 0x40fe6f: add rax, rdx
    new instr:0x7fb0666df179: add rax, rdx
old instr: 0x40fe72: add rax, 0x2c60
    new instr:0x7fb0666df17c: add rax, 0x2c60
old instr: 0x40fe78: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df182: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40fe7c: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df186: mov eax, dword ptr [rbp-0x34]
old instr: 0x40fe7f: cdqe 
    new instr:0x7fb0666df189: cdqe 
old instr: 0x40fe81: add rax, 0x27
    new instr:0x7fb0666df18b: add rax, 0x27
old instr: 0x40fe85: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df18f: lea rdx, ptr [rax+rax*1]
old instr: 0x40fe89: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df193: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fe8d: add rax, rdx
    new instr:0x7fb0666df197: add rax, rdx
old instr: 0x40fe90: movzx eax, word ptr [rax]
    new instr:0x7fb0666df19a: movzx eax, word ptr [rax]
old instr: 0x40fe93: movzx edx, ax
    new instr:0x7fb0666df19d: movzx edx, ax
old instr: 0x40fe96: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df1a0: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fe9d: movsxd rsi, edx
    new instr:0x7fb0666df1a7: movsxd rsi, edx
old instr: 0x40fea0: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df1aa: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fea3: cdqe 
    new instr:0x7fb0666df1ad: cdqe 
old instr: 0x40fea5: add rax, rax
    new instr:0x7fb0666df1af: add rax, rax
old instr: 0x40fea8: mov rdi, rax
    new instr:0x7fb0666df1b2: mov rdi, rax
old instr: 0x40feab: shl rdi, 0x7
    new instr:0x7fb0666df1b5: shl rdi, 0x7
old instr: 0x40feaf: add rax, rdi
    new instr:0x7fb0666df1b9: add rax, rdi
old instr: 0x40feb2: add rax, rsi
    new instr:0x7fb0666df1bc: add rax, rsi
old instr: 0x40feb5: add rax, 0x2c60
    new instr:0x7fb0666df1bf: add rax, 0x2c60
old instr: 0x40febb: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df1c5: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40febf: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df1c9: lea esi, ptr [rax+0x1]
old instr: 0x40fec2: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df1cc: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40fec9: movsxd rdx, edx
    new instr:0x7fb0666df1d3: movsxd rdx, edx
old instr: 0x40fecc: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df1d6: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fecf: cdqe 
    new instr:0x7fb0666df1d9: cdqe 
old instr: 0x40fed1: add rax, rax
    new instr:0x7fb0666df1db: add rax, rax
old instr: 0x40fed4: mov rdi, rax
    new instr:0x7fb0666df1de: mov rdi, rax
old instr: 0x40fed7: shl rdi, 0x7
    new instr:0x7fb0666df1e1: shl rdi, 0x7
old instr: 0x40fedb: add rax, rdi
    new instr:0x7fb0666df1e5: add rax, rdi
old instr: 0x40fede: add rax, rdx
    new instr:0x7fb0666df1e8: add rax, rdx
old instr: 0x40fee1: add rax, 0x2c60
    new instr:0x7fb0666df1eb: add rax, 0x2c60
old instr: 0x40fee7: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df1f1: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40feeb: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df1f5: mov eax, dword ptr [rbp-0x34]
old instr: 0x40feee: cdqe 
    new instr:0x7fb0666df1f8: cdqe 
old instr: 0x40fef0: add rax, 0x28
    new instr:0x7fb0666df1fa: add rax, 0x28
old instr: 0x40fef4: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df1fe: lea rdx, ptr [rax+rax*1]
old instr: 0x40fef8: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df202: mov rax, qword ptr [rbp-0x78]
old instr: 0x40fefc: add rax, rdx
    new instr:0x7fb0666df206: add rax, rdx
old instr: 0x40feff: movzx eax, word ptr [rax]
    new instr:0x7fb0666df209: movzx eax, word ptr [rax]
old instr: 0x40ff02: movzx edx, ax
    new instr:0x7fb0666df20c: movzx edx, ax
old instr: 0x40ff05: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df20f: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ff0c: movsxd rsi, edx
    new instr:0x7fb0666df216: movsxd rsi, edx
old instr: 0x40ff0f: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df219: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ff12: cdqe 
    new instr:0x7fb0666df21c: cdqe 
old instr: 0x40ff14: add rax, rax
    new instr:0x7fb0666df21e: add rax, rax
old instr: 0x40ff17: mov rdi, rax
    new instr:0x7fb0666df221: mov rdi, rax
40ff1a
old instr: 0x40ff1a: shl rdi, 0x7
    new instr:0x7fb0666df224: shl rdi, 0x7
old instr: 0x40ff1e: add rax, rdi
    new instr:0x7fb0666df228: add rax, rdi
old instr: 0x40ff21: add rax, rsi
    new instr:0x7fb0666df22b: add rax, rsi
old instr: 0x40ff24: add rax, 0x2c60
    new instr:0x7fb0666df22e: add rax, 0x2c60
old instr: 0x40ff2a: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df234: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ff2e: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df238: lea esi, ptr [rax+0x1]
old instr: 0x40ff31: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df23b: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ff38: movsxd rdx, edx
    new instr:0x7fb0666df242: movsxd rdx, edx
old instr: 0x40ff3b: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df245: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ff3e: cdqe 
    new instr:0x7fb0666df248: cdqe 
old instr: 0x40ff40: add rax, rax
    new instr:0x7fb0666df24a: add rax, rax
old instr: 0x40ff43: mov rdi, rax
    new instr:0x7fb0666df24d: mov rdi, rax
old instr: 0x40ff46: shl rdi, 0x7
    new instr:0x7fb0666df250: shl rdi, 0x7
old instr: 0x40ff4a: add rax, rdi
    new instr:0x7fb0666df254: add rax, rdi
old instr: 0x40ff4d: add rax, rdx
    new instr:0x7fb0666df257: add rax, rdx
old instr: 0x40ff50: add rax, 0x2c60
    new instr:0x7fb0666df25a: add rax, 0x2c60
old instr: 0x40ff56: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df260: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ff5a: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df264: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ff5d: cdqe 
    new instr:0x7fb0666df267: cdqe 
old instr: 0x40ff5f: add rax, 0x29
    new instr:0x7fb0666df269: add rax, 0x29
old instr: 0x40ff63: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df26d: lea rdx, ptr [rax+rax*1]
old instr: 0x40ff67: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df271: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ff6b: add rax, rdx
    new instr:0x7fb0666df275: add rax, rdx
old instr: 0x40ff6e: movzx eax, word ptr [rax]
    new instr:0x7fb0666df278: movzx eax, word ptr [rax]
old instr: 0x40ff71: movzx edx, ax
    new instr:0x7fb0666df27b: movzx edx, ax
old instr: 0x40ff74: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df27e: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ff7b: movsxd rsi, edx
    new instr:0x7fb0666df285: movsxd rsi, edx
old instr: 0x40ff7e: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df288: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ff81: cdqe 
    new instr:0x7fb0666df28b: cdqe 
old instr: 0x40ff83: add rax, rax
    new instr:0x7fb0666df28d: add rax, rax
old instr: 0x40ff86: mov rdi, rax
    new instr:0x7fb0666df290: mov rdi, rax
old instr: 0x40ff89: shl rdi, 0x7
    new instr:0x7fb0666df293: shl rdi, 0x7
old instr: 0x40ff8d: add rax, rdi
    new instr:0x7fb0666df297: add rax, rdi
old instr: 0x40ff90: add rax, rsi
    new instr:0x7fb0666df29a: add rax, rsi
old instr: 0x40ff93: add rax, 0x2c60
    new instr:0x7fb0666df29d: add rax, 0x2c60
old instr: 0x40ff99: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df2a3: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x40ff9d: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df2a7: lea esi, ptr [rax+0x1]
old instr: 0x40ffa0: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df2aa: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ffa7: movsxd rdx, edx
    new instr:0x7fb0666df2b1: movsxd rdx, edx
old instr: 0x40ffaa: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df2b4: mov eax, dword ptr [rbp-0x40]
old instr: 0x40ffad: cdqe 
    new instr:0x7fb0666df2b7: cdqe 
old instr: 0x40ffaf: add rax, rax
    new instr:0x7fb0666df2b9: add rax, rax
old instr: 0x40ffb2: mov rdi, rax
    new instr:0x7fb0666df2bc: mov rdi, rax
old instr: 0x40ffb5: shl rdi, 0x7
    new instr:0x7fb0666df2bf: shl rdi, 0x7
old instr: 0x40ffb9: add rax, rdi
    new instr:0x7fb0666df2c3: add rax, rdi
old instr: 0x40ffbc: add rax, rdx
    new instr:0x7fb0666df2c6: add rax, rdx
old instr: 0x40ffbf: add rax, 0x2c60
    new instr:0x7fb0666df2c9: add rax, 0x2c60
old instr: 0x40ffc5: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df2cf: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x40ffc9: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df2d3: mov eax, dword ptr [rbp-0x34]
old instr: 0x40ffcc: cdqe 
    new instr:0x7fb0666df2d6: cdqe 
old instr: 0x40ffce: add rax, 0x2a
    new instr:0x7fb0666df2d8: add rax, 0x2a
old instr: 0x40ffd2: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df2dc: lea rdx, ptr [rax+rax*1]
old instr: 0x40ffd6: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df2e0: mov rax, qword ptr [rbp-0x78]
old instr: 0x40ffda: add rax, rdx
    new instr:0x7fb0666df2e4: add rax, rdx
old instr: 0x40ffdd: movzx eax, word ptr [rax]
    new instr:0x7fb0666df2e7: movzx eax, word ptr [rax]
old instr: 0x40ffe0: movzx edx, ax
    new instr:0x7fb0666df2ea: movzx edx, ax
old instr: 0x40ffe3: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df2ed: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x40ffea: movsxd rsi, edx
    new instr:0x7fb0666df2f4: movsxd rsi, edx
old instr: 0x40ffed: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df2f7: mov eax, dword ptr [rbp-0x40]
old instr: 0x40fff0: cdqe 
    new instr:0x7fb0666df2fa: cdqe 
old instr: 0x40fff2: add rax, rax
    new instr:0x7fb0666df2fc: add rax, rax
old instr: 0x40fff5: mov rdi, rax
    new instr:0x7fb0666df2ff: mov rdi, rax
old instr: 0x40fff8: shl rdi, 0x7
    new instr:0x7fb0666df302: shl rdi, 0x7
old instr: 0x40fffc: add rax, rdi
    new instr:0x7fb0666df306: add rax, rdi
old instr: 0x40ffff: add rax, rsi
    new instr:0x7fb0666df309: add rax, rsi
old instr: 0x410002: add rax, 0x2c60
    new instr:0x7fb0666df30c: add rax, 0x2c60
old instr: 0x410008: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df312: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x41000c: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df316: lea esi, ptr [rax+0x1]
old instr: 0x41000f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df319: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410016: movsxd rdx, edx
    new instr:0x7fb0666df320: movsxd rdx, edx
410019
old instr: 0x410019: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df323: mov eax, dword ptr [rbp-0x40]
old instr: 0x41001c: cdqe 
    new instr:0x7fb0666df326: cdqe 
old instr: 0x41001e: add rax, rax
    new instr:0x7fb0666df328: add rax, rax
old instr: 0x410021: mov rdi, rax
    new instr:0x7fb0666df32b: mov rdi, rax
old instr: 0x410024: shl rdi, 0x7
    new instr:0x7fb0666df32e: shl rdi, 0x7
old instr: 0x410028: add rax, rdi
    new instr:0x7fb0666df332: add rax, rdi
old instr: 0x41002b: add rax, rdx
    new instr:0x7fb0666df335: add rax, rdx
old instr: 0x41002e: add rax, 0x2c60
    new instr:0x7fb0666df338: add rax, 0x2c60
old instr: 0x410034: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df33e: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x410038: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df342: mov eax, dword ptr [rbp-0x34]
old instr: 0x41003b: cdqe 
    new instr:0x7fb0666df345: cdqe 
old instr: 0x41003d: add rax, 0x2b
    new instr:0x7fb0666df347: add rax, 0x2b
old instr: 0x410041: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df34b: lea rdx, ptr [rax+rax*1]
old instr: 0x410045: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df34f: mov rax, qword ptr [rbp-0x78]
old instr: 0x410049: add rax, rdx
    new instr:0x7fb0666df353: add rax, rdx
old instr: 0x41004c: movzx eax, word ptr [rax]
    new instr:0x7fb0666df356: movzx eax, word ptr [rax]
old instr: 0x41004f: movzx edx, ax
    new instr:0x7fb0666df359: movzx edx, ax
old instr: 0x410052: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df35c: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410059: movsxd rsi, edx
    new instr:0x7fb0666df363: movsxd rsi, edx
old instr: 0x41005c: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df366: mov eax, dword ptr [rbp-0x40]
old instr: 0x41005f: cdqe 
    new instr:0x7fb0666df369: cdqe 
old instr: 0x410061: add rax, rax
    new instr:0x7fb0666df36b: add rax, rax
old instr: 0x410064: mov rdi, rax
    new instr:0x7fb0666df36e: mov rdi, rax
old instr: 0x410067: shl rdi, 0x7
    new instr:0x7fb0666df371: shl rdi, 0x7
old instr: 0x41006b: add rax, rdi
    new instr:0x7fb0666df375: add rax, rdi
old instr: 0x41006e: add rax, rsi
    new instr:0x7fb0666df378: add rax, rsi
old instr: 0x410071: add rax, 0x2c60
    new instr:0x7fb0666df37b: add rax, 0x2c60
old instr: 0x410077: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df381: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x41007b: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df385: lea esi, ptr [rax+0x1]
old instr: 0x41007e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df388: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410085: movsxd rdx, edx
    new instr:0x7fb0666df38f: movsxd rdx, edx
old instr: 0x410088: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df392: mov eax, dword ptr [rbp-0x40]
old instr: 0x41008b: cdqe 
    new instr:0x7fb0666df395: cdqe 
old instr: 0x41008d: add rax, rax
    new instr:0x7fb0666df397: add rax, rax
old instr: 0x410090: mov rdi, rax
    new instr:0x7fb0666df39a: mov rdi, rax
old instr: 0x410093: shl rdi, 0x7
    new instr:0x7fb0666df39d: shl rdi, 0x7
old instr: 0x410097: add rax, rdi
    new instr:0x7fb0666df3a1: add rax, rdi
old instr: 0x41009a: add rax, rdx
    new instr:0x7fb0666df3a4: add rax, rdx
old instr: 0x41009d: add rax, 0x2c60
    new instr:0x7fb0666df3a7: add rax, 0x2c60
old instr: 0x4100a3: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df3ad: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x4100a7: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df3b1: mov eax, dword ptr [rbp-0x34]
old instr: 0x4100aa: cdqe 
    new instr:0x7fb0666df3b4: cdqe 
old instr: 0x4100ac: add rax, 0x2c
    new instr:0x7fb0666df3b6: add rax, 0x2c
old instr: 0x4100b0: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df3ba: lea rdx, ptr [rax+rax*1]
old instr: 0x4100b4: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df3be: mov rax, qword ptr [rbp-0x78]
old instr: 0x4100b8: add rax, rdx
    new instr:0x7fb0666df3c2: add rax, rdx
old instr: 0x4100bb: movzx eax, word ptr [rax]
    new instr:0x7fb0666df3c5: movzx eax, word ptr [rax]
old instr: 0x4100be: movzx edx, ax
    new instr:0x7fb0666df3c8: movzx edx, ax
old instr: 0x4100c1: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df3cb: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4100c8: movsxd rsi, edx
    new instr:0x7fb0666df3d2: movsxd rsi, edx
old instr: 0x4100cb: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df3d5: mov eax, dword ptr [rbp-0x40]
old instr: 0x4100ce: cdqe 
    new instr:0x7fb0666df3d8: cdqe 
old instr: 0x4100d0: add rax, rax
    new instr:0x7fb0666df3da: add rax, rax
old instr: 0x4100d3: mov rdi, rax
    new instr:0x7fb0666df3dd: mov rdi, rax
old instr: 0x4100d6: shl rdi, 0x7
    new instr:0x7fb0666df3e0: shl rdi, 0x7
old instr: 0x4100da: add rax, rdi
    new instr:0x7fb0666df3e4: add rax, rdi
old instr: 0x4100dd: add rax, rsi
    new instr:0x7fb0666df3e7: add rax, rsi
old instr: 0x4100e0: add rax, 0x2c60
    new instr:0x7fb0666df3ea: add rax, 0x2c60
old instr: 0x4100e6: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df3f0: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x4100ea: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df3f4: lea esi, ptr [rax+0x1]
old instr: 0x4100ed: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df3f7: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4100f4: movsxd rdx, edx
    new instr:0x7fb0666df3fe: movsxd rdx, edx
old instr: 0x4100f7: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df401: mov eax, dword ptr [rbp-0x40]
old instr: 0x4100fa: cdqe 
    new instr:0x7fb0666df404: cdqe 
old instr: 0x4100fc: add rax, rax
    new instr:0x7fb0666df406: add rax, rax
old instr: 0x4100ff: mov rdi, rax
    new instr:0x7fb0666df409: mov rdi, rax
old instr: 0x410102: shl rdi, 0x7
    new instr:0x7fb0666df40c: shl rdi, 0x7
old instr: 0x410106: add rax, rdi
    new instr:0x7fb0666df410: add rax, rdi
old instr: 0x410109: add rax, rdx
    new instr:0x7fb0666df413: add rax, rdx
old instr: 0x41010c: add rax, 0x2c60
    new instr:0x7fb0666df416: add rax, 0x2c60
410112
old instr: 0x410112: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df41c: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x410116: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df420: mov eax, dword ptr [rbp-0x34]
old instr: 0x410119: cdqe 
    new instr:0x7fb0666df423: cdqe 
old instr: 0x41011b: add rax, 0x2d
    new instr:0x7fb0666df425: add rax, 0x2d
old instr: 0x41011f: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df429: lea rdx, ptr [rax+rax*1]
old instr: 0x410123: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df42d: mov rax, qword ptr [rbp-0x78]
old instr: 0x410127: add rax, rdx
    new instr:0x7fb0666df431: add rax, rdx
old instr: 0x41012a: movzx eax, word ptr [rax]
    new instr:0x7fb0666df434: movzx eax, word ptr [rax]
old instr: 0x41012d: movzx edx, ax
    new instr:0x7fb0666df437: movzx edx, ax
old instr: 0x410130: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df43a: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410137: movsxd rsi, edx
    new instr:0x7fb0666df441: movsxd rsi, edx
old instr: 0x41013a: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df444: mov eax, dword ptr [rbp-0x40]
old instr: 0x41013d: cdqe 
    new instr:0x7fb0666df447: cdqe 
old instr: 0x41013f: add rax, rax
    new instr:0x7fb0666df449: add rax, rax
old instr: 0x410142: mov rdi, rax
    new instr:0x7fb0666df44c: mov rdi, rax
old instr: 0x410145: shl rdi, 0x7
    new instr:0x7fb0666df44f: shl rdi, 0x7
old instr: 0x410149: add rax, rdi
    new instr:0x7fb0666df453: add rax, rdi
old instr: 0x41014c: add rax, rsi
    new instr:0x7fb0666df456: add rax, rsi
old instr: 0x41014f: add rax, 0x2c60
    new instr:0x7fb0666df459: add rax, 0x2c60
old instr: 0x410155: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df45f: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x410159: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df463: lea esi, ptr [rax+0x1]
old instr: 0x41015c: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df466: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410163: movsxd rdx, edx
    new instr:0x7fb0666df46d: movsxd rdx, edx
old instr: 0x410166: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df470: mov eax, dword ptr [rbp-0x40]
old instr: 0x410169: cdqe 
    new instr:0x7fb0666df473: cdqe 
old instr: 0x41016b: add rax, rax
    new instr:0x7fb0666df475: add rax, rax
old instr: 0x41016e: mov rdi, rax
    new instr:0x7fb0666df478: mov rdi, rax
old instr: 0x410171: shl rdi, 0x7
    new instr:0x7fb0666df47b: shl rdi, 0x7
old instr: 0x410175: add rax, rdi
    new instr:0x7fb0666df47f: add rax, rdi
old instr: 0x410178: add rax, rdx
    new instr:0x7fb0666df482: add rax, rdx
old instr: 0x41017b: add rax, 0x2c60
    new instr:0x7fb0666df485: add rax, 0x2c60
old instr: 0x410181: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df48b: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x410185: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df48f: mov eax, dword ptr [rbp-0x34]
old instr: 0x410188: cdqe 
    new instr:0x7fb0666df492: cdqe 
old instr: 0x41018a: add rax, 0x2e
    new instr:0x7fb0666df494: add rax, 0x2e
old instr: 0x41018e: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df498: lea rdx, ptr [rax+rax*1]
old instr: 0x410192: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df49c: mov rax, qword ptr [rbp-0x78]
old instr: 0x410196: add rax, rdx
    new instr:0x7fb0666df4a0: add rax, rdx
old instr: 0x410199: movzx eax, word ptr [rax]
    new instr:0x7fb0666df4a3: movzx eax, word ptr [rax]
old instr: 0x41019c: movzx edx, ax
    new instr:0x7fb0666df4a6: movzx edx, ax
old instr: 0x41019f: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df4a9: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4101a6: movsxd rsi, edx
    new instr:0x7fb0666df4b0: movsxd rsi, edx
old instr: 0x4101a9: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df4b3: mov eax, dword ptr [rbp-0x40]
old instr: 0x4101ac: cdqe 
    new instr:0x7fb0666df4b6: cdqe 
old instr: 0x4101ae: add rax, rax
    new instr:0x7fb0666df4b8: add rax, rax
old instr: 0x4101b1: mov rdi, rax
    new instr:0x7fb0666df4bb: mov rdi, rax
old instr: 0x4101b4: shl rdi, 0x7
    new instr:0x7fb0666df4be: shl rdi, 0x7
old instr: 0x4101b8: add rax, rdi
    new instr:0x7fb0666df4c2: add rax, rdi
old instr: 0x4101bb: add rax, rsi
    new instr:0x7fb0666df4c5: add rax, rsi
old instr: 0x4101be: add rax, 0x2c60
    new instr:0x7fb0666df4c8: add rax, 0x2c60
old instr: 0x4101c4: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df4ce: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x4101c8: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df4d2: lea esi, ptr [rax+0x1]
old instr: 0x4101cb: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df4d5: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4101d2: movsxd rdx, edx
    new instr:0x7fb0666df4dc: movsxd rdx, edx
old instr: 0x4101d5: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df4df: mov eax, dword ptr [rbp-0x40]
old instr: 0x4101d8: cdqe 
    new instr:0x7fb0666df4e2: cdqe 
old instr: 0x4101da: add rax, rax
    new instr:0x7fb0666df4e4: add rax, rax
old instr: 0x4101dd: mov rdi, rax
    new instr:0x7fb0666df4e7: mov rdi, rax
old instr: 0x4101e0: shl rdi, 0x7
    new instr:0x7fb0666df4ea: shl rdi, 0x7
old instr: 0x4101e4: add rax, rdi
    new instr:0x7fb0666df4ee: add rax, rdi
old instr: 0x4101e7: add rax, rdx
    new instr:0x7fb0666df4f1: add rax, rdx
old instr: 0x4101ea: add rax, 0x2c60
    new instr:0x7fb0666df4f4: add rax, 0x2c60
old instr: 0x4101f0: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df4fa: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x4101f4: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df4fe: mov eax, dword ptr [rbp-0x34]
old instr: 0x4101f7: cdqe 
    new instr:0x7fb0666df501: cdqe 
old instr: 0x4101f9: add rax, 0x2f
    new instr:0x7fb0666df503: add rax, 0x2f
old instr: 0x4101fd: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df507: lea rdx, ptr [rax+rax*1]
old instr: 0x410201: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df50b: mov rax, qword ptr [rbp-0x78]
old instr: 0x410205: add rax, rdx
    new instr:0x7fb0666df50f: add rax, rdx
old instr: 0x410208: movzx eax, word ptr [rax]
    new instr:0x7fb0666df512: movzx eax, word ptr [rax]
41020b
old instr: 0x41020b: movzx edx, ax
    new instr:0x7fb0666df515: movzx edx, ax
old instr: 0x41020e: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df518: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410215: movsxd rsi, edx
    new instr:0x7fb0666df51f: movsxd rsi, edx
old instr: 0x410218: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df522: mov eax, dword ptr [rbp-0x40]
old instr: 0x41021b: cdqe 
    new instr:0x7fb0666df525: cdqe 
old instr: 0x41021d: add rax, rax
    new instr:0x7fb0666df527: add rax, rax
old instr: 0x410220: mov rdi, rax
    new instr:0x7fb0666df52a: mov rdi, rax
old instr: 0x410223: shl rdi, 0x7
    new instr:0x7fb0666df52d: shl rdi, 0x7
old instr: 0x410227: add rax, rdi
    new instr:0x7fb0666df531: add rax, rdi
old instr: 0x41022a: add rax, rsi
    new instr:0x7fb0666df534: add rax, rsi
old instr: 0x41022d: add rax, 0x2c60
    new instr:0x7fb0666df537: add rax, 0x2c60
old instr: 0x410233: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df53d: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x410237: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df541: lea esi, ptr [rax+0x1]
old instr: 0x41023a: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df544: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410241: movsxd rdx, edx
    new instr:0x7fb0666df54b: movsxd rdx, edx
old instr: 0x410244: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df54e: mov eax, dword ptr [rbp-0x40]
old instr: 0x410247: cdqe 
    new instr:0x7fb0666df551: cdqe 
old instr: 0x410249: add rax, rax
    new instr:0x7fb0666df553: add rax, rax
old instr: 0x41024c: mov rdi, rax
    new instr:0x7fb0666df556: mov rdi, rax
old instr: 0x41024f: shl rdi, 0x7
    new instr:0x7fb0666df559: shl rdi, 0x7
old instr: 0x410253: add rax, rdi
    new instr:0x7fb0666df55d: add rax, rdi
old instr: 0x410256: add rax, rdx
    new instr:0x7fb0666df560: add rax, rdx
old instr: 0x410259: add rax, 0x2c60
    new instr:0x7fb0666df563: add rax, 0x2c60
old instr: 0x41025f: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df569: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x410263: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df56d: mov eax, dword ptr [rbp-0x34]
old instr: 0x410266: cdqe 
    new instr:0x7fb0666df570: cdqe 
old instr: 0x410268: add rax, 0x30
    new instr:0x7fb0666df572: add rax, 0x30
old instr: 0x41026c: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df576: lea rdx, ptr [rax+rax*1]
old instr: 0x410270: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df57a: mov rax, qword ptr [rbp-0x78]
old instr: 0x410274: add rax, rdx
    new instr:0x7fb0666df57e: add rax, rdx
old instr: 0x410277: movzx eax, word ptr [rax]
    new instr:0x7fb0666df581: movzx eax, word ptr [rax]
old instr: 0x41027a: movzx edx, ax
    new instr:0x7fb0666df584: movzx edx, ax
old instr: 0x41027d: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df587: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x410284: movsxd rsi, edx
    new instr:0x7fb0666df58e: movsxd rsi, edx
old instr: 0x410287: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df591: mov eax, dword ptr [rbp-0x40]
old instr: 0x41028a: cdqe 
    new instr:0x7fb0666df594: cdqe 
old instr: 0x41028c: add rax, rax
    new instr:0x7fb0666df596: add rax, rax
old instr: 0x41028f: mov rdi, rax
    new instr:0x7fb0666df599: mov rdi, rax
old instr: 0x410292: shl rdi, 0x7
    new instr:0x7fb0666df59c: shl rdi, 0x7
old instr: 0x410296: add rax, rdi
    new instr:0x7fb0666df5a0: add rax, rdi
old instr: 0x410299: add rax, rsi
    new instr:0x7fb0666df5a3: add rax, rsi
old instr: 0x41029c: add rax, 0x2c60
    new instr:0x7fb0666df5a6: add rax, 0x2c60
old instr: 0x4102a2: mov eax, dword ptr [rcx+rax*4+0x8]
    new instr:0x7fb0666df5ac: mov eax, dword ptr [rcx+rax*4+0x8]
old instr: 0x4102a6: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df5b0: lea esi, ptr [rax+0x1]
old instr: 0x4102a9: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df5b3: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4102b0: movsxd rdx, edx
    new instr:0x7fb0666df5ba: movsxd rdx, edx
old instr: 0x4102b3: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df5bd: mov eax, dword ptr [rbp-0x40]
old instr: 0x4102b6: cdqe 
    new instr:0x7fb0666df5c0: cdqe 
old instr: 0x4102b8: add rax, rax
    new instr:0x7fb0666df5c2: add rax, rax
old instr: 0x4102bb: mov rdi, rax
    new instr:0x7fb0666df5c5: mov rdi, rax
old instr: 0x4102be: shl rdi, 0x7
    new instr:0x7fb0666df5c8: shl rdi, 0x7
old instr: 0x4102c2: add rax, rdi
    new instr:0x7fb0666df5cc: add rax, rdi
old instr: 0x4102c5: add rax, rdx
    new instr:0x7fb0666df5cf: add rax, rdx
old instr: 0x4102c8: add rax, 0x2c60
    new instr:0x7fb0666df5d2: add rax, 0x2c60
old instr: 0x4102ce: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df5d8: mov dword ptr [rcx+rax*4+0x8], esi
old instr: 0x4102d2: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df5dc: mov eax, dword ptr [rbp-0x34]
old instr: 0x4102d5: cdqe 
    new instr:0x7fb0666df5df: cdqe 
old instr: 0x4102d7: add rax, 0x31
    new instr:0x7fb0666df5e1: add rax, 0x31
old instr: 0x4102db: lea rdx, ptr [rax+rax*1]
    new instr:0x7fb0666df5e5: lea rdx, ptr [rax+rax*1]
old instr: 0x4102df: mov rax, qword ptr [rbp-0x78]
    new instr:0x7fb0666df5e9: mov rax, qword ptr [rbp-0x78]
old instr: 0x4102e3: add rax, rdx
    new instr:0x7fb0666df5ed: add rax, rdx
old instr: 0x4102e6: movzx eax, word ptr [rax]
    new instr:0x7fb0666df5f0: movzx eax, word ptr [rax]
old instr: 0x4102e9: movzx edx, ax
    new instr:0x7fb0666df5f3: movzx edx, ax
old instr: 0x4102ec: mov rcx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df5f6: mov rcx, qword ptr [rbp-0xf8]
old instr: 0x4102f3: movsxd rsi, edx
    new instr:0x7fb0666df5fd: movsxd rsi, edx
old instr: 0x4102f6: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df600: mov eax, dword ptr [rbp-0x40]
old instr: 0x4102f9: cdqe 
    new instr:0x7fb0666df603: cdqe 
old instr: 0x4102fb: add rax, rax
    new instr:0x7fb0666df605: add rax, rax
old instr: 0x4102fe: mov rdi, rax
    new instr:0x7fb0666df608: mov rdi, rax
old instr: 0x410301: shl rdi, 0x7
    new instr:0x7fb0666df60b: shl rdi, 0x7
410305
old instr: 0x410305: add rax, rdi
    new instr:0x7fb0666df60f: add rax, rdi
410322
old instr: 0x410322: mov eax, dword ptr [rbp-0x40]
    new instr:0x7fb0666df612: mov eax, dword ptr [rbp-0x40]
old instr: 0x410325: cdqe 
    new instr:0x7fb0666df615: cdqe 
old instr: 0x410327: add rax, rax
    new instr:0x7fb0666df617: add rax, rax
old instr: 0x41032a: mov rdi, rax
    new instr:0x7fb0666df61a: mov rdi, rax
old instr: 0x41032d: shl rdi, 0x7
    new instr:0x7fb0666df61d: shl rdi, 0x7
old instr: 0x410331: add rax, rdi
    new instr:0x7fb0666df621: add rax, rdi
old instr: 0x410334: add rax, rdx
    new instr:0x7fb0666df624: add rax, rdx
old instr: 0x410337: add rax, 0x2c60
    new instr:0x7fb0666df627: add rax, 0x2c60
old instr: 0x41033d: mov dword ptr [rcx+rax*4+0x8], esi
    new instr:0x7fb0666df62d: mov dword ptr [rcx+rax*4+0x8], esi
in revert 
removing jump and inserting a dummy entry 
4103c2
old instr: 0x4103c2: mov eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666df631: mov eax, dword ptr [rbp-0x38]
old instr: 0x4103c5: add eax, 0x1
    new instr:0x7fb0666df634: add eax, 0x1
old instr: 0x4103c8: mov dword ptr [rbp-0x34], eax
    new instr:0x7fb0666df637: mov dword ptr [rbp-0x34], eax
old instr: 0x4103cb: jmp 0x40d405
    new instr:0x7fb0666df63a: jmp 0x7fb0666dc674
inserted instruction
410343
old instr: 0x410343: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666df63f: mov eax, dword ptr [rbp-0x34]
old instr: 0x410346: mov dword ptr [rbp-0x2c], eax
    new instr:0x7fb0666df642: mov dword ptr [rbp-0x2c], eax
in revert 
removing jump and inserting a dummy entry 
4103ba
old instr: 0x4103ba: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666df645: mov eax, dword ptr [rbp-0x2c]
old instr: 0x4103bd: cmp eax, dword ptr [rbp-0x38]
    new instr:0x7fb0666df648: cmp eax, dword ptr [rbp-0x38]
in revert 
    new instr:0x7fb0666df64b: jnle 0x7fb0666df5d6
41034b
old instr: 0x41034b: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666df64d: mov eax, dword ptr [rbp-0x2c]
4103d0
old instr: 0x4103d0: nop
    new instr:0x7fb0666df650: nop
old instr: 0x4103d1: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df651: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4103d8: mov eax, dword ptr [rax+0x290]
    new instr:0x7fb0666df658: mov eax, dword ptr [rax+0x290]
old instr: 0x4103de: cmp eax, 0x2
    new instr:0x7fb0666df65e: cmp eax, 0x2
in revert 
    new instr:0x7fb0666df661: jnle 0x7fb0666df6e8
410468
old instr: 0x410468: mov dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666df667: mov dword ptr [rbp-0x28], 0x0
in revert 
removing jump and inserting a dummy entry 
4104d3
old instr: 0x4104d3: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666df66e: mov eax, dword ptr [rbp-0x28]
old instr: 0x4104d6: cmp eax, dword ptr [rbp-0x5c]
    new instr:0x7fb0666df671: cmp eax, dword ptr [rbp-0x5c]
in revert 
    new instr:0x7fb0666df674: jnl 0x7fb0666df60c
410471
old instr: 0x410471: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666df676: mov eax, dword ptr [rbp-0x28]
old instr: 0x410474: cdqe 
    new instr:0x7fb0666df679: cdqe 
old instr: 0x410476: shl rax, 0x3
    new instr:0x7fb0666df67b: shl rax, 0x3
old instr: 0x41047a: mov rdx, rax
    new instr:0x7fb0666df67f: mov rdx, rax
old instr: 0x41047d: shl rdx, 0x7
    new instr:0x7fb0666df682: shl rdx, 0x7
old instr: 0x410481: add rax, rdx
    new instr:0x7fb0666df686: add rax, rdx
old instr: 0x410484: lea rdx, ptr [rax+0xb180]
    new instr:0x7fb0666df689: lea rdx, ptr [rax+0xb180]
old instr: 0x41048b: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df690: mov rax, qword ptr [rbp-0xf8]
old instr: 0x410492: add rax, rdx
    new instr:0x7fb0666df697: add rax, rdx
old instr: 0x410495: lea rsi, ptr [rax+0x8]
    new instr:0x7fb0666df69a: lea rsi, ptr [rax+0x8]
old instr: 0x410499: mov eax, dword ptr [rbp-0x28]
    new instr:0x7fb0666df69e: mov eax, dword ptr [rbp-0x28]
old instr: 0x41049c: cdqe 
    new instr:0x7fb0666df6a1: cdqe 
old instr: 0x41049e: add rax, rax
    new instr:0x7fb0666df6a3: add rax, rax
old instr: 0x4104a1: mov rdx, rax
    new instr:0x7fb0666df6a6: mov rdx, rax
old instr: 0x4104a4: shl rdx, 0x7
    new instr:0x7fb0666df6a9: shl rdx, 0x7
old instr: 0x4104a8: add rax, rdx
    new instr:0x7fb0666df6ad: add rax, rdx
old instr: 0x4104ab: lea rdx, ptr [rax+0x9340]
    new instr:0x7fb0666df6b0: lea rdx, ptr [rax+0x9340]
old instr: 0x4104b2: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df6b7: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4104b9: add rax, rdx
    new instr:0x7fb0666df6be: add rax, rdx
old instr: 0x4104bc: lea rdi, ptr [rax+0xc]
    new instr:0x7fb0666df6c1: lea rdi, ptr [rax+0xc]
old instr: 0x4104c0: mov eax, dword ptr [rbp-0x7c]
    new instr:0x7fb0666df6c5: mov eax, dword ptr [rbp-0x7c]
old instr: 0x4104c3: mov ecx, 0x11
    new instr:0x7fb0666df6c8: mov ecx, 0x11
old instr: 0x4104c8: mov edx, eax
    new instr:0x7fb0666df6cd: mov edx, eax
410855
old instr: 0x410855: mov dword ptr [rbp-0x2c], 0x0
    new instr:0x7fb0666df6cf: mov dword ptr [rbp-0x2c], 0x0
in revert 
removing jump and inserting a dummy entry 
4108dc
old instr: 0x4108dc: cmp dword ptr [rbp-0x2c], 0xf
    new instr:0x7fb0666df6d6: cmp dword ptr [rbp-0x2c], 0xf
in revert 
    new instr:0x7fb0666df6da: jnle 0x7fb0666df658
41085e
old instr: 0x41085e: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666df6e0: mov eax, dword ptr [rbp-0x2c]
old instr: 0x410861: cdqe 
    new instr:0x7fb0666df6e3: cdqe 
old instr: 0x410863: movzx eax, byte ptr [rbp+rax*1-0xf0]
    new instr:0x7fb0666df6e5: movzx eax, byte ptr [rbp+rax*1-0xf0]
old instr: 0x41086b: test al, al
    new instr:0x7fb0666df6ed: test al, al
in revert 
    new instr:0x7fb0666df6ef: jnz 0x7fb0666df75a
4108d8
old instr: 0x4108d8: add dword ptr [rbp-0x2c], 0x1
    new instr:0x7fb0666df6f1: add dword ptr [rbp-0x2c], 0x1
41086f
old instr: 0x41086f: mov dword ptr [rbp-0x30], 0x0
    new instr:0x7fb0666df6f5: mov dword ptr [rbp-0x30], 0x0
in revert 
removing jump and inserting a dummy entry 
4108d2
old instr: 0x4108d2: cmp dword ptr [rbp-0x30], 0xf
    new instr:0x7fb0666df6fc: cmp dword ptr [rbp-0x30], 0xf
in revert 
    new instr:0x7fb0666df700: jnle 0x7fb0666df6a2
410878
old instr: 0x410878: mov eax, dword ptr [rbp-0x2c]
    new instr:0x7fb0666df702: mov eax, dword ptr [rbp-0x2c]
old instr: 0x41087b: mov edx, eax
    new instr:0x7fb0666df705: mov edx, eax
old instr: 0x41087d: shl edx, 0x4
    new instr:0x7fb0666df707: shl edx, 0x4
old instr: 0x410880: mov eax, dword ptr [rbp-0x30]
    new instr:0x7fb0666df70a: mov eax, dword ptr [rbp-0x30]
old instr: 0x410883: add eax, edx
    new instr:0x7fb0666df70d: add eax, edx
old instr: 0x410885: mov rdx, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df70f: mov rdx, qword ptr [rbp-0xf8]
old instr: 0x41088c: cdqe 
    new instr:0x7fb0666df716: cdqe 
old instr: 0x41088e: movzx eax, byte ptr [rdx+rax*1+0x80]
    new instr:0x7fb0666df718: movzx eax, byte ptr [rdx+rax*1+0x80]
old instr: 0x410896: test al, al
    new instr:0x7fb0666df720: test al, al
old instr: 0x410898: jz 0x4108b5
    new instr:0x7fb0666df722: jz 0x7fb0666df73f
inserted instruction
41089a
old instr: 0x41089a: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df724: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4108a1: mov edx, 0x1
    new instr:0x7fb0666df72b: mov edx, 0x1
old instr: 0x4108a6: mov esi, 0x1
    new instr:0x7fb0666df730: mov esi, 0x1
old instr: 0x4108ab: mov rdi, rax
    new instr:0x7fb0666df735: mov rdi, rax
4108b5
old instr: 0x4108b5: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df738: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4108bc: mov edx, 0x0
    new instr:0x7fb0666df73f: mov edx, 0x0
old instr: 0x4108c1: mov esi, 0x1
    new instr:0x7fb0666df744: mov esi, 0x1
old instr: 0x4108c6: mov rdi, rax
    new instr:0x7fb0666df749: mov rdi, rax
4104db
old instr: 0x4104db: add dword ptr [rbp-0x48], 0x1
    new instr:0x7fb0666df74c: add dword ptr [rbp-0x48], 0x1
4103e7
old instr: 0x4103e7: mov eax, dword ptr [rbp-0x3c]
    new instr:0x7fb0666df750: mov eax, dword ptr [rbp-0x3c]
old instr: 0x4103ea: lea edx, ptr [rax+0x7]
    new instr:0x7fb0666df753: lea edx, ptr [rax+0x7]
old instr: 0x4103ed: test eax, eax
    new instr:0x7fb0666df756: test eax, eax
old instr: 0x4103ef: cmovs eax, edx
    new instr:0x7fb0666df758: cmovs eax, edx
old instr: 0x4103f2: sar eax, 0x3
    new instr:0x7fb0666df75b: sar eax, 0x3
old instr: 0x4103f5: mov edx, eax
    new instr:0x7fb0666df75e: mov edx, eax
old instr: 0x4103f7: mov eax, dword ptr [rbp-0x48]
    new instr:0x7fb0666df760: mov eax, dword ptr [rbp-0x48]
old instr: 0x4103fa: lea esi, ptr [rax+0x1]
    new instr:0x7fb0666df763: lea esi, ptr [rax+0x1]
old instr: 0x4103fd: mov rax, qword ptr [rip+0x20ceac]
    new instr:0x7fb0666df766: mov rax, qword ptr [rip+0x20ceac]
old instr: 0x410404: mov ecx, edx
    new instr:0x7fb0666df76d: mov ecx, edx
old instr: 0x410406: mov edx, esi
    new instr:0x7fb0666df76f: mov edx, esi
old instr: 0x410408: mov esi, 0x41acb8
    new instr:0x7fb0666df771: mov esi, 0x41acb8
old instr: 0x41040d: mov rdi, rax
    new instr:0x7fb0666df776: mov rdi, rax
old instr: 0x410410: mov eax, 0x0
    new instr:0x7fb0666df779: mov eax, 0x0
4108e6
old instr: 0x4108e6: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df77e: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4108ed: mov eax, dword ptr [rax+0x290]
    new instr:0x7fb0666df785: mov eax, dword ptr [rax+0x290]
old instr: 0x4108f3: cmp eax, 0x2
    new instr:0x7fb0666df78b: cmp eax, 0x2
in revert 
    new instr:0x7fb0666df78e: jnle 0x7fb0666df7bb
410923
old instr: 0x410923: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df790: mov rax, qword ptr [rbp-0xf8]
old instr: 0x41092a: mov eax, dword ptr [rax+0x74]
    new instr:0x7fb0666df797: mov eax, dword ptr [rax+0x74]
old instr: 0x41092d: mov dword ptr [rbp-0x88], eax
    new instr:0x7fb0666df79a: mov dword ptr [rbp-0x88], eax
old instr: 0x410933: mov edx, dword ptr [rbp-0x5c]
    new instr:0x7fb0666df7a0: mov edx, dword ptr [rbp-0x5c]
old instr: 0x410936: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df7a3: mov rax, qword ptr [rbp-0xf8]
old instr: 0x41093d: mov esi, 0x3
    new instr:0x7fb0666df7aa: mov esi, 0x3
old instr: 0x410942: mov rdi, rax
    new instr:0x7fb0666df7af: mov rdi, rax
4108f8
old instr: 0x4108f8: mov rax, qword ptr [rbp-0xf8]
    new instr:0x7fb0666df7b2: mov rax, qword ptr [rbp-0xf8]
old instr: 0x4108ff: mov eax, dword ptr [rax+0x74]
    new instr:0x7fb0666df7b9: mov eax, dword ptr [rax+0x74]
old instr: 0x410902: mov edx, eax
    new instr:0x7fb0666df7bc: mov edx, eax
old instr: 0x410904: sub edx, dword ptr [rbp-0x88]
    new instr:0x7fb0666df7be: sub edx, dword ptr [rbp-0x88]
old instr: 0x41090a: mov rax, qword ptr [rip+0x20c99f]
    new instr:0x7fb0666df7c4: mov rax, qword ptr [rip+0x20c99f]
old instr: 0x410911: mov esi, 0x41ace5
    new instr:0x7fb0666df7cb: mov esi, 0x41ace5
old instr: 0x410916: mov rdi, rax
    new instr:0x7fb0666df7d0: mov rdi, rax
old instr: 0x410919: mov eax, 0x0
    new instr:0x7fb0666df7d3: mov eax, 0x0
rtn name: sendMTFValues : 3
c
405388
old instr: 0x405388: push rbp
    new instr:0x7fb0666df7d8: push rbp
old instr: 0x405389: mov rbp, rsp
    new instr:0x7fb0666df7d9: mov rbp, rsp
old instr: 0x40538c: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666df7dc: mov qword ptr [rbp-0x18], rdi
old instr: 0x405390: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df7e0: mov rax, qword ptr [rbp-0x18]
old instr: 0x405394: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666df7e4: mov eax, dword ptr [rax+0x5c]
old instr: 0x405397: mov byte ptr [rbp-0x5], al
    new instr:0x7fb0666df7e7: mov byte ptr [rbp-0x5], al
old instr: 0x40539a: mov dword ptr [rbp-0x4], 0x0
    new instr:0x7fb0666df7ea: mov dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
4053e0
old instr: 0x4053e0: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df7f1: mov rax, qword ptr [rbp-0x18]
old instr: 0x4053e4: mov eax, dword ptr [rax+0x60]
    new instr:0x7fb0666df7f5: mov eax, dword ptr [rax+0x60]
old instr: 0x4053e7: cmp eax, dword ptr [rbp-0x4]
    new instr:0x7fb0666df7f8: cmp eax, dword ptr [rbp-0x4]
in revert 
    new instr:0x7fb0666df7fb: jle 0x7fb0666df7b4
4053a3
old instr: 0x4053a3: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df7fd: mov rax, qword ptr [rbp-0x18]
4053ec
old instr: 0x4053ec: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df801: mov rax, qword ptr [rbp-0x18]
old instr: 0x4053f0: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666df805: mov eax, dword ptr [rax+0x5c]
old instr: 0x4053f3: mov rdx, qword ptr [rbp-0x18]
    new instr:0x7fb0666df808: mov rdx, qword ptr [rbp-0x18]
old instr: 0x4053f7: mov eax, eax
    new instr:0x7fb0666df80c: mov eax, eax
old instr: 0x4053f9: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7fb0666df80e: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x405401: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df816: mov rax, qword ptr [rbp-0x18]
old instr: 0x405405: mov eax, dword ptr [rax+0x60]
    new instr:0x7fb0666df81a: mov eax, dword ptr [rax+0x60]
old instr: 0x405408: cmp eax, 0x2
    new instr:0x7fb0666df81d: cmp eax, 0x2
old instr: 0x40540b: jz 0x40544f
    new instr:0x7fb0666df820: jz 0x7fb0666df864
inserted instruction
40540d
old instr: 0x40540d: cmp eax, 0x3
    new instr:0x7fb0666df822: cmp eax, 0x3
old instr: 0x405410: jz 0x4054aa
    new instr:0x7fb0666df825: jz 0x7fb0666df8bf
inserted instruction
405416
old instr: 0x405416: cmp eax, 0x1
    new instr:0x7fb0666df82b: cmp eax, 0x1
in revert 
    new instr:0x7fb0666df82e: jz 0x7fb0666df945
405530
old instr: 0x405530: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df834: mov rax, qword ptr [rbp-0x18]
old instr: 0x405534: mov eax, dword ptr [rax+0x60]
    new instr:0x7fb0666df838: mov eax, dword ptr [rax+0x60]
old instr: 0x405537: sub eax, 0x4
    new instr:0x7fb0666df83b: sub eax, 0x4
old instr: 0x40553a: mov rdx, qword ptr [rbp-0x18]
    new instr:0x7fb0666df83e: mov rdx, qword ptr [rbp-0x18]
old instr: 0x40553e: cdqe 
    new instr:0x7fb0666df842: cdqe 
old instr: 0x405540: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7fb0666df844: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x405548: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df84c: mov rax, qword ptr [rbp-0x18]
old instr: 0x40554c: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df850: mov rdx, qword ptr [rax+0x40]
old instr: 0x405550: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df854: mov rax, qword ptr [rbp-0x18]
old instr: 0x405554: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df858: mov eax, dword ptr [rax+0x6c]
old instr: 0x405557: cdqe 
    new instr:0x7fb0666df85b: cdqe 
old instr: 0x405559: add rdx, rax
    new instr:0x7fb0666df85d: add rdx, rax
old instr: 0x40555c: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df860: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405560: mov byte ptr [rdx], al
    new instr:0x7fb0666df864: mov byte ptr [rdx], al
old instr: 0x405562: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df866: mov rax, qword ptr [rbp-0x18]
old instr: 0x405566: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df86a: mov eax, dword ptr [rax+0x6c]
old instr: 0x405569: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df86d: lea edx, ptr [rax+0x1]
old instr: 0x40556c: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df870: mov rax, qword ptr [rbp-0x18]
old instr: 0x405570: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df874: mov dword ptr [rax+0x6c], edx
old instr: 0x405573: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df877: mov rax, qword ptr [rbp-0x18]
old instr: 0x405577: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df87b: mov rdx, qword ptr [rax+0x40]
old instr: 0x40557b: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df87f: mov rax, qword ptr [rbp-0x18]
old instr: 0x40557f: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df883: mov eax, dword ptr [rax+0x6c]
old instr: 0x405582: cdqe 
    new instr:0x7fb0666df886: cdqe 
old instr: 0x405584: add rdx, rax
    new instr:0x7fb0666df888: add rdx, rax
old instr: 0x405587: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df88b: movzx eax, byte ptr [rbp-0x5]
old instr: 0x40558b: mov byte ptr [rdx], al
    new instr:0x7fb0666df88f: mov byte ptr [rdx], al
old instr: 0x40558d: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df891: mov rax, qword ptr [rbp-0x18]
old instr: 0x405591: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df895: mov eax, dword ptr [rax+0x6c]
old instr: 0x405594: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df898: lea edx, ptr [rax+0x1]
old instr: 0x405597: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df89b: mov rax, qword ptr [rbp-0x18]
old instr: 0x40559b: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df89f: mov dword ptr [rax+0x6c], edx
old instr: 0x40559e: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8a2: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055a2: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df8a6: mov rdx, qword ptr [rax+0x40]
old instr: 0x4055a6: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8aa: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055aa: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df8ae: mov eax, dword ptr [rax+0x6c]
old instr: 0x4055ad: cdqe 
    new instr:0x7fb0666df8b1: cdqe 
old instr: 0x4055af: add rdx, rax
    new instr:0x7fb0666df8b3: add rdx, rax
old instr: 0x4055b2: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df8b6: movzx eax, byte ptr [rbp-0x5]
old instr: 0x4055b6: mov byte ptr [rdx], al
    new instr:0x7fb0666df8ba: mov byte ptr [rdx], al
old instr: 0x4055b8: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8bc: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055bc: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df8c0: mov eax, dword ptr [rax+0x6c]
old instr: 0x4055bf: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df8c3: lea edx, ptr [rax+0x1]
old instr: 0x4055c2: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8c6: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055c6: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df8ca: mov dword ptr [rax+0x6c], edx
old instr: 0x4055c9: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8cd: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055cd: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df8d1: mov rdx, qword ptr [rax+0x40]
old instr: 0x4055d1: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8d5: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055d5: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df8d9: mov eax, dword ptr [rax+0x6c]
old instr: 0x4055d8: cdqe 
    new instr:0x7fb0666df8dc: cdqe 
old instr: 0x4055da: add rdx, rax
    new instr:0x7fb0666df8de: add rdx, rax
old instr: 0x4055dd: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df8e1: movzx eax, byte ptr [rbp-0x5]
old instr: 0x4055e1: mov byte ptr [rdx], al
    new instr:0x7fb0666df8e5: mov byte ptr [rdx], al
old instr: 0x4055e3: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8e7: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055e7: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df8eb: mov eax, dword ptr [rax+0x6c]
old instr: 0x4055ea: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df8ee: lea edx, ptr [rax+0x1]
old instr: 0x4055ed: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8f1: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055f1: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df8f5: mov dword ptr [rax+0x6c], edx
old instr: 0x4055f4: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df8f8: mov rax, qword ptr [rbp-0x18]
old instr: 0x4055f8: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df8fc: mov rdx, qword ptr [rax+0x40]
old instr: 0x4055fc: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df900: mov rax, qword ptr [rbp-0x18]
old instr: 0x405600: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df904: mov eax, dword ptr [rax+0x6c]
old instr: 0x405603: cdqe 
    new instr:0x7fb0666df907: cdqe 
old instr: 0x405605: add rdx, rax
    new instr:0x7fb0666df909: add rdx, rax
old instr: 0x405608: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df90c: mov rax, qword ptr [rbp-0x18]
old instr: 0x40560c: mov eax, dword ptr [rax+0x60]
    new instr:0x7fb0666df910: mov eax, dword ptr [rax+0x60]
old instr: 0x40560f: sub eax, 0x4
    new instr:0x7fb0666df913: sub eax, 0x4
old instr: 0x405612: mov byte ptr [rdx], al
    new instr:0x7fb0666df916: mov byte ptr [rdx], al
old instr: 0x405614: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df918: mov rax, qword ptr [rbp-0x18]
old instr: 0x405618: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df91c: mov eax, dword ptr [rax+0x6c]
40561b
old instr: 0x40561b: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df91f: lea edx, ptr [rax+0x1]
405626
old instr: 0x405626: pop rbp
    new instr:0x7fb0666df922: pop rbp
old instr: 0x405627: ret 
    new instr:0x7fb0666df923: ret 
40544f
old instr: 0x40544f: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df924: mov rax, qword ptr [rbp-0x18]
old instr: 0x405453: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df928: mov rdx, qword ptr [rax+0x40]
old instr: 0x405457: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df92c: mov rax, qword ptr [rbp-0x18]
old instr: 0x40545b: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df930: mov eax, dword ptr [rax+0x6c]
old instr: 0x40545e: cdqe 
    new instr:0x7fb0666df933: cdqe 
old instr: 0x405460: add rdx, rax
    new instr:0x7fb0666df935: add rdx, rax
old instr: 0x405463: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df938: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405467: mov byte ptr [rdx], al
    new instr:0x7fb0666df93c: mov byte ptr [rdx], al
old instr: 0x405469: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df93e: mov rax, qword ptr [rbp-0x18]
old instr: 0x40546d: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df942: mov eax, dword ptr [rax+0x6c]
old instr: 0x405470: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df945: lea edx, ptr [rax+0x1]
old instr: 0x405473: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df948: mov rax, qword ptr [rbp-0x18]
old instr: 0x405477: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df94c: mov dword ptr [rax+0x6c], edx
old instr: 0x40547a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df94f: mov rax, qword ptr [rbp-0x18]
old instr: 0x40547e: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df953: mov rdx, qword ptr [rax+0x40]
old instr: 0x405482: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df957: mov rax, qword ptr [rbp-0x18]
old instr: 0x405486: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df95b: mov eax, dword ptr [rax+0x6c]
old instr: 0x405489: cdqe 
    new instr:0x7fb0666df95e: cdqe 
old instr: 0x40548b: add rdx, rax
    new instr:0x7fb0666df960: add rdx, rax
old instr: 0x40548e: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df963: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405492: mov byte ptr [rdx], al
    new instr:0x7fb0666df967: mov byte ptr [rdx], al
old instr: 0x405494: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df969: mov rax, qword ptr [rbp-0x18]
old instr: 0x405498: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df96d: mov eax, dword ptr [rax+0x6c]
old instr: 0x40549b: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df970: lea edx, ptr [rax+0x1]
old instr: 0x40549e: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df973: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054a2: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df977: mov dword ptr [rax+0x6c], edx
old instr: 0x4054a5: jmp 0x405626
    new instr:0x7fb0666df97a: jmp 0x7fb0666dfafb
inserted instruction
4054aa
old instr: 0x4054aa: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df97f: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054ae: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df983: mov rdx, qword ptr [rax+0x40]
old instr: 0x4054b2: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df987: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054b6: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df98b: mov eax, dword ptr [rax+0x6c]
old instr: 0x4054b9: cdqe 
    new instr:0x7fb0666df98e: cdqe 
old instr: 0x4054bb: add rdx, rax
    new instr:0x7fb0666df990: add rdx, rax
old instr: 0x4054be: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df993: movzx eax, byte ptr [rbp-0x5]
old instr: 0x4054c2: mov byte ptr [rdx], al
    new instr:0x7fb0666df997: mov byte ptr [rdx], al
old instr: 0x4054c4: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df999: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054c8: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df99d: mov eax, dword ptr [rax+0x6c]
old instr: 0x4054cb: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df9a0: lea edx, ptr [rax+0x1]
old instr: 0x4054ce: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9a3: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054d2: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df9a7: mov dword ptr [rax+0x6c], edx
old instr: 0x4054d5: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9aa: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054d9: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df9ae: mov rdx, qword ptr [rax+0x40]
old instr: 0x4054dd: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9b2: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054e1: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df9b6: mov eax, dword ptr [rax+0x6c]
old instr: 0x4054e4: cdqe 
    new instr:0x7fb0666df9b9: cdqe 
old instr: 0x4054e6: add rdx, rax
    new instr:0x7fb0666df9bb: add rdx, rax
old instr: 0x4054e9: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df9be: movzx eax, byte ptr [rbp-0x5]
old instr: 0x4054ed: mov byte ptr [rdx], al
    new instr:0x7fb0666df9c2: mov byte ptr [rdx], al
old instr: 0x4054ef: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9c4: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054f3: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df9c8: mov eax, dword ptr [rax+0x6c]
old instr: 0x4054f6: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df9cb: lea edx, ptr [rax+0x1]
old instr: 0x4054f9: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9ce: mov rax, qword ptr [rbp-0x18]
old instr: 0x4054fd: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df9d2: mov dword ptr [rax+0x6c], edx
old instr: 0x405500: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9d5: mov rax, qword ptr [rbp-0x18]
old instr: 0x405504: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666df9d9: mov rdx, qword ptr [rax+0x40]
old instr: 0x405508: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9dd: mov rax, qword ptr [rbp-0x18]
old instr: 0x40550c: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df9e1: mov eax, dword ptr [rax+0x6c]
old instr: 0x40550f: cdqe 
    new instr:0x7fb0666df9e4: cdqe 
old instr: 0x405511: add rdx, rax
    new instr:0x7fb0666df9e6: add rdx, rax
old instr: 0x405514: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666df9e9: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405518: mov byte ptr [rdx], al
    new instr:0x7fb0666df9ed: mov byte ptr [rdx], al
old instr: 0x40551a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9ef: mov rax, qword ptr [rbp-0x18]
old instr: 0x40551e: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666df9f3: mov eax, dword ptr [rax+0x6c]
old instr: 0x405521: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666df9f6: lea edx, ptr [rax+0x1]
old instr: 0x405524: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666df9f9: mov rax, qword ptr [rbp-0x18]
old instr: 0x405528: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666df9fd: mov dword ptr [rax+0x6c], edx
old instr: 0x40552b: jmp 0x405626
    new instr:0x7fb0666dfa00: jmp 0x7fb0666dfafb
inserted instruction
40541f
old instr: 0x40541f: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfa05: mov rax, qword ptr [rbp-0x18]
old instr: 0x405423: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666dfa09: mov rdx, qword ptr [rax+0x40]
old instr: 0x405427: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfa0d: mov rax, qword ptr [rbp-0x18]
old instr: 0x40542b: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666dfa11: mov eax, dword ptr [rax+0x6c]
old instr: 0x40542e: cdqe 
    new instr:0x7fb0666dfa14: cdqe 
old instr: 0x405430: add rdx, rax
    new instr:0x7fb0666dfa16: add rdx, rax
old instr: 0x405433: movzx eax, byte ptr [rbp-0x5]
    new instr:0x7fb0666dfa19: movzx eax, byte ptr [rbp-0x5]
old instr: 0x405437: mov byte ptr [rdx], al
    new instr:0x7fb0666dfa1d: mov byte ptr [rdx], al
old instr: 0x405439: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfa1f: mov rax, qword ptr [rbp-0x18]
old instr: 0x40543d: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666dfa23: mov eax, dword ptr [rax+0x6c]
old instr: 0x405440: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666dfa26: lea edx, ptr [rax+0x1]
old instr: 0x405443: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfa29: mov rax, qword ptr [rbp-0x18]
old instr: 0x405447: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666dfa2d: mov dword ptr [rax+0x6c], edx
old instr: 0x40544a: jmp 0x405626
    new instr:0x7fb0666dfa30: jmp 0x7fb0666dfc0c
inserted instruction
rtn name: add_pair_to_block : 4
9
40c679
old instr: 0x40c679: push rbp
    new instr:0x7fb0666dfa35: push rbp
old instr: 0x40c67a: mov rbp, rsp
    new instr:0x7fb0666dfa36: mov rbp, rsp
old instr: 0x40c67d: sub rsp, 0x60
    new instr:0x7fb0666dfa39: sub rsp, 0x60
old instr: 0x40c681: mov qword ptr [rbp-0x48], rdi
    new instr:0x7fb0666dfa3d: mov qword ptr [rbp-0x48], rdi
old instr: 0x40c685: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fb0666dfa41: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c689: mov rax, qword ptr [rax+0x38]
    new instr:0x7fb0666dfa45: mov rax, qword ptr [rax+0x38]
old instr: 0x40c68d: mov qword ptr [rbp-0x10], rax
    new instr:0x7fb0666dfa49: mov qword ptr [rbp-0x10], rax
old instr: 0x40c691: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fb0666dfa4d: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c695: mov rax, qword ptr [rax+0x40]
    new instr:0x7fb0666dfa51: mov rax, qword ptr [rax+0x40]
old instr: 0x40c699: mov qword ptr [rbp-0x18], rax
    new instr:0x7fb0666dfa55: mov qword ptr [rbp-0x18], rax
old instr: 0x40c69d: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fb0666dfa59: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6a1: mov rax, qword ptr [rax+0x28]
    new instr:0x7fb0666dfa5d: mov rax, qword ptr [rax+0x28]
old instr: 0x40c6a5: mov qword ptr [rbp-0x20], rax
    new instr:0x7fb0666dfa61: mov qword ptr [rbp-0x20], rax
old instr: 0x40c6a9: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fb0666dfa65: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6ad: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666dfa69: mov eax, dword ptr [rax+0x6c]
old instr: 0x40c6b0: mov dword ptr [rbp-0x24], eax
    new instr:0x7fb0666dfa6c: mov dword ptr [rbp-0x24], eax
old instr: 0x40c6b3: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fb0666dfa6f: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6b7: mov eax, dword ptr [rax+0x290]
    new instr:0x7fb0666dfa73: mov eax, dword ptr [rax+0x290]
old instr: 0x40c6bd: mov dword ptr [rbp-0x28], eax
    new instr:0x7fb0666dfa79: mov dword ptr [rbp-0x28], eax
old instr: 0x40c6c0: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fb0666dfa7c: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6c4: mov eax, dword ptr [rax+0x58]
    new instr:0x7fb0666dfa80: mov eax, dword ptr [rax+0x58]
old instr: 0x40c6c7: mov dword ptr [rbp-0x4], eax
    new instr:0x7fb0666dfa83: mov dword ptr [rbp-0x4], eax
old instr: 0x40c6ca: cmp dword ptr [rbp-0x24], 0x270f
    new instr:0x7fb0666dfa86: cmp dword ptr [rbp-0x24], 0x270f
in revert 
    new instr:0x7fb0666dfa8d: jle 0x7fb0666dfab9
40c6fd
old instr: 0x40c6fd: mov eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dfa8f: mov eax, dword ptr [rbp-0x24]
old instr: 0x40c700: add eax, 0x22
    new instr:0x7fb0666dfa92: add eax, 0x22
old instr: 0x40c703: mov dword ptr [rbp-0x8], eax
    new instr:0x7fb0666dfa95: mov dword ptr [rbp-0x8], eax
old instr: 0x40c706: mov eax, dword ptr [rbp-0x8]
    new instr:0x7fb0666dfa98: mov eax, dword ptr [rbp-0x8]
old instr: 0x40c709: and eax, 0x1
    new instr:0x7fb0666dfa9b: and eax, 0x1
old instr: 0x40c70c: test eax, eax
    new instr:0x7fb0666dfa9e: test eax, eax
old instr: 0x40c70e: jz 0x40c714
    new instr:0x7fb0666dfaa0: jz 0x7fb0666dfaa6
inserted instruction
40c710
old instr: 0x40c710: add dword ptr [rbp-0x8], 0x1
    new instr:0x7fb0666dfaa2: add dword ptr [rbp-0x8], 0x1
40c714
old instr: 0x40c714: mov eax, dword ptr [rbp-0x8]
    new instr:0x7fb0666dfaa6: mov eax, dword ptr [rbp-0x8]
old instr: 0x40c717: movsxd rdx, eax
    new instr:0x7fb0666dfaa9: movsxd rdx, eax
old instr: 0x40c71a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfaac: mov rax, qword ptr [rbp-0x18]
old instr: 0x40c71e: add rax, rdx
    new instr:0x7fb0666dfab0: add rax, rdx
old instr: 0x40c721: mov qword ptr [rbp-0x30], rax
    new instr:0x7fb0666dfab3: mov qword ptr [rbp-0x30], rax
old instr: 0x40c725: cmp dword ptr [rbp-0x4], 0x0
    new instr:0x7fb0666dfab7: cmp dword ptr [rbp-0x4], 0x0
in revert 
    new instr:0x7fb0666dfabb: jle 0x7fb0666dfac4
40c732
old instr: 0x40c732: cmp dword ptr [rbp-0x4], 0x64
    new instr:0x7fb0666dfabd: cmp dword ptr [rbp-0x4], 0x64
in revert 
    new instr:0x7fb0666dfac1: jnle 0x7fb0666dfaca
40c73f
old instr: 0x40c73f: mov eax, dword ptr [rbp-0x4]
    new instr:0x7fb0666dfac3: mov eax, dword ptr [rbp-0x4]
old instr: 0x40c742: lea ecx, ptr [rax-0x1]
    new instr:0x7fb0666dfac6: lea ecx, ptr [rax-0x1]
old instr: 0x40c745: mov edx, 0x55555556
    new instr:0x7fb0666dfac9: mov edx, 0x55555556
old instr: 0x40c74a: mov eax, ecx
    new instr:0x7fb0666dface: mov eax, ecx
old instr: 0x40c74c: imul edx
    new instr:0x7fb0666dfad0: imul edx
old instr: 0x40c74e: mov eax, ecx
    new instr:0x7fb0666dfad2: mov eax, ecx
old instr: 0x40c750: sar eax, 0x1f
    new instr:0x7fb0666dfad4: sar eax, 0x1f
old instr: 0x40c753: mov ecx, edx
    new instr:0x7fb0666dfad7: mov ecx, edx
old instr: 0x40c755: sub ecx, eax
    new instr:0x7fb0666dfad9: sub ecx, eax
old instr: 0x40c757: mov eax, ecx
    new instr:0x7fb0666dfadb: mov eax, ecx
old instr: 0x40c759: imul eax, dword ptr [rbp-0x24]
    new instr:0x7fb0666dfadd: imul eax, dword ptr [rbp-0x24]
old instr: 0x40c75d: mov dword ptr [rbp-0x34], eax
    new instr:0x7fb0666dfae1: mov dword ptr [rbp-0x34], eax
old instr: 0x40c760: mov eax, dword ptr [rbp-0x34]
    new instr:0x7fb0666dfae4: mov eax, dword ptr [rbp-0x34]
old instr: 0x40c763: mov dword ptr [rbp-0x38], eax
    new instr:0x7fb0666dfae7: mov dword ptr [rbp-0x38], eax
old instr: 0x40c766: mov r9d, dword ptr [rbp-0x28]
    new instr:0x7fb0666dfaea: mov r9d, dword ptr [rbp-0x28]
old instr: 0x40c76a: mov r8d, dword ptr [rbp-0x24]
    new instr:0x7fb0666dfaee: mov r8d, dword ptr [rbp-0x24]
old instr: 0x40c76e: mov rcx, qword ptr [rbp-0x20]
    new instr:0x7fb0666dfaf2: mov rcx, qword ptr [rbp-0x20]
old instr: 0x40c772: mov rdx, qword ptr [rbp-0x30]
    new instr:0x7fb0666dfaf6: mov rdx, qword ptr [rbp-0x30]
old instr: 0x40c776: mov rsi, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfafa: mov rsi, qword ptr [rbp-0x18]
old instr: 0x40c77a: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfafe: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c77e: lea rdi, ptr [rbp-0x38]
    new instr:0x7fb0666dfb02: lea rdi, ptr [rbp-0x38]
old instr: 0x40c782: mov qword ptr [rsp], rdi
    new instr:0x7fb0666dfb06: mov qword ptr [rsp], rdi
old instr: 0x40c786: mov rdi, rax
    new instr:0x7fb0666dfb0a: mov rdi, rax
40c72b
old instr: 0x40c72b: mov dword ptr [rbp-0x4], 0x1
    new instr:0x7fb0666dfb0d: mov dword ptr [rbp-0x4], 0x1
40c738
old instr: 0x40c738: mov dword ptr [rbp-0x4], 0x64
    new instr:0x7fb0666dfb14: mov dword ptr [rbp-0x4], 0x64
40c6d3
old instr: 0x40c6d3: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fb0666dfb1b: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6d7: mov rsi, qword ptr [rax+0x20]
    new instr:0x7fb0666dfb1f: mov rsi, qword ptr [rax+0x20]
old instr: 0x40c6db: mov rax, qword ptr [rbp-0x48]
    new instr:0x7fb0666dfb23: mov rax, qword ptr [rbp-0x48]
old instr: 0x40c6df: mov rax, qword ptr [rax+0x18]
    new instr:0x7fb0666dfb27: mov rax, qword ptr [rax+0x18]
old instr: 0x40c6e3: mov edi, dword ptr [rbp-0x28]
    new instr:0x7fb0666dfb2b: mov edi, dword ptr [rbp-0x28]
old instr: 0x40c6e6: mov ecx, dword ptr [rbp-0x24]
    new instr:0x7fb0666dfb2e: mov ecx, dword ptr [rbp-0x24]
old instr: 0x40c6e9: mov rdx, qword ptr [rbp-0x20]
    new instr:0x7fb0666dfb31: mov rdx, qword ptr [rbp-0x20]
old instr: 0x40c6ed: mov r8d, edi
    new instr:0x7fb0666dfb35: mov r8d, edi
old instr: 0x40c6f0: mov rdi, rax
    new instr:0x7fb0666dfb38: mov rdi, rax
rtn name: BZ2_blockSort : 5
4
40c94c
old instr: 0x40c94c: push rbp
    new instr:0x7fb0666dfb3b: push rbp
old instr: 0x40c94d: mov rbp, rsp
    new instr:0x7fb0666dfb3c: mov rbp, rsp
old instr: 0x40c950: push rbx
    new instr:0x7fb0666dfb3f: push rbx
old instr: 0x40c951: mov qword ptr [rbp-0x10], rdi
    new instr:0x7fb0666dfb40: mov qword ptr [rbp-0x10], rdi
old instr: 0x40c955: mov dword ptr [rbp-0x14], esi
    new instr:0x7fb0666dfb44: mov dword ptr [rbp-0x14], esi
old instr: 0x40c958: mov dword ptr [rbp-0x18], edx
    new instr:0x7fb0666dfb47: mov dword ptr [rbp-0x18], edx
in revert 
removing jump and inserting a dummy entry 
40c9c1
old instr: 0x40c9c1: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfb4a: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9c5: mov eax, dword ptr [rax+0x284]
    new instr:0x7fb0666dfb4e: mov eax, dword ptr [rax+0x284]
old instr: 0x40c9cb: cmp eax, 0x7
    new instr:0x7fb0666dfb54: cmp eax, 0x7
old instr: 0x40c9ce: jnle 0x40c95d
    new instr:0x7fb0666dfb57: jnle 0x7fb0666dfae6
inserted instruction
40c9d0
old instr: 0x40c9d0: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfb59: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9d4: mov edx, dword ptr [rax+0x280]
    new instr:0x7fb0666dfb5d: mov edx, dword ptr [rax+0x280]
old instr: 0x40c9da: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfb63: mov rax, qword ptr [rbp-0x10]
old instr: 0x40c9de: mov eax, dword ptr [rax+0x284]
    new instr:0x7fb0666dfb67: mov eax, dword ptr [rax+0x284]
old instr: 0x40c9e4: mov ecx, 0x20
    new instr:0x7fb0666dfb6d: mov ecx, 0x20
old instr: 0x40c9e9: mov ebx, ecx
    new instr:0x7fb0666dfb72: mov ebx, ecx
old instr: 0x40c9eb: sub ebx, eax
    new instr:0x7fb0666dfb74: sub ebx, eax
old instr: 0x40c9ed: mov eax, ebx
    new instr:0x7fb0666dfb76: mov eax, ebx
old instr: 0x40c9ef: sub eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666dfb78: sub eax, dword ptr [rbp-0x14]
old instr: 0x40c9f2: mov esi, dword ptr [rbp-0x18]
    new instr:0x7fb0666dfb7b: mov esi, dword ptr [rbp-0x18]
old instr: 0x40c9f5: mov ebx, esi
    new instr:0x7fb0666dfb7e: mov ebx, esi
old instr: 0x40c9f7: mov ecx, eax
    new instr:0x7fb0666dfb80: mov ecx, eax
old instr: 0x40c9f9: shl ebx, cl
    new instr:0x7fb0666dfb82: shl ebx, cl
old instr: 0x40c9fb: mov eax, ebx
    new instr:0x7fb0666dfb84: mov eax, ebx
old instr: 0x40c9fd: or edx, eax
    new instr:0x7fb0666dfb86: or edx, eax
old instr: 0x40c9ff: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfb88: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca03: mov dword ptr [rax+0x280], edx
    new instr:0x7fb0666dfb8c: mov dword ptr [rax+0x280], edx
old instr: 0x40ca09: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfb92: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca0d: mov edx, dword ptr [rax+0x284]
    new instr:0x7fb0666dfb96: mov edx, dword ptr [rax+0x284]
old instr: 0x40ca13: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666dfb9c: mov eax, dword ptr [rbp-0x14]
old instr: 0x40ca16: add edx, eax
    new instr:0x7fb0666dfb9f: add edx, eax
old instr: 0x40ca18: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfba1: mov rax, qword ptr [rbp-0x10]
old instr: 0x40ca1c: mov dword ptr [rax+0x284], edx
    new instr:0x7fb0666dfba5: mov dword ptr [rax+0x284], edx
old instr: 0x40ca22: pop rbx
    new instr:0x7fb0666dfbab: pop rbx
old instr: 0x40ca23: pop rbp
    new instr:0x7fb0666dfbac: pop rbp
old instr: 0x40ca24: ret 
    new instr:0x7fb0666dfbad: ret 
40c95d
old instr: 0x40c95d: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfbae: mov rax, qword ptr [rbp-0x10]
rtn name: bsW : 6
6
405ac7
old instr: 0x405ac7: push rbp
    new instr:0x7fb0666dfbb2: push rbp
old instr: 0x405ac8: mov rbp, rsp
    new instr:0x7fb0666dfbb3: mov rbp, rsp
old instr: 0x405acb: sub rsp, 0x20
    new instr:0x7fb0666dfbb6: sub rsp, 0x20
old instr: 0x405acf: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666dfbba: mov qword ptr [rbp-0x18], rdi
old instr: 0x405ad3: mov byte ptr [rbp-0x1], 0x0
    new instr:0x7fb0666dfbbe: mov byte ptr [rbp-0x1], 0x0
old instr: 0x405ad7: mov byte ptr [rbp-0x2], 0x0
    new instr:0x7fb0666dfbc2: mov byte ptr [rbp-0x2], 0x0
old instr: 0x405adb: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfbc6: mov rax, qword ptr [rbp-0x18]
old instr: 0x405adf: mov rax, qword ptr [rax+0x30]
    new instr:0x7fb0666dfbca: mov rax, qword ptr [rax+0x30]
old instr: 0x405ae3: mov qword ptr [rbp-0x10], rax
    new instr:0x7fb0666dfbce: mov qword ptr [rbp-0x10], rax
in revert 
removing jump and inserting a dummy entry 
405aea
old instr: 0x405aea: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfbd2: mov rax, qword ptr [rbp-0x10]
old instr: 0x405aee: mov eax, dword ptr [rax+0xc]
    new instr:0x7fb0666dfbd6: mov eax, dword ptr [rax+0xc]
old instr: 0x405af1: cmp eax, 0x1
    new instr:0x7fb0666dfbd9: cmp eax, 0x1
in revert 
    new instr:0x7fb0666dfbdc: jz 0x7fb0666dfc74
405b8c
old instr: 0x405b8c: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfbe2: mov rax, qword ptr [rbp-0x10]
old instr: 0x405b90: mov eax, dword ptr [rax+0xc]
    new instr:0x7fb0666dfbe6: mov eax, dword ptr [rax+0xc]
old instr: 0x405b93: cmp eax, 0x2
    new instr:0x7fb0666dfbe9: cmp eax, 0x2
old instr: 0x405b96: jnz 0x405ae9
    new instr:0x7fb0666dfbec: jnz 0x7fb0666dfb3f
inserted instruction
405b9c
old instr: 0x405b9c: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfbf2: mov rax, qword ptr [rbp-0x10]
old instr: 0x405ba0: mov rdi, rax
    new instr:0x7fb0666dfbf6: mov rdi, rax
    new instr:0x7fb0666dfbf9: sub rsp, 0x8
HERE and bbl_size is 17and the rtn im reordering now is40565c
old instr: 0x40565c: push rbp
    new instr:0x7fb0666dfbfd: push rbp
old instr: 0x40565d: mov rbp, rsp
    new instr:0x7fb0666dfbfe: mov rbp, rsp
old instr: 0x405660: sub rsp, 0x28
    new instr:0x7fb0666dfc01: sub rsp, 0x28
old instr: 0x405664: mov qword ptr [rbp-0x28], rdi
    new instr:0x7fb0666dfc05: mov qword ptr [rbp-0x28], rdi
old instr: 0x405668: mov byte ptr [rbp-0x1], 0x0
    new instr:0x7fb0666dfc09: mov byte ptr [rbp-0x1], 0x0
old instr: 0x40566c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc0d: mov rax, qword ptr [rbp-0x28]
old instr: 0x405670: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dfc11: mov eax, dword ptr [rax+0x8]
old instr: 0x405673: cmp eax, 0x2
    new instr:0x7fb0666dfc14: cmp eax, 0x2
old instr: 0x40567f: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc17: mov rax, qword ptr [rbp-0x28]
old instr: 0x405683: mov edx, dword ptr [rax+0x6c]
    new instr:0x7fb0666dfc1b: mov edx, dword ptr [rax+0x6c]
old instr: 0x405686: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc1e: mov rax, qword ptr [rbp-0x28]
old instr: 0x40568a: mov eax, dword ptr [rax+0x70]
    new instr:0x7fb0666dfc22: mov eax, dword ptr [rax+0x70]
old instr: 0x40568d: cmp edx, eax
    new instr:0x7fb0666dfc25: cmp edx, eax
old instr: 0x405695: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc27: mov rax, qword ptr [rbp-0x28]
old instr: 0x405699: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfc2b: mov rax, qword ptr [rax]
old instr: 0x40569c: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dfc2e: mov eax, dword ptr [rax+0x8]
old instr: 0x40569f: test eax, eax
    new instr:0x7fb0666dfc31: test eax, eax
old instr: 0x4056a7: mov byte ptr [rbp-0x1], 0x1
    new instr:0x7fb0666dfc33: mov byte ptr [rbp-0x1], 0x1
old instr: 0x4056ab: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc37: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056af: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfc3b: mov rax, qword ptr [rax]
old instr: 0x4056b2: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfc3e: mov rax, qword ptr [rax]
old instr: 0x4056b5: movzx eax, byte ptr [rax]
    new instr:0x7fb0666dfc41: movzx eax, byte ptr [rax]
old instr: 0x4056b8: movzx eax, al
    new instr:0x7fb0666dfc44: movzx eax, al
old instr: 0x4056bb: mov dword ptr [rbp-0x8], eax
    new instr:0x7fb0666dfc47: mov dword ptr [rbp-0x8], eax
old instr: 0x4056be: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc4a: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056c2: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666dfc4e: mov eax, dword ptr [rax+0x5c]
old instr: 0x4056c5: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7fb0666dfc51: cmp eax, dword ptr [rbp-0x8]
old instr: 0x4056ce: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc54: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056d2: mov eax, dword ptr [rax+0x60]
    new instr:0x7fb0666dfc58: mov eax, dword ptr [rax+0x60]
old instr: 0x4056d5: cmp eax, 0x1
    new instr:0x7fb0666dfc5b: cmp eax, 0x1
old instr: 0x4056de: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc5e: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056e2: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666dfc62: mov eax, dword ptr [rax+0x5c]
old instr: 0x4056e5: mov byte ptr [rbp-0x9], al
    new instr:0x7fb0666dfc65: mov byte ptr [rbp-0x9], al
old instr: 0x4056e8: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc68: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056ec: mov eax, dword ptr [rax+0x288]
    new instr:0x7fb0666dfc6c: mov eax, dword ptr [rax+0x288]
old instr: 0x4056f2: mov edx, eax
    new instr:0x7fb0666dfc72: mov edx, eax
old instr: 0x4056f4: shl edx, 0x8
    new instr:0x7fb0666dfc74: shl edx, 0x8
old instr: 0x4056f7: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc77: mov rax, qword ptr [rbp-0x28]
old instr: 0x4056fb: mov eax, dword ptr [rax+0x288]
    new instr:0x7fb0666dfc7b: mov eax, dword ptr [rax+0x288]
old instr: 0x405701: mov ecx, eax
    new instr:0x7fb0666dfc81: mov ecx, eax
old instr: 0x405703: shr ecx, 0x18
    new instr:0x7fb0666dfc83: shr ecx, 0x18
old instr: 0x405706: movzx eax, byte ptr [rbp-0x9]
    new instr:0x7fb0666dfc86: movzx eax, byte ptr [rbp-0x9]
old instr: 0x40570a: xor eax, ecx
    new instr:0x7fb0666dfc8a: xor eax, ecx
old instr: 0x40570c: mov eax, eax
    new instr:0x7fb0666dfc8c: mov eax, eax
old instr: 0x40570e: mov eax, dword ptr [rax*4+0x61c6a0]
    new instr:0x7fb0666dfc8e: mov eax, dword ptr [rax*4+0x61c6a0]
old instr: 0x405715: xor edx, eax
    new instr:0x7fb0666dfc95: xor edx, eax
old instr: 0x405717: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfc97: mov rax, qword ptr [rbp-0x28]
old instr: 0x40571b: mov dword ptr [rax+0x288], edx
    new instr:0x7fb0666dfc9b: mov dword ptr [rax+0x288], edx
old instr: 0x405721: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfca1: mov rax, qword ptr [rbp-0x28]
old instr: 0x405725: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666dfca5: mov eax, dword ptr [rax+0x5c]
old instr: 0x405728: mov rdx, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfca8: mov rdx, qword ptr [rbp-0x28]
old instr: 0x40572c: mov eax, eax
    new instr:0x7fb0666dfcac: mov eax, eax
old instr: 0x40572e: mov byte ptr [rdx+rax*1+0x80], 0x1
    new instr:0x7fb0666dfcae: mov byte ptr [rdx+rax*1+0x80], 0x1
old instr: 0x405736: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfcb6: mov rax, qword ptr [rbp-0x28]
old instr: 0x40573a: mov rdx, qword ptr [rax+0x40]
    new instr:0x7fb0666dfcba: mov rdx, qword ptr [rax+0x40]
old instr: 0x40573e: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfcbe: mov rax, qword ptr [rbp-0x28]
old instr: 0x405742: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666dfcc2: mov eax, dword ptr [rax+0x6c]
old instr: 0x405745: cdqe 
    new instr:0x7fb0666dfcc5: cdqe 
old instr: 0x405747: add rdx, rax
    new instr:0x7fb0666dfcc7: add rdx, rax
old instr: 0x40574a: movzx eax, byte ptr [rbp-0x9]
    new instr:0x7fb0666dfcca: movzx eax, byte ptr [rbp-0x9]
old instr: 0x40574e: mov byte ptr [rdx], al
    new instr:0x7fb0666dfcce: mov byte ptr [rdx], al
old instr: 0x405750: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfcd0: mov rax, qword ptr [rbp-0x28]
old instr: 0x405754: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666dfcd4: mov eax, dword ptr [rax+0x6c]
old instr: 0x405757: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666dfcd7: lea edx, ptr [rax+0x1]
old instr: 0x40575a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfcda: mov rax, qword ptr [rbp-0x28]
old instr: 0x40575e: mov dword ptr [rax+0x6c], edx
    new instr:0x7fb0666dfcde: mov dword ptr [rax+0x6c], edx
old instr: 0x405761: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfce1: mov rax, qword ptr [rbp-0x28]
old instr: 0x405765: mov edx, dword ptr [rbp-0x8]
    new instr:0x7fb0666dfce5: mov edx, dword ptr [rbp-0x8]
old instr: 0x405768: mov dword ptr [rax+0x5c], edx
    new instr:0x7fb0666dfce8: mov dword ptr [rax+0x5c], edx
old instr: 0x4057c9: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfceb: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057cd: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfcef: mov rax, qword ptr [rax]
old instr: 0x4057d0: mov rdx, qword ptr [rax]
    new instr:0x7fb0666dfcf2: mov rdx, qword ptr [rax]
old instr: 0x4057d3: add rdx, 0x1
    new instr:0x7fb0666dfcf5: add rdx, 0x1
old instr: 0x4057d7: mov qword ptr [rax], rdx
    new instr:0x7fb0666dfcf9: mov qword ptr [rax], rdx
old instr: 0x4057da: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfcfc: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057de: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfd00: mov rax, qword ptr [rax]
old instr: 0x4057e1: mov edx, dword ptr [rax+0x8]
    new instr:0x7fb0666dfd03: mov edx, dword ptr [rax+0x8]
old instr: 0x4057e4: sub edx, 0x1
    new instr:0x7fb0666dfd06: sub edx, 0x1
old instr: 0x4057e7: mov dword ptr [rax+0x8], edx
    new instr:0x7fb0666dfd09: mov dword ptr [rax+0x8], edx
old instr: 0x4057ea: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfd0c: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057ee: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfd10: mov rax, qword ptr [rax]
old instr: 0x4057f1: mov edx, dword ptr [rax+0xc]
    new instr:0x7fb0666dfd13: mov edx, dword ptr [rax+0xc]
old instr: 0x4057f4: add edx, 0x1
    new instr:0x7fb0666dfd16: add edx, 0x1
old instr: 0x4057f7: mov dword ptr [rax+0xc], edx
    new instr:0x7fb0666dfd19: mov dword ptr [rax+0xc], edx
old instr: 0x4057fa: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfd1c: mov rax, qword ptr [rbp-0x28]
old instr: 0x4057fe: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfd20: mov rax, qword ptr [rax]
old instr: 0x405801: mov eax, dword ptr [rax+0xc]
    new instr:0x7fb0666dfd23: mov eax, dword ptr [rax+0xc]
old instr: 0x405804: test eax, eax
    new instr:0x7fb0666dfd26: test eax, eax
old instr: 0x40576d: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfd28: mov rax, qword ptr [rbp-0x28]
old instr: 0x405771: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666dfd2c: mov eax, dword ptr [rax+0x5c]
old instr: 0x405774: cmp eax, dword ptr [rbp-0x8]
    new instr:0x7fb0666dfd2f: cmp eax, dword ptr [rbp-0x8]
old instr: 0x405779: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfd32: mov rax, qword ptr [rbp-0x28]
old instr: 0x40577d: mov eax, dword ptr [rax+0x60]
    new instr:0x7fb0666dfd36: mov eax, dword ptr [rax+0x60]
old instr: 0x405780: cmp eax, 0xff
    new instr:0x7fb0666dfd39: cmp eax, 0xff
old instr: 0x405787: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfd3e: mov rax, qword ptr [rbp-0x28]
old instr: 0x40578b: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666dfd42: mov eax, dword ptr [rax+0x5c]
old instr: 0x40578e: cmp eax, 0xff
    new instr:0x7fb0666dfd45: cmp eax, 0xff
old instr: 0x405795: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666dfd4a: mov rax, qword ptr [rbp-0x28]
old instr: 0x405799: mov rdi, rax
    new instr:0x7fb0666dfd4e: mov rdi, rax
old instr: 0x4059e2: nop
    new instr:0x7fb0666dfd51: nop
old instr: 0x4059ec: movzx eax, byte ptr [rbp-0x1]
    new instr:0x7fb0666dfd52: movzx eax, byte ptr [rbp-0x1]
old instr: 0x4059f0: leave 
    new instr:0x7fb0666dfd56: leave 
    new instr:0x7fb0666dfd57: add rsp, 0x8
405afa
old instr: 0x405afa: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666dfd5b: mov rax, qword ptr [rbp-0x10]
old instr: 0x405afe: mov rdi, rax
    new instr:0x7fb0666dfd5f: mov rdi, rax
405ae9
old instr: 0x405ae9: nop
    new instr:0x7fb0666dfd62: nop
rtn name: handle_compress : 7
18
405c64
old instr: 0x405c64: push rbp
    new instr:0x7fb0666dfd63: push rbp
old instr: 0x405c65: mov rbp, rsp
    new instr:0x7fb0666dfd64: mov rbp, rsp
old instr: 0x405c68: sub rsp, 0x20
    new instr:0x7fb0666dfd67: sub rsp, 0x20
old instr: 0x405c6c: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666dfd6b: mov qword ptr [rbp-0x18], rdi
old instr: 0x405c70: mov dword ptr [rbp-0x1c], esi
    new instr:0x7fb0666dfd6f: mov dword ptr [rbp-0x1c], esi
old instr: 0x405c73: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7fb0666dfd72: cmp qword ptr [rbp-0x18], 0x0
in revert 
    new instr:0x7fb0666dfd77: jz 0x7fb0666dfd83
405c84
old instr: 0x405c84: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfd79: mov rax, qword ptr [rbp-0x18]
old instr: 0x405c88: mov rax, qword ptr [rax+0x30]
    new instr:0x7fb0666dfd7d: mov rax, qword ptr [rax+0x30]
old instr: 0x405c8c: mov qword ptr [rbp-0x8], rax
    new instr:0x7fb0666dfd81: mov qword ptr [rbp-0x8], rax
old instr: 0x405c90: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666dfd85: cmp qword ptr [rbp-0x8], 0x0
in revert 
    new instr:0x7fb0666dfd8a: jz 0x7fb0666dfd96
405ca1
old instr: 0x405ca1: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfd8c: mov rax, qword ptr [rbp-0x8]
old instr: 0x405ca5: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfd90: mov rax, qword ptr [rax]
old instr: 0x405ca8: cmp rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfd93: cmp rax, qword ptr [rbp-0x18]
in revert 
    new instr:0x7fb0666dfd97: jnz 0x7fb0666dfda3
405cb8
old instr: 0x405cb8: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfd99: mov rax, qword ptr [rbp-0x8]
old instr: 0x405cbc: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dfd9d: mov eax, dword ptr [rax+0x8]
old instr: 0x405cbf: cmp eax, 0x2
    new instr:0x7fb0666dfda0: cmp eax, 0x2
in revert 
    new instr:0x7fb0666dfda3: jnz 0x7fb0666dfdd5
405cf4
old instr: 0x405cf4: cmp dword ptr [rbp-0x1c], 0x0
    new instr:0x7fb0666dfda5: cmp dword ptr [rbp-0x1c], 0x0
old instr: 0x405cf8: jnz 0x405d20
    new instr:0x7fb0666dfda9: jnz 0x7fb0666dfdd1
inserted instruction
405cfa
old instr: 0x405cfa: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfdab: mov rax, qword ptr [rbp-0x18]
old instr: 0x405cfe: mov rdi, rax
    new instr:0x7fb0666dfdaf: mov rdi, rax
405cc4
old instr: 0x405cc4: cmp eax, 0x2
    new instr:0x7fb0666dfdb2: cmp eax, 0x2
in revert 
    new instr:0x7fb0666dfdb5: jle 0x7fb0666dfdc1
405cd3
old instr: 0x405cd3: cmp eax, 0x3
    new instr:0x7fb0666dfdb7: cmp eax, 0x3
old instr: 0x405cd6: jz 0x405d72
    new instr:0x7fb0666dfdba: jz 0x7fb0666dfe56
inserted instruction
405cdc
old instr: 0x405cdc: cmp eax, 0x4
    new instr:0x7fb0666dfdc0: cmp eax, 0x4
in revert 
    new instr:0x7fb0666dfdc3: jnz 0x7fb0666dfee0
405dfc
old instr: 0x405dfc: cmp dword ptr [rbp-0x1c], 0x2
    new instr:0x7fb0666dfdc9: cmp dword ptr [rbp-0x1c], 0x2
in revert 
    new instr:0x7fb0666dfdcd: jnz 0x7fb0666dfdd9
405e0c
old instr: 0x405e0c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfdcf: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e10: mov edx, dword ptr [rax+0x10]
    new instr:0x7fb0666dfdd3: mov edx, dword ptr [rax+0x10]
old instr: 0x405e13: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfdd6: mov rax, qword ptr [rbp-0x8]
old instr: 0x405e17: mov rax, qword ptr [rax]
    new instr:0x7fb0666dfdda: mov rax, qword ptr [rax]
old instr: 0x405e1a: mov eax, dword ptr [rax+0x8]
    new instr:0x7fb0666dfddd: mov eax, dword ptr [rax+0x8]
old instr: 0x405e1d: cmp edx, eax
    new instr:0x7fb0666dfde0: cmp edx, eax
in revert 
    new instr:0x7fb0666dfde2: jnz 0x7fb0666dfdeb
405e28
old instr: 0x405e28: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfde4: mov rax, qword ptr [rbp-0x18]
old instr: 0x405e2c: mov rdi, rax
    new instr:0x7fb0666dfde8: mov rdi, rax
405d20
old instr: 0x405d20: cmp dword ptr [rbp-0x1c], 0x1
    new instr:0x7fb0666dfdeb: cmp dword ptr [rbp-0x1c], 0x1
in revert 
    new instr:0x7fb0666dfdef: jz 0x7fb0666dfe0f
405d44
old instr: 0x405d44: cmp dword ptr [rbp-0x1c], 0x2
    new instr:0x7fb0666dfdf1: cmp dword ptr [rbp-0x1c], 0x2
old instr: 0x405d48: jnz 0x405d68
    new instr:0x7fb0666dfdf5: jnz 0x7fb0666dfe15
inserted instruction
405d4a
old instr: 0x405d4a: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfdf7: mov rax, qword ptr [rbp-0x18]
old instr: 0x405d4e: mov edx, dword ptr [rax+0x8]
    new instr:0x7fb0666dfdfb: mov edx, dword ptr [rax+0x8]
old instr: 0x405d51: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfdfe: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d55: mov dword ptr [rax+0x10], edx
    new instr:0x7fb0666dfe02: mov dword ptr [rax+0x10], edx
old instr: 0x405d58: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfe05: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d5c: mov dword ptr [rax+0x8], 0x4
    new instr:0x7fb0666dfe09: mov dword ptr [rax+0x8], 0x4
old instr: 0x405d63: jmp 0x405cb8
    new instr:0x7fb0666dfe10: jmp 0x7fb0666dfd65
inserted instruction
405cae
old instr: 0x405cae: mov eax, 0xfffffffe
    new instr:0x7fb0666dfe15: mov eax, 0xfffffffe
old instr: 0x405cb3: jmp 0x405e8f
    new instr:0x7fb0666dfe1a: jmp 0x7fb0666dfff6
inserted instruction
405cc9
old instr: 0x405cc9: cmp eax, 0x1
    new instr:0x7fb0666dfe1f: cmp eax, 0x1
old instr: 0x405ccc: jz 0x405cea
    new instr:0x7fb0666dfe22: jz 0x7fb0666dfe40
inserted instruction
add jump to 
    new instr:0x7fb0666dfe24: jmp 0x7fb066ae5af7
405e21
old instr: 0x405e21: mov eax, 0xffffffff
    new instr:0x7fb0666dfe29: mov eax, 0xffffffff
old instr: 0x405e26: jmp 0x405e8f
    new instr:0x7fb0666dfe2e: jmp 0x7fb0666dfe97
inserted instruction
405d26
old instr: 0x405d26: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfe30: mov rax, qword ptr [rbp-0x18]
old instr: 0x405d2a: mov edx, dword ptr [rax+0x8]
    new instr:0x7fb0666dfe34: mov edx, dword ptr [rax+0x8]
old instr: 0x405d2d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfe37: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d31: mov dword ptr [rax+0x10], edx
    new instr:0x7fb0666dfe3b: mov dword ptr [rax+0x10], edx
old instr: 0x405d34: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfe3e: mov rax, qword ptr [rbp-0x8]
old instr: 0x405d38: mov dword ptr [rax+0x8], 0x3
    new instr:0x7fb0666dfe42: mov dword ptr [rax+0x8], 0x3
old instr: 0x405d3f: jmp 0x405cb8
    new instr:0x7fb0666dfe49: jmp 0x7fb0666dfdc2
inserted instruction
405e8f
old instr: 0x405e8f: leave 
    new instr:0x7fb0666dfe4e: leave 
old instr: 0x405e90: ret 
    new instr:0x7fb0666dfe4f: ret 
405c7a
old instr: 0x405c7a: mov eax, 0xfffffffe
    new instr:0x7fb0666dfe50: mov eax, 0xfffffffe
old instr: 0x405c7f: jmp 0x405e8f
    new instr:0x7fb0666dfe55: jmp 0x7fb0666e0065
inserted instruction
405e02
old instr: 0x405e02: mov eax, 0xffffffff
    new instr:0x7fb0666dfe5a: mov eax, 0xffffffff
old instr: 0x405e07: jmp 0x405e8f
    new instr:0x7fb0666dfe5f: jmp 0x7fb0666dfee7
inserted instruction
405c97
old instr: 0x405c97: mov eax, 0xfffffffe
    new instr:0x7fb0666dfe64: mov eax, 0xfffffffe
old instr: 0x405c9c: jmp 0x405e8f
    new instr:0x7fb0666dfe69: jmp 0x7fb0666e005c
inserted instruction
405ce5
old instr: 0x405ce5: jmp 0x405e8a
    new instr:0x7fb0666dfe6e: jmp 0x7fb0666e0013
inserted instruction
rtn name: BZ2_bzCompress : 8
1
4016ce
old instr: 0x4016ce: push rbp
    new instr:0x7fb0666dfe73: push rbp
old instr: 0x4016cf: mov rbp, rsp
    new instr:0x7fb0666dfe74: mov rbp, rsp
old instr: 0x4016d2: sub rsp, 0x1450
    new instr:0x7fb0666dfe77: sub rsp, 0x1450
old instr: 0x4016d9: mov qword ptr [rbp-0x1428], rdi
    new instr:0x7fb0666dfe7e: mov qword ptr [rbp-0x1428], rdi
old instr: 0x4016e0: mov qword ptr [rbp-0x1430], rsi
    new instr:0x7fb0666dfe85: mov qword ptr [rbp-0x1430], rsi
old instr: 0x4016e7: mov qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666dfe8c: mov qword ptr [rbp-0x8], 0x0
old instr: 0x4016ef: mov rax, qword ptr [rbp-0x1428]
    new instr:0x7fb0666dfe94: mov rax, qword ptr [rbp-0x1428]
old instr: 0x4016f6: mov rdi, rax
    new instr:0x7fb0666dfe9b: mov rdi, rax
rtn name: compressStream : 9
4
404f65
old instr: 0x404f65: push rbp
    new instr:0x7fb0666dfe9e: push rbp
old instr: 0x404f66: mov rbp, rsp
    new instr:0x7fb0666dfe9f: mov rbp, rsp
old instr: 0x404f69: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666dfea2: mov qword ptr [rbp-0x18], rdi
old instr: 0x404f6d: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfea6: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f71: mov dword ptr [rax+0x6c], 0x0
    new instr:0x7fb0666dfeaa: mov dword ptr [rax+0x6c], 0x0
old instr: 0x404f78: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfeb1: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f7c: mov dword ptr [rax+0x74], 0x0
    new instr:0x7fb0666dfeb5: mov dword ptr [rax+0x74], 0x0
old instr: 0x404f83: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfebc: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f87: mov dword ptr [rax+0x78], 0x0
    new instr:0x7fb0666dfec0: mov dword ptr [rax+0x78], 0x0
old instr: 0x404f8e: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfec7: mov rax, qword ptr [rbp-0x18]
old instr: 0x404f92: mov dword ptr [rax+0x288], 0xffffffff
    new instr:0x7fb0666dfecb: mov dword ptr [rax+0x288], 0xffffffff
old instr: 0x404f9c: mov dword ptr [rbp-0x4], 0x0
    new instr:0x7fb0666dfed5: mov dword ptr [rbp-0x4], 0x0
in revert 
removing jump and inserting a dummy entry 
404fba
old instr: 0x404fba: cmp dword ptr [rbp-0x4], 0xff
    new instr:0x7fb0666dfedc: cmp dword ptr [rbp-0x4], 0xff
in revert 
    new instr:0x7fb0666dfee3: jnle 0x7fb0666dfec7
404fa5
old instr: 0x404fa5: mov rdx, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfee5: mov rdx, qword ptr [rbp-0x18]
404fc3
old instr: 0x404fc3: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfee9: mov rax, qword ptr [rbp-0x18]
old instr: 0x404fc7: mov eax, dword ptr [rax+0x294]
    new instr:0x7fb0666dfeed: mov eax, dword ptr [rax+0x294]
old instr: 0x404fcd: lea edx, ptr [rax+0x1]
    new instr:0x7fb0666dfef3: lea edx, ptr [rax+0x1]
old instr: 0x404fd0: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666dfef6: mov rax, qword ptr [rbp-0x18]
old instr: 0x404fd4: mov dword ptr [rax+0x294], edx
    new instr:0x7fb0666dfefa: mov dword ptr [rax+0x294], edx
old instr: 0x404fda: pop rbp
    new instr:0x7fb0666dff00: pop rbp
old instr: 0x404fdb: ret 
    new instr:0x7fb0666dff01: ret 
rtn name: prepare_new_block : 10
d
41216d
old instr: 0x41216d: push rbp
    new instr:0x7fb0666dff02: push rbp
old instr: 0x41216e: mov rbp, rsp
    new instr:0x7fb0666dff03: mov rbp, rsp
old instr: 0x412171: sub rsp, 0x10
    new instr:0x7fb0666dff06: sub rsp, 0x10
old instr: 0x412175: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666dff0a: mov qword ptr [rbp-0x8], rdi
old instr: 0x412179: mov eax, esi
    new instr:0x7fb0666dff0e: mov eax, esi
old instr: 0x41217b: mov byte ptr [rbp-0xc], al
    new instr:0x7fb0666dff10: mov byte ptr [rbp-0xc], al
old instr: 0x41217e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff13: mov rax, qword ptr [rbp-0x8]
old instr: 0x412182: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666dff17: mov eax, dword ptr [rax+0x6c]
old instr: 0x412185: test eax, eax
    new instr:0x7fb0666dff1a: test eax, eax
old instr: 0x412187: jle 0x412256
    new instr:0x7fb0666dff1c: jle 0x7fb0666dffeb
inserted instruction
41218d
old instr: 0x41218d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff22: mov rax, qword ptr [rbp-0x8]
old instr: 0x412191: mov eax, dword ptr [rax+0x288]
    new instr:0x7fb0666dff26: mov eax, dword ptr [rax+0x288]
old instr: 0x412197: mov edx, eax
    new instr:0x7fb0666dff2c: mov edx, eax
old instr: 0x412199: not edx
    new instr:0x7fb0666dff2e: not edx
old instr: 0x41219b: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff30: mov rax, qword ptr [rbp-0x8]
old instr: 0x41219f: mov dword ptr [rax+0x288], edx
    new instr:0x7fb0666dff34: mov dword ptr [rax+0x288], edx
old instr: 0x4121a5: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff3a: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121a9: mov eax, dword ptr [rax+0x28c]
    new instr:0x7fb0666dff3e: mov eax, dword ptr [rax+0x28c]
old instr: 0x4121af: mov edx, eax
    new instr:0x7fb0666dff44: mov edx, eax
old instr: 0x4121b1: rol edx, 0x1
    new instr:0x7fb0666dff46: rol edx, 0x1
old instr: 0x4121b3: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff48: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121b7: mov dword ptr [rax+0x28c], edx
    new instr:0x7fb0666dff4c: mov dword ptr [rax+0x28c], edx
old instr: 0x4121bd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff52: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121c1: mov edx, dword ptr [rax+0x28c]
    new instr:0x7fb0666dff56: mov edx, dword ptr [rax+0x28c]
old instr: 0x4121c7: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff5c: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121cb: mov eax, dword ptr [rax+0x288]
    new instr:0x7fb0666dff60: mov eax, dword ptr [rax+0x288]
old instr: 0x4121d1: xor edx, eax
    new instr:0x7fb0666dff66: xor edx, eax
old instr: 0x4121d3: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff68: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121d7: mov dword ptr [rax+0x28c], edx
    new instr:0x7fb0666dff6c: mov dword ptr [rax+0x28c], edx
old instr: 0x4121dd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff72: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121e1: mov eax, dword ptr [rax+0x294]
    new instr:0x7fb0666dff76: mov eax, dword ptr [rax+0x294]
old instr: 0x4121e7: cmp eax, 0x1
    new instr:0x7fb0666dff7c: cmp eax, 0x1
old instr: 0x4121ea: jle 0x4121f7
    new instr:0x7fb0666dff7f: jle 0x7fb0666dff8c
inserted instruction
4121ec
old instr: 0x4121ec: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff81: mov rax, qword ptr [rbp-0x8]
4121f7
old instr: 0x4121f7: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff85: mov rax, qword ptr [rbp-0x8]
old instr: 0x4121fb: mov eax, dword ptr [rax+0x290]
    new instr:0x7fb0666dff89: mov eax, dword ptr [rax+0x290]
old instr: 0x412201: cmp eax, 0x1
    new instr:0x7fb0666dff8f: cmp eax, 0x1
in revert 
    new instr:0x7fb0666dff92: jnle 0x7fb0666dffd8
41224a
old instr: 0x41224a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff94: mov rax, qword ptr [rbp-0x8]
old instr: 0x41224e: mov rdi, rax
    new instr:0x7fb0666dff98: mov rdi, rax
412256
old instr: 0x412256: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dff9b: mov rax, qword ptr [rbp-0x8]
old instr: 0x41225a: mov rdx, qword ptr [rax+0x20]
    new instr:0x7fb0666dff9f: mov rdx, qword ptr [rax+0x20]
old instr: 0x41225e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dffa3: mov rax, qword ptr [rbp-0x8]
old instr: 0x412262: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666dffa7: mov eax, dword ptr [rax+0x6c]
old instr: 0x412265: cdqe 
    new instr:0x7fb0666dffaa: cdqe 
old instr: 0x412267: add rdx, rax
    new instr:0x7fb0666dffac: add rdx, rax
old instr: 0x41226a: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dffaf: mov rax, qword ptr [rbp-0x8]
old instr: 0x41226e: mov qword ptr [rax+0x50], rdx
    new instr:0x7fb0666dffb3: mov qword ptr [rax+0x50], rdx
old instr: 0x412272: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dffb7: mov rax, qword ptr [rbp-0x8]
old instr: 0x412276: mov eax, dword ptr [rax+0x294]
    new instr:0x7fb0666dffbb: mov eax, dword ptr [rax+0x294]
old instr: 0x41227c: cmp eax, 0x1
    new instr:0x7fb0666dffc1: cmp eax, 0x1
in revert 
    new instr:0x7fb0666dffc4: jz 0x7fb0666e0023
4122de
old instr: 0x4122de: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dffc6: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122e2: mov eax, dword ptr [rax+0x6c]
    new instr:0x7fb0666dffca: mov eax, dword ptr [rax+0x6c]
old instr: 0x4122e5: test eax, eax
    new instr:0x7fb0666dffcd: test eax, eax
old instr: 0x4122e7: jle 0x4123b3
    new instr:0x7fb0666dffcf: jle 0x7fb0666e009b
inserted instruction
4122ed
old instr: 0x4122ed: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dffd5: mov rax, qword ptr [rbp-0x8]
old instr: 0x4122f1: mov esi, 0x31
    new instr:0x7fb0666dffd9: mov esi, 0x31
old instr: 0x4122f6: mov rdi, rax
    new instr:0x7fb0666dffde: mov rdi, rax
412281
old instr: 0x412281: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dffe1: mov rax, qword ptr [rbp-0x8]
old instr: 0x412285: mov rdi, rax
    new instr:0x7fb0666dffe5: mov rdi, rax
412206
old instr: 0x412206: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dffe8: mov rax, qword ptr [rbp-0x8]
old instr: 0x41220a: mov edi, dword ptr [rax+0x6c]
    new instr:0x7fb0666dffec: mov edi, dword ptr [rax+0x6c]
old instr: 0x41220d: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dffef: mov rax, qword ptr [rbp-0x8]
old instr: 0x412211: mov esi, dword ptr [rax+0x28c]
    new instr:0x7fb0666dfff3: mov esi, dword ptr [rax+0x28c]
old instr: 0x412217: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666dfff9: mov rax, qword ptr [rbp-0x8]
old instr: 0x41221b: mov ecx, dword ptr [rax+0x288]
    new instr:0x7fb0666dfffd: mov ecx, dword ptr [rax+0x288]
old instr: 0x412221: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0003: mov rax, qword ptr [rbp-0x8]
old instr: 0x412225: mov edx, dword ptr [rax+0x294]
    new instr:0x7fb0666e0007: mov edx, dword ptr [rax+0x294]
old instr: 0x41222b: mov rax, qword ptr [rip+0x20b07e]
    new instr:0x7fb0666e000d: mov rax, qword ptr [rip+0x20b07e]
old instr: 0x412232: mov r9d, edi
    new instr:0x7fb0666e0014: mov r9d, edi
old instr: 0x412235: mov r8d, esi
    new instr:0x7fb0666e0017: mov r8d, esi
old instr: 0x412238: mov esi, 0x41ad30
    new instr:0x7fb0666e001a: mov esi, 0x41ad30
old instr: 0x41223d: mov rdi, rax
    new instr:0x7fb0666e001f: mov rdi, rax
old instr: 0x412240: mov eax, 0x0
    new instr:0x7fb0666e0022: mov eax, 0x0
4123b3
old instr: 0x4123b3: cmp byte ptr [rbp-0xc], 0x0
    new instr:0x7fb0666e0027: cmp byte ptr [rbp-0xc], 0x0
in revert 
    new instr:0x7fb0666e002b: jnz 0x7fb0666e00ed
412479
old instr: 0x412479: leave 
    new instr:0x7fb0666e0031: leave 
old instr: 0x41247a: ret 
    new instr:0x7fb0666e0032: ret 
4123bd
old instr: 0x4123bd: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0033: mov rax, qword ptr [rbp-0x8]
old instr: 0x4123c1: mov esi, 0x17
    new instr:0x7fb0666e0037: mov esi, 0x17
old instr: 0x4123c6: mov rdi, rax
    new instr:0x7fb0666e003c: mov rdi, rax
rtn name: BZ2_compressBlock : 11
1
40ca9a
old instr: 0x40ca9a: push rbp
    new instr:0x7fb0666e003f: push rbp
old instr: 0x40ca9b: mov rbp, rsp
    new instr:0x7fb0666e0040: mov rbp, rsp
old instr: 0x40ca9e: sub rsp, 0x10
    new instr:0x7fb0666e0043: sub rsp, 0x10
old instr: 0x40caa2: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e0047: mov qword ptr [rbp-0x8], rdi
old instr: 0x40caa6: mov eax, esi
    new instr:0x7fb0666e004b: mov eax, esi
old instr: 0x40caa8: mov byte ptr [rbp-0xc], al
    new instr:0x7fb0666e004d: mov byte ptr [rbp-0xc], al
old instr: 0x40caab: movzx edx, byte ptr [rbp-0xc]
    new instr:0x7fb0666e0050: movzx edx, byte ptr [rbp-0xc]
old instr: 0x40caaf: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0054: mov rax, qword ptr [rbp-0x8]
old instr: 0x40cab3: mov esi, 0x8
    new instr:0x7fb0666e0058: mov esi, 0x8
old instr: 0x40cab8: mov rdi, rax
    new instr:0x7fb0666e005d: mov rdi, rax
rtn name: bsPutUChar : 12
1
40ca25
old instr: 0x40ca25: push rbp
    new instr:0x7fb0666e0060: push rbp
old instr: 0x40ca26: mov rbp, rsp
    new instr:0x7fb0666e0061: mov rbp, rsp
old instr: 0x40ca29: sub rsp, 0x10
    new instr:0x7fb0666e0064: sub rsp, 0x10
old instr: 0x40ca2d: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e0068: mov qword ptr [rbp-0x8], rdi
old instr: 0x40ca31: mov dword ptr [rbp-0xc], esi
    new instr:0x7fb0666e006c: mov dword ptr [rbp-0xc], esi
old instr: 0x40ca34: mov eax, dword ptr [rbp-0xc]
    new instr:0x7fb0666e006f: mov eax, dword ptr [rbp-0xc]
old instr: 0x40ca37: mov edx, eax
    new instr:0x7fb0666e0072: mov edx, eax
old instr: 0x40ca39: shr edx, 0x18
    new instr:0x7fb0666e0074: shr edx, 0x18
old instr: 0x40ca3c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0077: mov rax, qword ptr [rbp-0x8]
old instr: 0x40ca40: mov esi, 0x8
    new instr:0x7fb0666e007b: mov esi, 0x8
old instr: 0x40ca45: mov rdi, rax
    new instr:0x7fb0666e0080: mov rdi, rax
rtn name: bsPutUInt32 : 13
7
408127
old instr: 0x408127: push rbp
    new instr:0x7fb0666e0083: push rbp
old instr: 0x408128: mov rbp, rsp
    new instr:0x7fb0666e0084: mov rbp, rsp
old instr: 0x40812b: sub rsp, 0x50
    new instr:0x7fb0666e0087: sub rsp, 0x50
old instr: 0x40812f: mov qword ptr [rbp-0x28], rdi
    new instr:0x7fb0666e008b: mov qword ptr [rbp-0x28], rdi
old instr: 0x408133: mov qword ptr [rbp-0x30], rsi
    new instr:0x7fb0666e008f: mov qword ptr [rbp-0x30], rsi
old instr: 0x408137: mov dword ptr [rbp-0x34], edx
    new instr:0x7fb0666e0093: mov dword ptr [rbp-0x34], edx
old instr: 0x40813a: mov qword ptr [rbp-0x40], rcx
    new instr:0x7fb0666e0096: mov qword ptr [rbp-0x40], rcx
old instr: 0x40813e: mov qword ptr [rbp-0x48], r8
    new instr:0x7fb0666e009a: mov qword ptr [rbp-0x48], r8
old instr: 0x408142: mov qword ptr [rbp-0x50], r9
    new instr:0x7fb0666e009e: mov qword ptr [rbp-0x50], r9
old instr: 0x408146: mov rax, qword ptr [rbp-0x30]
    new instr:0x7fb0666e00a2: mov rax, qword ptr [rbp-0x30]
old instr: 0x40814a: mov qword ptr [rbp-0x8], rax
    new instr:0x7fb0666e00a6: mov qword ptr [rbp-0x8], rax
old instr: 0x40814e: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666e00aa: cmp qword ptr [rbp-0x8], 0x0
in revert 
    new instr:0x7fb0666e00af: jz 0x7fb0666e00e0
408184
old instr: 0x408184: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e00b1: mov rax, qword ptr [rbp-0x8]
old instr: 0x408188: movzx eax, byte ptr [rax+0x1394]
    new instr:0x7fb0666e00b5: movzx eax, byte ptr [rax+0x1394]
old instr: 0x40818f: test al, al
    new instr:0x7fb0666e00bc: test al, al
in revert 
    new instr:0x7fb0666e00be: jz 0x7fb0666e00ef
4081c2
old instr: 0x4081c2: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e00c0: mov rax, qword ptr [rbp-0x8]
old instr: 0x4081c6: mov rax, qword ptr [rax]
    new instr:0x7fb0666e00c4: mov rax, qword ptr [rax]
old instr: 0x4081c9: mov rdi, rax
    new instr:0x7fb0666e00c7: mov rdi, rax
408155
old instr: 0x408155: cmp qword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666e00ca: cmp qword ptr [rbp-0x28], 0x0
old instr: 0x40815a: jz 0x408166
    new instr:0x7fb0666e00cf: jz 0x7fb0666e00db
inserted instruction
add jump to 
    new instr:0x7fb0666e00d1: jmp 0x7fb066ae8232
408193
old instr: 0x408193: cmp qword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666e00d6: cmp qword ptr [rbp-0x28], 0x0
old instr: 0x408198: jz 0x4081a4
    new instr:0x7fb0666e00db: jz 0x7fb0666e00e7
inserted instruction
add jump to 
    new instr:0x7fb0666e00dd: jmp 0x7fb066ae827c
40815c
old instr: 0x40815c: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666e00e2: mov rax, qword ptr [rbp-0x28]
old instr: 0x408160: mov dword ptr [rax], 0x0
    new instr:0x7fb0666e00e6: mov dword ptr [rax], 0x0
old instr: 0x408166: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666e00ec: cmp qword ptr [rbp-0x8], 0x0
old instr: 0x40816b: jz 0x408490
    new instr:0x7fb0666e00f1: jz 0x7fb0666e0416
inserted instruction
add jump to 
    new instr:0x7fb0666e00f7: jmp 0x7fb066ae826d
40819a
old instr: 0x40819a: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666e00fc: mov rax, qword ptr [rbp-0x28]
old instr: 0x40819e: mov dword ptr [rax], 0xffffffff
    new instr:0x7fb0666e0100: mov dword ptr [rax], 0xffffffff
old instr: 0x4081a4: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666e0106: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666e010b: jmp 0x7fb066ae82bf
rtn name: BZ2_bzWriteClose64 : 14
1f
402b73
old instr: 0x402b73: push rbp
    new instr:0x7fb0666e0110: push rbp
old instr: 0x402b74: mov rbp, rsp
    new instr:0x7fb0666e0111: mov rbp, rsp
old instr: 0x402b77: sub rsp, 0xc0
    new instr:0x7fb0666e0114: sub rsp, 0xc0
old instr: 0x402b7e: mov qword ptr [rbp-0xb8], rdi
    new instr:0x7fb0666e011b: mov qword ptr [rbp-0xb8], rdi
old instr: 0x402b85: mov byte ptr [rip+0x21b860], 0x0
    new instr:0x7fb0666e0122: mov byte ptr [rip+0x21b860], 0x0
old instr: 0x402b8c: cmp qword ptr [rbp-0xb8], 0x0
    new instr:0x7fb0666e0129: cmp qword ptr [rbp-0xb8], 0x0
in revert 
    new instr:0x7fb0666e0131: jz 0x7fb0666e0148
402bab
old instr: 0x402bab: mov eax, dword ptr [rip+0x21aff7]
    new instr:0x7fb0666e0133: mov eax, dword ptr [rip+0x21aff7]
old instr: 0x402bb1: cmp eax, 0x2
    new instr:0x7fb0666e0139: cmp eax, 0x2
old instr: 0x402bb4: jz 0x402c53
    new instr:0x7fb0666e013c: jz 0x7fb0666e01db
inserted instruction
402bba
old instr: 0x402bba: cmp eax, 0x3
    new instr:0x7fb0666e0142: cmp eax, 0x3
in revert 
    new instr:0x7fb0666e0145: jnz 0x7fb0666e0173
402beb
old instr: 0x402beb: mov rax, qword ptr [rbp-0xb8]
    new instr:0x7fb0666e0147: mov rax, qword ptr [rbp-0xb8]
old instr: 0x402bf2: mov rsi, rax
    new instr:0x7fb0666e014e: mov rsi, rax
old instr: 0x402bf5: mov edi, 0x61dfe0
    new instr:0x7fb0666e0151: mov edi, 0x61dfe0
402b96
old instr: 0x402b96: mov eax, dword ptr [rip+0x21b00c]
    new instr:0x7fb0666e0156: mov eax, dword ptr [rip+0x21b00c]
old instr: 0x402b9c: cmp eax, 0x1
    new instr:0x7fb0666e015c: cmp eax, 0x1
old instr: 0x402b9f: jz 0x402bab
    new instr:0x7fb0666e015f: jz 0x7fb0666e016b
inserted instruction
add jump to 
    new instr:0x7fb0666e0161: jmp 0x7fb066ae2d07
402bbf
old instr: 0x402bbf: cmp eax, 0x1
    new instr:0x7fb0666e0166: cmp eax, 0x1
old instr: 0x402bc2: jnz 0x402c77
    new instr:0x7fb0666e0169: jnz 0x7fb0666e021e
inserted instruction
add jump to 
    new instr:0x7fb0666e016f: jmp 0x7fb066ae2d3c
402ba1
old instr: 0x402ba1: mov edi, 0x4195b5
    new instr:0x7fb0666e0174: mov edi, 0x4195b5
402c77
old instr: 0x402c77: mov eax, dword ptr [rip+0x21af2b]
    new instr:0x7fb0666e0179: mov eax, dword ptr [rip+0x21af2b]
old instr: 0x402c7d: cmp eax, 0x1
    new instr:0x7fb0666e017f: cmp eax, 0x1
old instr: 0x402c80: jz 0x402ccf
    new instr:0x7fb0666e0182: jz 0x7fb0666e01d1
inserted instruction
402c82
old instr: 0x402c82: mov edi, 0x61dfe0
    new instr:0x7fb0666e0184: mov edi, 0x61dfe0
402ccf
old instr: 0x402ccf: mov eax, dword ptr [rip+0x21aed3]
    new instr:0x7fb0666e0189: mov eax, dword ptr [rip+0x21aed3]
old instr: 0x402cd5: cmp eax, 0x1
    new instr:0x7fb0666e018f: cmp eax, 0x1
old instr: 0x402cd8: jz 0x402d30
    new instr:0x7fb0666e0192: jz 0x7fb0666e01ea
inserted instruction
402cda
old instr: 0x402cda: mov edi, 0x61dfe0
    new instr:0x7fb0666e0194: mov edi, 0x61dfe0
402d30
old instr: 0x402d30: mov dword ptr [rbp-0x14], 0x0
    new instr:0x7fb0666e0199: mov dword ptr [rbp-0x14], 0x0
in revert 
removing jump and inserting a dummy entry 
402daa
old instr: 0x402daa: cmp dword ptr [rbp-0x14], 0x3
    new instr:0x7fb0666e01a0: cmp dword ptr [rbp-0x14], 0x3
in revert 
    new instr:0x7fb0666e01a4: jnle 0x7fb0666e012f
402d39
old instr: 0x402d39: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666e01a6: mov eax, dword ptr [rbp-0x14]
old instr: 0x402d3c: cdqe 
    new instr:0x7fb0666e01a9: cdqe 
old instr: 0x402d3e: mov rax, qword ptr [rax*8+0x61c5a0]
    new instr:0x7fb0666e01ab: mov rax, qword ptr [rax*8+0x61c5a0]
old instr: 0x402d46: mov rsi, rax
    new instr:0x7fb0666e01b3: mov rsi, rax
old instr: 0x402d49: mov edi, 0x61dfe0
    new instr:0x7fb0666e01b6: mov edi, 0x61dfe0
402db0
old instr: 0x402db0: mov eax, dword ptr [rip+0x21adf2]
    new instr:0x7fb0666e01bb: mov eax, dword ptr [rip+0x21adf2]
old instr: 0x402db6: cmp eax, 0x3
    new instr:0x7fb0666e01c1: cmp eax, 0x3
in revert 
    new instr:0x7fb0666e01c4: jnz 0x7fb0666e01d1
402dc6
old instr: 0x402dc6: lea rax, ptr [rbp-0xb0]
    new instr:0x7fb0666e01c6: lea rax, ptr [rbp-0xb0]
old instr: 0x402dcd: mov rsi, rax
    new instr:0x7fb0666e01cd: mov rsi, rax
old instr: 0x402dd0: mov edi, 0x61dfe0
    new instr:0x7fb0666e01d0: mov edi, 0x61dfe0
402dbb
old instr: 0x402dbb: mov eax, dword ptr [rip+0x21ade7]
    new instr:0x7fb0666e01d5: mov eax, dword ptr [rip+0x21ade7]
old instr: 0x402dc1: cmp eax, 0x2
    new instr:0x7fb0666e01db: cmp eax, 0x2
in revert 
    new instr:0x7fb0666e01de: jz 0x7fb0666e023a
402e20
old instr: 0x402e20: mov eax, dword ptr [rip+0x21ad82]
    new instr:0x7fb0666e01e0: mov eax, dword ptr [rip+0x21ad82]
old instr: 0x402e26: cmp eax, 0x3
    new instr:0x7fb0666e01e6: cmp eax, 0x3
old instr: 0x402e29: jnz 0x402e83
    new instr:0x7fb0666e01e9: jnz 0x7fb0666e0243
inserted instruction
402e2b
old instr: 0x402e2b: movzx eax, byte ptr [rip+0x21b5b9]
    new instr:0x7fb0666e01eb: movzx eax, byte ptr [rip+0x21b5b9]
old instr: 0x402e32: test al, al
    new instr:0x7fb0666e01f2: test al, al
in revert 
    new instr:0x7fb0666e01f4: jz 0x7fb0666e0243
402e83
old instr: 0x402e83: mov eax, dword ptr [rip+0x21ad1f]
    new instr:0x7fb0666e01f6: mov eax, dword ptr [rip+0x21ad1f]
old instr: 0x402e89: cmp eax, 0x3
    new instr:0x7fb0666e01fc: cmp eax, 0x3
old instr: 0x402e8c: jnz 0x402ee7
    new instr:0x7fb0666e01ff: jnz 0x7fb0666e025a
inserted instruction
402e8e
old instr: 0x402e8e: mov edi, 0x61dbc0
    new instr:0x7fb0666e0201: mov edi, 0x61dbc0
402ee7
old instr: 0x402ee7: mov eax, dword ptr [rip+0x21acbb]
    new instr:0x7fb0666e0206: mov eax, dword ptr [rip+0x21acbb]
old instr: 0x402eed: cmp eax, 0x3
    new instr:0x7fb0666e020c: cmp eax, 0x3
old instr: 0x402ef0: jnz 0x402f5c
    new instr:0x7fb0666e020f: jnz 0x7fb0666e027b
inserted instruction
402ef2
old instr: 0x402ef2: movzx eax, byte ptr [rip+0x21b4f2]
    new instr:0x7fb0666e0211: movzx eax, byte ptr [rip+0x21b4f2]
old instr: 0x402ef9: test al, al
    new instr:0x7fb0666e0218: test al, al
in revert 
    new instr:0x7fb0666e021a: jz 0x7fb0666e027b
402f5c
old instr: 0x402f5c: mov eax, dword ptr [rip+0x21ac46]
    new instr:0x7fb0666e021c: mov eax, dword ptr [rip+0x21ac46]
old instr: 0x402f62: cmp eax, 0x3
    new instr:0x7fb0666e0222: cmp eax, 0x3
old instr: 0x402f65: jnz 0x402f71
    new instr:0x7fb0666e0225: jnz 0x7fb0666e0231
inserted instruction
402f67
old instr: 0x402f67: mov edi, 0x61dfe0
    new instr:0x7fb0666e0227: mov edi, 0x61dfe0
402efd
old instr: 0x402efd: mov edi, 0x61dfe0
    new instr:0x7fb0666e022c: mov edi, 0x61dfe0
402f71
old instr: 0x402f71: mov eax, dword ptr [rip+0x21ac31]
    new instr:0x7fb0666e0231: mov eax, dword ptr [rip+0x21ac31]
old instr: 0x402f77: cmp eax, 0x2
    new instr:0x7fb0666e0237: cmp eax, 0x2
old instr: 0x402f7a: jz 0x40301c
    new instr:0x7fb0666e023a: jz 0x7fb0666e02dc
inserted instruction
402f80
old instr: 0x402f80: cmp eax, 0x3
    new instr:0x7fb0666e0240: cmp eax, 0x3
in revert 
    new instr:0x7fb0666e0243: jnz 0x7fb0666e03d0
403110
old instr: 0x403110: mov esi, 0x419598
    new instr:0x7fb0666e0249: mov esi, 0x419598
old instr: 0x403115: mov edi, 0x61dfe0
    new instr:0x7fb0666e024e: mov edi, 0x61dfe0
402e36
old instr: 0x402e36: mov edi, 0x61dfe0
    new instr:0x7fb0666e0253: mov edi, 0x61dfe0
402f89
old instr: 0x402f89: cmp eax, 0x1
    new instr:0x7fb0666e0258: cmp eax, 0x1
    new instr:0x7fb0666e025b: jmp 0x7fb066ae31f2
rtn name: compress : 15
6
403eb0
old instr: 0x403eb0: push rbp
    new instr:0x7fb0666e0260: push rbp
old instr: 0x403eb1: mov rbp, rsp
    new instr:0x7fb0666e0261: mov rbp, rsp
old instr: 0x403eb4: sub rsp, 0x20
    new instr:0x7fb0666e0264: sub rsp, 0x20
old instr: 0x403eb8: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666e0268: mov qword ptr [rbp-0x18], rdi
old instr: 0x403ebc: mov qword ptr [rbp-0x20], rsi
    new instr:0x7fb0666e026c: mov qword ptr [rbp-0x20], rsi
old instr: 0x403ec0: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7fb0666e0270: cmp qword ptr [rbp-0x18], 0x0
old instr: 0x403ec5: jnz 0x403f09
    new instr:0x7fb0666e0275: jnz 0x7fb0666e02b9
inserted instruction
403ec7
403f09
old instr: 0x403f09: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666e0277: mov rax, qword ptr [rbp-0x18]
old instr: 0x403f0d: mov qword ptr [rbp-0x8], rax
    new instr:0x7fb0666e027b: mov qword ptr [rbp-0x8], rax
in revert 
removing jump and inserting a dummy entry 
403f1f
old instr: 0x403f1f: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e027f: mov rax, qword ptr [rbp-0x8]
old instr: 0x403f23: mov rax, qword ptr [rax+0x8]
    new instr:0x7fb0666e0283: mov rax, qword ptr [rax+0x8]
old instr: 0x403f27: test rax, rax
    new instr:0x7fb0666e0287: test rax, rax
in revert 
    new instr:0x7fb0666e028a: jz 0x7fb0666e0273
403f13
old instr: 0x403f13: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e028c: mov rax, qword ptr [rbp-0x8]
403f2c
old instr: 0x403f2c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0290: mov rax, qword ptr [rbp-0x8]
old instr: 0x403f30: mov rax, qword ptr [rax+0x8]
    new instr:0x7fb0666e0294: mov rax, qword ptr [rax+0x8]
old instr: 0x403f34: mov rdx, qword ptr [rbp-0x20]
    new instr:0x7fb0666e0298: mov rdx, qword ptr [rbp-0x20]
old instr: 0x403f38: mov rsi, rdx
    new instr:0x7fb0666e029c: mov rsi, rdx
old instr: 0x403f3b: mov rdi, rax
    new instr:0x7fb0666e029f: mov rdi, rax
rtn name: snocString : 16
1
402a83
old instr: 0x402a83: push rbp
    new instr:0x7fb0666e02a2: push rbp
old instr: 0x402a84: mov rbp, rsp
    new instr:0x7fb0666e02a3: mov rbp, rsp
old instr: 0x402a87: sub rsp, 0x20
    new instr:0x7fb0666e02a6: sub rsp, 0x20
old instr: 0x402a8b: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666e02aa: mov qword ptr [rbp-0x18], rdi
old instr: 0x402a8f: mov qword ptr [rbp-0x20], rsi
    new instr:0x7fb0666e02ae: mov qword ptr [rbp-0x20], rsi
old instr: 0x402a93: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666e02b2: mov rax, qword ptr [rbp-0x18]
old instr: 0x402a97: mov rdi, rax
    new instr:0x7fb0666e02b6: mov rdi, rax
rtn name: hasSuffix : 17
1
4027f1
old instr: 0x4027f1: push rbp
    new instr:0x7fb0666e02b9: push rbp
old instr: 0x4027f2: mov rbp, rsp
    new instr:0x7fb0666e02ba: mov rbp, rsp
old instr: 0x4027f5: sub rsp, 0x10
    new instr:0x7fb0666e02bd: sub rsp, 0x10
old instr: 0x4027f9: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e02c1: mov qword ptr [rbp-0x8], rdi
old instr: 0x4027fd: mov qword ptr [rbp-0x10], rsi
    new instr:0x7fb0666e02c5: mov qword ptr [rbp-0x10], rsi
old instr: 0x402801: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666e02c9: mov rax, qword ptr [rbp-0x10]
old instr: 0x402805: mov rdi, rax
    new instr:0x7fb0666e02cd: mov rdi, rax
rtn name: copyFileName : 18
1
403e4f
old instr: 0x403e4f: push rbp
    new instr:0x7fb0666e02d0: push rbp
old instr: 0x403e50: mov rbp, rsp
    new instr:0x7fb0666e02d1: mov rbp, rsp
old instr: 0x403e53: sub rsp, 0x20
    new instr:0x7fb0666e02d4: sub rsp, 0x20
old instr: 0x403e57: mov dword ptr [rbp-0x14], edi
    new instr:0x7fb0666e02d8: mov dword ptr [rbp-0x14], edi
old instr: 0x403e5a: mov eax, dword ptr [rbp-0x14]
    new instr:0x7fb0666e02db: mov eax, dword ptr [rbp-0x14]
old instr: 0x403e5d: cdqe 
    new instr:0x7fb0666e02de: cdqe 
old instr: 0x403e5f: mov rdi, rax
    new instr:0x7fb0666e02e0: mov rdi, rax
rtn name: myMalloc : 19
d
407bfa
old instr: 0x407bfa: push rbp
    new instr:0x7fb0666e02e3: push rbp
old instr: 0x407bfb: mov rbp, rsp
    new instr:0x7fb0666e02e4: mov rbp, rsp
old instr: 0x407bfe: sub rsp, 0x30
    new instr:0x7fb0666e02e7: sub rsp, 0x30
old instr: 0x407c02: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666e02eb: mov qword ptr [rbp-0x18], rdi
old instr: 0x407c06: mov qword ptr [rbp-0x20], rsi
    new instr:0x7fb0666e02ef: mov qword ptr [rbp-0x20], rsi
old instr: 0x407c0a: mov dword ptr [rbp-0x24], edx
    new instr:0x7fb0666e02f3: mov dword ptr [rbp-0x24], edx
old instr: 0x407c0d: mov dword ptr [rbp-0x28], ecx
    new instr:0x7fb0666e02f6: mov dword ptr [rbp-0x28], ecx
old instr: 0x407c10: mov dword ptr [rbp-0x2c], r8d
    new instr:0x7fb0666e02f9: mov dword ptr [rbp-0x2c], r8d
old instr: 0x407c14: mov qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666e02fd: mov qword ptr [rbp-0x8], 0x0
old instr: 0x407c1c: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7fb0666e0305: cmp qword ptr [rbp-0x18], 0x0
old instr: 0x407c21: jz 0x407c2d
    new instr:0x7fb0666e030a: jz 0x7fb0666e0316
inserted instruction
407c23
old instr: 0x407c23: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666e030c: mov rax, qword ptr [rbp-0x18]
old instr: 0x407c27: mov dword ptr [rax], 0x0
    new instr:0x7fb0666e0310: mov dword ptr [rax], 0x0
old instr: 0x407c2d: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666e0316: cmp qword ptr [rbp-0x8], 0x0
in revert 
    new instr:0x7fb0666e031b: jnz 0x7fb0666e032b
407c42
old instr: 0x407c42: cmp qword ptr [rbp-0x20], 0x0
    new instr:0x7fb0666e031d: cmp qword ptr [rbp-0x20], 0x0
old instr: 0x407c47: jz 0x407c70
    new instr:0x7fb0666e0322: jz 0x7fb0666e034b
inserted instruction
407c49
old instr: 0x407c49: cmp dword ptr [rbp-0x24], 0x0
    new instr:0x7fb0666e0324: cmp dword ptr [rbp-0x24], 0x0
old instr: 0x407c4d: jle 0x407c70
    new instr:0x7fb0666e0328: jle 0x7fb0666e034b
inserted instruction
407c4f
old instr: 0x407c4f: cmp dword ptr [rbp-0x24], 0x9
    new instr:0x7fb0666e032a: cmp dword ptr [rbp-0x24], 0x9
old instr: 0x407c53: jnle 0x407c70
    new instr:0x7fb0666e032e: jnle 0x7fb0666e034b
inserted instruction
407c55
old instr: 0x407c55: cmp dword ptr [rbp-0x2c], 0x0
    new instr:0x7fb0666e0330: cmp dword ptr [rbp-0x2c], 0x0
old instr: 0x407c59: js 0x407c70
    new instr:0x7fb0666e0334: js 0x7fb0666e034b
inserted instruction
407c5b
old instr: 0x407c5b: cmp dword ptr [rbp-0x2c], 0xfa
    new instr:0x7fb0666e0336: cmp dword ptr [rbp-0x2c], 0xfa
old instr: 0x407c62: jnle 0x407c70
    new instr:0x7fb0666e033d: jnle 0x7fb0666e034b
inserted instruction
407c64
old instr: 0x407c64: cmp dword ptr [rbp-0x28], 0x0
    new instr:0x7fb0666e033f: cmp dword ptr [rbp-0x28], 0x0
old instr: 0x407c68: js 0x407c70
    new instr:0x7fb0666e0343: js 0x7fb0666e034b
inserted instruction
407c6a
old instr: 0x407c6a: cmp dword ptr [rbp-0x28], 0x4
    new instr:0x7fb0666e0345: cmp dword ptr [rbp-0x28], 0x4
in revert 
    new instr:0x7fb0666e0349: jnle 0x7fb0666e037b
407ca0
old instr: 0x407ca0: mov rax, qword ptr [rbp-0x20]
    new instr:0x7fb0666e034b: mov rax, qword ptr [rbp-0x20]
old instr: 0x407ca4: mov rdi, rax
    new instr:0x7fb0666e034f: mov rdi, rax
407c34
old instr: 0x407c34: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0352: mov rax, qword ptr [rbp-0x8]
407c70
old instr: 0x407c70: cmp qword ptr [rbp-0x18], 0x0
    new instr:0x7fb0666e0356: cmp qword ptr [rbp-0x18], 0x0
old instr: 0x407c75: jz 0x407c81
    new instr:0x7fb0666e035b: jz 0x7fb0666e0367
inserted instruction
407c77
old instr: 0x407c77: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666e035d: mov rax, qword ptr [rbp-0x18]
old instr: 0x407c7b: mov dword ptr [rax], 0xfffffffe
    new instr:0x7fb0666e0361: mov dword ptr [rax], 0xfffffffe
old instr: 0x407c81: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666e0367: cmp qword ptr [rbp-0x8], 0x0
    new instr:0x7fb0666e036c: jmp 0x7fb066ae7ff9
rtn name: BZ2_bzWriteOpen : 20
4
40c8ce
old instr: 0x40c8ce: push rbp
    new instr:0x7fb0666e0371: push rbp
old instr: 0x40c8cf: mov rbp, rsp
    new instr:0x7fb0666e0372: mov rbp, rsp
old instr: 0x40c8d2: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e0375: mov qword ptr [rbp-0x8], rdi
in revert 
removing jump and inserting a dummy entry 
40c93c
old instr: 0x40c93c: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0379: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c940: mov eax, dword ptr [rax+0x284]
    new instr:0x7fb0666e037d: mov eax, dword ptr [rax+0x284]
old instr: 0x40c946: test eax, eax
    new instr:0x7fb0666e0383: test eax, eax
in revert 
    new instr:0x7fb0666e0385: jle 0x7fb0666e0315
40c8d8
old instr: 0x40c8d8: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0387: mov rax, qword ptr [rbp-0x8]
40c94a
old instr: 0x40c94a: pop rbp
    new instr:0x7fb0666e038b: pop rbp
old instr: 0x40c94b: ret 
    new instr:0x7fb0666e038c: ret 
rtn name: bsFinishWrite : 21
1
404f13
old instr: 0x404f13: push rbp
    new instr:0x7fb0666e038d: push rbp
old instr: 0x404f14: mov rbp, rsp
    new instr:0x7fb0666e038e: mov rbp, rsp
old instr: 0x404f17: sub rsp, 0x20
    new instr:0x7fb0666e0391: sub rsp, 0x20
old instr: 0x404f1b: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666e0395: mov qword ptr [rbp-0x18], rdi
old instr: 0x404f1f: mov dword ptr [rbp-0x1c], esi
    new instr:0x7fb0666e0399: mov dword ptr [rbp-0x1c], esi
old instr: 0x404f22: mov dword ptr [rbp-0x20], edx
    new instr:0x7fb0666e039c: mov dword ptr [rbp-0x20], edx
old instr: 0x404f25: mov eax, dword ptr [rbp-0x1c]
    new instr:0x7fb0666e039f: mov eax, dword ptr [rbp-0x1c]
old instr: 0x404f28: imul eax, dword ptr [rbp-0x20]
    new instr:0x7fb0666e03a2: imul eax, dword ptr [rbp-0x20]
old instr: 0x404f2c: cdqe 
    new instr:0x7fb0666e03a6: cdqe 
old instr: 0x404f2e: mov rdi, rax
    new instr:0x7fb0666e03a8: mov rdi, rax
rtn name: default_bzalloc : 22
4
404ffc
old instr: 0x404ffc: push rbp
    new instr:0x7fb0666e03ab: push rbp
old instr: 0x404ffd: mov rbp, rsp
    new instr:0x7fb0666e03ac: mov rbp, rsp
old instr: 0x405000: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e03af: mov qword ptr [rbp-0x8], rdi
old instr: 0x405004: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e03b3: mov rax, qword ptr [rbp-0x8]
old instr: 0x405008: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666e03b7: mov eax, dword ptr [rax+0x5c]
old instr: 0x40500b: cmp eax, 0xff
    new instr:0x7fb0666e03ba: cmp eax, 0xff
in revert 
    new instr:0x7fb0666e03bf: jbe 0x7fb0666e03d3
405024
old instr: 0x405024: mov eax, 0x1
    new instr:0x7fb0666e03c1: mov eax, 0x1
old instr: 0x405029: pop rbp
    new instr:0x7fb0666e03c6: pop rbp
old instr: 0x40502a: ret 
    new instr:0x7fb0666e03c7: ret 
405012
old instr: 0x405012: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e03c8: mov rax, qword ptr [rbp-0x8]
old instr: 0x405016: mov eax, dword ptr [rax+0x60]
    new instr:0x7fb0666e03cc: mov eax, dword ptr [rax+0x60]
old instr: 0x405019: test eax, eax
    new instr:0x7fb0666e03cf: test eax, eax
old instr: 0x40501b: jle 0x405024
    new instr:0x7fb0666e03d1: jle 0x7fb0666e03da
inserted instruction
40501d
old instr: 0x40501d: mov eax, 0x0
    new instr:0x7fb0666e03d3: mov eax, 0x0
old instr: 0x405022: jmp 0x405029
    new instr:0x7fb0666e03d8: jmp 0x7fb0666e03df
inserted instruction
rtn name: isempty_RL : 23
3
404f40
old instr: 0x404f40: push rbp
    new instr:0x7fb0666e03da: push rbp
old instr: 0x404f41: mov rbp, rsp
    new instr:0x7fb0666e03db: mov rbp, rsp
old instr: 0x404f44: sub rsp, 0x10
    new instr:0x7fb0666e03de: sub rsp, 0x10
old instr: 0x404f48: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e03e2: mov qword ptr [rbp-0x8], rdi
old instr: 0x404f4c: mov qword ptr [rbp-0x10], rsi
    new instr:0x7fb0666e03e6: mov qword ptr [rbp-0x10], rsi
old instr: 0x404f50: cmp qword ptr [rbp-0x10], 0x0
    new instr:0x7fb0666e03ea: cmp qword ptr [rbp-0x10], 0x0
old instr: 0x404f55: jz 0x404f63
    new instr:0x7fb0666e03ef: jz 0x7fb0666e03fd
inserted instruction
404f57
old instr: 0x404f57: mov rax, qword ptr [rbp-0x10]
    new instr:0x7fb0666e03f1: mov rax, qword ptr [rbp-0x10]
old instr: 0x404f5b: mov rdi, rax
    new instr:0x7fb0666e03f5: mov rdi, rax
404f63
old instr: 0x404f63: leave 
    new instr:0x7fb0666e03f8: leave 
old instr: 0x404f64: ret 
    new instr:0x7fb0666e03f9: ret 
rtn name: default_bzfree : 24
1
402875
old instr: 0x402875: push rbp
    new instr:0x7fb0666e03fa: push rbp
old instr: 0x402876: mov rbp, rsp
    new instr:0x7fb0666e03fb: mov rbp, rsp
old instr: 0x402879: sub rsp, 0x20
    new instr:0x7fb0666e03fe: sub rsp, 0x20
old instr: 0x40287d: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666e0402: mov qword ptr [rbp-0x18], rdi
old instr: 0x402881: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666e0406: mov rax, qword ptr [rbp-0x18]
old instr: 0x402885: mov esi, 0x419598
    new instr:0x7fb0666e040a: mov esi, 0x419598
old instr: 0x40288a: mov rdi, rax
    new instr:0x7fb0666e040f: mov rdi, rax
rtn name: fileExists : 25
1
403e7d
old instr: 0x403e7d: push rbp
    new instr:0x7fb0666e0412: push rbp
old instr: 0x403e7e: mov rbp, rsp
    new instr:0x7fb0666e0413: mov rbp, rsp
old instr: 0x403e81: sub rsp, 0x10
    new instr:0x7fb0666e0416: sub rsp, 0x10
old instr: 0x403e85: mov edi, 0x10
    new instr:0x7fb0666e041a: mov edi, 0x10
rtn name: mkCell : 26
1
4029f0
old instr: 0x4029f0: push rbp
    new instr:0x7fb0666e041f: push rbp
old instr: 0x4029f1: mov rbp, rsp
    new instr:0x7fb0666e0420: mov rbp, rsp
old instr: 0x4029f4: sub rsp, 0x30
    new instr:0x7fb0666e0423: sub rsp, 0x30
old instr: 0x4029f8: mov qword ptr [rbp-0x28], rdi
    new instr:0x7fb0666e0427: mov qword ptr [rbp-0x28], rdi
old instr: 0x4029fc: mov rax, qword ptr [rip+0x21a905]
    new instr:0x7fb0666e042b: mov rax, qword ptr [rip+0x21a905]
old instr: 0x402a03: mov qword ptr [rbp-0x20], rax
    new instr:0x7fb0666e0432: mov qword ptr [rbp-0x20], rax
old instr: 0x402a07: mov rax, qword ptr [rip+0x21a90a]
    new instr:0x7fb0666e0436: mov rax, qword ptr [rip+0x21a90a]
old instr: 0x402a0e: mov qword ptr [rbp-0x18], rax
    new instr:0x7fb0666e043d: mov qword ptr [rbp-0x18], rax
old instr: 0x402a12: mov edx, dword ptr [rip+0x21a8c0]
    new instr:0x7fb0666e0441: mov edx, dword ptr [rip+0x21a8c0]
old instr: 0x402a18: mov rax, qword ptr [rbp-0x28]
    new instr:0x7fb0666e0447: mov rax, qword ptr [rbp-0x28]
old instr: 0x402a1c: mov esi, edx
    new instr:0x7fb0666e044b: mov esi, edx
old instr: 0x402a1e: mov rdi, rax
    new instr:0x7fb0666e044d: mov rdi, rax
rtn name: applySavedMetaInfoToOutputFile : 27
1
403f51
old instr: 0x403f51: push rbp
    new instr:0x7fb0666e0450: push rbp
old instr: 0x403f52: mov rbp, rsp
    new instr:0x7fb0666e0451: mov rbp, rsp
old instr: 0x403f55: sub rsp, 0x30
    new instr:0x7fb0666e0454: sub rsp, 0x30
old instr: 0x403f59: mov qword ptr [rbp-0x28], rdi
    new instr:0x7fb0666e0458: mov qword ptr [rbp-0x28], rdi
old instr: 0x403f5d: mov qword ptr [rbp-0x30], rsi
    new instr:0x7fb0666e045c: mov qword ptr [rbp-0x30], rsi
old instr: 0x403f61: mov rax, qword ptr [rbp-0x30]
    new instr:0x7fb0666e0460: mov rax, qword ptr [rbp-0x30]
old instr: 0x403f65: mov rdi, rax
    new instr:0x7fb0666e0464: mov rdi, rax
rtn name: addFlagsFromEnvVar : 28
1
4028ba
old instr: 0x4028ba: push rbp
    new instr:0x7fb0666e0467: push rbp
old instr: 0x4028bb: mov rbp, rsp
    new instr:0x7fb0666e0468: mov rbp, rsp
old instr: 0x4028be: sub rsp, 0x20
    new instr:0x7fb0666e046b: sub rsp, 0x20
old instr: 0x4028c2: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666e046f: mov qword ptr [rbp-0x18], rdi
old instr: 0x4028c6: mov qword ptr [rbp-0x20], rsi
    new instr:0x7fb0666e0473: mov qword ptr [rbp-0x20], rsi
old instr: 0x4028ca: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666e0477: mov rax, qword ptr [rbp-0x18]
old instr: 0x4028ce: mov edx, 0x180
    new instr:0x7fb0666e047b: mov edx, 0x180
old instr: 0x4028d3: mov esi, 0xc1
    new instr:0x7fb0666e0480: mov esi, 0xc1
old instr: 0x4028d8: mov rdi, rax
    new instr:0x7fb0666e0485: mov rdi, rax
old instr: 0x4028db: mov eax, 0x0
    new instr:0x7fb0666e0488: mov eax, 0x0
rtn name: fopen_output_safely : 29
1
404fdc
old instr: 0x404fdc: push rbp
    new instr:0x7fb0666e048d: push rbp
old instr: 0x404fdd: mov rbp, rsp
    new instr:0x7fb0666e048e: mov rbp, rsp
old instr: 0x404fe0: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e0491: mov qword ptr [rbp-0x8], rdi
old instr: 0x404fe4: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0495: mov rax, qword ptr [rbp-0x8]
old instr: 0x404fe8: mov dword ptr [rax+0x5c], 0x100
    new instr:0x7fb0666e0499: mov dword ptr [rax+0x5c], 0x100
old instr: 0x404fef: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e04a0: mov rax, qword ptr [rbp-0x8]
old instr: 0x404ff3: mov dword ptr [rax+0x60], 0x0
    new instr:0x7fb0666e04a4: mov dword ptr [rax+0x60], 0x0
old instr: 0x404ffa: pop rbp
    new instr:0x7fb0666e04ab: pop rbp
old instr: 0x404ffb: ret 
    new instr:0x7fb0666e04ac: ret 
rtn name: init_RL : 30
3
405628
old instr: 0x405628: push rbp
    new instr:0x7fb0666e04ad: push rbp
old instr: 0x405629: mov rbp, rsp
    new instr:0x7fb0666e04ae: mov rbp, rsp
old instr: 0x40562c: sub rsp, 0x8
    new instr:0x7fb0666e04b1: sub rsp, 0x8
old instr: 0x405630: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e04b5: mov qword ptr [rbp-0x8], rdi
old instr: 0x405634: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e04b9: mov rax, qword ptr [rbp-0x8]
old instr: 0x405638: mov eax, dword ptr [rax+0x5c]
    new instr:0x7fb0666e04bd: mov eax, dword ptr [rax+0x5c]
old instr: 0x40563b: cmp eax, 0xff
    new instr:0x7fb0666e04c0: cmp eax, 0xff
old instr: 0x405640: jnbe 0x40564e
    new instr:0x7fb0666e04c5: jnbe 0x7fb0666e04d3
inserted instruction
405642
old instr: 0x405642: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e04c7: mov rax, qword ptr [rbp-0x8]
old instr: 0x405646: mov rdi, rax
    new instr:0x7fb0666e04cb: mov rdi, rax
40564e
old instr: 0x40564e: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e04ce: mov rax, qword ptr [rbp-0x8]
old instr: 0x405652: mov rdi, rax
    new instr:0x7fb0666e04d2: mov rdi, rax
rtn name: flush_RL : 31
1
4029c3
old instr: 0x4029c3: push rbp
    new instr:0x7fb0666e04d5: push rbp
old instr: 0x4029c4: mov rbp, rsp
    new instr:0x7fb0666e04d6: mov rbp, rsp
old instr: 0x4029c7: sub rsp, 0x20
    new instr:0x7fb0666e04d9: sub rsp, 0x20
old instr: 0x4029cb: mov qword ptr [rbp-0x18], rdi
    new instr:0x7fb0666e04dd: mov qword ptr [rbp-0x18], rdi
old instr: 0x4029cf: mov rax, qword ptr [rbp-0x18]
    new instr:0x7fb0666e04e1: mov rax, qword ptr [rbp-0x18]
old instr: 0x4029d3: mov esi, 0x61d2c0
    new instr:0x7fb0666e04e5: mov esi, 0x61d2c0
old instr: 0x4029d8: mov rdi, rax
    new instr:0x7fb0666e04ea: mov rdi, rax
rtn name: saveInputFileMetaInfo : 32
2
401390
old instr: 0x401390: mov eax, 0x61d2a0
    new instr:0x7fb0666e04ed: mov eax, 0x61d2a0
old instr: 0x401395: push rbp
    new instr:0x7fb0666e04f2: push rbp
old instr: 0x401396: sub rax, 0x61d2a0
    new instr:0x7fb0666e04f3: sub rax, 0x61d2a0
old instr: 0x40139c: sar rax, 0x3
    new instr:0x7fb0666e04f9: sar rax, 0x3
old instr: 0x4013a0: mov rbp, rsp
    new instr:0x7fb0666e04fd: mov rbp, rsp
old instr: 0x4013a3: mov rdx, rax
    new instr:0x7fb0666e0500: mov rdx, rax
old instr: 0x4013a6: shr rdx, 0x3f
    new instr:0x7fb0666e0503: shr rdx, 0x3f
old instr: 0x4013aa: add rax, rdx
    new instr:0x7fb0666e0507: add rax, rdx
old instr: 0x4013ad: mov rsi, rax
    new instr:0x7fb0666e050a: mov rsi, rax
old instr: 0x4013b0: sar rsi, 0x1
    new instr:0x7fb0666e050d: sar rsi, 0x1
old instr: 0x4013b3: jnz 0x4013b7
    new instr:0x7fb0666e0510: jnz 0x7fb0666e0514
inserted instruction
4013b5
old instr: 0x4013b5: pop rbp
    new instr:0x7fb0666e0512: pop rbp
old instr: 0x4013b6: ret 
    new instr:0x7fb0666e0513: ret 
rtn name: register_tm_clones : 33
1
401310
old instr: 0x401310: xor ebp, ebp
    new instr:0x7fb0666e0514: xor ebp, ebp
old instr: 0x401312: mov r9, rdx
    new instr:0x7fb0666e0516: mov r9, rdx
old instr: 0x401315: pop rsi
    new instr:0x7fb0666e0519: pop rsi
old instr: 0x401316: mov rdx, rsp
    new instr:0x7fb0666e051a: mov rdx, rsp
old instr: 0x401319: and rsp, 0xfffffffffffffff0
    new instr:0x7fb0666e051d: and rsp, 0xfffffffffffffff0
old instr: 0x40131d: push rax
    new instr:0x7fb0666e0521: push rax
old instr: 0x40131e: push rsp
    new instr:0x7fb0666e0522: push rsp
old instr: 0x40131f: mov r8, 0x418570
    new instr:0x7fb0666e0523: mov r8, 0x418570
old instr: 0x401326: mov rcx, 0x418580
    new instr:0x7fb0666e052a: mov rcx, 0x418580
old instr: 0x40132d: mov rdi, 0x4040af
    new instr:0x7fb0666e0531: mov rdi, 0x4040af
rtn name: _start : 34
1
40c8a8
old instr: 0x40c8a8: push rbp
    new instr:0x7fb0666e0538: push rbp
old instr: 0x40c8a9: mov rbp, rsp
    new instr:0x7fb0666e0539: mov rbp, rsp
old instr: 0x40c8ac: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e053c: mov qword ptr [rbp-0x8], rdi
old instr: 0x40c8b0: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e0540: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8b4: mov dword ptr [rax+0x284], 0x0
    new instr:0x7fb0666e0544: mov dword ptr [rax+0x284], 0x0
old instr: 0x40c8be: mov rax, qword ptr [rbp-0x8]
    new instr:0x7fb0666e054e: mov rax, qword ptr [rbp-0x8]
old instr: 0x40c8c2: mov dword ptr [rax+0x280], 0x0
    new instr:0x7fb0666e0552: mov dword ptr [rax+0x280], 0x0
old instr: 0x40c8cc: pop rbp
    new instr:0x7fb0666e055c: pop rbp
old instr: 0x40c8cd: ret 
    new instr:0x7fb0666e055d: ret 
rtn name: BZ2_bsInitWrite : 35
2
401360
old instr: 0x401360: mov eax, 0x61d2a7
    new instr:0x7fb0666e055e: mov eax, 0x61d2a7
old instr: 0x401365: push rbp
    new instr:0x7fb0666e0563: push rbp
old instr: 0x401366: sub rax, 0x61d2a0
    new instr:0x7fb0666e0564: sub rax, 0x61d2a0
old instr: 0x40136c: cmp rax, 0xe
    new instr:0x7fb0666e056a: cmp rax, 0xe
old instr: 0x401370: mov rbp, rsp
    new instr:0x7fb0666e056e: mov rbp, rsp
old instr: 0x401373: jnbe 0x401377
    new instr:0x7fb0666e0571: jnbe 0x7fb0666e0575
inserted instruction
401375
old instr: 0x401375: pop rbp
    new instr:0x7fb0666e0573: pop rbp
old instr: 0x401376: ret 
    new instr:0x7fb0666e0574: ret 
rtn name: deregister_tm_clones : 36
2
418630
old instr: 0x418630: push rbp
    new instr:0x7fb0666e0575: push rbp
old instr: 0x418631: sub rsp, 0x8
    new instr:0x7fb0666e0576: sub rsp, 0x8
418640
old instr: 0x418630: push rbp
    new instr:0x7fb0666e057a: push rbp
old instr: 0x418631: sub rsp, 0x8
    new instr:0x7fb0666e057b: sub rsp, 0x8
Branch instruction in the middle of a bbl 418635 in bbl: 418640
old instr: 0x41863a: add rsp, 0x8
    new instr:0x7fb0666e057f: add rsp, 0x8
old instr: 0x41863e: pop rbp
    new instr:0x7fb0666e0583: pop rbp
old instr: 0x41863f: ret 
    new instr:0x7fb0666e0584: ret 
old instr: 0x418630: push rbp
    new instr:0x7fb0666e0585: push rbp
rtn name: _fini : 37
1
402a74
old instr: 0x402a74: push rbp
    new instr:0x7fb0666e0586: push rbp
old instr: 0x402a75: mov rbp, rsp
    new instr:0x7fb0666e0587: mov rbp, rsp
old instr: 0x402a78: mov qword ptr [rbp-0x8], rdi
    new instr:0x7fb0666e058a: mov qword ptr [rbp-0x8], rdi
old instr: 0x402a7c: mov eax, 0x0
    new instr:0x7fb0666e058e: mov eax, 0x0
old instr: 0x402a81: pop rbp
    new instr:0x7fb0666e0593: pop rbp
old instr: 0x402a82: ret 
    new instr:0x7fb0666e0594: ret 
rtn name: containsDubiousChars : 38
1
404f08
old instr: 0x404f08: push rbp
    new instr:0x7fb0666e0595: push rbp
old instr: 0x404f09: mov rbp, rsp
    new instr:0x7fb0666e0596: mov rbp, rsp
old instr: 0x404f0c: mov eax, 0x1
    new instr:0x7fb0666e0599: mov eax, 0x1
old instr: 0x404f11: pop rbp
    new instr:0x7fb0666e059e: pop rbp
old instr: 0x404f12: ret 
    new instr:0x7fb0666e059f: ret 
rtn name: bz_config_ok : 39
1
401038
old instr: 0x401038: sub rsp, 0x8
    new instr:0x7fb0666e05a0: sub rsp, 0x8
rtn name: _init : 40
after identifying candidate routines
after calculate direct br targets
starting a pass of fixing instructions displacements: 
20:  orig_ins_addr: 40a4a9 new_ins_addr: 7fb0666db041 orig_targ_addr: 40a4ab new_targ_addr: 7fb0666db5e9    new instr:0x7fb0666db041: jnz 0x7fb0666db5e9
35:  orig_ins_addr: 40a4e9 new_ins_addr: 7fb0666db076 orig_targ_addr: 40a4eb new_targ_addr: 7fb0666db608    new instr:0x7fb0666db076: jnz 0x7fb0666db608
50:  orig_ins_addr: 40a529 new_ins_addr: 7fb0666db0ab orig_targ_addr: 40a52b new_targ_addr: 7fb0666db654    new instr:0x7fb0666db0ab: jnz 0x7fb0666db654
65:  orig_ins_addr: 40a569 new_ins_addr: 7fb0666db0e0 orig_targ_addr: 40a56b new_targ_addr: 7fb0666db680    new instr:0x7fb0666db0e0: jnz 0x7fb0666db680
80:  orig_ins_addr: 40a5a9 new_ins_addr: 7fb0666db115 orig_targ_addr: 40a5ab new_targ_addr: 7fb0666db617    new instr:0x7fb0666db115: jnz 0x7fb0666db617
95:  orig_ins_addr: 40a5e9 new_ins_addr: 7fb0666db14a orig_targ_addr: 40a5eb new_targ_addr: 7fb0666db626    new instr:0x7fb0666db14a: jnz 0x7fb0666db626
110:  orig_ins_addr: 40a629 new_ins_addr: 7fb0666db17f orig_targ_addr: 40a62b new_targ_addr: 7fb0666db645    new instr:0x7fb0666db17f: jnz 0x7fb0666db645
125:  orig_ins_addr: 40a669 new_ins_addr: 7fb0666db1b4 orig_targ_addr: 40a66b new_targ_addr: 7fb0666db69f    new instr:0x7fb0666db1b4: jnz 0x7fb0666db69f
140:  orig_ins_addr: 40a6a9 new_ins_addr: 7fb0666db1e9 orig_targ_addr: 40a6ab new_targ_addr: 7fb0666db6ae    new instr:0x7fb0666db1e9: jnz 0x7fb0666db6ae
155:  orig_ins_addr: 40a6e9 new_ins_addr: 7fb0666db21e orig_targ_addr: 40a6eb new_targ_addr: 7fb0666db6db    new instr:0x7fb0666db21e: jnz 0x7fb0666db6db
170:  orig_ins_addr: 40a729 new_ins_addr: 7fb0666db253 orig_targ_addr: 40a72b new_targ_addr: 7fb0666db6f9    new instr:0x7fb0666db253: jnz 0x7fb0666db6f9
185:  orig_ins_addr: 40a769 new_ins_addr: 7fb0666db288 orig_targ_addr: 40a76b new_targ_addr: 7fb0666db708    new instr:0x7fb0666db288: jnz 0x7fb0666db708
199:  orig_ins_addr: 40a7b2 new_ins_addr: 7fb0666db2b9 orig_targ_addr: 40a7b4 new_targ_addr: 7fb0666db753    new instr:0x7fb0666db2b9: jnz 0x7fb0666db753
214:  orig_ins_addr: 40a7f5 new_ins_addr: 7fb0666db2f1 orig_targ_addr: 40a7f7 new_targ_addr: 7fb0666db5bc    new instr:0x7fb0666db2f1: jnz 0x7fb0666db5bc
229:  orig_ins_addr: 40a836 new_ins_addr: 7fb0666db326 orig_targ_addr: 40a838 new_targ_addr: 7fb0666db6cc    new instr:0x7fb0666db326: jnz 0x7fb0666db6cc
244:  orig_ins_addr: 40a879 new_ins_addr: 7fb0666db35e orig_targ_addr: 40a87b new_targ_addr: 7fb0666db5c9    new instr:0x7fb0666db35e: jnz 0x7fb0666db5c9
259:  orig_ins_addr: 40a8ba new_ins_addr: 7fb0666db393 orig_targ_addr: 40a8bc new_targ_addr: 7fb0666db6bd    new instr:0x7fb0666db393: jnz 0x7fb0666db6bd
274:  orig_ins_addr: 40a8fd new_ins_addr: 7fb0666db3cb orig_targ_addr: 40a8ff new_targ_addr: 7fb0666db5d9    new instr:0x7fb0666db3cb: jnz 0x7fb0666db5d9
289:  orig_ins_addr: 40a93e new_ins_addr: 7fb0666db400 orig_targ_addr: 40a940 new_targ_addr: 7fb0666db6ea    new instr:0x7fb0666db400: jnz 0x7fb0666db6ea
304:  orig_ins_addr: 40a981 new_ins_addr: 7fb0666db438 orig_targ_addr: 40a983 new_targ_addr: 7fb0666db5f8    new instr:0x7fb0666db438: jnz 0x7fb0666db5f8
319:  orig_ins_addr: 40a9c2 new_ins_addr: 7fb0666db46d orig_targ_addr: 40a9c4 new_targ_addr: 7fb0666db735    new instr:0x7fb0666db46d: jnz 0x7fb0666db735
334:  orig_ins_addr: 40aa05 new_ins_addr: 7fb0666db4a5 orig_targ_addr: 40aa07 new_targ_addr: 7fb0666db635    new instr:0x7fb0666db4a5: jnz 0x7fb0666db635
349:  orig_ins_addr: 40aa46 new_ins_addr: 7fb0666db4da orig_targ_addr: 40aa48 new_targ_addr: 7fb0666db726    new instr:0x7fb0666db4da: jnz 0x7fb0666db726
364:  orig_ins_addr: 40aa89 new_ins_addr: 7fb0666db512 orig_targ_addr: 40aa8b new_targ_addr: 7fb0666db670    new instr:0x7fb0666db512: jnz 0x7fb0666db670
379:  orig_ins_addr: 40aaca new_ins_addr: 7fb0666db547 orig_targ_addr: 40aacc new_targ_addr: 7fb0666db717    new instr:0x7fb0666db547: jnz 0x7fb0666db717
394:  orig_ins_addr: 40ab0d new_ins_addr: 7fb0666db57f orig_targ_addr: 40ab0f new_targ_addr: 7fb0666db68f    new instr:0x7fb0666db57f: jnz 0x7fb0666db68f
409:  orig_ins_addr: 40ab4e new_ins_addr: 7fb0666db5b4 orig_targ_addr: 40ab50 new_targ_addr: 7fb0666db744    new instr:0x7fb0666db5b4: jnz 0x7fb0666db744
424:  orig_ins_addr: 40ab91 new_ins_addr: 7fb0666db5ec orig_targ_addr: 40ab93 new_targ_addr: 7fb0666db663    new instr:0x7fb0666db5ec: jnz 0x7fb0666db663
429:  orig_ins_addr: 40abae new_ins_addr: 7fb0666db600 orig_targ_addr: 40abb0 new_targ_addr: 7fb0666db765    new instr:0x7fb0666db600: jnb 0x7fb0666db765
432:  orig_ins_addr: 40abbc new_ins_addr: 7fb0666db60c orig_targ_addr: 40abbe new_targ_addr: 7fb0666db762    new instr:0x7fb0666db60c: jnb 0x7fb0666db762
440:  orig_ins_addr: 40abdb new_ins_addr: 7fb0666db629 orig_targ_addr: 40a78b new_targ_addr: 7fb0666db292    new instr:0x7fb0666db629: jns 0x7fb0666db292
441:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fb0666db62f orig_targ_addr: 40abe1 new_targ_addr: 7fb0666db768    new instr:0x7fb0666db62f: jmp 0x7fb0666db768
451:  orig_ins_addr: 40a886 new_ins_addr: 7fb0666db64c orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db64c: jmp 0x7fb0666db63f
455:  orig_ins_addr: 40a90a new_ins_addr: 7fb0666db65c orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db65c: jmp 0x7fb0666db63f
459:  orig_ins_addr: 40a4b5 new_ins_addr: 7fb0666db66b orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db66b: jmp 0x7fb0666db63f
463:  orig_ins_addr: 40a98e new_ins_addr: 7fb0666db67b orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db67b: jmp 0x7fb0666db63f
467:  orig_ins_addr: 40a4f5 new_ins_addr: 7fb0666db68a orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db68a: jmp 0x7fb0666db63f
471:  orig_ins_addr: 40a5b5 new_ins_addr: 7fb0666db699 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db699: jmp 0x7fb0666db63f
475:  orig_ins_addr: 40a5f5 new_ins_addr: 7fb0666db6a8 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db6a8: jmp 0x7fb0666db63f
479:  orig_ins_addr: 40aa12 new_ins_addr: 7fb0666db6b8 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db6b8: jmp 0x7fb0666db63f
483:  orig_ins_addr: 40a635 new_ins_addr: 7fb0666db6c7 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db6c7: jmp 0x7fb0666db63f
487:  orig_ins_addr: 40a535 new_ins_addr: 7fb0666db6d6 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db6d6: jmp 0x7fb0666db63f
491:  orig_ins_addr: 40ab9e new_ins_addr: 7fb0666db6e6 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db6e6: jmp 0x7fb0666db63f
495:  orig_ins_addr: 40aa96 new_ins_addr: 7fb0666db6f6 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db6f6: jmp 0x7fb0666db63f
499:  orig_ins_addr: 40a575 new_ins_addr: 7fb0666db705 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db705: jmp 0x7fb0666db63f
503:  orig_ins_addr: 40ab1a new_ins_addr: 7fb0666db715 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db715: jmp 0x7fb0666db63f
507:  orig_ins_addr: 40a675 new_ins_addr: 7fb0666db724 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db724: jmp 0x7fb0666db63f
511:  orig_ins_addr: 40a6b5 new_ins_addr: 7fb0666db733 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db733: jmp 0x7fb0666db63f
515:  orig_ins_addr: 40a8c6 new_ins_addr: 7fb0666db742 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db742: jmp 0x7fb0666db63f
519:  orig_ins_addr: 40a842 new_ins_addr: 7fb0666db751 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db751: jmp 0x7fb0666db63f
523:  orig_ins_addr: 40a6f5 new_ins_addr: 7fb0666db760 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db760: jmp 0x7fb0666db63f
527:  orig_ins_addr: 40a94a new_ins_addr: 7fb0666db76f orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db76f: jmp 0x7fb0666db63f
531:  orig_ins_addr: 40a735 new_ins_addr: 7fb0666db77e orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db77e: jmp 0x7fb0666db63f
535:  orig_ins_addr: 40a775 new_ins_addr: 7fb0666db78d orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db78d: jmp 0x7fb0666db63f
539:  orig_ins_addr: 40aad6 new_ins_addr: 7fb0666db79c orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db79c: jmp 0x7fb0666db63f
543:  orig_ins_addr: 40aa52 new_ins_addr: 7fb0666db7ab orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db7ab: jmp 0x7fb0666db63f
547:  orig_ins_addr: 40a9ce new_ins_addr: 7fb0666db7ba orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db7ba: jmp 0x7fb0666db63f
551:  orig_ins_addr: 40ab5a new_ins_addr: 7fb0666db7c9 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db7c9: jmp 0x7fb0666db63f
555:  orig_ins_addr: 40a7be new_ins_addr: 7fb0666db7d8 orig_targ_addr: 40abe6 new_targ_addr: 7fb0666db63f    new instr:0x7fb0666db7d8: jmp 0x7fb0666db63f
570:  orig_ins_addr: 40b863 new_ins_addr: 7fb0666db825 orig_targ_addr: 40b865 new_targ_addr: 7fb0666db8e1    new instr:0x7fb0666db825: jnle 0x7fb0666db8e1
574:  orig_ins_addr: 40b8b1 new_ins_addr: 7fb0666db836 orig_targ_addr: 40b8b3 new_targ_addr: 7fb0666db7bc    new instr:0x7fb0666db836: js 0x7fb0666db7bc
586:  orig_ins_addr: 40ba64 new_ins_addr: 7fb0666db862 orig_targ_addr: 40ba6a new_targ_addr: 7fb0666db8fa    new instr:0x7fb0666db862: jle 0x7fb0666db8fa
658:  orig_ins_addr: 40b865 new_ins_addr: 7fb0666db964 orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7fb0666db964: mov rax, qword ptr [0x61d2b0]
665:  orig_ins_addr: 40bad0 new_ins_addr: 7fb0666db982 orig_targ_addr: 40bad2 new_targ_addr: 7fb0666db903    new instr:0x7fb0666db982: js 0x7fb0666db903
670:  orig_ins_addr: 40bb30 new_ins_addr: 7fb0666db996 orig_targ_addr: 40bb32 new_targ_addr: 7fb0666db913    new instr:0x7fb0666db996: jnle 0x7fb0666db913
673:  orig_ins_addr: 40bb39 new_ins_addr: 7fb0666db9a6 orig_targ_addr: 40bb3b new_targ_addr: 7fb0666dba6a    new instr:0x7fb0666db9a6: jnle 0x7fb0666dba6a
677:  orig_ins_addr: 40bbc0 new_ins_addr: 7fb0666db9ba orig_targ_addr: 40bbc2 new_targ_addr: 7fb0666db92f    new instr:0x7fb0666db9ba: jnle 0x7fb0666db92f
689:  orig_ins_addr: 40bdf9 new_ins_addr: 7fb0666db9e7 orig_targ_addr: 40bdff new_targ_addr: 7fb0666dba83    new instr:0x7fb0666db9e7: jle 0x7fb0666dba83
761:  orig_ins_addr: 40bb3b new_ins_addr: 7fb0666dbafe orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7fb0666dbafe: mov rax, qword ptr [0x61d2b0]
768:  orig_ins_addr: 40be8a new_ins_addr: 7fb0666dbb1c orig_targ_addr: 40be90 new_targ_addr: 7fb0666dba91    new instr:0x7fb0666dbb1c: js 0x7fb0666dba91
773:  orig_ins_addr: 40bec0 new_ins_addr: 7fb0666dbb34 orig_targ_addr: 40bec2 new_targ_addr: 7fb0666dbaa4    new instr:0x7fb0666dbb34: jnle 0x7fb0666dbaa4
783:  orig_ins_addr: 40bedf new_ins_addr: 7fb0666dbb5a orig_targ_addr: 40bec9 new_targ_addr: 7fb0666dbb44    new instr:0x7fb0666dbb5a: jle 0x7fb0666dbb44
798:  orig_ins_addr: 40c01c new_ins_addr: 7fb0666dbb87 orig_targ_addr: 40c022 new_targ_addr: 7fb0666dbbeb    new instr:0x7fb0666dbb87: jnle 0x7fb0666dbbeb
854:  orig_ins_addr: 40bff9 new_ins_addr: 7fb0666dbc48 orig_targ_addr: 40bf1d new_targ_addr: 7fb0666dbbb4    new instr:0x7fb0666dbc48: jnbe 0x7fb0666dbbb4
872:  orig_ins_addr: 40bf4d new_ins_addr: 7fb0666dbc81 orig_targ_addr: 40bf53 new_targ_addr: 7fb0666dbba2    new instr:0x7fb0666dbc81: jl 0x7fb0666dbba2
875:  orig_ins_addr: 40c026 new_ins_addr: 7fb0666dbc8c orig_targ_addr: 40bee1 new_targ_addr: 7fb0666dbb60    new instr:0x7fb0666dbc8c: jnz 0x7fb0666dbb60
880:  orig_ins_addr: 40c62e new_ins_addr: 7fb0666dbca7 orig_targ_addr: 40c634 new_targ_addr: 7fb0666dbedd    new instr:0x7fb0666dbca7: jnle 0x7fb0666dbedd
888:  orig_ins_addr: 40c1d0 new_ins_addr: 7fb0666dbcca orig_targ_addr: 40c1d6 new_targ_addr: 7fb0666dbeb5    new instr:0x7fb0666dbcca: jnle 0x7fb0666dbeb5
891:  orig_ins_addr: 40c060 new_ins_addr: 7fb0666dbcd6 orig_targ_addr: 40c1c5 new_targ_addr: 7fb0666dbcd2    new instr:0x7fb0666dbcd6: jz 0x7fb0666dbcd2
906:  orig_ins_addr: 40c096 new_ins_addr: 7fb0666dbd0c orig_targ_addr: 40c09c new_targ_addr: 7fb0666dbc78    new instr:0x7fb0666dbd0c: jz 0x7fb0666dbc78
928:  orig_ins_addr: 40c0eb new_ins_addr: 7fb0666dbd64 orig_targ_addr: 40c18c new_targ_addr: 7fb0666dbd12    new instr:0x7fb0666dbd64: jle 0x7fb0666dbd12
929:  orig_ins_addr: ffffffffffffffff new_ins_addr: 7fb0666dbd6a orig_targ_addr: 40c0f1 new_targ_addr: 7fb0666dbcd6    new instr:0x7fb0666dbd6a: jmp 0x7fb0666dbcd6
932:  orig_ins_addr: 40c0f8 new_ins_addr: 7fb0666dbd7a orig_targ_addr: 40c0fa new_targ_addr: 7fb0666dc1ab    new instr:0x7fb0666dbd7a: jnle 0x7fb0666dc1ab
1053:  orig_ins_addr: 40c1e5 new_ins_addr: 7fb0666dbf65 orig_targ_addr: 40c1e7 new_targ_addr: 7fb0666dc1dd    new instr:0x7fb0666dbf65: jnz 0x7fb0666dc1dd
1057:  orig_ins_addr: 40c279 new_ins_addr: 7fb0666dbf79 orig_targ_addr: 40c27f new_targ_addr: 7fb0666dbef0    new instr:0x7fb0666dbf79: jnle 0x7fb0666dbef0
1060:  orig_ins_addr: 40c63b new_ins_addr: 7fb0666dbf89 orig_targ_addr: 40c63d new_targ_addr: 7fb0666dc050    new instr:0x7fb0666dbf89: jnle 0x7fb0666dc050
1079:  orig_ins_addr: 40c34e new_ins_addr: 7fb0666dbfcc orig_targ_addr: 40c2a8 new_targ_addr: 7fb0666dbfef    new instr:0x7fb0666dbfcc: jnle 0x7fb0666dbfef
1096:  orig_ins_addr: 40c429 new_ins_addr: 7fb0666dc00b orig_targ_addr: 40c383 new_targ_addr: 7fb0666dbf9a    new instr:0x7fb0666dc00b: jl 0x7fb0666dbf9a
1105:  orig_ins_addr: 40c44c new_ins_addr: 7fb0666dc02e orig_targ_addr: 40c44e new_targ_addr: 7fb0666dc07d    new instr:0x7fb0666dc02e: jnz 0x7fb0666dc07d
1109:  orig_ins_addr: 40c4e2 new_ins_addr: 7fb0666dc042 orig_targ_addr: 40c4e4 new_targ_addr: 7fb0666dc092    new instr:0x7fb0666dc042: jnle 0x7fb0666dc092
1120:  orig_ins_addr: 40c3a6 new_ins_addr: 7fb0666dc06e orig_targ_addr: 40c3a8 new_targ_addr: 7fb0666dc04a    new instr:0x7fb0666dc06e: js 0x7fb0666dc04a
1131:  orig_ins_addr: 40c3d7 new_ins_addr: 7fb0666dc09a orig_targ_addr: 40c3d9 new_targ_addr: 7fb0666dbfeb    new instr:0x7fb0666dc09a: jz 0x7fb0666dbfeb
1143:  orig_ins_addr: 40c2cb new_ins_addr: 7fb0666dc0cb orig_targ_addr: 40c2cd new_targ_addr: 7fb0666dc044    new instr:0x7fb0666dc0cb: js 0x7fb0666dc044
1154:  orig_ins_addr: 40c2fc new_ins_addr: 7fb0666dc0f7 orig_targ_addr: 40c33b new_targ_addr: 7fb0666dc040    new instr:0x7fb0666dc0f7: jnz 0x7fb0666dc040
1163:  orig_ins_addr: 40c64a new_ins_addr: 7fb0666dc11e orig_targ_addr: 0 new_targ_addr: 0    new instr:0x7fb0666dc11e: mov rax, qword ptr [0x61d2b0]
ERROR: Invalid direct jump from translated code to original code in rotuine: mainSort  2  7fb0666dc08d
40c45c ffffffffffffffff
7fb0666dc14d 7fb0666dc08d
1174:  orig_ins_addr: 40c45c new_ins_addr: 7fb0666dc14d orig_targ_addr: 40c477 new_targ_addr: 40c477    new instr:0x7fb0666dc14d: jnz 0x7fb0666dc168
